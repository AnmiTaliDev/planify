/* Scheduled.c generated by valac 0.50.10, the Vala compiler
 * generated from Scheduled.vala, do not modify */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <handy.h>
#include <stdlib.h>
#include <string.h>
#include <gio/gio.h>
#include <glib/gi18n-lib.h>

#define VIEWS_SCHEDULED_TYPE_SCHEDULED (views_scheduled_scheduled_get_type ())
#define VIEWS_SCHEDULED_SCHEDULED(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), VIEWS_SCHEDULED_TYPE_SCHEDULED, ViewsScheduledScheduled))
#define VIEWS_SCHEDULED_SCHEDULED_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), VIEWS_SCHEDULED_TYPE_SCHEDULED, ViewsScheduledScheduledClass))
#define VIEWS_SCHEDULED_IS_SCHEDULED(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), VIEWS_SCHEDULED_TYPE_SCHEDULED))
#define VIEWS_SCHEDULED_IS_SCHEDULED_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), VIEWS_SCHEDULED_TYPE_SCHEDULED))
#define VIEWS_SCHEDULED_SCHEDULED_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), VIEWS_SCHEDULED_TYPE_SCHEDULED, ViewsScheduledScheduledClass))

typedef struct _ViewsScheduledScheduled ViewsScheduledScheduled;
typedef struct _ViewsScheduledScheduledClass ViewsScheduledScheduledClass;
typedef struct _ViewsScheduledScheduledPrivate ViewsScheduledScheduledPrivate;

#define VIEWS_TYPE_DATE (views_date_get_type ())
#define VIEWS_DATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), VIEWS_TYPE_DATE, ViewsDate))
#define VIEWS_DATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), VIEWS_TYPE_DATE, ViewsDateClass))
#define VIEWS_IS_DATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), VIEWS_TYPE_DATE))
#define VIEWS_IS_DATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), VIEWS_TYPE_DATE))
#define VIEWS_DATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), VIEWS_TYPE_DATE, ViewsDateClass))

typedef struct _ViewsDate ViewsDate;
typedef struct _ViewsDateClass ViewsDateClass;

#define VIEWS_SCHEDULED_TYPE_SCHEDULED_HEADER (views_scheduled_scheduled_header_get_type ())
#define VIEWS_SCHEDULED_SCHEDULED_HEADER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), VIEWS_SCHEDULED_TYPE_SCHEDULED_HEADER, ViewsScheduledScheduledHeader))
#define VIEWS_SCHEDULED_SCHEDULED_HEADER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), VIEWS_SCHEDULED_TYPE_SCHEDULED_HEADER, ViewsScheduledScheduledHeaderClass))
#define VIEWS_SCHEDULED_IS_SCHEDULED_HEADER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), VIEWS_SCHEDULED_TYPE_SCHEDULED_HEADER))
#define VIEWS_SCHEDULED_IS_SCHEDULED_HEADER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), VIEWS_SCHEDULED_TYPE_SCHEDULED_HEADER))
#define VIEWS_SCHEDULED_SCHEDULED_HEADER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), VIEWS_SCHEDULED_TYPE_SCHEDULED_HEADER, ViewsScheduledScheduledHeaderClass))

typedef struct _ViewsScheduledScheduledHeader ViewsScheduledScheduledHeader;
typedef struct _ViewsScheduledScheduledHeaderClass ViewsScheduledScheduledHeaderClass;
enum  {
	VIEWS_SCHEDULED_SCHEDULED_0_PROPERTY,
	VIEWS_SCHEDULED_SCHEDULED_NUM_PROPERTIES
};
static GParamSpec* views_scheduled_scheduled_properties[VIEWS_SCHEDULED_SCHEDULED_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))

#define WIDGETS_TYPE_DYNAMIC_ICON (widgets_dynamic_icon_get_type ())
#define WIDGETS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIcon))
#define WIDGETS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))
#define WIDGETS_IS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_IS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_DYNAMIC_ICON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))

typedef struct _WidgetsDynamicIcon WidgetsDynamicIcon;
typedef struct _WidgetsDynamicIconClass WidgetsDynamicIconClass;

#define WIDGETS_TYPE_MAGIC_BUTTON (widgets_magic_button_get_type ())
#define WIDGETS_MAGIC_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_MAGIC_BUTTON, WidgetsMagicButton))
#define WIDGETS_MAGIC_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_MAGIC_BUTTON, WidgetsMagicButtonClass))
#define WIDGETS_IS_MAGIC_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_MAGIC_BUTTON))
#define WIDGETS_IS_MAGIC_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_MAGIC_BUTTON))
#define WIDGETS_MAGIC_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_MAGIC_BUTTON, WidgetsMagicButtonClass))

typedef struct _WidgetsMagicButton WidgetsMagicButton;
typedef struct _WidgetsMagicButtonClass WidgetsMagicButtonClass;

#define DIALOGS_CONTEXT_MENU_TYPE_MENU (dialogs_context_menu_menu_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenu))
#define DIALOGS_CONTEXT_MENU_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_IS_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_MENU_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))

typedef struct _DialogsContextMenuMenu DialogsContextMenuMenu;
typedef struct _DialogsContextMenuMenuClass DialogsContextMenuMenuClass;
typedef struct _Block28Data Block28Data;

#define WIDGETS_CALENDAR_TYPE_CALENDAR (widgets_calendar_calendar_get_type ())
#define WIDGETS_CALENDAR_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendar))
#define WIDGETS_CALENDAR_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))
#define WIDGETS_CALENDAR_IS_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_IS_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_CALENDAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))

typedef struct _WidgetsCalendarCalendar WidgetsCalendarCalendar;
typedef struct _WidgetsCalendarCalendarClass WidgetsCalendarCalendarClass;

struct _ViewsScheduledScheduled {
	GtkEventBox parent_instance;
	ViewsScheduledScheduledPrivate * priv;
};

struct _ViewsScheduledScheduledClass {
	GtkEventBoxClass parent_class;
};

struct _ViewsScheduledScheduledPrivate {
	GtkLabel* date_label;
	GDateTime* date;
	ViewsDate* date_view;
	HdyCarousel* carousel;
	ViewsScheduledScheduledHeader* grid_center;
	ViewsScheduledScheduledHeader* grid_left;
	ViewsScheduledScheduledHeader* grid_right;
	guint position;
	gint rel_postion;
};

struct _Block28Data {
	int _ref_count_;
	ViewsScheduledScheduled* self;
	DialogsContextMenuMenu* menu;
};

static gint ViewsScheduledScheduled_private_offset;
static gpointer views_scheduled_scheduled_parent_class = NULL;

GType views_scheduled_scheduled_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ViewsScheduledScheduled, g_object_unref)
GType views_date_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ViewsDate, g_object_unref)
GType views_scheduled_scheduled_header_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ViewsScheduledScheduledHeader, g_object_unref)
static void views_scheduled_scheduled_update_date_label (ViewsScheduledScheduled* self);
static void views_scheduled_scheduled_date_selected (ViewsScheduledScheduled* self,
                                              GDateTime* date);
void views_date_set_date (ViewsDate* self,
                          GDateTime* value);
static void views_scheduled_scheduled_show_today (ViewsScheduledScheduled* self);
ViewsScheduledScheduledHeader* views_scheduled_scheduled_header_new (GDateTime* date);
ViewsScheduledScheduledHeader* views_scheduled_scheduled_header_construct (GType object_type,
                                                                           GDateTime* date);
static void _views_scheduled_scheduled_date_selected_views_scheduled_scheduled_header_date_selected (ViewsScheduledScheduledHeader* _sender,
                                                                                              GDateTime* date,
                                                                                              gpointer self);
ViewsScheduledScheduled* views_scheduled_scheduled_new (void);
ViewsScheduledScheduled* views_scheduled_scheduled_construct (GType object_type);
static GObject * views_scheduled_scheduled_constructor (GType type,
                                                 guint n_construct_properties,
                                                 GObjectConstructParam * construct_properties);
GType widgets_dynamic_icon_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsDynamicIcon, g_object_unref)
WidgetsDynamicIcon* widgets_dynamic_icon_new (void);
WidgetsDynamicIcon* widgets_dynamic_icon_construct (GType object_type);
void widgets_dynamic_icon_set_size (WidgetsDynamicIcon* self,
                                    gint value);
void widgets_dynamic_icon_update_icon_name (WidgetsDynamicIcon* self,
                                            const gchar* icon_name);
GType widgets_magic_button_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsMagicButton, g_object_unref)
WidgetsMagicButton* widgets_magic_button_new (void);
WidgetsMagicButton* widgets_magic_button_construct (GType object_type);
ViewsDate* views_date_new (gboolean is_today_view);
ViewsDate* views_date_construct (GType object_type,
                                 gboolean is_today_view);
static void _views_scheduled_scheduled___lambda253_ (ViewsScheduledScheduled* self,
                                              guint index);
static void __views_scheduled_scheduled___lambda253__hdy_carousel_page_changed (HdyCarousel* _sender,
                                                                         guint index,
                                                                         gpointer self);
static void _views_scheduled_scheduled___lambda254_ (ViewsScheduledScheduled* self);
static void __views_scheduled_scheduled___lambda254__gtk_button_clicked (GtkButton* _sender,
                                                                  gpointer self);
static void _views_scheduled_scheduled___lambda255_ (ViewsScheduledScheduled* self);
static void __views_scheduled_scheduled___lambda255__gtk_button_clicked (GtkButton* _sender,
                                                                  gpointer self);
static void _views_scheduled_scheduled___lambda256_ (ViewsScheduledScheduled* self);
GType dialogs_context_menu_menu_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenu, g_object_unref)
static Block28Data* block28_data_ref (Block28Data* _data28_);
static void block28_data_unref (void * _userdata_);
DialogsContextMenuMenu* dialogs_context_menu_menu_new (void);
DialogsContextMenuMenu* dialogs_context_menu_menu_construct (GType object_type);
GType widgets_calendar_calendar_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsCalendarCalendar, g_object_unref)
WidgetsCalendarCalendar* widgets_calendar_calendar_new (gboolean block_past_days);
WidgetsCalendarCalendar* widgets_calendar_calendar_construct (GType object_type,
                                                              gboolean block_past_days);
void dialogs_context_menu_menu_add_item (DialogsContextMenuMenu* self,
                                         GtkWidget* widget);
void dialogs_context_menu_menu_popup (DialogsContextMenuMenu* self);
static void __lambda257_ (Block28Data* _data28_,
                   GDateTime* date);
void dialogs_context_menu_menu_hide_destroy (DialogsContextMenuMenu* self);
static void ___lambda257__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                                GDateTime* date,
                                                                gpointer self);
static void __views_scheduled_scheduled___lambda256__gtk_button_clicked (GtkButton* _sender,
                                                                  gpointer self);
static void _views_scheduled_scheduled___lambda258_ (ViewsScheduledScheduled* self);
static void __views_scheduled_scheduled___lambda258__gtk_button_clicked (GtkButton* _sender,
                                                                  gpointer self);
static void _views_scheduled_scheduled___lambda259_ (ViewsScheduledScheduled* self);
void views_date_prepare_new_item (ViewsDate* self);
static void __views_scheduled_scheduled___lambda259__widgets_magic_button_clicked (WidgetsMagicButton* _sender,
                                                                            gpointer self);
static void views_scheduled_scheduled_finalize (GObject * obj);
static GType views_scheduled_scheduled_get_type_once (void);

static inline gpointer
views_scheduled_scheduled_get_instance_private (ViewsScheduledScheduled* self)
{
	return G_STRUCT_MEMBER_P (self, ViewsScheduledScheduled_private_offset);
}

static void
views_scheduled_scheduled_update_date_label (ViewsScheduledScheduled* self)
{
	gint day_of_week = 0;
	GDateTime* _tmp0_;
	GDateTime* _date = NULL;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
	GtkLabel* _tmp3_;
	GDateTime* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	GDateTime* _tmp7_;
	GDateTime* _tmp8_;
	GDateTime* _tmp9_;
	gboolean _tmp10_;
#line 229 "../src/Views/Scheduled/Scheduled.vala"
	g_return_if_fail (self != NULL);
#line 230 "../src/Views/Scheduled/Scheduled.vala"
	_tmp0_ = self->priv->date;
#line 230 "../src/Views/Scheduled/Scheduled.vala"
	day_of_week = g_date_time_get_day_of_week (_tmp0_);
#line 231 "../src/Views/Scheduled/Scheduled.vala"
	_tmp1_ = self->priv->date;
#line 231 "../src/Views/Scheduled/Scheduled.vala"
	_tmp2_ = g_date_time_add_days (_tmp1_, -1 * (day_of_week - 1));
#line 231 "../src/Views/Scheduled/Scheduled.vala"
	_date = _tmp2_;
#line 232 "../src/Views/Scheduled/Scheduled.vala"
	_tmp3_ = self->priv->date_label;
#line 232 "../src/Views/Scheduled/Scheduled.vala"
	_tmp4_ = _date;
#line 232 "../src/Views/Scheduled/Scheduled.vala"
	_tmp5_ = g_date_time_format (_tmp4_, "%B");
#line 232 "../src/Views/Scheduled/Scheduled.vala"
	_tmp6_ = _tmp5_;
#line 232 "../src/Views/Scheduled/Scheduled.vala"
	gtk_label_set_label (_tmp3_, _tmp6_);
#line 232 "../src/Views/Scheduled/Scheduled.vala"
	_g_free0 (_tmp6_);
#line 233 "../src/Views/Scheduled/Scheduled.vala"
	_tmp7_ = _date;
#line 233 "../src/Views/Scheduled/Scheduled.vala"
	_tmp8_ = g_date_time_new_now_local ();
#line 233 "../src/Views/Scheduled/Scheduled.vala"
	_tmp9_ = _tmp8_;
#line 233 "../src/Views/Scheduled/Scheduled.vala"
	_tmp10_ = g_date_time_get_year (_tmp7_) != g_date_time_get_year (_tmp9_);
#line 233 "../src/Views/Scheduled/Scheduled.vala"
	_g_date_time_unref0 (_tmp9_);
#line 233 "../src/Views/Scheduled/Scheduled.vala"
	if (_tmp10_) {
#line 264 "Scheduled.c"
		GtkLabel* _tmp11_;
		GtkLabel* _tmp12_;
		const gchar* _tmp13_;
		const gchar* _tmp14_;
		GDateTime* _tmp15_;
		gchar* _tmp16_;
		gchar* _tmp17_;
		gchar* _tmp18_;
		gchar* _tmp19_;
		gchar* _tmp20_;
		gchar* _tmp21_;
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp11_ = self->priv->date_label;
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp12_ = self->priv->date_label;
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp13_ = gtk_label_get_label (_tmp12_);
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp14_ = _tmp13_;
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp15_ = _date;
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp16_ = g_date_time_format (_tmp15_, "%Y");
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp17_ = _tmp16_;
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp18_ = g_strdup_printf (" %s", _tmp17_);
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp19_ = _tmp18_;
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp20_ = g_strconcat (_tmp14_, _tmp19_, NULL);
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_tmp21_ = _tmp20_;
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		gtk_label_set_label (_tmp11_, _tmp21_);
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_g_free0 (_tmp21_);
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_g_free0 (_tmp19_);
#line 234 "../src/Views/Scheduled/Scheduled.vala"
		_g_free0 (_tmp17_);
#line 306 "Scheduled.c"
	}
#line 229 "../src/Views/Scheduled/Scheduled.vala"
	_g_date_time_unref0 (_date);
#line 310 "Scheduled.c"
}

static void
views_scheduled_scheduled_date_selected (ViewsScheduledScheduled* self,
                                         GDateTime* date)
{
	ViewsDate* _tmp0_;
#line 238 "../src/Views/Scheduled/Scheduled.vala"
	g_return_if_fail (self != NULL);
#line 238 "../src/Views/Scheduled/Scheduled.vala"
	g_return_if_fail (date != NULL);
#line 239 "../src/Views/Scheduled/Scheduled.vala"
	_tmp0_ = self->priv->date_view;
#line 239 "../src/Views/Scheduled/Scheduled.vala"
	views_date_set_date (_tmp0_, date);
#line 326 "Scheduled.c"
}

static void
_views_scheduled_scheduled_date_selected_views_scheduled_scheduled_header_date_selected (ViewsScheduledScheduledHeader* _sender,
                                                                                         GDateTime* date,
                                                                                         gpointer self)
{
#line 251 "../src/Views/Scheduled/Scheduled.vala"
	views_scheduled_scheduled_date_selected ((ViewsScheduledScheduled*) self, date);
#line 336 "Scheduled.c"
}

static void
views_scheduled_scheduled_show_today (ViewsScheduledScheduled* self)
{
	GDateTime* _tmp0_;
	HdyCarousel* _tmp1_;
	HdyCarousel* _tmp2_;
	GList* _tmp3_;
	GDateTime* _tmp6_;
	ViewsScheduledScheduledHeader* _tmp7_;
	ViewsScheduledScheduledHeader* _tmp8_;
	GDateTime* _tmp9_;
	GDateTime* _tmp10_;
	GDateTime* _tmp11_;
	ViewsScheduledScheduledHeader* _tmp12_;
	ViewsScheduledScheduledHeader* _tmp13_;
	GDateTime* _tmp14_;
	GDateTime* _tmp15_;
	GDateTime* _tmp16_;
	ViewsScheduledScheduledHeader* _tmp17_;
	ViewsScheduledScheduledHeader* _tmp18_;
	HdyCarousel* _tmp19_;
	ViewsScheduledScheduledHeader* _tmp20_;
	HdyCarousel* _tmp21_;
	ViewsScheduledScheduledHeader* _tmp22_;
	HdyCarousel* _tmp23_;
	ViewsScheduledScheduledHeader* _tmp24_;
	HdyCarousel* _tmp25_;
	ViewsScheduledScheduledHeader* _tmp26_;
	GDateTime* _tmp27_;
	GDateTime* _tmp28_;
	HdyCarousel* _tmp29_;
#line 242 "../src/Views/Scheduled/Scheduled.vala"
	g_return_if_fail (self != NULL);
#line 243 "../src/Views/Scheduled/Scheduled.vala"
	_tmp0_ = g_date_time_new_now_local ();
#line 243 "../src/Views/Scheduled/Scheduled.vala"
	_g_date_time_unref0 (self->priv->date);
#line 243 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->date = _tmp0_;
#line 244 "../src/Views/Scheduled/Scheduled.vala"
	_tmp1_ = self->priv->carousel;
#line 244 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_no_show_all ((GtkWidget*) _tmp1_, TRUE);
#line 246 "../src/Views/Scheduled/Scheduled.vala"
	_tmp2_ = self->priv->carousel;
#line 246 "../src/Views/Scheduled/Scheduled.vala"
	_tmp3_ = gtk_container_get_children ((GtkContainer*) _tmp2_);
#line 386 "Scheduled.c"
	{
		GList* grid_collection = NULL;
		GList* grid_it = NULL;
#line 246 "../src/Views/Scheduled/Scheduled.vala"
		grid_collection = _tmp3_;
#line 246 "../src/Views/Scheduled/Scheduled.vala"
		for (grid_it = grid_collection; grid_it != NULL; grid_it = grid_it->next) {
#line 394 "Scheduled.c"
			GtkWidget* grid = NULL;
#line 246 "../src/Views/Scheduled/Scheduled.vala"
			grid = (GtkWidget*) grid_it->data;
#line 398 "Scheduled.c"
			{
				HdyCarousel* _tmp4_;
				GtkWidget* _tmp5_;
#line 247 "../src/Views/Scheduled/Scheduled.vala"
				_tmp4_ = self->priv->carousel;
#line 247 "../src/Views/Scheduled/Scheduled.vala"
				_tmp5_ = grid;
#line 247 "../src/Views/Scheduled/Scheduled.vala"
				gtk_container_remove ((GtkContainer*) _tmp4_, _tmp5_);
#line 408 "Scheduled.c"
			}
		}
#line 246 "../src/Views/Scheduled/Scheduled.vala"
		(grid_collection == NULL) ? NULL : (grid_collection = (g_list_free (grid_collection), NULL));
#line 413 "Scheduled.c"
	}
#line 250 "../src/Views/Scheduled/Scheduled.vala"
	_tmp6_ = self->priv->date;
#line 250 "../src/Views/Scheduled/Scheduled.vala"
	_tmp7_ = views_scheduled_scheduled_header_new (_tmp6_);
#line 250 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp7_);
#line 250 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->grid_center);
#line 250 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->grid_center = _tmp7_;
#line 251 "../src/Views/Scheduled/Scheduled.vala"
	_tmp8_ = self->priv->grid_center;
#line 251 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_object (_tmp8_, "date-selected", (GCallback) _views_scheduled_scheduled_date_selected_views_scheduled_scheduled_header_date_selected, self, 0);
#line 253 "../src/Views/Scheduled/Scheduled.vala"
	_tmp9_ = self->priv->date;
#line 253 "../src/Views/Scheduled/Scheduled.vala"
	_tmp10_ = g_date_time_add_days (_tmp9_, -7);
#line 253 "../src/Views/Scheduled/Scheduled.vala"
	_g_date_time_unref0 (self->priv->date);
#line 253 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->date = _tmp10_;
#line 254 "../src/Views/Scheduled/Scheduled.vala"
	_tmp11_ = self->priv->date;
#line 254 "../src/Views/Scheduled/Scheduled.vala"
	_tmp12_ = views_scheduled_scheduled_header_new (_tmp11_);
#line 254 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp12_);
#line 254 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->grid_left);
#line 254 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->grid_left = _tmp12_;
#line 255 "../src/Views/Scheduled/Scheduled.vala"
	_tmp13_ = self->priv->grid_left;
#line 255 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_object (_tmp13_, "date-selected", (GCallback) _views_scheduled_scheduled_date_selected_views_scheduled_scheduled_header_date_selected, self, 0);
#line 257 "../src/Views/Scheduled/Scheduled.vala"
	_tmp14_ = self->priv->date;
#line 257 "../src/Views/Scheduled/Scheduled.vala"
	_tmp15_ = g_date_time_add_days (_tmp14_, 14);
#line 257 "../src/Views/Scheduled/Scheduled.vala"
	_g_date_time_unref0 (self->priv->date);
#line 257 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->date = _tmp15_;
#line 258 "../src/Views/Scheduled/Scheduled.vala"
	_tmp16_ = self->priv->date;
#line 258 "../src/Views/Scheduled/Scheduled.vala"
	_tmp17_ = views_scheduled_scheduled_header_new (_tmp16_);
#line 258 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp17_);
#line 258 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->grid_right);
#line 258 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->grid_right = _tmp17_;
#line 259 "../src/Views/Scheduled/Scheduled.vala"
	_tmp18_ = self->priv->grid_right;
#line 259 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_object (_tmp18_, "date-selected", (GCallback) _views_scheduled_scheduled_date_selected_views_scheduled_scheduled_header_date_selected, self, 0);
#line 261 "../src/Views/Scheduled/Scheduled.vala"
	_tmp19_ = self->priv->carousel;
#line 261 "../src/Views/Scheduled/Scheduled.vala"
	_tmp20_ = self->priv->grid_left;
#line 261 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp19_, (GtkWidget*) _tmp20_);
#line 262 "../src/Views/Scheduled/Scheduled.vala"
	_tmp21_ = self->priv->carousel;
#line 262 "../src/Views/Scheduled/Scheduled.vala"
	_tmp22_ = self->priv->grid_center;
#line 262 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp21_, (GtkWidget*) _tmp22_);
#line 263 "../src/Views/Scheduled/Scheduled.vala"
	_tmp23_ = self->priv->carousel;
#line 263 "../src/Views/Scheduled/Scheduled.vala"
	_tmp24_ = self->priv->grid_right;
#line 263 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp23_, (GtkWidget*) _tmp24_);
#line 265 "../src/Views/Scheduled/Scheduled.vala"
	_tmp25_ = self->priv->carousel;
#line 265 "../src/Views/Scheduled/Scheduled.vala"
	_tmp26_ = self->priv->grid_center;
#line 265 "../src/Views/Scheduled/Scheduled.vala"
	hdy_carousel_scroll_to (_tmp25_, (GtkWidget*) _tmp26_);
#line 267 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->position = (guint) 1;
#line 268 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->rel_postion = 0;
#line 269 "../src/Views/Scheduled/Scheduled.vala"
	_tmp27_ = self->priv->date;
#line 269 "../src/Views/Scheduled/Scheduled.vala"
	_tmp28_ = g_date_time_add_days (_tmp27_, -7);
#line 269 "../src/Views/Scheduled/Scheduled.vala"
	_g_date_time_unref0 (self->priv->date);
#line 269 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->date = _tmp28_;
#line 271 "../src/Views/Scheduled/Scheduled.vala"
	_tmp29_ = self->priv->carousel;
#line 271 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_no_show_all ((GtkWidget*) _tmp29_, FALSE);
#line 513 "Scheduled.c"
}

ViewsScheduledScheduled*
views_scheduled_scheduled_construct (GType object_type)
{
	ViewsScheduledScheduled * self = NULL;
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	self = (ViewsScheduledScheduled*) g_object_new (object_type, NULL);
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	return self;
#line 524 "Scheduled.c"
}

ViewsScheduledScheduled*
views_scheduled_scheduled_new (void)
{
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	return views_scheduled_scheduled_construct (VIEWS_SCHEDULED_TYPE_SCHEDULED);
#line 532 "Scheduled.c"
}

static void
_views_scheduled_scheduled___lambda253_ (ViewsScheduledScheduled* self,
                                         guint index)
{
	HdyCarousel* _tmp8_;
#line 171 "../src/Views/Scheduled/Scheduled.vala"
	if (self->priv->position > index) {
#line 542 "Scheduled.c"
		gint _tmp0_;
		guint _tmp1_;
		GDateTime* _tmp2_;
		GDateTime* _tmp3_;
#line 172 "../src/Views/Scheduled/Scheduled.vala"
		_tmp0_ = self->priv->rel_postion;
#line 172 "../src/Views/Scheduled/Scheduled.vala"
		self->priv->rel_postion = _tmp0_ - 1;
#line 173 "../src/Views/Scheduled/Scheduled.vala"
		_tmp1_ = self->priv->position;
#line 173 "../src/Views/Scheduled/Scheduled.vala"
		self->priv->position = _tmp1_ - 1;
#line 174 "../src/Views/Scheduled/Scheduled.vala"
		_tmp2_ = self->priv->date;
#line 174 "../src/Views/Scheduled/Scheduled.vala"
		_tmp3_ = g_date_time_add_days (_tmp2_, -7);
#line 174 "../src/Views/Scheduled/Scheduled.vala"
		_g_date_time_unref0 (self->priv->date);
#line 174 "../src/Views/Scheduled/Scheduled.vala"
		self->priv->date = _tmp3_;
#line 563 "Scheduled.c"
	} else {
#line 175 "../src/Views/Scheduled/Scheduled.vala"
		if (self->priv->position < index) {
#line 567 "Scheduled.c"
			gint _tmp4_;
			guint _tmp5_;
			GDateTime* _tmp6_;
			GDateTime* _tmp7_;
#line 176 "../src/Views/Scheduled/Scheduled.vala"
			_tmp4_ = self->priv->rel_postion;
#line 176 "../src/Views/Scheduled/Scheduled.vala"
			self->priv->rel_postion = _tmp4_ + 1;
#line 177 "../src/Views/Scheduled/Scheduled.vala"
			_tmp5_ = self->priv->position;
#line 177 "../src/Views/Scheduled/Scheduled.vala"
			self->priv->position = _tmp5_ + 1;
#line 178 "../src/Views/Scheduled/Scheduled.vala"
			_tmp6_ = self->priv->date;
#line 178 "../src/Views/Scheduled/Scheduled.vala"
			_tmp7_ = g_date_time_add_days (_tmp6_, 7);
#line 178 "../src/Views/Scheduled/Scheduled.vala"
			_g_date_time_unref0 (self->priv->date);
#line 178 "../src/Views/Scheduled/Scheduled.vala"
			self->priv->date = _tmp7_;
#line 588 "Scheduled.c"
		}
	}
#line 181 "../src/Views/Scheduled/Scheduled.vala"
	_tmp8_ = self->priv->carousel;
#line 181 "../src/Views/Scheduled/Scheduled.vala"
	if ((index + 1) == ((guint) ((gint) hdy_carousel_get_n_pages (_tmp8_)))) {
#line 595 "Scheduled.c"
		ViewsScheduledScheduledHeader* grid = NULL;
		GDateTime* _tmp9_;
		GDateTime* _tmp10_;
		GDateTime* _tmp11_;
		ViewsScheduledScheduledHeader* _tmp12_;
		ViewsScheduledScheduledHeader* _tmp13_;
		ViewsScheduledScheduledHeader* _tmp14_;
		HdyCarousel* _tmp15_;
		ViewsScheduledScheduledHeader* _tmp16_;
#line 182 "../src/Views/Scheduled/Scheduled.vala"
		_tmp9_ = self->priv->date;
#line 182 "../src/Views/Scheduled/Scheduled.vala"
		_tmp10_ = g_date_time_add_days (_tmp9_, 7);
#line 182 "../src/Views/Scheduled/Scheduled.vala"
		_tmp11_ = _tmp10_;
#line 182 "../src/Views/Scheduled/Scheduled.vala"
		_tmp12_ = views_scheduled_scheduled_header_new (_tmp11_);
#line 182 "../src/Views/Scheduled/Scheduled.vala"
		g_object_ref_sink (_tmp12_);
#line 182 "../src/Views/Scheduled/Scheduled.vala"
		_tmp13_ = _tmp12_;
#line 182 "../src/Views/Scheduled/Scheduled.vala"
		_g_date_time_unref0 (_tmp11_);
#line 182 "../src/Views/Scheduled/Scheduled.vala"
		grid = _tmp13_;
#line 183 "../src/Views/Scheduled/Scheduled.vala"
		_tmp14_ = grid;
#line 183 "../src/Views/Scheduled/Scheduled.vala"
		g_signal_connect_object (_tmp14_, "date-selected", (GCallback) _views_scheduled_scheduled_date_selected_views_scheduled_scheduled_header_date_selected, self, 0);
#line 184 "../src/Views/Scheduled/Scheduled.vala"
		_tmp15_ = self->priv->carousel;
#line 184 "../src/Views/Scheduled/Scheduled.vala"
		_tmp16_ = grid;
#line 184 "../src/Views/Scheduled/Scheduled.vala"
		gtk_container_add ((GtkContainer*) _tmp15_, (GtkWidget*) _tmp16_);
#line 181 "../src/Views/Scheduled/Scheduled.vala"
		_g_object_unref0 (grid);
#line 633 "Scheduled.c"
	} else {
#line 185 "../src/Views/Scheduled/Scheduled.vala"
		if (index == ((guint) 0)) {
#line 637 "Scheduled.c"
			ViewsScheduledScheduledHeader* grid = NULL;
			GDateTime* _tmp17_;
			GDateTime* _tmp18_;
			GDateTime* _tmp19_;
			ViewsScheduledScheduledHeader* _tmp20_;
			ViewsScheduledScheduledHeader* _tmp21_;
			ViewsScheduledScheduledHeader* _tmp22_;
			HdyCarousel* _tmp23_;
			ViewsScheduledScheduledHeader* _tmp24_;
			guint _tmp25_;
#line 186 "../src/Views/Scheduled/Scheduled.vala"
			_tmp17_ = self->priv->date;
#line 186 "../src/Views/Scheduled/Scheduled.vala"
			_tmp18_ = g_date_time_add_days (_tmp17_, -7);
#line 186 "../src/Views/Scheduled/Scheduled.vala"
			_tmp19_ = _tmp18_;
#line 186 "../src/Views/Scheduled/Scheduled.vala"
			_tmp20_ = views_scheduled_scheduled_header_new (_tmp19_);
#line 186 "../src/Views/Scheduled/Scheduled.vala"
			g_object_ref_sink (_tmp20_);
#line 186 "../src/Views/Scheduled/Scheduled.vala"
			_tmp21_ = _tmp20_;
#line 186 "../src/Views/Scheduled/Scheduled.vala"
			_g_date_time_unref0 (_tmp19_);
#line 186 "../src/Views/Scheduled/Scheduled.vala"
			grid = _tmp21_;
#line 187 "../src/Views/Scheduled/Scheduled.vala"
			_tmp22_ = grid;
#line 187 "../src/Views/Scheduled/Scheduled.vala"
			g_signal_connect_object (_tmp22_, "date-selected", (GCallback) _views_scheduled_scheduled_date_selected_views_scheduled_scheduled_header_date_selected, self, 0);
#line 188 "../src/Views/Scheduled/Scheduled.vala"
			_tmp23_ = self->priv->carousel;
#line 188 "../src/Views/Scheduled/Scheduled.vala"
			_tmp24_ = grid;
#line 188 "../src/Views/Scheduled/Scheduled.vala"
			hdy_carousel_prepend (_tmp23_, (GtkWidget*) _tmp24_);
#line 189 "../src/Views/Scheduled/Scheduled.vala"
			_tmp25_ = self->priv->position;
#line 189 "../src/Views/Scheduled/Scheduled.vala"
			self->priv->position = _tmp25_ + 1;
#line 185 "../src/Views/Scheduled/Scheduled.vala"
			_g_object_unref0 (grid);
#line 680 "Scheduled.c"
		}
	}
#line 192 "../src/Views/Scheduled/Scheduled.vala"
	views_scheduled_scheduled_update_date_label (self);
#line 685 "Scheduled.c"
}

static void
__views_scheduled_scheduled___lambda253__hdy_carousel_page_changed (HdyCarousel* _sender,
                                                                    guint index,
                                                                    gpointer self)
{
#line 170 "../src/Views/Scheduled/Scheduled.vala"
	_views_scheduled_scheduled___lambda253_ ((ViewsScheduledScheduled*) self, index);
#line 695 "Scheduled.c"
}

static void
_views_scheduled_scheduled___lambda254_ (ViewsScheduledScheduled* self)
{
	HdyCarousel* _tmp0_;
	HdyCarousel* _tmp1_;
	HdyCarousel* _tmp2_;
#line 196 "../src/Views/Scheduled/Scheduled.vala"
	_tmp0_ = self->priv->carousel;
#line 196 "../src/Views/Scheduled/Scheduled.vala"
	_tmp1_ = self->priv->carousel;
#line 196 "../src/Views/Scheduled/Scheduled.vala"
	_tmp2_ = self->priv->carousel;
#line 196 "../src/Views/Scheduled/Scheduled.vala"
	hdy_swipeable_switch_child ((HdySwipeable*) _tmp0_, (guint) (((gint) hdy_carousel_get_position (_tmp1_)) - 1), (gint64) hdy_carousel_get_animation_duration (_tmp2_));
#line 712 "Scheduled.c"
}

static void
__views_scheduled_scheduled___lambda254__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self)
{
#line 195 "../src/Views/Scheduled/Scheduled.vala"
	_views_scheduled_scheduled___lambda254_ ((ViewsScheduledScheduled*) self);
#line 721 "Scheduled.c"
}

static void
_views_scheduled_scheduled___lambda255_ (ViewsScheduledScheduled* self)
{
	HdyCarousel* _tmp0_;
	HdyCarousel* _tmp1_;
	HdyCarousel* _tmp2_;
#line 200 "../src/Views/Scheduled/Scheduled.vala"
	_tmp0_ = self->priv->carousel;
#line 200 "../src/Views/Scheduled/Scheduled.vala"
	_tmp1_ = self->priv->carousel;
#line 200 "../src/Views/Scheduled/Scheduled.vala"
	_tmp2_ = self->priv->carousel;
#line 200 "../src/Views/Scheduled/Scheduled.vala"
	hdy_swipeable_switch_child ((HdySwipeable*) _tmp0_, (guint) (((gint) hdy_carousel_get_position (_tmp1_)) + 1), (gint64) hdy_carousel_get_animation_duration (_tmp2_));
#line 738 "Scheduled.c"
}

static void
__views_scheduled_scheduled___lambda255__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self)
{
#line 199 "../src/Views/Scheduled/Scheduled.vala"
	_views_scheduled_scheduled___lambda255_ ((ViewsScheduledScheduled*) self);
#line 747 "Scheduled.c"
}

static Block28Data*
block28_data_ref (Block28Data* _data28_)
{
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	g_atomic_int_inc (&_data28_->_ref_count_);
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	return _data28_;
#line 757 "Scheduled.c"
}

static void
block28_data_unref (void * _userdata_)
{
	Block28Data* _data28_;
	_data28_ = (Block28Data*) _userdata_;
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	if (g_atomic_int_dec_and_test (&_data28_->_ref_count_)) {
#line 767 "Scheduled.c"
		ViewsScheduledScheduled* self;
#line 203 "../src/Views/Scheduled/Scheduled.vala"
		self = _data28_->self;
#line 203 "../src/Views/Scheduled/Scheduled.vala"
		_g_object_unref0 (_data28_->menu);
#line 203 "../src/Views/Scheduled/Scheduled.vala"
		_g_object_unref0 (self);
#line 203 "../src/Views/Scheduled/Scheduled.vala"
		g_slice_free (Block28Data, _data28_);
#line 777 "Scheduled.c"
	}
}

static void
__lambda257_ (Block28Data* _data28_,
              GDateTime* date)
{
	ViewsScheduledScheduled* self;
	DialogsContextMenuMenu* _tmp0_;
#line 214 "../src/Views/Scheduled/Scheduled.vala"
	self = _data28_->self;
#line 214 "../src/Views/Scheduled/Scheduled.vala"
	g_return_if_fail (date != NULL);
#line 215 "../src/Views/Scheduled/Scheduled.vala"
	_tmp0_ = _data28_->menu;
#line 215 "../src/Views/Scheduled/Scheduled.vala"
	dialogs_context_menu_menu_hide_destroy (_tmp0_);
#line 216 "../src/Views/Scheduled/Scheduled.vala"
	views_scheduled_scheduled_date_selected (self, date);
#line 797 "Scheduled.c"
}

static void
___lambda257__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                           GDateTime* date,
                                                           gpointer self)
{
#line 214 "../src/Views/Scheduled/Scheduled.vala"
	__lambda257_ (self, date);
#line 807 "Scheduled.c"
}

static void
_views_scheduled_scheduled___lambda256_ (ViewsScheduledScheduled* self)
{
	Block28Data* _data28_;
	DialogsContextMenuMenu* _tmp0_;
	WidgetsCalendarCalendar* calendar = NULL;
	WidgetsCalendarCalendar* _tmp1_ = NULL;
	DialogsContextMenuMenu* _tmp2_;
	WidgetsCalendarCalendar* _tmp3_;
	DialogsContextMenuMenu* _tmp4_;
	WidgetsCalendarCalendar* _tmp5_;
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	_data28_ = g_slice_new0 (Block28Data);
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	_data28_->_ref_count_ = 1;
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	_data28_->self = g_object_ref (self);
#line 204 "../src/Views/Scheduled/Scheduled.vala"
	_tmp0_ = dialogs_context_menu_menu_new ();
#line 204 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp0_);
#line 204 "../src/Views/Scheduled/Scheduled.vala"
	_data28_->menu = _tmp0_;
#line 206 "../src/Views/Scheduled/Scheduled.vala"
	_tmp1_ = widgets_calendar_calendar_new (FALSE);
#line 206 "../src/Views/Scheduled/Scheduled.vala"
	g_object_set ((GtkWidget*) _tmp1_, "expand", TRUE, NULL);
#line 206 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp1_);
#line 206 "../src/Views/Scheduled/Scheduled.vala"
	calendar = _tmp1_;
#line 210 "../src/Views/Scheduled/Scheduled.vala"
	_tmp2_ = _data28_->menu;
#line 210 "../src/Views/Scheduled/Scheduled.vala"
	_tmp3_ = calendar;
#line 210 "../src/Views/Scheduled/Scheduled.vala"
	dialogs_context_menu_menu_add_item (_tmp2_, (GtkWidget*) _tmp3_);
#line 212 "../src/Views/Scheduled/Scheduled.vala"
	_tmp4_ = _data28_->menu;
#line 212 "../src/Views/Scheduled/Scheduled.vala"
	dialogs_context_menu_menu_popup (_tmp4_);
#line 214 "../src/Views/Scheduled/Scheduled.vala"
	_tmp5_ = calendar;
#line 214 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_data (_tmp5_, "selection-changed", (GCallback) ___lambda257__widgets_calendar_calendar_selection_changed, block28_data_ref (_data28_), (GClosureNotify) block28_data_unref, 0);
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (calendar);
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	block28_data_unref (_data28_);
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	_data28_ = NULL;
#line 861 "Scheduled.c"
}

static void
__views_scheduled_scheduled___lambda256__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self)
{
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	_views_scheduled_scheduled___lambda256_ ((ViewsScheduledScheduled*) self);
#line 870 "Scheduled.c"
}

static void
_views_scheduled_scheduled___lambda258_ (ViewsScheduledScheduled* self)
{
#line 221 "../src/Views/Scheduled/Scheduled.vala"
	views_scheduled_scheduled_show_today (self);
#line 878 "Scheduled.c"
}

static void
__views_scheduled_scheduled___lambda258__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self)
{
#line 220 "../src/Views/Scheduled/Scheduled.vala"
	_views_scheduled_scheduled___lambda258_ ((ViewsScheduledScheduled*) self);
#line 887 "Scheduled.c"
}

static void
_views_scheduled_scheduled___lambda259_ (ViewsScheduledScheduled* self)
{
	ViewsDate* _tmp0_;
#line 225 "../src/Views/Scheduled/Scheduled.vala"
	_tmp0_ = self->priv->date_view;
#line 225 "../src/Views/Scheduled/Scheduled.vala"
	views_date_prepare_new_item (_tmp0_);
#line 898 "Scheduled.c"
}

static void
__views_scheduled_scheduled___lambda259__widgets_magic_button_clicked (WidgetsMagicButton* _sender,
                                                                       gpointer self)
{
#line 224 "../src/Views/Scheduled/Scheduled.vala"
	_views_scheduled_scheduled___lambda259_ ((ViewsScheduledScheduled*) self);
#line 907 "Scheduled.c"
}

static GObject *
views_scheduled_scheduled_constructor (GType type,
                                       guint n_construct_properties,
                                       GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ViewsScheduledScheduled * self;
	GtkImage* scheduled_icon = NULL;
	GThemedIcon* _tmp0_;
	GtkImage* _tmp1_ = NULL;
	GtkLabel* title_label = NULL;
	GtkLabel* _tmp2_;
	GtkLabel* _tmp3_;
	GtkStyleContext* _tmp4_;
	GtkLabel* _tmp5_ = NULL;
	GtkBox* today_box = NULL;
	GtkBox* _tmp6_;
	GtkBox* _tmp7_;
	GtkImage* _tmp8_;
	GtkBox* _tmp9_;
	GtkLabel* _tmp10_;
	GtkBox* _tmp11_;
	GtkLabel* _tmp12_;
	GtkButton* today_button = NULL;
	GtkButton* _tmp13_ = NULL;
	GtkButton* _tmp14_;
	GtkStyleContext* _tmp15_;
	GtkButton* _tmp16_;
	GtkBox* _tmp17_;
	WidgetsDynamicIcon* chevron_left_image = NULL;
	WidgetsDynamicIcon* _tmp18_;
	WidgetsDynamicIcon* _tmp19_;
	WidgetsDynamicIcon* _tmp20_;
	GtkButton* chevron_left_button = NULL;
	GtkButton* _tmp21_ = NULL;
	GtkButton* _tmp22_;
	WidgetsDynamicIcon* _tmp23_;
	GtkButton* _tmp24_;
	GtkStyleContext* _tmp25_;
	WidgetsDynamicIcon* calendar_image = NULL;
	WidgetsDynamicIcon* _tmp26_;
	WidgetsDynamicIcon* _tmp27_;
	WidgetsDynamicIcon* _tmp28_;
	GtkButton* calendar_button = NULL;
	GtkButton* _tmp29_ = NULL;
	GtkButton* _tmp30_;
	WidgetsDynamicIcon* _tmp31_;
	GtkButton* _tmp32_;
	GtkStyleContext* _tmp33_;
	WidgetsDynamicIcon* chevron_right_image = NULL;
	WidgetsDynamicIcon* _tmp34_;
	WidgetsDynamicIcon* _tmp35_;
	WidgetsDynamicIcon* _tmp36_;
	GtkButton* chevron_right_button = NULL;
	GtkButton* _tmp37_ = NULL;
	GtkButton* _tmp38_;
	WidgetsDynamicIcon* _tmp39_;
	GtkButton* _tmp40_;
	GtkStyleContext* _tmp41_;
	GtkGrid* nav_grid = NULL;
	GtkGrid* _tmp42_ = NULL;
	GtkGrid* _tmp43_;
	GtkButton* _tmp44_;
	GtkGrid* _tmp45_;
	GtkButton* _tmp46_;
	GtkGrid* _tmp47_;
	GtkButton* _tmp48_;
	WidgetsDynamicIcon* menu_image = NULL;
	WidgetsDynamicIcon* _tmp49_;
	WidgetsDynamicIcon* _tmp50_;
	WidgetsDynamicIcon* _tmp51_;
	GtkButton* menu_button = NULL;
	GtkButton* _tmp52_ = NULL;
	GtkButton* _tmp53_;
	WidgetsDynamicIcon* _tmp54_;
	GtkButton* _tmp55_;
	GtkStyleContext* _tmp56_;
	WidgetsDynamicIcon* search_image = NULL;
	WidgetsDynamicIcon* _tmp57_;
	WidgetsDynamicIcon* _tmp58_;
	WidgetsDynamicIcon* _tmp59_;
	GtkButton* search_button = NULL;
	GtkButton* _tmp60_ = NULL;
	GtkButton* _tmp61_;
	GtkStyleContext* _tmp62_;
	GtkButton* _tmp63_;
	WidgetsDynamicIcon* _tmp64_;
	GtkBox* header_box = NULL;
	GtkBox* _tmp65_ = NULL;
	GtkBox* _tmp66_;
	GtkButton* _tmp67_;
	GtkBox* _tmp68_;
	GtkButton* _tmp69_;
	GtkBox* _tmp70_;
	GtkButton* _tmp71_;
	GtkBox* _tmp72_;
	GtkGrid* _tmp73_;
	WidgetsMagicButton* magic_button = NULL;
	WidgetsMagicButton* _tmp74_;
	HdyCarousel* _tmp75_ = NULL;
	ViewsDate* _tmp76_ = NULL;
	ViewsDate* _tmp77_;
	GDateTime* _tmp78_;
	GDateTime* _tmp79_;
	GDateTime* _tmp80_;
	GDateTime* _tmp81_;
	GtkGrid* content = NULL;
	GtkGrid* _tmp82_ = NULL;
	GtkGrid* _tmp83_;
	GtkBox* _tmp84_;
	GtkGrid* _tmp85_;
	HdyCarousel* _tmp86_;
	GtkGrid* _tmp87_;
	ViewsDate* _tmp88_;
	HdyClamp* content_clamp = NULL;
	HdyClamp* _tmp89_ = NULL;
	HdyClamp* _tmp90_;
	GtkGrid* _tmp91_;
	GtkScrolledWindow* scrolled_window = NULL;
	GtkScrolledWindow* _tmp92_ = NULL;
	GtkScrolledWindow* _tmp93_;
	HdyClamp* _tmp94_;
	GtkOverlay* overlay = NULL;
	GtkOverlay* _tmp95_ = NULL;
	GtkOverlay* _tmp96_;
	WidgetsMagicButton* _tmp97_;
	GtkOverlay* _tmp98_;
	GtkScrolledWindow* _tmp99_;
	GtkOverlay* _tmp100_;
	HdyCarousel* _tmp101_;
	GtkButton* _tmp102_;
	GtkButton* _tmp103_;
	GtkButton* _tmp104_;
	GtkButton* _tmp105_;
	WidgetsMagicButton* _tmp106_;
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	parent_class = G_OBJECT_CLASS (views_scheduled_scheduled_parent_class);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, VIEWS_SCHEDULED_TYPE_SCHEDULED, ViewsScheduledScheduled);
#line 14 "../src/Views/Scheduled/Scheduled.vala"
	_tmp0_ = (GThemedIcon*) g_themed_icon_new ("planner-scheduled");
#line 14 "../src/Views/Scheduled/Scheduled.vala"
	_tmp1_ = (GtkImage*) gtk_image_new ();
#line 14 "../src/Views/Scheduled/Scheduled.vala"
	g_object_set (_tmp1_, "gicon", (GIcon*) _tmp0_, NULL);
#line 14 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (_tmp0_);
#line 14 "../src/Views/Scheduled/Scheduled.vala"
	gtk_image_set_pixel_size (_tmp1_, 24);
#line 14 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp1_);
#line 14 "../src/Views/Scheduled/Scheduled.vala"
	scheduled_icon = _tmp1_;
#line 19 "../src/Views/Scheduled/Scheduled.vala"
	_tmp2_ = (GtkLabel*) gtk_label_new (_ ("Scheduled"));
#line 19 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp2_);
#line 19 "../src/Views/Scheduled/Scheduled.vala"
	title_label = _tmp2_;
#line 20 "../src/Views/Scheduled/Scheduled.vala"
	_tmp3_ = title_label;
#line 20 "../src/Views/Scheduled/Scheduled.vala"
	_tmp4_ = gtk_widget_get_style_context ((GtkWidget*) _tmp3_);
#line 20 "../src/Views/Scheduled/Scheduled.vala"
	gtk_style_context_add_class (_tmp4_, "header-title");
#line 22 "../src/Views/Scheduled/Scheduled.vala"
	_tmp5_ = (GtkLabel*) gtk_label_new (NULL);
#line 22 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp5_, 2);
#line 22 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp5_);
#line 22 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->date_label);
#line 22 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->date_label = _tmp5_;
#line 26 "../src/Views/Scheduled/Scheduled.vala"
	_tmp6_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
#line 26 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp6_);
#line 26 "../src/Views/Scheduled/Scheduled.vala"
	today_box = _tmp6_;
#line 27 "../src/Views/Scheduled/Scheduled.vala"
	_tmp7_ = today_box;
#line 27 "../src/Views/Scheduled/Scheduled.vala"
	_tmp8_ = scheduled_icon;
#line 27 "../src/Views/Scheduled/Scheduled.vala"
	gtk_box_pack_start (_tmp7_, (GtkWidget*) _tmp8_, FALSE, FALSE, (guint) 0);
#line 28 "../src/Views/Scheduled/Scheduled.vala"
	_tmp9_ = today_box;
#line 28 "../src/Views/Scheduled/Scheduled.vala"
	_tmp10_ = title_label;
#line 28 "../src/Views/Scheduled/Scheduled.vala"
	gtk_box_pack_start (_tmp9_, (GtkWidget*) _tmp10_, FALSE, FALSE, (guint) 6);
#line 29 "../src/Views/Scheduled/Scheduled.vala"
	_tmp11_ = today_box;
#line 29 "../src/Views/Scheduled/Scheduled.vala"
	_tmp12_ = self->priv->date_label;
#line 29 "../src/Views/Scheduled/Scheduled.vala"
	gtk_box_pack_start (_tmp11_, (GtkWidget*) _tmp12_, FALSE, FALSE, (guint) 0);
#line 31 "../src/Views/Scheduled/Scheduled.vala"
	_tmp13_ = (GtkButton*) gtk_button_new ();
#line 31 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp13_, GTK_ALIGN_CENTER);
#line 31 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp13_, FALSE);
#line 31 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp13_);
#line 31 "../src/Views/Scheduled/Scheduled.vala"
	today_button = _tmp13_;
#line 35 "../src/Views/Scheduled/Scheduled.vala"
	_tmp14_ = today_button;
#line 35 "../src/Views/Scheduled/Scheduled.vala"
	_tmp15_ = gtk_widget_get_style_context ((GtkWidget*) _tmp14_);
#line 35 "../src/Views/Scheduled/Scheduled.vala"
	gtk_style_context_add_class (_tmp15_, GTK_STYLE_CLASS_FLAT);
#line 37 "../src/Views/Scheduled/Scheduled.vala"
	_tmp16_ = today_button;
#line 37 "../src/Views/Scheduled/Scheduled.vala"
	_tmp17_ = today_box;
#line 37 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp16_, (GtkWidget*) _tmp17_);
#line 39 "../src/Views/Scheduled/Scheduled.vala"
	_tmp18_ = widgets_dynamic_icon_new ();
#line 39 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp18_);
#line 39 "../src/Views/Scheduled/Scheduled.vala"
	chevron_left_image = _tmp18_;
#line 40 "../src/Views/Scheduled/Scheduled.vala"
	_tmp19_ = chevron_left_image;
#line 40 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_set_size (_tmp19_, 19);
#line 41 "../src/Views/Scheduled/Scheduled.vala"
	_tmp20_ = chevron_left_image;
#line 41 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_update_icon_name (_tmp20_, "chevron-left");
#line 43 "../src/Views/Scheduled/Scheduled.vala"
	_tmp21_ = (GtkButton*) gtk_button_new ();
#line 43 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp21_, GTK_ALIGN_CENTER);
#line 43 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp21_, FALSE);
#line 43 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp21_);
#line 43 "../src/Views/Scheduled/Scheduled.vala"
	chevron_left_button = _tmp21_;
#line 48 "../src/Views/Scheduled/Scheduled.vala"
	_tmp22_ = chevron_left_button;
#line 48 "../src/Views/Scheduled/Scheduled.vala"
	_tmp23_ = chevron_left_image;
#line 48 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp22_, (GtkWidget*) _tmp23_);
#line 49 "../src/Views/Scheduled/Scheduled.vala"
	_tmp24_ = chevron_left_button;
#line 49 "../src/Views/Scheduled/Scheduled.vala"
	_tmp25_ = gtk_widget_get_style_context ((GtkWidget*) _tmp24_);
#line 49 "../src/Views/Scheduled/Scheduled.vala"
	gtk_style_context_add_class (_tmp25_, GTK_STYLE_CLASS_FLAT);
#line 51 "../src/Views/Scheduled/Scheduled.vala"
	_tmp26_ = widgets_dynamic_icon_new ();
#line 51 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp26_);
#line 51 "../src/Views/Scheduled/Scheduled.vala"
	calendar_image = _tmp26_;
#line 52 "../src/Views/Scheduled/Scheduled.vala"
	_tmp27_ = calendar_image;
#line 52 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_set_size (_tmp27_, 19);
#line 53 "../src/Views/Scheduled/Scheduled.vala"
	_tmp28_ = calendar_image;
#line 53 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_update_icon_name (_tmp28_, "planner-calendar");
#line 55 "../src/Views/Scheduled/Scheduled.vala"
	_tmp29_ = (GtkButton*) gtk_button_new ();
#line 55 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp29_, GTK_ALIGN_CENTER);
#line 55 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp29_, FALSE);
#line 55 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp29_);
#line 55 "../src/Views/Scheduled/Scheduled.vala"
	calendar_button = _tmp29_;
#line 60 "../src/Views/Scheduled/Scheduled.vala"
	_tmp30_ = calendar_button;
#line 60 "../src/Views/Scheduled/Scheduled.vala"
	_tmp31_ = calendar_image;
#line 60 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp30_, (GtkWidget*) _tmp31_);
#line 61 "../src/Views/Scheduled/Scheduled.vala"
	_tmp32_ = calendar_button;
#line 61 "../src/Views/Scheduled/Scheduled.vala"
	_tmp33_ = gtk_widget_get_style_context ((GtkWidget*) _tmp32_);
#line 61 "../src/Views/Scheduled/Scheduled.vala"
	gtk_style_context_add_class (_tmp33_, GTK_STYLE_CLASS_FLAT);
#line 63 "../src/Views/Scheduled/Scheduled.vala"
	_tmp34_ = widgets_dynamic_icon_new ();
#line 63 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp34_);
#line 63 "../src/Views/Scheduled/Scheduled.vala"
	chevron_right_image = _tmp34_;
#line 64 "../src/Views/Scheduled/Scheduled.vala"
	_tmp35_ = chevron_right_image;
#line 64 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_set_size (_tmp35_, 19);
#line 65 "../src/Views/Scheduled/Scheduled.vala"
	_tmp36_ = chevron_right_image;
#line 65 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_update_icon_name (_tmp36_, "chevron-right");
#line 67 "../src/Views/Scheduled/Scheduled.vala"
	_tmp37_ = (GtkButton*) gtk_button_new ();
#line 67 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp37_, GTK_ALIGN_CENTER);
#line 67 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp37_, FALSE);
#line 67 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp37_);
#line 67 "../src/Views/Scheduled/Scheduled.vala"
	chevron_right_button = _tmp37_;
#line 72 "../src/Views/Scheduled/Scheduled.vala"
	_tmp38_ = chevron_right_button;
#line 72 "../src/Views/Scheduled/Scheduled.vala"
	_tmp39_ = chevron_right_image;
#line 72 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp38_, (GtkWidget*) _tmp39_);
#line 73 "../src/Views/Scheduled/Scheduled.vala"
	_tmp40_ = chevron_right_button;
#line 73 "../src/Views/Scheduled/Scheduled.vala"
	_tmp41_ = gtk_widget_get_style_context ((GtkWidget*) _tmp40_);
#line 73 "../src/Views/Scheduled/Scheduled.vala"
	gtk_style_context_add_class (_tmp41_, GTK_STYLE_CLASS_FLAT);
#line 75 "../src/Views/Scheduled/Scheduled.vala"
	_tmp42_ = (GtkGrid*) gtk_grid_new ();
#line 75 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp42_, GTK_ALIGN_CENTER);
#line 75 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp42_);
#line 75 "../src/Views/Scheduled/Scheduled.vala"
	nav_grid = _tmp42_;
#line 78 "../src/Views/Scheduled/Scheduled.vala"
	_tmp43_ = nav_grid;
#line 78 "../src/Views/Scheduled/Scheduled.vala"
	_tmp44_ = chevron_left_button;
#line 78 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp43_, (GtkWidget*) _tmp44_);
#line 79 "../src/Views/Scheduled/Scheduled.vala"
	_tmp45_ = nav_grid;
#line 79 "../src/Views/Scheduled/Scheduled.vala"
	_tmp46_ = calendar_button;
#line 79 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp45_, (GtkWidget*) _tmp46_);
#line 80 "../src/Views/Scheduled/Scheduled.vala"
	_tmp47_ = nav_grid;
#line 80 "../src/Views/Scheduled/Scheduled.vala"
	_tmp48_ = chevron_right_button;
#line 80 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp47_, (GtkWidget*) _tmp48_);
#line 82 "../src/Views/Scheduled/Scheduled.vala"
	_tmp49_ = widgets_dynamic_icon_new ();
#line 82 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp49_);
#line 82 "../src/Views/Scheduled/Scheduled.vala"
	menu_image = _tmp49_;
#line 83 "../src/Views/Scheduled/Scheduled.vala"
	_tmp50_ = menu_image;
#line 83 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_set_size (_tmp50_, 19);
#line 84 "../src/Views/Scheduled/Scheduled.vala"
	_tmp51_ = menu_image;
#line 84 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_update_icon_name (_tmp51_, "dots-horizontal");
#line 86 "../src/Views/Scheduled/Scheduled.vala"
	_tmp52_ = (GtkButton*) gtk_button_new ();
#line 86 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp52_, GTK_ALIGN_CENTER);
#line 86 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp52_, FALSE);
#line 86 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp52_);
#line 86 "../src/Views/Scheduled/Scheduled.vala"
	menu_button = _tmp52_;
#line 91 "../src/Views/Scheduled/Scheduled.vala"
	_tmp53_ = menu_button;
#line 91 "../src/Views/Scheduled/Scheduled.vala"
	_tmp54_ = menu_image;
#line 91 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp53_, (GtkWidget*) _tmp54_);
#line 92 "../src/Views/Scheduled/Scheduled.vala"
	_tmp55_ = menu_button;
#line 92 "../src/Views/Scheduled/Scheduled.vala"
	_tmp56_ = gtk_widget_get_style_context ((GtkWidget*) _tmp55_);
#line 92 "../src/Views/Scheduled/Scheduled.vala"
	gtk_style_context_add_class (_tmp56_, GTK_STYLE_CLASS_FLAT);
#line 94 "../src/Views/Scheduled/Scheduled.vala"
	_tmp57_ = widgets_dynamic_icon_new ();
#line 94 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp57_);
#line 94 "../src/Views/Scheduled/Scheduled.vala"
	search_image = _tmp57_;
#line 95 "../src/Views/Scheduled/Scheduled.vala"
	_tmp58_ = search_image;
#line 95 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_set_size (_tmp58_, 19);
#line 96 "../src/Views/Scheduled/Scheduled.vala"
	_tmp59_ = search_image;
#line 96 "../src/Views/Scheduled/Scheduled.vala"
	widgets_dynamic_icon_update_icon_name (_tmp59_, "planner-search");
#line 98 "../src/Views/Scheduled/Scheduled.vala"
	_tmp60_ = (GtkButton*) gtk_button_new ();
#line 98 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp60_, GTK_ALIGN_CENTER);
#line 98 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp60_, FALSE);
#line 98 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp60_);
#line 98 "../src/Views/Scheduled/Scheduled.vala"
	search_button = _tmp60_;
#line 102 "../src/Views/Scheduled/Scheduled.vala"
	_tmp61_ = search_button;
#line 102 "../src/Views/Scheduled/Scheduled.vala"
	_tmp62_ = gtk_widget_get_style_context ((GtkWidget*) _tmp61_);
#line 102 "../src/Views/Scheduled/Scheduled.vala"
	gtk_style_context_add_class (_tmp62_, GTK_STYLE_CLASS_FLAT);
#line 103 "../src/Views/Scheduled/Scheduled.vala"
	_tmp63_ = search_button;
#line 103 "../src/Views/Scheduled/Scheduled.vala"
	_tmp64_ = search_image;
#line 103 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp63_, (GtkWidget*) _tmp64_);
#line 105 "../src/Views/Scheduled/Scheduled.vala"
	_tmp65_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
#line 105 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp65_, GTK_ALIGN_START);
#line 105 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp65_, TRUE);
#line 105 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp65_, 2);
#line 105 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp65_, 6);
#line 105 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp65_);
#line 105 "../src/Views/Scheduled/Scheduled.vala"
	header_box = _tmp65_;
#line 112 "../src/Views/Scheduled/Scheduled.vala"
	_tmp66_ = header_box;
#line 112 "../src/Views/Scheduled/Scheduled.vala"
	_tmp67_ = today_button;
#line 112 "../src/Views/Scheduled/Scheduled.vala"
	gtk_box_pack_start (_tmp66_, (GtkWidget*) _tmp67_, FALSE, TRUE, (guint) 0);
#line 113 "../src/Views/Scheduled/Scheduled.vala"
	_tmp68_ = header_box;
#line 113 "../src/Views/Scheduled/Scheduled.vala"
	_tmp69_ = menu_button;
#line 113 "../src/Views/Scheduled/Scheduled.vala"
	gtk_box_pack_end (_tmp68_, (GtkWidget*) _tmp69_, FALSE, FALSE, (guint) 0);
#line 114 "../src/Views/Scheduled/Scheduled.vala"
	_tmp70_ = header_box;
#line 114 "../src/Views/Scheduled/Scheduled.vala"
	_tmp71_ = search_button;
#line 114 "../src/Views/Scheduled/Scheduled.vala"
	gtk_box_pack_end (_tmp70_, (GtkWidget*) _tmp71_, FALSE, FALSE, (guint) 0);
#line 115 "../src/Views/Scheduled/Scheduled.vala"
	_tmp72_ = header_box;
#line 115 "../src/Views/Scheduled/Scheduled.vala"
	_tmp73_ = nav_grid;
#line 115 "../src/Views/Scheduled/Scheduled.vala"
	gtk_box_pack_end (_tmp72_, (GtkWidget*) _tmp73_, FALSE, FALSE, (guint) 12);
#line 117 "../src/Views/Scheduled/Scheduled.vala"
	_tmp74_ = widgets_magic_button_new ();
#line 117 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp74_);
#line 117 "../src/Views/Scheduled/Scheduled.vala"
	magic_button = _tmp74_;
#line 119 "../src/Views/Scheduled/Scheduled.vala"
	_tmp75_ = (HdyCarousel*) hdy_carousel_new ();
#line 119 "../src/Views/Scheduled/Scheduled.vala"
	hdy_carousel_set_interactive (_tmp75_, TRUE);
#line 119 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp75_, TRUE);
#line 119 "../src/Views/Scheduled/Scheduled.vala"
	hdy_carousel_set_spacing (_tmp75_, (guint) 12);
#line 119 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp75_, GTK_ALIGN_START);
#line 119 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp75_, 12);
#line 119 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp75_);
#line 119 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->carousel);
#line 119 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->carousel = _tmp75_;
#line 127 "../src/Views/Scheduled/Scheduled.vala"
	views_scheduled_scheduled_show_today (self);
#line 129 "../src/Views/Scheduled/Scheduled.vala"
	_tmp76_ = views_date_new (FALSE);
#line 129 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp76_, 12);
#line 129 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp76_);
#line 129 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->date_view);
#line 129 "../src/Views/Scheduled/Scheduled.vala"
	self->priv->date_view = _tmp76_;
#line 133 "../src/Views/Scheduled/Scheduled.vala"
	_tmp77_ = self->priv->date_view;
#line 133 "../src/Views/Scheduled/Scheduled.vala"
	_tmp78_ = g_date_time_new_now_local ();
#line 133 "../src/Views/Scheduled/Scheduled.vala"
	_tmp79_ = _tmp78_;
#line 133 "../src/Views/Scheduled/Scheduled.vala"
	_tmp80_ = g_date_time_add_days (_tmp79_, 1);
#line 133 "../src/Views/Scheduled/Scheduled.vala"
	_tmp81_ = _tmp80_;
#line 133 "../src/Views/Scheduled/Scheduled.vala"
	views_date_set_date (_tmp77_, _tmp81_);
#line 133 "../src/Views/Scheduled/Scheduled.vala"
	_g_date_time_unref0 (_tmp81_);
#line 133 "../src/Views/Scheduled/Scheduled.vala"
	_g_date_time_unref0 (_tmp79_);
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	_tmp82_ = (GtkGrid*) gtk_grid_new ();
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp82_, GTK_ORIENTATION_VERTICAL);
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp82_, GTK_ALIGN_START);
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	g_object_set ((GtkWidget*) _tmp82_, "expand", TRUE, NULL);
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp82_, 36);
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp82_, 36);
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp82_, 36);
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp82_, 6);
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp82_);
#line 135 "../src/Views/Scheduled/Scheduled.vala"
	content = _tmp82_;
#line 144 "../src/Views/Scheduled/Scheduled.vala"
	_tmp83_ = content;
#line 144 "../src/Views/Scheduled/Scheduled.vala"
	_tmp84_ = header_box;
#line 144 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp83_, (GtkWidget*) _tmp84_);
#line 145 "../src/Views/Scheduled/Scheduled.vala"
	_tmp85_ = content;
#line 145 "../src/Views/Scheduled/Scheduled.vala"
	_tmp86_ = self->priv->carousel;
#line 145 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp85_, (GtkWidget*) _tmp86_);
#line 146 "../src/Views/Scheduled/Scheduled.vala"
	_tmp87_ = content;
#line 146 "../src/Views/Scheduled/Scheduled.vala"
	_tmp88_ = self->priv->date_view;
#line 146 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp87_, (GtkWidget*) _tmp88_);
#line 148 "../src/Views/Scheduled/Scheduled.vala"
	_tmp89_ = (HdyClamp*) hdy_clamp_new ();
#line 148 "../src/Views/Scheduled/Scheduled.vala"
	hdy_clamp_set_maximum_size (_tmp89_, 720);
#line 148 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp89_);
#line 148 "../src/Views/Scheduled/Scheduled.vala"
	content_clamp = _tmp89_;
#line 152 "../src/Views/Scheduled/Scheduled.vala"
	_tmp90_ = content_clamp;
#line 152 "../src/Views/Scheduled/Scheduled.vala"
	_tmp91_ = content;
#line 152 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp90_, (GtkWidget*) _tmp91_);
#line 154 "../src/Views/Scheduled/Scheduled.vala"
	_tmp92_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 154 "../src/Views/Scheduled/Scheduled.vala"
	g_object_set (_tmp92_, "hscrollbar-policy", GTK_POLICY_NEVER, NULL);
#line 154 "../src/Views/Scheduled/Scheduled.vala"
	g_object_set ((GtkWidget*) _tmp92_, "expand", TRUE, NULL);
#line 154 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp92_);
#line 154 "../src/Views/Scheduled/Scheduled.vala"
	scrolled_window = _tmp92_;
#line 158 "../src/Views/Scheduled/Scheduled.vala"
	_tmp93_ = scrolled_window;
#line 158 "../src/Views/Scheduled/Scheduled.vala"
	_tmp94_ = content_clamp;
#line 158 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp93_, (GtkWidget*) _tmp94_);
#line 160 "../src/Views/Scheduled/Scheduled.vala"
	_tmp95_ = (GtkOverlay*) gtk_overlay_new ();
#line 160 "../src/Views/Scheduled/Scheduled.vala"
	g_object_set ((GtkWidget*) _tmp95_, "expand", TRUE, NULL);
#line 160 "../src/Views/Scheduled/Scheduled.vala"
	g_object_ref_sink (_tmp95_);
#line 160 "../src/Views/Scheduled/Scheduled.vala"
	overlay = _tmp95_;
#line 163 "../src/Views/Scheduled/Scheduled.vala"
	_tmp96_ = overlay;
#line 163 "../src/Views/Scheduled/Scheduled.vala"
	_tmp97_ = magic_button;
#line 163 "../src/Views/Scheduled/Scheduled.vala"
	gtk_overlay_add_overlay (_tmp96_, (GtkWidget*) _tmp97_);
#line 164 "../src/Views/Scheduled/Scheduled.vala"
	_tmp98_ = overlay;
#line 164 "../src/Views/Scheduled/Scheduled.vala"
	_tmp99_ = scrolled_window;
#line 164 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) _tmp98_, (GtkWidget*) _tmp99_);
#line 166 "../src/Views/Scheduled/Scheduled.vala"
	_tmp100_ = overlay;
#line 166 "../src/Views/Scheduled/Scheduled.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp100_);
#line 167 "../src/Views/Scheduled/Scheduled.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 168 "../src/Views/Scheduled/Scheduled.vala"
	views_scheduled_scheduled_update_date_label (self);
#line 170 "../src/Views/Scheduled/Scheduled.vala"
	_tmp101_ = self->priv->carousel;
#line 170 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_object (_tmp101_, "page-changed", (GCallback) __views_scheduled_scheduled___lambda253__hdy_carousel_page_changed, self, 0);
#line 195 "../src/Views/Scheduled/Scheduled.vala"
	_tmp102_ = chevron_left_button;
#line 195 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_object (_tmp102_, "clicked", (GCallback) __views_scheduled_scheduled___lambda254__gtk_button_clicked, self, 0);
#line 199 "../src/Views/Scheduled/Scheduled.vala"
	_tmp103_ = chevron_right_button;
#line 199 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_object (_tmp103_, "clicked", (GCallback) __views_scheduled_scheduled___lambda255__gtk_button_clicked, self, 0);
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	_tmp104_ = calendar_button;
#line 203 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_object (_tmp104_, "clicked", (GCallback) __views_scheduled_scheduled___lambda256__gtk_button_clicked, self, 0);
#line 220 "../src/Views/Scheduled/Scheduled.vala"
	_tmp105_ = today_button;
#line 220 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_object (_tmp105_, "clicked", (GCallback) __views_scheduled_scheduled___lambda258__gtk_button_clicked, self, 0);
#line 224 "../src/Views/Scheduled/Scheduled.vala"
	_tmp106_ = magic_button;
#line 224 "../src/Views/Scheduled/Scheduled.vala"
	g_signal_connect_object (_tmp106_, "clicked", (GCallback) __views_scheduled_scheduled___lambda259__widgets_magic_button_clicked, self, 0);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (overlay);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (scrolled_window);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (content_clamp);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (content);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (magic_button);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (header_box);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (search_button);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (search_image);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (menu_button);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (menu_image);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (nav_grid);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (chevron_right_button);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (chevron_right_image);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (calendar_button);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (calendar_image);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (chevron_left_button);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (chevron_left_image);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (today_button);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (today_box);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (title_label);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (scheduled_icon);
#line 13 "../src/Views/Scheduled/Scheduled.vala"
	return obj;
#line 1594 "Scheduled.c"
}

static void
views_scheduled_scheduled_class_init (ViewsScheduledScheduledClass * klass,
                                      gpointer klass_data)
{
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	views_scheduled_scheduled_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	g_type_class_adjust_private_offset (klass, &ViewsScheduledScheduled_private_offset);
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	G_OBJECT_CLASS (klass)->constructor = views_scheduled_scheduled_constructor;
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	G_OBJECT_CLASS (klass)->finalize = views_scheduled_scheduled_finalize;
#line 1609 "Scheduled.c"
}

static void
views_scheduled_scheduled_instance_init (ViewsScheduledScheduled * self,
                                         gpointer klass)
{
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	self->priv = views_scheduled_scheduled_get_instance_private (self);
#line 1618 "Scheduled.c"
}

static void
views_scheduled_scheduled_finalize (GObject * obj)
{
	ViewsScheduledScheduled * self;
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, VIEWS_SCHEDULED_TYPE_SCHEDULED, ViewsScheduledScheduled);
#line 2 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->date_label);
#line 4 "../src/Views/Scheduled/Scheduled.vala"
	_g_date_time_unref0 (self->priv->date);
#line 5 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->date_view);
#line 6 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->carousel);
#line 7 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->grid_center);
#line 8 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->grid_left);
#line 9 "../src/Views/Scheduled/Scheduled.vala"
	_g_object_unref0 (self->priv->grid_right);
#line 1 "../src/Views/Scheduled/Scheduled.vala"
	G_OBJECT_CLASS (views_scheduled_scheduled_parent_class)->finalize (obj);
#line 1643 "Scheduled.c"
}

static GType
views_scheduled_scheduled_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (ViewsScheduledScheduledClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) views_scheduled_scheduled_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ViewsScheduledScheduled), 0, (GInstanceInitFunc) views_scheduled_scheduled_instance_init, NULL };
	GType views_scheduled_scheduled_type_id;
	views_scheduled_scheduled_type_id = g_type_register_static (gtk_event_box_get_type (), "ViewsScheduledScheduled", &g_define_type_info, 0);
	ViewsScheduledScheduled_private_offset = g_type_add_instance_private (views_scheduled_scheduled_type_id, sizeof (ViewsScheduledScheduledPrivate));
	return views_scheduled_scheduled_type_id;
}

GType
views_scheduled_scheduled_get_type (void)
{
	static volatile gsize views_scheduled_scheduled_type_id__volatile = 0;
	if (g_once_init_enter (&views_scheduled_scheduled_type_id__volatile)) {
		GType views_scheduled_scheduled_type_id;
		views_scheduled_scheduled_type_id = views_scheduled_scheduled_get_type_once ();
		g_once_init_leave (&views_scheduled_scheduled_type_id__volatile, views_scheduled_scheduled_type_id);
	}
	return views_scheduled_scheduled_type_id__volatile;
}


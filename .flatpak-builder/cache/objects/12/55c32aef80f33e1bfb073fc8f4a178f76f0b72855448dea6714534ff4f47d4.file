/* Welcome.c generated by valac 0.50.10, the Vala compiler
 * generated from Welcome.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 3 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USAs
*
* Authored by: Alain M. <alainmh23@gmail.com>
*/

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <handy.h>
#include <glib/gi18n-lib.h>
#include <granite.h>

#define VIEWS_TYPE_WELCOME (views_welcome_get_type ())
#define VIEWS_WELCOME(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), VIEWS_TYPE_WELCOME, ViewsWelcome))
#define VIEWS_WELCOME_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), VIEWS_TYPE_WELCOME, ViewsWelcomeClass))
#define VIEWS_IS_WELCOME(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), VIEWS_TYPE_WELCOME))
#define VIEWS_IS_WELCOME_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), VIEWS_TYPE_WELCOME))
#define VIEWS_WELCOME_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), VIEWS_TYPE_WELCOME, ViewsWelcomeClass))

typedef struct _ViewsWelcome ViewsWelcome;
typedef struct _ViewsWelcomeClass ViewsWelcomeClass;
typedef struct _ViewsWelcomePrivate ViewsWelcomePrivate;
enum  {
	VIEWS_WELCOME_0_PROPERTY,
	VIEWS_WELCOME_NUM_PROPERTIES
};
static GParamSpec* views_welcome_properties[VIEWS_WELCOME_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
enum  {
	VIEWS_WELCOME_ACTIVATED_SIGNAL,
	VIEWS_WELCOME_NUM_SIGNALS
};
static guint views_welcome_signals[VIEWS_WELCOME_NUM_SIGNALS] = {0};

struct _ViewsWelcome {
	GtkEventBox parent_instance;
	ViewsWelcomePrivate * priv;
};

struct _ViewsWelcomeClass {
	GtkEventBoxClass parent_class;
};

static gpointer views_welcome_parent_class = NULL;

GType views_welcome_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ViewsWelcome, g_object_unref)
ViewsWelcome* views_welcome_new (void);
ViewsWelcome* views_welcome_construct (GType object_type);
static GObject * views_welcome_constructor (GType type,
                                     guint n_construct_properties,
                                     GObjectConstructParam * construct_properties);
static void _views_welcome___lambda317_ (ViewsWelcome* self,
                                  gint index);
static void __views_welcome___lambda317__granite_widgets_welcome_activated (GraniteWidgetsWelcome* _sender,
                                                                     gint index,
                                                                     gpointer self);
static GType views_welcome_get_type_once (void);

ViewsWelcome*
views_welcome_construct (GType object_type)
{
	ViewsWelcome * self = NULL;
#line 22 "../src/Views/Welcome.vala"
	self = (ViewsWelcome*) g_object_new (object_type, NULL);
#line 22 "../src/Views/Welcome.vala"
	return self;
#line 88 "Welcome.c"
}

ViewsWelcome*
views_welcome_new (void)
{
#line 22 "../src/Views/Welcome.vala"
	return views_welcome_construct (VIEWS_TYPE_WELCOME);
#line 96 "Welcome.c"
}

static void
_views_welcome___lambda317_ (ViewsWelcome* self,
                             gint index)
{
#line 52 "../src/Views/Welcome.vala"
	g_signal_emit (self, views_welcome_signals[VIEWS_WELCOME_ACTIVATED_SIGNAL], 0, index);
#line 105 "Welcome.c"
}

static void
__views_welcome___lambda317__granite_widgets_welcome_activated (GraniteWidgetsWelcome* _sender,
                                                                gint index,
                                                                gpointer self)
{
#line 51 "../src/Views/Welcome.vala"
	_views_welcome___lambda317_ ((ViewsWelcome*) self, index);
#line 115 "Welcome.c"
}

static GObject *
views_welcome_constructor (GType type,
                           guint n_construct_properties,
                           GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ViewsWelcome * self;
	HdyHeaderBar* headerbar = NULL;
	HdyHeaderBar* _tmp0_;
	HdyHeaderBar* _tmp1_;
	HdyHeaderBar* _tmp2_;
	HdyHeaderBar* _tmp3_;
	HdyHeaderBar* _tmp4_;
	GtkStyleContext* _tmp5_;
	GraniteWidgetsWelcome* welcome = NULL;
	GraniteWidgetsWelcome* _tmp6_ = NULL;
	GraniteWidgetsWelcome* _tmp7_;
	GraniteWidgetsWelcome* _tmp8_;
	GraniteWidgetsWelcome* _tmp9_;
	GtkStyleContext* _tmp10_;
	GtkGrid* grid = NULL;
	GtkGrid* _tmp11_;
	GtkGrid* _tmp12_;
	GtkGrid* _tmp13_;
	HdyHeaderBar* _tmp14_;
	GtkGrid* _tmp15_;
	GraniteWidgetsWelcome* _tmp16_;
	GtkScrolledWindow* scrolled = NULL;
	GtkScrolledWindow* _tmp17_;
	GtkScrolledWindow* _tmp18_;
	GtkScrolledWindow* _tmp19_;
	GtkGrid* _tmp20_;
	GtkScrolledWindow* _tmp21_;
	GraniteWidgetsWelcome* _tmp22_;
#line 25 "../src/Views/Welcome.vala"
	parent_class = G_OBJECT_CLASS (views_welcome_parent_class);
#line 25 "../src/Views/Welcome.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 25 "../src/Views/Welcome.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, VIEWS_TYPE_WELCOME, ViewsWelcome);
#line 26 "../src/Views/Welcome.vala"
	_tmp0_ = (HdyHeaderBar*) hdy_header_bar_new ();
#line 26 "../src/Views/Welcome.vala"
	g_object_ref_sink (_tmp0_);
#line 26 "../src/Views/Welcome.vala"
	headerbar = _tmp0_;
#line 27 "../src/Views/Welcome.vala"
	_tmp1_ = headerbar;
#line 27 "../src/Views/Welcome.vala"
	hdy_header_bar_set_title (_tmp1_, _ ("Planner"));
#line 28 "../src/Views/Welcome.vala"
	_tmp2_ = headerbar;
#line 28 "../src/Views/Welcome.vala"
	hdy_header_bar_set_has_subtitle (_tmp2_, FALSE);
#line 29 "../src/Views/Welcome.vala"
	_tmp3_ = headerbar;
#line 29 "../src/Views/Welcome.vala"
	hdy_header_bar_set_show_close_button (_tmp3_, TRUE);
#line 30 "../src/Views/Welcome.vala"
	_tmp4_ = headerbar;
#line 30 "../src/Views/Welcome.vala"
	_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) _tmp4_);
#line 30 "../src/Views/Welcome.vala"
	gtk_style_context_add_class (_tmp5_, GTK_STYLE_CLASS_FLAT);
#line 32 "../src/Views/Welcome.vala"
	_tmp6_ = granite_widgets_welcome_new ("Planner", _ ("Never worry about forgetting things again"));
#line 32 "../src/Views/Welcome.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp6_, 48);
#line 32 "../src/Views/Welcome.vala"
	g_object_ref_sink (_tmp6_);
#line 32 "../src/Views/Welcome.vala"
	welcome = _tmp6_;
#line 35 "../src/Views/Welcome.vala"
	_tmp7_ = welcome;
#line 35 "../src/Views/Welcome.vala"
	granite_widgets_welcome_append (_tmp7_, "help-about", _ ("Startup"), _ ("Start working locally."));
#line 36 "../src/Views/Welcome.vala"
	_tmp8_ = welcome;
#line 36 "../src/Views/Welcome.vala"
	granite_widgets_welcome_append (_tmp8_, "planner-todoist", _ ("Todoist"), _ ("Synchronize with your Todoist Account."));
#line 38 "../src/Views/Welcome.vala"
	_tmp9_ = welcome;
#line 38 "../src/Views/Welcome.vala"
	_tmp10_ = gtk_widget_get_style_context ((GtkWidget*) _tmp9_);
#line 38 "../src/Views/Welcome.vala"
	gtk_style_context_remove_class (_tmp10_, GTK_STYLE_CLASS_VIEW);
#line 40 "../src/Views/Welcome.vala"
	_tmp11_ = (GtkGrid*) gtk_grid_new ();
#line 40 "../src/Views/Welcome.vala"
	g_object_ref_sink (_tmp11_);
#line 40 "../src/Views/Welcome.vala"
	grid = _tmp11_;
#line 41 "../src/Views/Welcome.vala"
	_tmp12_ = grid;
#line 41 "../src/Views/Welcome.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp12_, GTK_ORIENTATION_VERTICAL);
#line 42 "../src/Views/Welcome.vala"
	_tmp13_ = grid;
#line 42 "../src/Views/Welcome.vala"
	_tmp14_ = headerbar;
#line 42 "../src/Views/Welcome.vala"
	gtk_container_add ((GtkContainer*) _tmp13_, (GtkWidget*) _tmp14_);
#line 43 "../src/Views/Welcome.vala"
	_tmp15_ = grid;
#line 43 "../src/Views/Welcome.vala"
	_tmp16_ = welcome;
#line 43 "../src/Views/Welcome.vala"
	gtk_container_add ((GtkContainer*) _tmp15_, (GtkWidget*) _tmp16_);
#line 45 "../src/Views/Welcome.vala"
	_tmp17_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 45 "../src/Views/Welcome.vala"
	g_object_ref_sink (_tmp17_);
#line 45 "../src/Views/Welcome.vala"
	scrolled = _tmp17_;
#line 46 "../src/Views/Welcome.vala"
	_tmp18_ = scrolled;
#line 46 "../src/Views/Welcome.vala"
	g_object_set ((GtkWidget*) _tmp18_, "expand", TRUE, NULL);
#line 47 "../src/Views/Welcome.vala"
	_tmp19_ = scrolled;
#line 47 "../src/Views/Welcome.vala"
	_tmp20_ = grid;
#line 47 "../src/Views/Welcome.vala"
	gtk_container_add ((GtkContainer*) _tmp19_, (GtkWidget*) _tmp20_);
#line 49 "../src/Views/Welcome.vala"
	_tmp21_ = scrolled;
#line 49 "../src/Views/Welcome.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp21_);
#line 51 "../src/Views/Welcome.vala"
	_tmp22_ = welcome;
#line 51 "../src/Views/Welcome.vala"
	g_signal_connect_object (_tmp22_, "activated", (GCallback) __views_welcome___lambda317__granite_widgets_welcome_activated, self, 0);
#line 25 "../src/Views/Welcome.vala"
	_g_object_unref0 (scrolled);
#line 25 "../src/Views/Welcome.vala"
	_g_object_unref0 (grid);
#line 25 "../src/Views/Welcome.vala"
	_g_object_unref0 (welcome);
#line 25 "../src/Views/Welcome.vala"
	_g_object_unref0 (headerbar);
#line 25 "../src/Views/Welcome.vala"
	return obj;
#line 261 "Welcome.c"
}

static void
views_welcome_class_init (ViewsWelcomeClass * klass,
                          gpointer klass_data)
{
#line 22 "../src/Views/Welcome.vala"
	views_welcome_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Views/Welcome.vala"
	G_OBJECT_CLASS (klass)->constructor = views_welcome_constructor;
#line 22 "../src/Views/Welcome.vala"
	views_welcome_signals[VIEWS_WELCOME_ACTIVATED_SIGNAL] = g_signal_new ("activated", VIEWS_TYPE_WELCOME, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__INT, G_TYPE_NONE, 1, G_TYPE_INT);
#line 274 "Welcome.c"
}

static void
views_welcome_instance_init (ViewsWelcome * self,
                             gpointer klass)
{
}

static GType
views_welcome_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (ViewsWelcomeClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) views_welcome_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ViewsWelcome), 0, (GInstanceInitFunc) views_welcome_instance_init, NULL };
	GType views_welcome_type_id;
	views_welcome_type_id = g_type_register_static (gtk_event_box_get_type (), "ViewsWelcome", &g_define_type_info, 0);
	return views_welcome_type_id;
}

GType
views_welcome_get_type (void)
{
	static volatile gsize views_welcome_type_id__volatile = 0;
	if (g_once_init_enter (&views_welcome_type_id__volatile)) {
		GType views_welcome_type_id;
		views_welcome_type_id = views_welcome_get_type_once ();
		g_once_init_leave (&views_welcome_type_id__volatile, views_welcome_type_id);
	}
	return views_welcome_type_id__volatile;
}


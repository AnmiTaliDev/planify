/* MenuCalendarPicker.c generated by valac 0.50.10, the Vala compiler
 * generated from MenuCalendarPicker.vala, do not modify */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gio/gio.h>

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER (dialogs_context_menu_menu_calendar_picker_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPicker))
#define DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPickerClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_CALENDAR_PICKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER))
#define DIALOGS_CONTEXT_MENU_IS_MENU_CALENDAR_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER))
#define DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPickerClass))

typedef struct _DialogsContextMenuMenuCalendarPicker DialogsContextMenuMenuCalendarPicker;
typedef struct _DialogsContextMenuMenuCalendarPickerClass DialogsContextMenuMenuCalendarPickerClass;
typedef struct _DialogsContextMenuMenuCalendarPickerPrivate DialogsContextMenuMenuCalendarPickerPrivate;
enum  {
	DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_0_PROPERTY,
	DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_TITLE_PROPERTY,
	DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_NUM_PROPERTIES
};
static GParamSpec* dialogs_context_menu_menu_calendar_picker_properties[DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
typedef struct _Block42Data Block42Data;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define WIDGETS_TYPE_DYNAMIC_ICON (widgets_dynamic_icon_get_type ())
#define WIDGETS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIcon))
#define WIDGETS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))
#define WIDGETS_IS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_IS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_DYNAMIC_ICON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))

typedef struct _WidgetsDynamicIcon WidgetsDynamicIcon;
typedef struct _WidgetsDynamicIconClass WidgetsDynamicIconClass;

#define WIDGETS_CALENDAR_TYPE_CALENDAR (widgets_calendar_calendar_get_type ())
#define WIDGETS_CALENDAR_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendar))
#define WIDGETS_CALENDAR_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))
#define WIDGETS_CALENDAR_IS_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_IS_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_CALENDAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))

typedef struct _WidgetsCalendarCalendar WidgetsCalendarCalendar;
typedef struct _WidgetsCalendarCalendarClass WidgetsCalendarCalendarClass;
enum  {
	DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_SELECTION_CHANGED_SIGNAL,
	DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_NUM_SIGNALS
};
static guint dialogs_context_menu_menu_calendar_picker_signals[DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_NUM_SIGNALS] = {0};

struct _DialogsContextMenuMenuCalendarPicker {
	GtkEventBox parent_instance;
	DialogsContextMenuMenuCalendarPickerPrivate * priv;
};

struct _DialogsContextMenuMenuCalendarPickerClass {
	GtkEventBoxClass parent_class;
};

struct _DialogsContextMenuMenuCalendarPickerPrivate {
	gchar* _title;
};

struct _Block42Data {
	int _ref_count_;
	DialogsContextMenuMenuCalendarPicker* self;
	GtkButton* arrow_button;
	GtkRevealer* content_revealer;
};

static gint DialogsContextMenuMenuCalendarPicker_private_offset;
static gpointer dialogs_context_menu_menu_calendar_picker_parent_class = NULL;

GType dialogs_context_menu_menu_calendar_picker_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuCalendarPicker, g_object_unref)
DialogsContextMenuMenuCalendarPicker* dialogs_context_menu_menu_calendar_picker_new (const gchar* title);
DialogsContextMenuMenuCalendarPicker* dialogs_context_menu_menu_calendar_picker_construct (GType object_type,
                                                                                           const gchar* title);
const gchar* dialogs_context_menu_menu_calendar_picker_get_title (DialogsContextMenuMenuCalendarPicker* self);
static void dialogs_context_menu_menu_calendar_picker_set_title (DialogsContextMenuMenuCalendarPicker* self,
                                                          const gchar* value);
static GObject * dialogs_context_menu_menu_calendar_picker_constructor (GType type,
                                                                 guint n_construct_properties,
                                                                 GObjectConstructParam * construct_properties);
static Block42Data* block42_data_ref (Block42Data* _data42_);
static void block42_data_unref (void * _userdata_);
GType widgets_dynamic_icon_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsDynamicIcon, g_object_unref)
WidgetsDynamicIcon* widgets_dynamic_icon_new (void);
WidgetsDynamicIcon* widgets_dynamic_icon_construct (GType object_type);
void widgets_dynamic_icon_set_size (WidgetsDynamicIcon* self,
                                    gint value);
void widgets_dynamic_icon_update_icon_name (WidgetsDynamicIcon* self,
                                            const gchar* icon_name);
GType widgets_calendar_calendar_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsCalendarCalendar, g_object_unref)
WidgetsCalendarCalendar* widgets_calendar_calendar_new (gboolean block_past_days);
WidgetsCalendarCalendar* widgets_calendar_calendar_construct (GType object_type,
                                                              gboolean block_past_days);
static void _dialogs_context_menu_menu_calendar_picker___lambda92_ (Block42Data* _data42_);
static void __dialogs_context_menu_menu_calendar_picker___lambda92__gtk_button_clicked (GtkButton* _sender,
                                                                                 gpointer self);
static void _dialogs_context_menu_menu_calendar_picker___lambda93_ (DialogsContextMenuMenuCalendarPicker* self,
                                                             GDateTime* date);
static void __dialogs_context_menu_menu_calendar_picker___lambda93__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                                                                          GDateTime* date,
                                                                                                          gpointer self);
static void dialogs_context_menu_menu_calendar_picker_finalize (GObject * obj);
static GType dialogs_context_menu_menu_calendar_picker_get_type_once (void);
static void _vala_dialogs_context_menu_menu_calendar_picker_get_property (GObject * object,
                                                                   guint property_id,
                                                                   GValue * value,
                                                                   GParamSpec * pspec);
static void _vala_dialogs_context_menu_menu_calendar_picker_set_property (GObject * object,
                                                                   guint property_id,
                                                                   const GValue * value,
                                                                   GParamSpec * pspec);

static inline gpointer
dialogs_context_menu_menu_calendar_picker_get_instance_private (DialogsContextMenuMenuCalendarPicker* self)
{
	return G_STRUCT_MEMBER_P (self, DialogsContextMenuMenuCalendarPicker_private_offset);
}

DialogsContextMenuMenuCalendarPicker*
dialogs_context_menu_menu_calendar_picker_construct (GType object_type,
                                                     const gchar* title)
{
	DialogsContextMenuMenuCalendarPicker * self = NULL;
#line 6 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_return_val_if_fail (title != NULL, NULL);
#line 7 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	self = (DialogsContextMenuMenuCalendarPicker*) g_object_new (object_type, "title", title, "hexpand", TRUE, "can-focus", FALSE, NULL);
#line 6 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	return self;
#line 142 "MenuCalendarPicker.c"
}

DialogsContextMenuMenuCalendarPicker*
dialogs_context_menu_menu_calendar_picker_new (const gchar* title)
{
#line 6 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	return dialogs_context_menu_menu_calendar_picker_construct (DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, title);
#line 150 "MenuCalendarPicker.c"
}

const gchar*
dialogs_context_menu_menu_calendar_picker_get_title (DialogsContextMenuMenuCalendarPicker* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp0_ = self->priv->_title;
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	result = _tmp0_;
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	return result;
#line 166 "MenuCalendarPicker.c"
}

static void
dialogs_context_menu_menu_calendar_picker_set_title (DialogsContextMenuMenuCalendarPicker* self,
                                                     const gchar* value)
{
	gchar* old_value;
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_return_if_fail (self != NULL);
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	old_value = dialogs_context_menu_menu_calendar_picker_get_title (self);
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 180 "MenuCalendarPicker.c"
		gchar* _tmp0_;
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		_tmp0_ = g_strdup (value);
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		_g_free0 (self->priv->_title);
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		self->priv->_title = _tmp0_;
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		g_object_notify_by_pspec ((GObject *) self, dialogs_context_menu_menu_calendar_picker_properties[DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_TITLE_PROPERTY]);
#line 190 "MenuCalendarPicker.c"
	}
}

static Block42Data*
block42_data_ref (Block42Data* _data42_)
{
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_atomic_int_inc (&_data42_->_ref_count_);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	return _data42_;
#line 201 "MenuCalendarPicker.c"
}

static void
block42_data_unref (void * _userdata_)
{
	Block42Data* _data42_;
	_data42_ = (Block42Data*) _userdata_;
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	if (g_atomic_int_dec_and_test (&_data42_->_ref_count_)) {
#line 211 "MenuCalendarPicker.c"
		DialogsContextMenuMenuCalendarPicker* self;
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		self = _data42_->self;
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		_g_object_unref0 (_data42_->content_revealer);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		_g_object_unref0 (_data42_->arrow_button);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		_g_object_unref0 (self);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		g_slice_free (Block42Data, _data42_);
#line 223 "MenuCalendarPicker.c"
	}
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	return self ? g_object_ref (self) : NULL;
#line 232 "MenuCalendarPicker.c"
}

static void
_dialogs_context_menu_menu_calendar_picker___lambda92_ (Block42Data* _data42_)
{
	DialogsContextMenuMenuCalendarPicker* self;
	GtkRevealer* _tmp0_;
	GtkRevealer* _tmp1_;
	gboolean _tmp2_;
	gboolean _tmp3_;
	GtkRevealer* _tmp4_;
	gboolean _tmp5_;
	gboolean _tmp6_;
#line 78 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	self = _data42_->self;
#line 79 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp0_ = _data42_->content_revealer;
#line 79 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp1_ = _data42_->content_revealer;
#line 79 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp2_ = gtk_revealer_get_reveal_child (_tmp1_);
#line 79 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp3_ = _tmp2_;
#line 79 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_revealer_set_reveal_child (_tmp0_, !_tmp3_);
#line 80 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp4_ = _data42_->content_revealer;
#line 80 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp5_ = gtk_revealer_get_reveal_child (_tmp4_);
#line 80 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp6_ = _tmp5_;
#line 80 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	if (_tmp6_) {
#line 266 "MenuCalendarPicker.c"
		GtkButton* _tmp7_;
		GtkStyleContext* _tmp8_;
#line 81 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		_tmp7_ = _data42_->arrow_button;
#line 81 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		_tmp8_ = gtk_widget_get_style_context ((GtkWidget*) _tmp7_);
#line 81 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		gtk_style_context_add_class (_tmp8_, "opened");
#line 275 "MenuCalendarPicker.c"
	} else {
		GtkButton* _tmp9_;
		GtkStyleContext* _tmp10_;
#line 83 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		_tmp9_ = _data42_->arrow_button;
#line 83 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		_tmp10_ = gtk_widget_get_style_context ((GtkWidget*) _tmp9_);
#line 83 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		gtk_style_context_remove_class (_tmp10_, "opened");
#line 285 "MenuCalendarPicker.c"
	}
}

static void
__dialogs_context_menu_menu_calendar_picker___lambda92__gtk_button_clicked (GtkButton* _sender,
                                                                            gpointer self)
{
#line 78 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_dialogs_context_menu_menu_calendar_picker___lambda92_ (self);
#line 295 "MenuCalendarPicker.c"
}

static void
_dialogs_context_menu_menu_calendar_picker___lambda93_ (DialogsContextMenuMenuCalendarPicker* self,
                                                        GDateTime* date)
{
#line 87 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_return_if_fail (date != NULL);
#line 88 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_signal_emit (self, dialogs_context_menu_menu_calendar_picker_signals[DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_SELECTION_CHANGED_SIGNAL], 0, date);
#line 306 "MenuCalendarPicker.c"
}

static void
__dialogs_context_menu_menu_calendar_picker___lambda93__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                                                                     GDateTime* date,
                                                                                                     gpointer self)
{
#line 87 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_dialogs_context_menu_menu_calendar_picker___lambda93_ ((DialogsContextMenuMenuCalendarPicker*) self, date);
#line 316 "MenuCalendarPicker.c"
}

static GObject *
dialogs_context_menu_menu_calendar_picker_constructor (GType type,
                                                       guint n_construct_properties,
                                                       GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	DialogsContextMenuMenuCalendarPicker * self;
	Block42Data* _data42_;
	WidgetsDynamicIcon* menu_icon = NULL;
	WidgetsDynamicIcon* _tmp0_;
	WidgetsDynamicIcon* _tmp1_;
	WidgetsDynamicIcon* _tmp2_;
	GtkLabel* menu_title = NULL;
	const gchar* _tmp3_;
	GtkLabel* _tmp4_;
	GtkImage* arrow_icon = NULL;
	GThemedIcon* _tmp5_;
	GtkImage* _tmp6_ = NULL;
	GtkImage* _tmp7_;
	GtkWidget* _tmp8_;
	GtkButton* _tmp9_ = NULL;
	GtkStyleContext* arrow_button_context = NULL;
	GtkButton* _tmp10_;
	GtkStyleContext* _tmp11_;
	GtkStyleContext* _tmp12_;
	GtkStyleContext* _tmp13_;
	GtkStyleContext* _tmp14_;
	GtkStyleContext* _tmp15_;
	GtkGrid* menu_grid = NULL;
	GtkGrid* _tmp16_ = NULL;
	GtkGrid* _tmp17_;
	WidgetsDynamicIcon* _tmp18_;
	GtkGrid* _tmp19_;
	GtkLabel* _tmp20_;
	GtkGrid* _tmp21_;
	GtkButton* _tmp22_;
	GtkButton* menu_button = NULL;
	GtkButton* _tmp23_ = NULL;
	GtkButton* _tmp24_;
	GtkGrid* _tmp25_;
	GtkStyleContext* menu_button_context = NULL;
	GtkButton* _tmp26_;
	GtkStyleContext* _tmp27_;
	GtkStyleContext* _tmp28_;
	GtkStyleContext* _tmp29_;
	GtkStyleContext* _tmp30_;
	WidgetsCalendarCalendar* calendar = NULL;
	WidgetsCalendarCalendar* _tmp31_;
	GtkRevealer* _tmp32_ = NULL;
	GtkRevealer* _tmp33_;
	WidgetsCalendarCalendar* _tmp34_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp35_ = NULL;
	GtkGrid* _tmp36_;
	GtkButton* _tmp37_;
	GtkGrid* _tmp38_;
	GtkRevealer* _tmp39_;
	GtkGrid* _tmp40_;
	GtkButton* _tmp41_;
	WidgetsCalendarCalendar* _tmp42_;
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	parent_class = G_OBJECT_CLASS (dialogs_context_menu_menu_calendar_picker_parent_class);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPicker);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_data42_ = g_slice_new0 (Block42Data);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_data42_->_ref_count_ = 1;
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_data42_->self = g_object_ref (self);
#line 15 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp0_ = widgets_dynamic_icon_new ();
#line 15 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_ref_sink (_tmp0_);
#line 15 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	menu_icon = _tmp0_;
#line 16 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp1_ = menu_icon;
#line 16 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	widgets_dynamic_icon_set_size (_tmp1_, 19);
#line 17 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp2_ = menu_icon;
#line 17 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	widgets_dynamic_icon_update_icon_name (_tmp2_, "planner-scheduled");
#line 19 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp3_ = self->priv->_title;
#line 19 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp4_ = (GtkLabel*) gtk_label_new (_tmp3_);
#line 19 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_ref_sink (_tmp4_);
#line 19 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	menu_title = _tmp4_;
#line 21 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp5_ = (GThemedIcon*) g_themed_icon_new ("pan-end-symbolic");
#line 21 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp6_ = (GtkImage*) gtk_image_new ();
#line 21 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_set (_tmp6_, "gicon", (GIcon*) _tmp5_, NULL);
#line 21 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_object_unref0 (_tmp5_);
#line 21 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_image_set_pixel_size (_tmp6_, 14);
#line 21 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_ref_sink (_tmp6_);
#line 21 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	arrow_icon = _tmp6_;
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp7_ = arrow_icon;
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp8_ = _g_object_ref0 ((GtkWidget*) _tmp7_);
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp9_ = (GtkButton*) gtk_button_new ();
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp9_, GTK_ALIGN_CENTER);
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp9_, GTK_ALIGN_END);
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp9_, TRUE);
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp9_, FALSE);
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_button_set_image (_tmp9_, _tmp8_);
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_object_unref0 (_tmp8_);
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp9_, 6);
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_ref_sink (_tmp9_);
#line 26 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_data42_->arrow_button = _tmp9_;
#line 35 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp10_ = _data42_->arrow_button;
#line 35 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp11_ = gtk_widget_get_style_context ((GtkWidget*) _tmp10_);
#line 35 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	arrow_button_context = _tmp11_;
#line 36 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp12_ = arrow_button_context;
#line 36 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_style_context_add_class (_tmp12_, GTK_STYLE_CLASS_FLAT);
#line 37 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp13_ = arrow_button_context;
#line 37 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_style_context_add_class (_tmp13_, "no-padding");
#line 38 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp14_ = arrow_button_context;
#line 38 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_style_context_add_class (_tmp14_, "hidden-button");
#line 39 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp15_ = arrow_button_context;
#line 39 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_style_context_add_class (_tmp15_, "dim-label");
#line 41 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp16_ = (GtkGrid*) gtk_grid_new ();
#line 41 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_grid_set_column_spacing (_tmp16_, 6);
#line 41 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp16_, TRUE);
#line 41 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_ref_sink (_tmp16_);
#line 41 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	menu_grid = _tmp16_;
#line 46 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp17_ = menu_grid;
#line 46 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp18_ = menu_icon;
#line 46 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_container_add ((GtkContainer*) _tmp17_, (GtkWidget*) _tmp18_);
#line 47 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp19_ = menu_grid;
#line 47 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp20_ = menu_title;
#line 47 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_container_add ((GtkContainer*) _tmp19_, (GtkWidget*) _tmp20_);
#line 48 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp21_ = menu_grid;
#line 48 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp22_ = _data42_->arrow_button;
#line 48 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_container_add ((GtkContainer*) _tmp21_, (GtkWidget*) _tmp22_);
#line 50 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp23_ = (GtkButton*) gtk_button_new ();
#line 50 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp23_, FALSE);
#line 50 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_ref_sink (_tmp23_);
#line 50 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	menu_button = _tmp23_;
#line 53 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp24_ = menu_button;
#line 53 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp25_ = menu_grid;
#line 53 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_container_add ((GtkContainer*) _tmp24_, (GtkWidget*) _tmp25_);
#line 55 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp26_ = menu_button;
#line 55 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp27_ = gtk_widget_get_style_context ((GtkWidget*) _tmp26_);
#line 55 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	menu_button_context = _tmp27_;
#line 56 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp28_ = menu_button_context;
#line 56 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_style_context_add_class (_tmp28_, "menu-item");
#line 57 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp29_ = menu_button_context;
#line 57 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_style_context_add_class (_tmp29_, GTK_STYLE_CLASS_FLAT);
#line 58 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp30_ = menu_button_context;
#line 58 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_style_context_add_class (_tmp30_, "transition");
#line 60 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp31_ = widgets_calendar_calendar_new (FALSE);
#line 60 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_ref_sink (_tmp31_);
#line 60 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	calendar = _tmp31_;
#line 62 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp32_ = (GtkRevealer*) gtk_revealer_new ();
#line 62 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_revealer_set_transition_type (_tmp32_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 62 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_ref_sink (_tmp32_);
#line 62 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_data42_->content_revealer = _tmp32_;
#line 66 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp33_ = _data42_->content_revealer;
#line 66 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp34_ = calendar;
#line 66 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_container_add ((GtkContainer*) _tmp33_, (GtkWidget*) _tmp34_);
#line 68 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp35_ = (GtkGrid*) gtk_grid_new ();
#line 68 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp35_, GTK_ORIENTATION_VERTICAL);
#line 68 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp35_, TRUE);
#line 68 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_ref_sink (_tmp35_);
#line 68 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	main_grid = _tmp35_;
#line 73 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp36_ = main_grid;
#line 73 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp37_ = menu_button;
#line 73 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_container_add ((GtkContainer*) _tmp36_, (GtkWidget*) _tmp37_);
#line 74 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp38_ = main_grid;
#line 74 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp39_ = _data42_->content_revealer;
#line 74 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_container_add ((GtkContainer*) _tmp38_, (GtkWidget*) _tmp39_);
#line 76 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp40_ = main_grid;
#line 76 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp40_);
#line 78 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp41_ = menu_button;
#line 78 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_signal_connect_data (_tmp41_, "clicked", (GCallback) __dialogs_context_menu_menu_calendar_picker___lambda92__gtk_button_clicked, block42_data_ref (_data42_), (GClosureNotify) block42_data_unref, 0);
#line 87 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_tmp42_ = calendar;
#line 87 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_signal_connect_object (_tmp42_, "selection-changed", (GCallback) __dialogs_context_menu_menu_calendar_picker___lambda93__widgets_calendar_calendar_selection_changed, self, 0);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_object_unref0 (main_grid);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_object_unref0 (calendar);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_object_unref0 (menu_button);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_object_unref0 (menu_grid);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_object_unref0 (arrow_icon);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_object_unref0 (menu_title);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_object_unref0 (menu_icon);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	block42_data_unref (_data42_);
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_data42_ = NULL;
#line 14 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	return obj;
#line 608 "MenuCalendarPicker.c"
}

static void
dialogs_context_menu_menu_calendar_picker_class_init (DialogsContextMenuMenuCalendarPickerClass * klass,
                                                      gpointer klass_data)
{
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	dialogs_context_menu_menu_calendar_picker_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_type_class_adjust_private_offset (klass, &DialogsContextMenuMenuCalendarPicker_private_offset);
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_dialogs_context_menu_menu_calendar_picker_get_property;
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_dialogs_context_menu_menu_calendar_picker_set_property;
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	G_OBJECT_CLASS (klass)->constructor = dialogs_context_menu_menu_calendar_picker_constructor;
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	G_OBJECT_CLASS (klass)->finalize = dialogs_context_menu_menu_calendar_picker_finalize;
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_TITLE_PROPERTY, dialogs_context_menu_menu_calendar_picker_properties[DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_TITLE_PROPERTY] = g_param_spec_string ("title", "title", "title", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	dialogs_context_menu_menu_calendar_picker_signals[DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_SELECTION_CHANGED_SIGNAL] = g_signal_new ("selection-changed", DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__BOXED, G_TYPE_NONE, 1, G_TYPE_DATE_TIME);
#line 631 "MenuCalendarPicker.c"
}

static void
dialogs_context_menu_menu_calendar_picker_instance_init (DialogsContextMenuMenuCalendarPicker * self,
                                                         gpointer klass)
{
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	self->priv = dialogs_context_menu_menu_calendar_picker_get_instance_private (self);
#line 640 "MenuCalendarPicker.c"
}

static void
dialogs_context_menu_menu_calendar_picker_finalize (GObject * obj)
{
	DialogsContextMenuMenuCalendarPicker * self;
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPicker);
#line 2 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	_g_free0 (self->priv->_title);
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	G_OBJECT_CLASS (dialogs_context_menu_menu_calendar_picker_parent_class)->finalize (obj);
#line 653 "MenuCalendarPicker.c"
}

static GType
dialogs_context_menu_menu_calendar_picker_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (DialogsContextMenuMenuCalendarPickerClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) dialogs_context_menu_menu_calendar_picker_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (DialogsContextMenuMenuCalendarPicker), 0, (GInstanceInitFunc) dialogs_context_menu_menu_calendar_picker_instance_init, NULL };
	GType dialogs_context_menu_menu_calendar_picker_type_id;
	dialogs_context_menu_menu_calendar_picker_type_id = g_type_register_static (gtk_event_box_get_type (), "DialogsContextMenuMenuCalendarPicker", &g_define_type_info, 0);
	DialogsContextMenuMenuCalendarPicker_private_offset = g_type_add_instance_private (dialogs_context_menu_menu_calendar_picker_type_id, sizeof (DialogsContextMenuMenuCalendarPickerPrivate));
	return dialogs_context_menu_menu_calendar_picker_type_id;
}

GType
dialogs_context_menu_menu_calendar_picker_get_type (void)
{
	static volatile gsize dialogs_context_menu_menu_calendar_picker_type_id__volatile = 0;
	if (g_once_init_enter (&dialogs_context_menu_menu_calendar_picker_type_id__volatile)) {
		GType dialogs_context_menu_menu_calendar_picker_type_id;
		dialogs_context_menu_menu_calendar_picker_type_id = dialogs_context_menu_menu_calendar_picker_get_type_once ();
		g_once_init_leave (&dialogs_context_menu_menu_calendar_picker_type_id__volatile, dialogs_context_menu_menu_calendar_picker_type_id);
	}
	return dialogs_context_menu_menu_calendar_picker_type_id__volatile;
}

static void
_vala_dialogs_context_menu_menu_calendar_picker_get_property (GObject * object,
                                                              guint property_id,
                                                              GValue * value,
                                                              GParamSpec * pspec)
{
	DialogsContextMenuMenuCalendarPicker * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPicker);
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	switch (property_id) {
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		case DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_TITLE_PROPERTY:
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		g_value_set_string (value, dialogs_context_menu_menu_calendar_picker_get_title (self));
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		break;
#line 694 "MenuCalendarPicker.c"
		default:
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		break;
#line 700 "MenuCalendarPicker.c"
	}
}

static void
_vala_dialogs_context_menu_menu_calendar_picker_set_property (GObject * object,
                                                              guint property_id,
                                                              const GValue * value,
                                                              GParamSpec * pspec)
{
	DialogsContextMenuMenuCalendarPicker * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPicker);
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
	switch (property_id) {
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		case DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_TITLE_PROPERTY:
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		dialogs_context_menu_menu_calendar_picker_set_title (self, g_value_get_string (value));
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		break;
#line 720 "MenuCalendarPicker.c"
		default:
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Dialogs/ContextMenu/MenuCalendarPicker.vala"
		break;
#line 726 "MenuCalendarPicker.c"
	}
}


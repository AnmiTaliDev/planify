/* ProjectRow.c generated by valac 0.50.10, the Vala compiler
 * generated from ProjectRow.vala, do not modify */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <stdlib.h>
#include <string.h>
#include <glib/gi18n-lib.h>
#include <pango/pango.h>
#include <gio/gio.h>
#include <gdk/gdk.h>

#define DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW (dialogs_project_picker_project_row_get_type ())
#define DIALOGS_PROJECT_PICKER_PROJECT_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW, DialogsProjectPickerProjectRow))
#define DIALOGS_PROJECT_PICKER_PROJECT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW, DialogsProjectPickerProjectRowClass))
#define DIALOGS_PROJECT_PICKER_IS_PROJECT_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW))
#define DIALOGS_PROJECT_PICKER_IS_PROJECT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW))
#define DIALOGS_PROJECT_PICKER_PROJECT_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW, DialogsProjectPickerProjectRowClass))

typedef struct _DialogsProjectPickerProjectRow DialogsProjectPickerProjectRow;
typedef struct _DialogsProjectPickerProjectRowClass DialogsProjectPickerProjectRowClass;
typedef struct _DialogsProjectPickerProjectRowPrivate DialogsProjectPickerProjectRowPrivate;

#define OBJECTS_TYPE_BASE_OBJECT (objects_base_object_get_type ())
#define OBJECTS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObject))
#define OBJECTS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))
#define OBJECTS_IS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_IS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_BASE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))

typedef struct _ObjectsBaseObject ObjectsBaseObject;
typedef struct _ObjectsBaseObjectClass ObjectsBaseObjectClass;

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;

#define WIDGETS_TYPE_ICON_COLOR_PROJECT (widgets_icon_color_project_get_type ())
#define WIDGETS_ICON_COLOR_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_ICON_COLOR_PROJECT, WidgetsIconColorProject))
#define WIDGETS_ICON_COLOR_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_ICON_COLOR_PROJECT, WidgetsIconColorProjectClass))
#define WIDGETS_IS_ICON_COLOR_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_ICON_COLOR_PROJECT))
#define WIDGETS_IS_ICON_COLOR_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_ICON_COLOR_PROJECT))
#define WIDGETS_ICON_COLOR_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_ICON_COLOR_PROJECT, WidgetsIconColorProjectClass))

typedef struct _WidgetsIconColorProject WidgetsIconColorProject;
typedef struct _WidgetsIconColorProjectClass WidgetsIconColorProjectClass;
enum  {
	DIALOGS_PROJECT_PICKER_PROJECT_ROW_0_PROPERTY,
	DIALOGS_PROJECT_PICKER_PROJECT_ROW_PROJECT_PROPERTY,
	DIALOGS_PROJECT_PICKER_PROJECT_ROW_NUM_PROPERTIES
};
static GParamSpec* dialogs_project_picker_project_row_properties[DIALOGS_PROJECT_PICKER_PROJECT_ROW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define OBJECTS_TYPE_SECTION (objects_section_get_type ())
#define OBJECTS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_SECTION, ObjectsSection))
#define OBJECTS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_SECTION, ObjectsSectionClass))
#define OBJECTS_IS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_SECTION))
#define OBJECTS_IS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_SECTION))
#define OBJECTS_SECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_SECTION, ObjectsSectionClass))

typedef struct _ObjectsSection ObjectsSection;
typedef struct _ObjectsSectionClass ObjectsSectionClass;

#define DIALOGS_PROJECT_PICKER_TYPE_SECTION_ROW (dialogs_project_picker_section_row_get_type ())
#define DIALOGS_PROJECT_PICKER_SECTION_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_PROJECT_PICKER_TYPE_SECTION_ROW, DialogsProjectPickerSectionRow))
#define DIALOGS_PROJECT_PICKER_SECTION_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_PROJECT_PICKER_TYPE_SECTION_ROW, DialogsProjectPickerSectionRowClass))
#define DIALOGS_PROJECT_PICKER_IS_SECTION_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_PROJECT_PICKER_TYPE_SECTION_ROW))
#define DIALOGS_PROJECT_PICKER_IS_SECTION_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_PROJECT_PICKER_TYPE_SECTION_ROW))
#define DIALOGS_PROJECT_PICKER_SECTION_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_PROJECT_PICKER_TYPE_SECTION_ROW, DialogsProjectPickerSectionRowClass))

typedef struct _DialogsProjectPickerSectionRow DialogsProjectPickerSectionRow;
typedef struct _DialogsProjectPickerSectionRowClass DialogsProjectPickerSectionRowClass;
typedef struct _Block36Data Block36Data;

#define SERVICES_TYPE_EVENT_BUS (services_event_bus_get_type ())
#define SERVICES_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBus))
#define SERVICES_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))
#define SERVICES_IS_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_IS_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_EVENT_BUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))

typedef struct _ServicesEventBus ServicesEventBus;
typedef struct _ServicesEventBusClass ServicesEventBusClass;

struct _DialogsProjectPickerProjectRow {
	GtkListBoxRow parent_instance;
	DialogsProjectPickerProjectRowPrivate * priv;
};

struct _DialogsProjectPickerProjectRowClass {
	GtkListBoxRowClass parent_class;
};

struct _DialogsProjectPickerProjectRowPrivate {
	ObjectsProject* _project;
	GtkLabel* name_label;
	GtkRevealer* main_revealer;
	GtkListBox* listbox;
	WidgetsIconColorProject* icon_project;
};

struct _Block36Data {
	int _ref_count_;
	DialogsProjectPickerProjectRow* self;
	GtkRevealer* selected_revealer;
};

static gint DialogsProjectPickerProjectRow_private_offset;
static gpointer dialogs_project_picker_project_row_parent_class = NULL;
extern ServicesEventBus* planner_event_bus;

GType dialogs_project_picker_project_row_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsProjectPickerProjectRow, g_object_unref)
GType objects_base_object_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsBaseObject, g_object_unref)
GType objects_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsProject, g_object_unref)
GType widgets_icon_color_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsIconColorProject, g_object_unref)
DialogsProjectPickerProjectRow* dialogs_project_picker_project_row_new (ObjectsProject* project);
DialogsProjectPickerProjectRow* dialogs_project_picker_project_row_construct (GType object_type,
                                                                              ObjectsProject* project);
void dialogs_project_picker_project_row_update_request (DialogsProjectPickerProjectRow* self);
ObjectsProject* dialogs_project_picker_project_row_get_project (DialogsProjectPickerProjectRow* self);
gboolean objects_project_get_inbox_project (ObjectsProject* self);
const gchar* objects_project_get_name (ObjectsProject* self);
void widgets_icon_color_project_update_request (WidgetsIconColorProject* self);
GType objects_section_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsSection, g_object_unref)
GType dialogs_project_picker_section_row_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsProjectPickerSectionRow, g_object_unref)
DialogsProjectPickerSectionRow* dialogs_project_picker_project_row_add_section (DialogsProjectPickerProjectRow* self,
                                                                                ObjectsSection* section);
DialogsProjectPickerSectionRow* dialogs_project_picker_section_row_new (ObjectsSection* section);
DialogsProjectPickerSectionRow* dialogs_project_picker_section_row_construct (GType object_type,
                                                                              ObjectsSection* section);
static void dialogs_project_picker_project_row_set_project (DialogsProjectPickerProjectRow* self,
                                                     ObjectsProject* value);
static GObject * dialogs_project_picker_project_row_constructor (GType type,
                                                          guint n_construct_properties,
                                                          GObjectConstructParam * construct_properties);
static Block36Data* block36_data_ref (Block36Data* _data36_);
static void block36_data_unref (void * _userdata_);
WidgetsIconColorProject* widgets_icon_color_project_new (gint pixel_size);
WidgetsIconColorProject* widgets_icon_color_project_construct (GType object_type,
                                                               gint pixel_size);
void widgets_icon_color_project_set_project (WidgetsIconColorProject* self,
                                             ObjectsProject* value);
static gboolean _dialogs_project_picker_project_row___lambda43_ (DialogsProjectPickerProjectRow* self);
static gboolean __dialogs_project_picker_project_row___lambda43__gsource_func (gpointer self);
static gboolean _dialogs_project_picker_project_row___lambda44_ (DialogsProjectPickerProjectRow* self,
                                                          GtkWidget* sender,
                                                          GdkEventButton* evt);
GType services_event_bus_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesEventBus, g_object_unref)
gint64 objects_base_object_get_id (ObjectsBaseObject* self);
#define CONSTANTS_INACTIVE 0
static gboolean __dialogs_project_picker_project_row___lambda44__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                                         GdkEventButton* event,
                                                                                         gpointer self);
static void _dialogs_project_picker_project_row___lambda45_ (Block36Data* _data36_,
                                                      gint64 project_id,
                                                      gint64 section_id);
static void __dialogs_project_picker_project_row___lambda45__services_event_bus_project_picker_changed (ServicesEventBus* _sender,
                                                                                                 gint64 project_id,
                                                                                                 gint64 section_id,
                                                                                                 gpointer self);
static void dialogs_project_picker_project_row_finalize (GObject * obj);
static GType dialogs_project_picker_project_row_get_type_once (void);
static void _vala_dialogs_project_picker_project_row_get_property (GObject * object,
                                                            guint property_id,
                                                            GValue * value,
                                                            GParamSpec * pspec);
static void _vala_dialogs_project_picker_project_row_set_property (GObject * object,
                                                            guint property_id,
                                                            const GValue * value,
                                                            GParamSpec * pspec);

static inline gpointer
dialogs_project_picker_project_row_get_instance_private (DialogsProjectPickerProjectRow* self)
{
	return G_STRUCT_MEMBER_P (self, DialogsProjectPickerProjectRow_private_offset);
}

DialogsProjectPickerProjectRow*
dialogs_project_picker_project_row_construct (GType object_type,
                                              ObjectsProject* project)
{
	DialogsProjectPickerProjectRow * self = NULL;
#line 9 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_return_val_if_fail (project != NULL, NULL);
#line 10 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	self = (DialogsProjectPickerProjectRow*) g_object_new (object_type, "project", project, NULL);
#line 9 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return self;
#line 205 "ProjectRow.c"
}

DialogsProjectPickerProjectRow*
dialogs_project_picker_project_row_new (ObjectsProject* project)
{
#line 9 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return dialogs_project_picker_project_row_construct (DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW, project);
#line 213 "ProjectRow.c"
}

void
dialogs_project_picker_project_row_update_request (DialogsProjectPickerProjectRow* self)
{
	const gchar* _tmp0_ = NULL;
	ObjectsProject* _tmp1_;
	gboolean _tmp2_;
	gboolean _tmp3_;
	GtkLabel* _tmp7_;
	WidgetsIconColorProject* _tmp8_;
#line 102 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp1_ = self->priv->_project;
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp2_ = objects_project_get_inbox_project (_tmp1_);
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp3_ = _tmp2_;
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	if (_tmp3_) {
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp0_ = _ ("Inbox");
#line 237 "ProjectRow.c"
	} else {
		ObjectsProject* _tmp4_;
		const gchar* _tmp5_;
		const gchar* _tmp6_;
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp4_ = self->priv->_project;
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp5_ = objects_project_get_name (_tmp4_);
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp6_ = _tmp5_;
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp0_ = _tmp6_;
#line 250 "ProjectRow.c"
	}
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp7_ = self->priv->name_label;
#line 103 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_label_set_label (_tmp7_, _tmp0_);
#line 104 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp8_ = self->priv->icon_project;
#line 104 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	widgets_icon_color_project_update_request (_tmp8_);
#line 260 "ProjectRow.c"
}

DialogsProjectPickerSectionRow*
dialogs_project_picker_project_row_add_section (DialogsProjectPickerProjectRow* self,
                                                ObjectsSection* section)
{
	DialogsProjectPickerSectionRow* row = NULL;
	DialogsProjectPickerSectionRow* _tmp0_;
	GtkListBox* _tmp1_;
	GtkListBox* _tmp2_;
	DialogsProjectPickerSectionRow* result = NULL;
#line 107 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 107 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_return_val_if_fail (section != NULL, NULL);
#line 108 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp0_ = dialogs_project_picker_section_row_new (section);
#line 108 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp0_);
#line 108 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	row = _tmp0_;
#line 109 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp1_ = self->priv->listbox;
#line 109 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp1_, (GtkWidget*) row);
#line 110 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp2_ = self->priv->listbox;
#line 110 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp2_);
#line 111 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	result = row;
#line 111 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return result;
#line 294 "ProjectRow.c"
}

ObjectsProject*
dialogs_project_picker_project_row_get_project (DialogsProjectPickerProjectRow* self)
{
	ObjectsProject* result;
	ObjectsProject* _tmp0_;
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp0_ = self->priv->_project;
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	result = _tmp0_;
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return result;
#line 310 "ProjectRow.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return self ? g_object_ref (self) : NULL;
#line 318 "ProjectRow.c"
}

static void
dialogs_project_picker_project_row_set_project (DialogsProjectPickerProjectRow* self,
                                                ObjectsProject* value)
{
	ObjectsProject* old_value;
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	old_value = dialogs_project_picker_project_row_get_project (self);
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	if (old_value != value) {
#line 332 "ProjectRow.c"
		ObjectsProject* _tmp0_;
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_g_object_unref0 (self->priv->_project);
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		self->priv->_project = _tmp0_;
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		g_object_notify_by_pspec ((GObject *) self, dialogs_project_picker_project_row_properties[DIALOGS_PROJECT_PICKER_PROJECT_ROW_PROJECT_PROPERTY]);
#line 342 "ProjectRow.c"
	}
}

static Block36Data*
block36_data_ref (Block36Data* _data36_)
{
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_atomic_int_inc (&_data36_->_ref_count_);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return _data36_;
#line 353 "ProjectRow.c"
}

static void
block36_data_unref (void * _userdata_)
{
	Block36Data* _data36_;
	_data36_ = (Block36Data*) _userdata_;
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	if (g_atomic_int_dec_and_test (&_data36_->_ref_count_)) {
#line 363 "ProjectRow.c"
		DialogsProjectPickerProjectRow* self;
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		self = _data36_->self;
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_g_object_unref0 (_data36_->selected_revealer);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_g_object_unref0 (self);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		g_slice_free (Block36Data, _data36_);
#line 373 "ProjectRow.c"
	}
}

static gboolean
_dialogs_project_picker_project_row___lambda43_ (DialogsProjectPickerProjectRow* self)
{
	GtkRevealer* _tmp0_;
	gboolean result = FALSE;
#line 85 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp0_ = self->priv->main_revealer;
#line 85 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp0_, TRUE);
#line 86 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	result = G_SOURCE_REMOVE;
#line 86 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return result;
#line 390 "ProjectRow.c"
}

static gboolean
__dialogs_project_picker_project_row___lambda43__gsource_func (gpointer self)
{
	gboolean result;
	result = _dialogs_project_picker_project_row___lambda43_ ((DialogsProjectPickerProjectRow*) self);
#line 84 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return result;
#line 400 "ProjectRow.c"
}

static gboolean
_dialogs_project_picker_project_row___lambda44_ (DialogsProjectPickerProjectRow* self,
                                                 GtkWidget* sender,
                                                 GdkEventButton* evt)
{
	gboolean _tmp0_ = FALSE;
	GdkEventType _tmp1_;
	gboolean result = FALSE;
#line 89 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_return_val_if_fail (sender != NULL, FALSE);
#line 89 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_return_val_if_fail (evt != NULL, FALSE);
#line 90 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp1_ = evt->type;
#line 90 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	if (_tmp1_ == GDK_BUTTON_PRESS) {
#line 90 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp0_ = evt->button == ((guint) 1);
#line 421 "ProjectRow.c"
	} else {
#line 90 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp0_ = FALSE;
#line 425 "ProjectRow.c"
	}
#line 90 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	if (_tmp0_) {
#line 429 "ProjectRow.c"
		ServicesEventBus* _tmp2_;
		ObjectsProject* _tmp3_;
		gint64 _tmp4_;
		gint64 _tmp5_;
#line 91 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp2_ = planner_event_bus;
#line 91 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp3_ = self->priv->_project;
#line 91 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp4_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp3_);
#line 91 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp5_ = _tmp4_;
#line 91 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		g_signal_emit_by_name (_tmp2_, "project-picker-changed", _tmp5_, (gint64) CONSTANTS_INACTIVE);
#line 444 "ProjectRow.c"
	}
#line 94 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	result = GDK_EVENT_PROPAGATE;
#line 94 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return result;
#line 450 "ProjectRow.c"
}

static gboolean
__dialogs_project_picker_project_row___lambda44__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                                GdkEventButton* event,
                                                                                gpointer self)
{
	gboolean result;
	result = _dialogs_project_picker_project_row___lambda44_ ((DialogsProjectPickerProjectRow*) self, _sender, event);
#line 89 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return result;
#line 462 "ProjectRow.c"
}

static void
_dialogs_project_picker_project_row___lambda45_ (Block36Data* _data36_,
                                                 gint64 project_id,
                                                 gint64 section_id)
{
	DialogsProjectPickerProjectRow* self;
	gboolean _tmp0_ = FALSE;
	ObjectsProject* _tmp1_;
	gint64 _tmp2_;
	gint64 _tmp3_;
	GtkRevealer* _tmp4_;
#line 97 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	self = _data36_->self;
#line 98 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp1_ = self->priv->_project;
#line 98 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp2_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp1_);
#line 98 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp3_ = _tmp2_;
#line 98 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	if (_tmp3_ == project_id) {
#line 98 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp0_ = section_id == ((gint64) CONSTANTS_INACTIVE);
#line 488 "ProjectRow.c"
	} else {
#line 98 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		_tmp0_ = FALSE;
#line 492 "ProjectRow.c"
	}
#line 98 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp4_ = _data36_->selected_revealer;
#line 98 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp4_, _tmp0_);
#line 498 "ProjectRow.c"
}

static void
__dialogs_project_picker_project_row___lambda45__services_event_bus_project_picker_changed (ServicesEventBus* _sender,
                                                                                            gint64 project_id,
                                                                                            gint64 section_id,
                                                                                            gpointer self)
{
#line 97 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_dialogs_project_picker_project_row___lambda45_ (self, project_id, section_id);
#line 509 "ProjectRow.c"
}

static GObject *
dialogs_project_picker_project_row_constructor (GType type,
                                                guint n_construct_properties,
                                                GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	DialogsProjectPickerProjectRow * self;
	Block36Data* _data36_;
	GtkStyleContext* style_context = NULL;
	GtkStyleContext* _tmp0_;
	GtkStyleContext* _tmp1_;
	WidgetsIconColorProject* _tmp2_;
	WidgetsIconColorProject* _tmp3_;
	ObjectsProject* _tmp4_;
	GtkLabel* _tmp5_;
	GtkLabel* _tmp6_;
	GtkLabel* _tmp7_;
	GtkImage* selected_icon = NULL;
	GThemedIcon* _tmp8_;
	GtkImage* _tmp9_ = NULL;
	GtkStyleContext* selected_icon_context = NULL;
	GtkImage* _tmp10_;
	GtkStyleContext* _tmp11_;
	GtkStyleContext* _tmp12_;
	GtkRevealer* _tmp13_ = NULL;
	GtkRevealer* _tmp14_;
	GtkImage* _tmp15_;
	GtkGrid* projectrow_grid = NULL;
	GtkGrid* _tmp16_ = NULL;
	GtkGrid* _tmp17_;
	WidgetsIconColorProject* _tmp18_;
	GtkGrid* _tmp19_;
	GtkLabel* _tmp20_;
	GtkGrid* _tmp21_;
	GtkRevealer* _tmp22_;
	GtkEventBox* projectrow_eventbox = NULL;
	GtkEventBox* _tmp23_;
	GtkEventBox* _tmp24_;
	GtkStyleContext* _tmp25_;
	GtkEventBox* _tmp26_;
	GtkGrid* _tmp27_;
	GtkListBox* _tmp28_ = NULL;
	GtkStyleContext* listbox_context = NULL;
	GtkListBox* _tmp29_;
	GtkStyleContext* _tmp30_;
	GtkStyleContext* _tmp31_;
	GtkStyleContext* _tmp32_;
	GtkGrid* listbox_grid = NULL;
	GtkGrid* _tmp33_ = NULL;
	GtkGrid* _tmp34_;
	GtkListBox* _tmp35_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp36_ = NULL;
	GtkGrid* _tmp37_;
	GtkEventBox* _tmp38_;
	GtkGrid* _tmp39_;
	GtkGrid* _tmp40_;
	GtkRevealer* _tmp41_ = NULL;
	GtkRevealer* _tmp42_;
	GtkGrid* _tmp43_;
	GtkRevealer* _tmp44_;
	GtkRevealer* _tmp45_;
	guint _tmp46_;
	guint _tmp47_;
	GtkEventBox* _tmp48_;
	ServicesEventBus* _tmp49_;
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	parent_class = G_OBJECT_CLASS (dialogs_project_picker_project_row_parent_class);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW, DialogsProjectPickerProjectRow);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_data36_ = g_slice_new0 (Block36Data);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_data36_->_ref_count_ = 1;
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_data36_->self = g_object_ref (self);
#line 16 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 16 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	style_context = _tmp0_;
#line 17 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp1_ = style_context;
#line 17 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_style_context_add_class (_tmp1_, "no-selected");
#line 19 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp2_ = widgets_icon_color_project_new (16);
#line 19 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp2_);
#line 19 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (self->priv->icon_project);
#line 19 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	self->priv->icon_project = _tmp2_;
#line 20 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp3_ = self->priv->icon_project;
#line 20 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp4_ = self->priv->_project;
#line 20 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	widgets_icon_color_project_set_project (_tmp3_, _tmp4_);
#line 22 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp5_ = (GtkLabel*) gtk_label_new (NULL);
#line 22 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp5_);
#line 22 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (self->priv->name_label);
#line 22 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	self->priv->name_label = _tmp5_;
#line 23 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp6_ = self->priv->name_label;
#line 23 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp6_, GTK_ALIGN_CENTER);
#line 24 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp7_ = self->priv->name_label;
#line 24 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_label_set_ellipsize (_tmp7_, PANGO_ELLIPSIZE_END);
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp8_ = (GThemedIcon*) g_themed_icon_new ("emblem-ok-symbolic");
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp9_ = (GtkImage*) gtk_image_new ();
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_set (_tmp9_, "gicon", (GIcon*) _tmp8_, NULL);
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (_tmp8_);
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_image_set_pixel_size (_tmp9_, 16);
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp9_, TRUE);
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp9_, GTK_ALIGN_CENTER);
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp9_, GTK_ALIGN_END);
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp9_);
#line 26 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	selected_icon = _tmp9_;
#line 34 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp10_ = selected_icon;
#line 34 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp11_ = gtk_widget_get_style_context ((GtkWidget*) _tmp10_);
#line 34 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	selected_icon_context = _tmp11_;
#line 35 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp12_ = selected_icon_context;
#line 35 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_style_context_add_class (_tmp12_, "primary-color");
#line 37 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp13_ = (GtkRevealer*) gtk_revealer_new ();
#line 37 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_revealer_set_transition_type (_tmp13_, GTK_REVEALER_TRANSITION_TYPE_CROSSFADE);
#line 37 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp13_);
#line 37 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_data36_->selected_revealer = _tmp13_;
#line 40 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp14_ = _data36_->selected_revealer;
#line 40 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp15_ = selected_icon;
#line 40 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp14_, (GtkWidget*) _tmp15_);
#line 42 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp16_ = (GtkGrid*) gtk_grid_new ();
#line 42 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_grid_set_column_spacing (_tmp16_, 6);
#line 42 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_set ((GtkWidget*) _tmp16_, "margin", 6, NULL);
#line 42 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp16_);
#line 42 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	projectrow_grid = _tmp16_;
#line 47 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp17_ = projectrow_grid;
#line 47 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp18_ = self->priv->icon_project;
#line 47 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp17_, (GtkWidget*) _tmp18_);
#line 48 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp19_ = projectrow_grid;
#line 48 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp20_ = self->priv->name_label;
#line 48 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp19_, (GtkWidget*) _tmp20_);
#line 49 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp21_ = projectrow_grid;
#line 49 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp22_ = _data36_->selected_revealer;
#line 49 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp21_, (GtkWidget*) _tmp22_);
#line 51 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp23_ = (GtkEventBox*) gtk_event_box_new ();
#line 51 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp23_);
#line 51 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	projectrow_eventbox = _tmp23_;
#line 52 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp24_ = projectrow_eventbox;
#line 52 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp25_ = gtk_widget_get_style_context ((GtkWidget*) _tmp24_);
#line 52 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_style_context_add_class (_tmp25_, "transition");
#line 53 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp26_ = projectrow_eventbox;
#line 53 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp27_ = projectrow_grid;
#line 53 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp26_, (GtkWidget*) _tmp27_);
#line 55 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp28_ = (GtkListBox*) gtk_list_box_new ();
#line 55 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp28_, TRUE);
#line 55 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp28_);
#line 55 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (self->priv->listbox);
#line 55 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	self->priv->listbox = _tmp28_;
#line 59 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp29_ = self->priv->listbox;
#line 59 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp30_ = gtk_widget_get_style_context ((GtkWidget*) _tmp29_);
#line 59 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	listbox_context = _tmp30_;
#line 60 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp31_ = listbox_context;
#line 60 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_style_context_add_class (_tmp31_, "listbox-separator-3");
#line 61 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp32_ = listbox_context;
#line 61 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_style_context_add_class (_tmp32_, "listbox-background");
#line 63 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp33_ = (GtkGrid*) gtk_grid_new ();
#line 63 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp33_, 12);
#line 63 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp33_);
#line 63 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	listbox_grid = _tmp33_;
#line 67 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp34_ = listbox_grid;
#line 67 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp35_ = self->priv->listbox;
#line 67 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp34_, (GtkWidget*) _tmp35_);
#line 69 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp36_ = (GtkGrid*) gtk_grid_new ();
#line 69 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp36_, GTK_ORIENTATION_VERTICAL);
#line 69 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp36_);
#line 69 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	main_grid = _tmp36_;
#line 72 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp37_ = main_grid;
#line 72 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp38_ = projectrow_eventbox;
#line 72 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp37_, (GtkWidget*) _tmp38_);
#line 73 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp39_ = main_grid;
#line 73 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp40_ = listbox_grid;
#line 73 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp39_, (GtkWidget*) _tmp40_);
#line 75 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp41_ = (GtkRevealer*) gtk_revealer_new ();
#line 75 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_revealer_set_transition_type (_tmp41_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 75 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_ref_sink (_tmp41_);
#line 75 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (self->priv->main_revealer);
#line 75 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	self->priv->main_revealer = _tmp41_;
#line 78 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp42_ = self->priv->main_revealer;
#line 78 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp43_ = main_grid;
#line 78 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp42_, (GtkWidget*) _tmp43_);
#line 80 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp44_ = self->priv->main_revealer;
#line 80 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp44_);
#line 82 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	dialogs_project_picker_project_row_update_request (self);
#line 84 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp45_ = self->priv->main_revealer;
#line 84 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp46_ = gtk_revealer_get_transition_duration (_tmp45_);
#line 84 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp47_ = _tmp46_;
#line 84 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, _tmp47_, __dialogs_project_picker_project_row___lambda43__gsource_func, g_object_ref (self), g_object_unref);
#line 89 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp48_ = projectrow_eventbox;
#line 89 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_signal_connect_object ((GtkWidget*) _tmp48_, "button-press-event", (GCallback) __dialogs_project_picker_project_row___lambda44__gtk_widget_button_press_event, self, 0);
#line 97 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_tmp49_ = planner_event_bus;
#line 97 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_signal_connect_data (_tmp49_, "project-picker-changed", (GCallback) __dialogs_project_picker_project_row___lambda45__services_event_bus_project_picker_changed, block36_data_ref (_data36_), (GClosureNotify) block36_data_unref, 0);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (main_grid);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (listbox_grid);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (projectrow_eventbox);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (projectrow_grid);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (selected_icon);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	block36_data_unref (_data36_);
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_data36_ = NULL;
#line 15 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	return obj;
#line 831 "ProjectRow.c"
}

static void
dialogs_project_picker_project_row_class_init (DialogsProjectPickerProjectRowClass * klass,
                                               gpointer klass_data)
{
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	dialogs_project_picker_project_row_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_type_class_adjust_private_offset (klass, &DialogsProjectPickerProjectRow_private_offset);
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_dialogs_project_picker_project_row_get_property;
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_dialogs_project_picker_project_row_set_property;
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	G_OBJECT_CLASS (klass)->constructor = dialogs_project_picker_project_row_constructor;
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	G_OBJECT_CLASS (klass)->finalize = dialogs_project_picker_project_row_finalize;
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_PROJECT_PICKER_PROJECT_ROW_PROJECT_PROPERTY, dialogs_project_picker_project_row_properties[DIALOGS_PROJECT_PICKER_PROJECT_ROW_PROJECT_PROPERTY] = g_param_spec_object ("project", "project", "project", OBJECTS_TYPE_PROJECT, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 852 "ProjectRow.c"
}

static void
dialogs_project_picker_project_row_instance_init (DialogsProjectPickerProjectRow * self,
                                                  gpointer klass)
{
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	self->priv = dialogs_project_picker_project_row_get_instance_private (self);
#line 861 "ProjectRow.c"
}

static void
dialogs_project_picker_project_row_finalize (GObject * obj)
{
	DialogsProjectPickerProjectRow * self;
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW, DialogsProjectPickerProjectRow);
#line 2 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (self->priv->_project);
#line 4 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (self->priv->name_label);
#line 5 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (self->priv->main_revealer);
#line 6 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (self->priv->listbox);
#line 7 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	_g_object_unref0 (self->priv->icon_project);
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	G_OBJECT_CLASS (dialogs_project_picker_project_row_parent_class)->finalize (obj);
#line 882 "ProjectRow.c"
}

static GType
dialogs_project_picker_project_row_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (DialogsProjectPickerProjectRowClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) dialogs_project_picker_project_row_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (DialogsProjectPickerProjectRow), 0, (GInstanceInitFunc) dialogs_project_picker_project_row_instance_init, NULL };
	GType dialogs_project_picker_project_row_type_id;
	dialogs_project_picker_project_row_type_id = g_type_register_static (gtk_list_box_row_get_type (), "DialogsProjectPickerProjectRow", &g_define_type_info, 0);
	DialogsProjectPickerProjectRow_private_offset = g_type_add_instance_private (dialogs_project_picker_project_row_type_id, sizeof (DialogsProjectPickerProjectRowPrivate));
	return dialogs_project_picker_project_row_type_id;
}

GType
dialogs_project_picker_project_row_get_type (void)
{
	static volatile gsize dialogs_project_picker_project_row_type_id__volatile = 0;
	if (g_once_init_enter (&dialogs_project_picker_project_row_type_id__volatile)) {
		GType dialogs_project_picker_project_row_type_id;
		dialogs_project_picker_project_row_type_id = dialogs_project_picker_project_row_get_type_once ();
		g_once_init_leave (&dialogs_project_picker_project_row_type_id__volatile, dialogs_project_picker_project_row_type_id);
	}
	return dialogs_project_picker_project_row_type_id__volatile;
}

static void
_vala_dialogs_project_picker_project_row_get_property (GObject * object,
                                                       guint property_id,
                                                       GValue * value,
                                                       GParamSpec * pspec)
{
	DialogsProjectPickerProjectRow * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW, DialogsProjectPickerProjectRow);
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	switch (property_id) {
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		case DIALOGS_PROJECT_PICKER_PROJECT_ROW_PROJECT_PROPERTY:
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		g_value_set_object (value, dialogs_project_picker_project_row_get_project (self));
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		break;
#line 923 "ProjectRow.c"
		default:
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		break;
#line 929 "ProjectRow.c"
	}
}

static void
_vala_dialogs_project_picker_project_row_set_property (GObject * object,
                                                       guint property_id,
                                                       const GValue * value,
                                                       GParamSpec * pspec)
{
	DialogsProjectPickerProjectRow * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_PROJECT_PICKER_TYPE_PROJECT_ROW, DialogsProjectPickerProjectRow);
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
	switch (property_id) {
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		case DIALOGS_PROJECT_PICKER_PROJECT_ROW_PROJECT_PROPERTY:
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		dialogs_project_picker_project_row_set_project (self, g_value_get_object (value));
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		break;
#line 949 "ProjectRow.c"
		default:
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Dialogs/ProjectPicker/ProjectRow.vala"
		break;
#line 955 "ProjectRow.c"
	}
}


/* Menu.c generated by valac 0.50.10, the Vala compiler
 * generated from Menu.vala, do not modify */

#include <handy.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <glib.h>
#include <gdk/gdk.h>

#define DIALOGS_CONTEXT_MENU_TYPE_MENU (dialogs_context_menu_menu_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenu))
#define DIALOGS_CONTEXT_MENU_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_IS_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_MENU_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))

typedef struct _DialogsContextMenuMenu DialogsContextMenuMenu;
typedef struct _DialogsContextMenuMenuClass DialogsContextMenuMenuClass;
typedef struct _DialogsContextMenuMenuPrivate DialogsContextMenuMenuPrivate;
enum  {
	DIALOGS_CONTEXT_MENU_MENU_0_PROPERTY,
	DIALOGS_CONTEXT_MENU_MENU_NUM_PROPERTIES
};
static GParamSpec* dialogs_context_menu_menu_properties[DIALOGS_CONTEXT_MENU_MENU_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define TYPE_PLANNER (planner_get_type ())
#define PLANNER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PLANNER, Planner))
#define PLANNER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_PLANNER, PlannerClass))
#define IS_PLANNER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PLANNER))
#define IS_PLANNER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_PLANNER))
#define PLANNER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PLANNER, PlannerClass))

typedef struct _Planner Planner;
typedef struct _PlannerClass PlannerClass;
typedef struct _PlannerPrivate PlannerPrivate;

#define TYPE_MAIN_WINDOW (main_window_get_type ())
#define MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MAIN_WINDOW, MainWindow))
#define MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_MAIN_WINDOW, MainWindowClass))
#define IS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MAIN_WINDOW))
#define IS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_MAIN_WINDOW))
#define MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MAIN_WINDOW, MainWindowClass))

typedef struct _MainWindow MainWindow;
typedef struct _MainWindowClass MainWindowClass;

struct _DialogsContextMenuMenu {
	HdyWindow parent_instance;
	DialogsContextMenuMenuPrivate * priv;
};

struct _DialogsContextMenuMenuClass {
	HdyWindowClass parent_class;
};

struct _DialogsContextMenuMenuPrivate {
	GtkGrid* content_grid;
};

struct _Planner {
	GtkApplication parent_instance;
	PlannerPrivate * priv;
	MainWindow* main_window;
};

struct _PlannerClass {
	GtkApplicationClass parent_class;
};

static gint DialogsContextMenuMenu_private_offset;
static gpointer dialogs_context_menu_menu_parent_class = NULL;

GType dialogs_context_menu_menu_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenu, g_object_unref)
DialogsContextMenuMenu* dialogs_context_menu_menu_new (void);
DialogsContextMenuMenu* dialogs_context_menu_menu_construct (GType object_type);
GType planner_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Planner, g_object_unref)
Planner* planner_get_instance (void);
GType main_window_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (MainWindow, g_object_unref)
void dialogs_context_menu_menu_hide_destroy (DialogsContextMenuMenu* self);
static gboolean __lambda105_ (DialogsContextMenuMenu* self);
static gboolean ___lambda105__gsource_func (gpointer self);
void dialogs_context_menu_menu_add_item (DialogsContextMenuMenu* self,
                                         GtkWidget* widget);
void dialogs_context_menu_menu_popup (DialogsContextMenuMenu* self);
static GObject * dialogs_context_menu_menu_constructor (GType type,
                                                 guint n_construct_properties,
                                                 GObjectConstructParam * construct_properties);
static gboolean _dialogs_context_menu_menu___lambda106_ (DialogsContextMenuMenu* self);
static gboolean __dialogs_context_menu_menu___lambda106__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                                              GdkEventFocus* event,
                                                                              gpointer self);
static gboolean _dialogs_context_menu_menu___lambda107_ (DialogsContextMenuMenu* self,
                                                  GdkEventKey* key);
static gboolean __dialogs_context_menu_menu___lambda107__gtk_widget_key_release_event (GtkWidget* _sender,
                                                                                GdkEventKey* event,
                                                                                gpointer self);
static void dialogs_context_menu_menu_finalize (GObject * obj);
static GType dialogs_context_menu_menu_get_type_once (void);

static inline gpointer
dialogs_context_menu_menu_get_instance_private (DialogsContextMenuMenu* self)
{
	return G_STRUCT_MEMBER_P (self, DialogsContextMenuMenu_private_offset);
}

DialogsContextMenuMenu*
dialogs_context_menu_menu_construct (GType object_type)
{
	DialogsContextMenuMenu * self = NULL;
	Planner* _tmp0_;
	Planner* _tmp1_;
	MainWindow* _tmp2_;
	GtkWidget* _tmp3_;
#line 5 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp0_ = planner_get_instance ();
#line 5 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp1_ = _tmp0_;
#line 5 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp2_ = _tmp1_->main_window;
#line 5 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp3_ = gtk_widget_get_toplevel ((GtkWidget*) _tmp2_);
#line 5 "../src/Dialogs/ContextMenu/Menu.vala"
	self = (DialogsContextMenuMenu*) g_object_new (object_type, "transient-for", G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, gtk_window_get_type (), GtkWindow), "destroy-with-parent", TRUE, "window-position", GTK_WIN_POS_MOUSE, "resizable", FALSE, "width-request", 296, NULL);
#line 4 "../src/Dialogs/ContextMenu/Menu.vala"
	return self;
#line 131 "Menu.c"
}

DialogsContextMenuMenu*
dialogs_context_menu_menu_new (void)
{
#line 4 "../src/Dialogs/ContextMenu/Menu.vala"
	return dialogs_context_menu_menu_construct (DIALOGS_CONTEXT_MENU_TYPE_MENU);
#line 139 "Menu.c"
}

static gboolean
__lambda105_ (DialogsContextMenuMenu* self)
{
	gboolean result = FALSE;
#line 43 "../src/Dialogs/ContextMenu/Menu.vala"
	gtk_widget_destroy ((GtkWidget*) self);
#line 44 "../src/Dialogs/ContextMenu/Menu.vala"
	result = G_SOURCE_REMOVE;
#line 44 "../src/Dialogs/ContextMenu/Menu.vala"
	return result;
#line 152 "Menu.c"
}

static gboolean
___lambda105__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda105_ ((DialogsContextMenuMenu*) self);
#line 42 "../src/Dialogs/ContextMenu/Menu.vala"
	return result;
#line 162 "Menu.c"
}

void
dialogs_context_menu_menu_hide_destroy (DialogsContextMenuMenu* self)
{
#line 39 "../src/Dialogs/ContextMenu/Menu.vala"
	g_return_if_fail (self != NULL);
#line 40 "../src/Dialogs/ContextMenu/Menu.vala"
	gtk_widget_hide ((GtkWidget*) self);
#line 42 "../src/Dialogs/ContextMenu/Menu.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 500, ___lambda105__gsource_func, g_object_ref (self), g_object_unref);
#line 174 "Menu.c"
}

void
dialogs_context_menu_menu_add_item (DialogsContextMenuMenu* self,
                                    GtkWidget* widget)
{
	GtkGrid* _tmp0_;
	GtkGrid* _tmp1_;
#line 48 "../src/Dialogs/ContextMenu/Menu.vala"
	g_return_if_fail (self != NULL);
#line 48 "../src/Dialogs/ContextMenu/Menu.vala"
	g_return_if_fail (widget != NULL);
#line 49 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp0_ = self->priv->content_grid;
#line 49 "../src/Dialogs/ContextMenu/Menu.vala"
	gtk_container_add ((GtkContainer*) _tmp0_, widget);
#line 50 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp1_ = self->priv->content_grid;
#line 50 "../src/Dialogs/ContextMenu/Menu.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp1_);
#line 195 "Menu.c"
}

void
dialogs_context_menu_menu_popup (DialogsContextMenuMenu* self)
{
#line 53 "../src/Dialogs/ContextMenu/Menu.vala"
	g_return_if_fail (self != NULL);
#line 54 "../src/Dialogs/ContextMenu/Menu.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 205 "Menu.c"
}

static gboolean
_dialogs_context_menu_menu___lambda106_ (DialogsContextMenuMenu* self)
{
	gboolean result = FALSE;
#line 26 "../src/Dialogs/ContextMenu/Menu.vala"
	dialogs_context_menu_menu_hide_destroy (self);
#line 27 "../src/Dialogs/ContextMenu/Menu.vala"
	result = FALSE;
#line 27 "../src/Dialogs/ContextMenu/Menu.vala"
	return result;
#line 218 "Menu.c"
}

static gboolean
__dialogs_context_menu_menu___lambda106__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                                     GdkEventFocus* event,
                                                                     gpointer self)
{
	gboolean result;
	result = _dialogs_context_menu_menu___lambda106_ ((DialogsContextMenuMenu*) self);
#line 25 "../src/Dialogs/ContextMenu/Menu.vala"
	return result;
#line 230 "Menu.c"
}

static gboolean
_dialogs_context_menu_menu___lambda107_ (DialogsContextMenuMenu* self,
                                         GdkEventKey* key)
{
	gboolean result = FALSE;
#line 30 "../src/Dialogs/ContextMenu/Menu.vala"
	g_return_val_if_fail (key != NULL, FALSE);
#line 31 "../src/Dialogs/ContextMenu/Menu.vala"
	if (key->keyval == ((guint) 65307)) {
#line 32 "../src/Dialogs/ContextMenu/Menu.vala"
		dialogs_context_menu_menu_hide_destroy (self);
#line 244 "Menu.c"
	}
#line 35 "../src/Dialogs/ContextMenu/Menu.vala"
	result = FALSE;
#line 35 "../src/Dialogs/ContextMenu/Menu.vala"
	return result;
#line 250 "Menu.c"
}

static gboolean
__dialogs_context_menu_menu___lambda107__gtk_widget_key_release_event (GtkWidget* _sender,
                                                                       GdkEventKey* event,
                                                                       gpointer self)
{
	gboolean result;
	result = _dialogs_context_menu_menu___lambda107_ ((DialogsContextMenuMenu*) self, event);
#line 30 "../src/Dialogs/ContextMenu/Menu.vala"
	return result;
#line 262 "Menu.c"
}

static GObject *
dialogs_context_menu_menu_constructor (GType type,
                                       guint n_construct_properties,
                                       GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	DialogsContextMenuMenu * self;
	GtkGrid* _tmp0_ = NULL;
	GtkStyleContext* content_grid_context = NULL;
	GtkGrid* _tmp1_;
	GtkStyleContext* _tmp2_;
	GtkStyleContext* _tmp3_;
	GtkStyleContext* _tmp4_;
	GtkGrid* _tmp5_;
#line 14 "../src/Dialogs/ContextMenu/Menu.vala"
	parent_class = G_OBJECT_CLASS (dialogs_context_menu_menu_parent_class);
#line 14 "../src/Dialogs/ContextMenu/Menu.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 14 "../src/Dialogs/ContextMenu/Menu.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenu);
#line 15 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp0_ = (GtkGrid*) gtk_grid_new ();
#line 15 "../src/Dialogs/ContextMenu/Menu.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp0_, GTK_ORIENTATION_VERTICAL);
#line 15 "../src/Dialogs/ContextMenu/Menu.vala"
	g_object_ref_sink (_tmp0_);
#line 15 "../src/Dialogs/ContextMenu/Menu.vala"
	_g_object_unref0 (self->priv->content_grid);
#line 15 "../src/Dialogs/ContextMenu/Menu.vala"
	self->priv->content_grid = _tmp0_;
#line 19 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp1_ = self->priv->content_grid;
#line 19 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp2_ = gtk_widget_get_style_context ((GtkWidget*) _tmp1_);
#line 19 "../src/Dialogs/ContextMenu/Menu.vala"
	content_grid_context = _tmp2_;
#line 20 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp3_ = content_grid_context;
#line 20 "../src/Dialogs/ContextMenu/Menu.vala"
	gtk_style_context_add_class (_tmp3_, "view");
#line 21 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp4_ = content_grid_context;
#line 21 "../src/Dialogs/ContextMenu/Menu.vala"
	gtk_style_context_add_class (_tmp4_, "menu");
#line 23 "../src/Dialogs/ContextMenu/Menu.vala"
	_tmp5_ = self->priv->content_grid;
#line 23 "../src/Dialogs/ContextMenu/Menu.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp5_);
#line 25 "../src/Dialogs/ContextMenu/Menu.vala"
	g_signal_connect_object ((GtkWidget*) self, "focus-out-event", (GCallback) __dialogs_context_menu_menu___lambda106__gtk_widget_focus_out_event, self, 0);
#line 30 "../src/Dialogs/ContextMenu/Menu.vala"
	g_signal_connect_object ((GtkWidget*) self, "key-release-event", (GCallback) __dialogs_context_menu_menu___lambda107__gtk_widget_key_release_event, self, 0);
#line 14 "../src/Dialogs/ContextMenu/Menu.vala"
	return obj;
#line 320 "Menu.c"
}

static void
dialogs_context_menu_menu_class_init (DialogsContextMenuMenuClass * klass,
                                      gpointer klass_data)
{
#line 1 "../src/Dialogs/ContextMenu/Menu.vala"
	dialogs_context_menu_menu_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Dialogs/ContextMenu/Menu.vala"
	g_type_class_adjust_private_offset (klass, &DialogsContextMenuMenu_private_offset);
#line 1 "../src/Dialogs/ContextMenu/Menu.vala"
	G_OBJECT_CLASS (klass)->constructor = dialogs_context_menu_menu_constructor;
#line 1 "../src/Dialogs/ContextMenu/Menu.vala"
	G_OBJECT_CLASS (klass)->finalize = dialogs_context_menu_menu_finalize;
#line 335 "Menu.c"
}

static void
dialogs_context_menu_menu_instance_init (DialogsContextMenuMenu * self,
                                         gpointer klass)
{
#line 1 "../src/Dialogs/ContextMenu/Menu.vala"
	self->priv = dialogs_context_menu_menu_get_instance_private (self);
#line 344 "Menu.c"
}

static void
dialogs_context_menu_menu_finalize (GObject * obj)
{
	DialogsContextMenuMenu * self;
#line 1 "../src/Dialogs/ContextMenu/Menu.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenu);
#line 2 "../src/Dialogs/ContextMenu/Menu.vala"
	_g_object_unref0 (self->priv->content_grid);
#line 1 "../src/Dialogs/ContextMenu/Menu.vala"
	G_OBJECT_CLASS (dialogs_context_menu_menu_parent_class)->finalize (obj);
#line 357 "Menu.c"
}

static GType
dialogs_context_menu_menu_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (DialogsContextMenuMenuClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) dialogs_context_menu_menu_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (DialogsContextMenuMenu), 0, (GInstanceInitFunc) dialogs_context_menu_menu_instance_init, NULL };
	GType dialogs_context_menu_menu_type_id;
	dialogs_context_menu_menu_type_id = g_type_register_static (hdy_window_get_type (), "DialogsContextMenuMenu", &g_define_type_info, 0);
	DialogsContextMenuMenu_private_offset = g_type_add_instance_private (dialogs_context_menu_menu_type_id, sizeof (DialogsContextMenuMenuPrivate));
	return dialogs_context_menu_menu_type_id;
}

GType
dialogs_context_menu_menu_get_type (void)
{
	static volatile gsize dialogs_context_menu_menu_type_id__volatile = 0;
	if (g_once_init_enter (&dialogs_context_menu_menu_type_id__volatile)) {
		GType dialogs_context_menu_menu_type_id;
		dialogs_context_menu_menu_type_id = dialogs_context_menu_menu_get_type_once ();
		g_once_init_leave (&dialogs_context_menu_menu_type_id__volatile, dialogs_context_menu_menu_type_id);
	}
	return dialogs_context_menu_menu_type_id__volatile;
}


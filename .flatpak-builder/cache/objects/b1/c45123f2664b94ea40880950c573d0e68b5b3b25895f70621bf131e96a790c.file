/* Project.c generated by valac 0.50.10, the Vala compiler
 * generated from Project.vala, do not modify */

#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gee.h>
#include <float.h>
#include <math.h>
#include <json-glib/json-glib.h>
#include <gio/gio.h>
#include <gtk/gtk.h>
#include <granite.h>
#include <glib/gi18n-lib.h>

#define OBJECTS_TYPE_BASE_OBJECT (objects_base_object_get_type ())
#define OBJECTS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObject))
#define OBJECTS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))
#define OBJECTS_IS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_IS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_BASE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))

typedef struct _ObjectsBaseObject ObjectsBaseObject;
typedef struct _ObjectsBaseObjectClass ObjectsBaseObjectClass;
typedef struct _ObjectsBaseObjectPrivate ObjectsBaseObjectPrivate;

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;
typedef struct _ObjectsProjectPrivate ObjectsProjectPrivate;
typedef enum  {
	PROJECT_VIEW_STYLE_LIST,
	PROJECT_VIEW_STYLE_BOARD
} ProjectViewStyle;

#define TYPE_PROJECT_VIEW_STYLE (project_view_style_get_type ())
typedef enum  {
	PROJECT_ICON_STYLE_PROGRESS,
	PROJECT_ICON_STYLE_EMOJI
} ProjectIconStyle;

#define TYPE_PROJECT_ICON_STYLE (project_icon_style_get_type ())

#define OBJECTS_TYPE_SECTION (objects_section_get_type ())
#define OBJECTS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_SECTION, ObjectsSection))
#define OBJECTS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_SECTION, ObjectsSectionClass))
#define OBJECTS_IS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_SECTION))
#define OBJECTS_IS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_SECTION))
#define OBJECTS_SECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_SECTION, ObjectsSectionClass))

typedef struct _ObjectsSection ObjectsSection;
typedef struct _ObjectsSectionClass ObjectsSectionClass;

#define OBJECTS_TYPE_ITEM (objects_item_get_type ())
#define OBJECTS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_ITEM, ObjectsItem))
#define OBJECTS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_ITEM, ObjectsItemClass))
#define OBJECTS_IS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_ITEM))
#define OBJECTS_IS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_ITEM))
#define OBJECTS_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_ITEM, ObjectsItemClass))

typedef struct _ObjectsItem ObjectsItem;
typedef struct _ObjectsItemClass ObjectsItemClass;
enum  {
	OBJECTS_PROJECT_0_PROPERTY,
	OBJECTS_PROJECT_PARENT_ID_PROPERTY,
	OBJECTS_PROJECT_NAME_PROPERTY,
	OBJECTS_PROJECT_DUE_DATE_PROPERTY,
	OBJECTS_PROJECT_COLOR_PROPERTY,
	OBJECTS_PROJECT_EMOJI_PROPERTY,
	OBJECTS_PROJECT_VIEW_STYLE_PROPERTY,
	OBJECTS_PROJECT_ICON_STYLE_PROPERTY,
	OBJECTS_PROJECT_TODOIST_PROPERTY,
	OBJECTS_PROJECT_INBOX_PROJECT_PROPERTY,
	OBJECTS_PROJECT_TEAM_INBOX_PROPERTY,
	OBJECTS_PROJECT_IS_DELETED_PROPERTY,
	OBJECTS_PROJECT_IS_ARCHIVED_PROPERTY,
	OBJECTS_PROJECT_IS_FAVORITE_PROPERTY,
	OBJECTS_PROJECT_SHARED_PROPERTY,
	OBJECTS_PROJECT_COLLAPSED_PROPERTY,
	OBJECTS_PROJECT_SHOW_COMPLETED_PROPERTY,
	OBJECTS_PROJECT_SORT_ORDER_PROPERTY,
	OBJECTS_PROJECT_CHILD_ORDER_PROPERTY,
	OBJECTS_PROJECT_VIEW_ID_PROPERTY,
	OBJECTS_PROJECT_PARENT_ID_STRING_PROPERTY,
	OBJECTS_PROJECT_SHORT_NAME_PROPERTY,
	OBJECTS_PROJECT_SECTIONS_PROPERTY,
	OBJECTS_PROJECT_ITEMS_PROPERTY,
	OBJECTS_PROJECT_SUBPROJECTS_PROPERTY,
	OBJECTS_PROJECT_PARENT_PROPERTY,
	OBJECTS_PROJECT_PROJECT_COUNT_PROPERTY,
	OBJECTS_PROJECT_PERCENTAGE_PROPERTY,
	OBJECTS_PROJECT_NUM_PROPERTIES
};
static GParamSpec* objects_project_properties[OBJECTS_PROJECT_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _Block44Data Block44Data;

#define SERVICES_TYPE_DATABASE (services_database_get_type ())
#define SERVICES_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_DATABASE, ServicesDatabase))
#define SERVICES_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))
#define SERVICES_IS_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_DATABASE))
#define SERVICES_IS_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_DATABASE))
#define SERVICES_DATABASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))

typedef struct _ServicesDatabase ServicesDatabase;
typedef struct _ServicesDatabaseClass ServicesDatabaseClass;

#define SERVICES_TYPE_TODOIST (services_todoist_get_type ())
#define SERVICES_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_TODOIST, ServicesTodoist))
#define SERVICES_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_TODOIST, ServicesTodoistClass))
#define SERVICES_IS_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_TODOIST))
#define SERVICES_IS_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_TODOIST))
#define SERVICES_TODOIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_TODOIST, ServicesTodoistClass))

typedef struct _ServicesTodoist ServicesTodoist;
typedef struct _ServicesTodoistClass ServicesTodoistClass;

#define WIDGETS_TYPE_LOADING_BUTTON (widgets_loading_button_get_type ())
#define WIDGETS_LOADING_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButton))
#define WIDGETS_LOADING_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButtonClass))
#define WIDGETS_IS_LOADING_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_LOADING_BUTTON))
#define WIDGETS_IS_LOADING_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_LOADING_BUTTON))
#define WIDGETS_LOADING_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButtonClass))

typedef struct _WidgetsLoadingButton WidgetsLoadingButton;
typedef struct _WidgetsLoadingButtonClass WidgetsLoadingButtonClass;
typedef struct _Block45Data Block45Data;
typedef struct _Block46Data Block46Data;

#define TYPE_UTIL (util_get_type ())
#define UTIL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTIL, Util))
#define UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTIL, UtilClass))
#define IS_UTIL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTIL))
#define IS_UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTIL))
#define UTIL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTIL, UtilClass))

typedef struct _Util Util;
typedef struct _UtilClass UtilClass;
#define __vala_JsonNode_free0(var) ((var == NULL) ? NULL : (var = (_vala_JsonNode_free (var), NULL)))
typedef struct _Block47Data Block47Data;
typedef enum  {
	LOADING_BUTTON_TYPE_LABEL,
	LOADING_BUTTON_TYPE_ICON
} LoadingButtonType;

#define TYPE_LOADING_BUTTON_TYPE (loading_button_type_get_type ())

#define SERVICES_TYPE_EVENT_BUS (services_event_bus_get_type ())
#define SERVICES_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBus))
#define SERVICES_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))
#define SERVICES_IS_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_IS_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_EVENT_BUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))

typedef struct _ServicesEventBus ServicesEventBus;
typedef struct _ServicesEventBusClass ServicesEventBusClass;
enum  {
	OBJECTS_PROJECT_SECTION_ADDED_SIGNAL,
	OBJECTS_PROJECT_SUBPROJECT_ADDED_SIGNAL,
	OBJECTS_PROJECT_ITEM_ADDED_SIGNAL,
	OBJECTS_PROJECT_PROJECT_COUNT_UPDATED_SIGNAL,
	OBJECTS_PROJECT_NUM_SIGNALS
};
static guint objects_project_signals[OBJECTS_PROJECT_NUM_SIGNALS] = {0};

struct _ObjectsBaseObject {
	GObject parent_instance;
	ObjectsBaseObjectPrivate * priv;
};

struct _ObjectsBaseObjectClass {
	GObjectClass parent_class;
	gchar* (*get_update_json) (ObjectsBaseObject* self, const gchar* uuid, const gchar* temp_id);
	gchar* (*get_add_json) (ObjectsBaseObject* self, const gchar* temp_id, const gchar* uuid);
};

struct _ObjectsProject {
	ObjectsBaseObject parent_instance;
	ObjectsProjectPrivate * priv;
};

struct _ObjectsProjectClass {
	ObjectsBaseObjectClass parent_class;
};

struct _ObjectsProjectPrivate {
	gint64 _parent_id;
	gchar* _name;
	gchar* _due_date;
	gchar* _color;
	gchar* _emoji;
	ProjectViewStyle _view_style;
	ProjectIconStyle _icon_style;
	gboolean _todoist;
	gboolean _inbox_project;
	gboolean _team_inbox;
	gboolean _is_deleted;
	gboolean _is_archived;
	gboolean _is_favorite;
	gboolean _shared;
	gboolean _collapsed;
	gboolean _show_completed;
	gint _sort_order;
	gint _child_order;
	gchar* _view_id;
	gchar* _parent_id_string;
	gchar* _short_name;
	GeeArrayList* _sections;
	GRecMutex __lock__sections;
	GeeArrayList* _items;
	GRecMutex __lock__items;
	GeeArrayList* _subprojects;
	GRecMutex __lock__subprojects;
	ObjectsProject* _parent;
	gint* _project_count;
	gdouble* _percentage;
	GRecMutex __lock_subprojects;
};

struct _Block44Data {
	int _ref_count_;
	ObjectsProject* self;
	gboolean cloud;
};

struct _Block45Data {
	int _ref_count_;
	ObjectsProject* self;
	WidgetsLoadingButton* loading_button;
};

struct _Block46Data {
	int _ref_count_;
	ObjectsProject* self;
	ObjectsSection* section;
};

struct _Block47Data {
	int _ref_count_;
	ObjectsProject* self;
	GraniteMessageDialog* message_dialog;
	WidgetsLoadingButton* remove_button;
};

static gint ObjectsProject_private_offset;
static gpointer objects_project_parent_class = NULL;
extern ServicesDatabase* planner_database;
extern ServicesTodoist* planner_todoist;
extern ServicesEventBus* planner_event_bus;

GType objects_base_object_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsBaseObject, g_object_unref)
GType objects_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsProject, g_object_unref)
GType project_view_style_get_type (void) G_GNUC_CONST;
GType project_icon_style_get_type (void) G_GNUC_CONST;
GType objects_section_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsSection, g_object_unref)
GType objects_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsItem, g_object_unref)
gchar* objects_base_object_get_add_json (ObjectsBaseObject* self,
                                         const gchar* temp_id,
                                         const gchar* uuid);
gchar* objects_base_object_get_update_json (ObjectsBaseObject* self,
                                            const gchar* uuid,
                                            const gchar* temp_id);
ObjectsProject* objects_project_new_from_json (JsonNode* node);
ObjectsProject* objects_project_construct_from_json (GType object_type,
                                                     JsonNode* node);
ObjectsBaseObject* objects_base_object_new (void);
ObjectsBaseObject* objects_base_object_construct (GType object_type);
void objects_base_object_set_id (ObjectsBaseObject* self,
                                 gint64 value);
void objects_project_update_from_json (ObjectsProject* self,
                                       JsonNode* node);
void objects_project_set_todoist (ObjectsProject* self,
                                  gboolean value);
void objects_project_set_name (ObjectsProject* self,
                               const gchar* value);
void objects_project_set_color (ObjectsProject* self,
                                const gchar* value);
void objects_project_set_is_deleted (ObjectsProject* self,
                                     gboolean value);
void objects_project_set_is_archived (ObjectsProject* self,
                                      gboolean value);
void objects_project_set_is_favorite (ObjectsProject* self,
                                      gboolean value);
void objects_project_set_child_order (ObjectsProject* self,
                                      gint value);
void objects_project_set_parent_id (ObjectsProject* self,
                                    gint64 value);
#define CONSTANTS_INACTIVE 0
void objects_project_set_team_inbox (ObjectsProject* self,
                                     gboolean value);
void objects_project_set_inbox_project (ObjectsProject* self,
                                        gboolean value);
void objects_project_set_shared (ObjectsProject* self,
                                 gboolean value);
void objects_project_set_view_style (ObjectsProject* self,
                                     ProjectViewStyle value);
void objects_project_update (ObjectsProject* self,
                             gboolean cloud);
static Block44Data* block44_data_ref (Block44Data* _data44_);
static void block44_data_unref (void * _userdata_);
guint objects_base_object_get_update_timeout_id (ObjectsBaseObject* self);
#define CONSTANTS_UPDATE_TIMEOUT 1500
static gboolean __lambda158_ (Block44Data* _data44_);
void objects_base_object_set_update_timeout_id (ObjectsBaseObject* self,
                                                guint value);
GType services_database_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesDatabase, g_object_unref)
void services_database_update_project (ServicesDatabase* self,
                                       ObjectsProject* project);
gboolean objects_project_get_todoist (ObjectsProject* self);
GType services_todoist_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesTodoist, g_object_unref)
void services_todoist_update (ServicesTodoist* self,
                              ObjectsBaseObject* object,
                              GAsyncReadyCallback _callback_,
                              gpointer _user_data_);
gboolean services_todoist_update_finish (ServicesTodoist* self,
                                         GAsyncResult* _res_);
static void ___lambda159_ (ObjectsProject* self,
                    GObject* obj,
                    GAsyncResult* res);
static void ____lambda159__gasync_ready_callback (GObject* source_object,
                                           GAsyncResult* res,
                                           gpointer self);
static gboolean ___lambda158__gsource_func (gpointer self);
GType widgets_loading_button_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsLoadingButton, g_object_unref)
void objects_project_update_async (ObjectsProject* self,
                                   WidgetsLoadingButton* loading_button);
static Block45Data* block45_data_ref (Block45Data* _data45_);
static void block45_data_unref (void * _userdata_);
void widgets_loading_button_set_is_loading (WidgetsLoadingButton* self,
                                            gboolean value);
static void ___lambda160_ (Block45Data* _data45_,
                    GObject* obj,
                    GAsyncResult* res);
static void ____lambda160__gasync_ready_callback (GObject* source_object,
                                           GAsyncResult* res,
                                           gpointer self);
ObjectsProject* objects_project_add_subproject_if_not_exists (ObjectsProject* self,
                                                              ObjectsProject* new_project);
GeeArrayList* objects_project_get_subprojects (ObjectsProject* self);
ObjectsProject* objects_project_get_subproject (ObjectsProject* self,
                                                gint64 id);
gint64 objects_base_object_get_id (ObjectsBaseObject* self);
void objects_project_set_parent (ObjectsProject* self,
                                 ObjectsProject* project);
gboolean services_database_insert_project (ServicesDatabase* self,
                                           ObjectsProject* project);
ObjectsSection* objects_project_add_section_if_not_exists (ObjectsProject* self,
                                                           ObjectsSection* new_section);
ObjectsSection* objects_project_get_section (ObjectsProject* self,
                                             gint64 id);
void objects_section_set_project (ObjectsSection* self,
                                  ObjectsProject* project);
void objects_project_add_section (ObjectsProject* self,
                                  ObjectsSection* section);
gboolean services_database_insert_section (ServicesDatabase* self,
                                           ObjectsSection* section);
GeeArrayList* objects_project_get_sections (ObjectsProject* self);
static Block46Data* block46_data_ref (Block46Data* _data46_);
static void block46_data_unref (void * _userdata_);
static void __lambda14_ (Block46Data* _data46_);
static void ___lambda14__objects_base_object_deleted (ObjectsBaseObject* _sender,
                                               gpointer self);
ObjectsItem* objects_project_add_item_if_not_exists (ObjectsProject* self,
                                                     ObjectsItem* new_item,
                                                     gboolean insert);
ObjectsItem* objects_project_get_item (ObjectsProject* self,
                                       gint64 id);
void objects_item_set_project (ObjectsItem* self,
                               ObjectsProject* project);
void objects_project_add_item (ObjectsProject* self,
                               ObjectsItem* item);
gboolean services_database_insert_item (ServicesDatabase* self,
                                        ObjectsItem* item,
                                        gboolean insert);
GeeArrayList* objects_project_get_items (ObjectsProject* self);
static gchar* objects_project_real_get_add_json (ObjectsBaseObject* base,
                                          const gchar* temp_id,
                                          const gchar* uuid);
static gchar* objects_project_real_get_update_json (ObjectsBaseObject* base,
                                             const gchar* uuid,
                                             const gchar* temp_id);
GType util_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Util, g_object_unref)
Util* util_get_default (void);
gchar* util_get_encode_text (Util* self,
                             const gchar* text);
const gchar* objects_project_get_name (ObjectsProject* self);
const gchar* objects_project_get_color (ObjectsProject* self);
gboolean objects_project_get_collapsed (ObjectsProject* self);
gboolean objects_project_get_is_favorite (ObjectsProject* self);
static void _vala_JsonNode_free (JsonNode* self);
void objects_project_delete (ObjectsProject* self,
                             gboolean confirm);
static Block47Data* block47_data_ref (Block47Data* _data47_);
static void block47_data_unref (void * _userdata_);
void services_todoist_delete (ServicesTodoist* self,
                              ObjectsBaseObject* object,
                              GAsyncReadyCallback _callback_,
                              gpointer _user_data_);
gboolean services_todoist_delete_finish (ServicesTodoist* self,
                                         GAsyncResult* _res_);
static void ____lambda161_ (ObjectsProject* self,
                     GObject* obj,
                     GAsyncResult* res);
void services_database_delete_project (ServicesDatabase* self,
                                       ObjectsProject* project);
static void _____lambda161__gasync_ready_callback (GObject* source_object,
                                            GAsyncResult* res,
                                            gpointer self);
gchar* util_get_dialog_text (Util* self,
                             const gchar* text);
const gchar* objects_project_get_short_name (ObjectsProject* self);
GType loading_button_type_get_type (void) G_GNUC_CONST;
WidgetsLoadingButton* widgets_loading_button_new (LoadingButtonType loading_type,
                                                  const gchar* text);
WidgetsLoadingButton* widgets_loading_button_construct (GType object_type,
                                                        LoadingButtonType loading_type,
                                                        const gchar* text);
static void ____lambda162_ (Block47Data* _data47_,
                     GObject* obj,
                     GAsyncResult* res);
static void _____lambda162__gasync_ready_callback (GObject* source_object,
                                            GAsyncResult* res,
                                            gpointer self);
gchar* objects_project_to_string (ObjectsProject* self);
gboolean objects_project_get_inbox_project (ObjectsProject* self);
gboolean objects_project_get_team_inbox (ObjectsProject* self);
gint objects_project_get_child_order (ObjectsProject* self);
gboolean objects_project_get_is_deleted (ObjectsProject* self);
gboolean objects_project_get_is_archived (ObjectsProject* self);
gboolean objects_project_get_shared (ObjectsProject* self);
ProjectViewStyle objects_project_get_view_style (ObjectsProject* self);
gchar* project_view_style_to_string (ProjectViewStyle self);
gboolean objects_project_get_show_completed (ObjectsProject* self);
gint objects_project_get_sort_order (ObjectsProject* self);
gint64 objects_project_get_parent_id (ObjectsProject* self);
static gint objects_project_update_project_count (ObjectsProject* self);
GeeArrayList* services_database_get_items_by_project (ServicesDatabase* self,
                                                      ObjectsProject* project);
gboolean objects_item_get_checked (ObjectsItem* self);
gdouble objects_project_update_percentage (ObjectsProject* self);
ObjectsProject* objects_project_new (void);
ObjectsProject* objects_project_construct (GType object_type);
const gchar* objects_project_get_due_date (ObjectsProject* self);
void objects_project_set_due_date (ObjectsProject* self,
                                   const gchar* value);
const gchar* objects_project_get_emoji (ObjectsProject* self);
void objects_project_set_emoji (ObjectsProject* self,
                                const gchar* value);
ProjectIconStyle objects_project_get_icon_style (ObjectsProject* self);
void objects_project_set_icon_style (ObjectsProject* self,
                                     ProjectIconStyle value);
void objects_project_set_collapsed (ObjectsProject* self,
                                    gboolean value);
void objects_project_set_show_completed (ObjectsProject* self,
                                         gboolean value);
void objects_project_set_sort_order (ObjectsProject* self,
                                     gint value);
const gchar* objects_project_get_view_id (ObjectsProject* self);
const gchar* objects_base_object_get_id_string (ObjectsBaseObject* self);
const gchar* objects_project_get_parent_id_string (ObjectsProject* self);
gchar* util_get_short_name (Util* self,
                            const gchar* name,
                            gint size);
#define CONSTANTS_SHORT_NAME_SIZE 20
GeeArrayList* services_database_get_sections_by_project (ServicesDatabase* self,
                                                         ObjectsProject* project);
GeeArrayList* services_database_get_item_by_baseobject (ServicesDatabase* self,
                                                        ObjectsBaseObject* object);
GeeArrayList* services_database_get_subprojects (ServicesDatabase* self,
                                                 ObjectsProject* p);
ObjectsProject* objects_project_get_parent (ObjectsProject* self);
ObjectsProject* services_database_get_project (ServicesDatabase* self,
                                               gint64 id);
gint objects_project_get_project_count (ObjectsProject* self);
static gint* _int_dup (gint* self);
void objects_project_set_project_count (ObjectsProject* self,
                                        gint value);
gdouble objects_project_get_percentage (ObjectsProject* self);
static gdouble* _double_dup (gdouble* self);
static GObject * objects_project_constructor (GType type,
                                       guint n_construct_properties,
                                       GObjectConstructParam * construct_properties);
static void _objects_project___lambda163_ (ObjectsProject* self);
static void __objects_project___lambda163__objects_base_object_deleted (ObjectsBaseObject* _sender,
                                                                 gpointer self);
GType services_event_bus_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesEventBus, g_object_unref)
static void _objects_project___lambda164_ (ObjectsProject* self,
                                    ObjectsItem* item);
gint64 objects_item_get_project_id (ObjectsItem* self);
static void __objects_project___lambda164__services_event_bus_checked_toggled (ServicesEventBus* _sender,
                                                                        ObjectsItem* item,
                                                                        gboolean old_checked,
                                                                        gpointer self);
static void _objects_project___lambda165_ (ObjectsProject* self,
                                    ObjectsItem* item);
static void __objects_project___lambda165__services_database_item_deleted (ServicesDatabase* _sender,
                                                                    ObjectsItem* item,
                                                                    gpointer self);
static void _objects_project___lambda166_ (ObjectsProject* self,
                                    ObjectsItem* item);
static void __objects_project___lambda166__services_database_item_added (ServicesDatabase* _sender,
                                                                  ObjectsItem* item,
                                                                  gboolean insert,
                                                                  gpointer self);
static void _objects_project___lambda167_ (ObjectsProject* self,
                                    ObjectsItem* item,
                                    gint64 old_project_id,
                                    gint64 section_id,
                                    gboolean insert);
static void __objects_project___lambda167__services_event_bus_item_moved (ServicesEventBus* _sender,
                                                                   ObjectsItem* item,
                                                                   gint64 old_project_id,
                                                                   gint64 old_section_id,
                                                                   gboolean insert,
                                                                   gpointer self);
static void objects_project_finalize (GObject * obj);
static GType objects_project_get_type_once (void);
static void _vala_objects_project_get_property (GObject * object,
                                         guint property_id,
                                         GValue * value,
                                         GParamSpec * pspec);
static void _vala_objects_project_set_property (GObject * object,
                                         guint property_id,
                                         const GValue * value,
                                         GParamSpec * pspec);

static inline gpointer
objects_project_get_instance_private (ObjectsProject* self)
{
	return G_STRUCT_MEMBER_P (self, ObjectsProject_private_offset);
}

ObjectsProject*
objects_project_construct_from_json (GType object_type,
                                     JsonNode* node)
{
	ObjectsProject * self = NULL;
	JsonObject* _tmp0_;
#line 149 "../src/Objects/Project.vala"
	g_return_val_if_fail (node != NULL, NULL);
#line 149 "../src/Objects/Project.vala"
	self = (ObjectsProject*) objects_base_object_construct (object_type);
#line 150 "../src/Objects/Project.vala"
	_tmp0_ = json_node_get_object (node);
#line 150 "../src/Objects/Project.vala"
	objects_base_object_set_id ((ObjectsBaseObject*) self, json_object_get_int_member (_tmp0_, "id"));
#line 151 "../src/Objects/Project.vala"
	objects_project_update_from_json (self, node);
#line 152 "../src/Objects/Project.vala"
	objects_project_set_todoist (self, TRUE);
#line 149 "../src/Objects/Project.vala"
	return self;
#line 571 "Project.c"
}

ObjectsProject*
objects_project_new_from_json (JsonNode* node)
{
#line 149 "../src/Objects/Project.vala"
	return objects_project_construct_from_json (OBJECTS_TYPE_PROJECT, node);
#line 579 "Project.c"
}

void
objects_project_update_from_json (ObjectsProject* self,
                                  JsonNode* node)
{
	JsonObject* _tmp0_;
	const gchar* _tmp1_;
	JsonObject* _tmp2_;
	JsonObject* _tmp5_;
	JsonObject* _tmp7_;
	JsonObject* _tmp9_;
	JsonObject* _tmp11_;
	JsonObject* _tmp13_;
	gboolean _tmp15_ = FALSE;
	JsonObject* _tmp16_;
	gboolean _tmp19_ = FALSE;
	JsonObject* _tmp20_;
	JsonObject* _tmp23_;
	ProjectViewStyle _tmp24_ = 0;
	JsonObject* _tmp25_;
	const gchar* _tmp26_;
#line 155 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 155 "../src/Objects/Project.vala"
	g_return_if_fail (node != NULL);
#line 156 "../src/Objects/Project.vala"
	_tmp0_ = json_node_get_object (node);
#line 156 "../src/Objects/Project.vala"
	_tmp1_ = json_object_get_string_member (_tmp0_, "name");
#line 156 "../src/Objects/Project.vala"
	objects_project_set_name (self, _tmp1_);
#line 158 "../src/Objects/Project.vala"
	_tmp2_ = json_node_get_object (node);
#line 158 "../src/Objects/Project.vala"
	if (!json_object_get_null_member (_tmp2_, "color")) {
#line 616 "Project.c"
		JsonObject* _tmp3_;
		const gchar* _tmp4_;
#line 159 "../src/Objects/Project.vala"
		_tmp3_ = json_node_get_object (node);
#line 159 "../src/Objects/Project.vala"
		_tmp4_ = json_object_get_string_member (_tmp3_, "color");
#line 159 "../src/Objects/Project.vala"
		objects_project_set_color (self, _tmp4_);
#line 625 "Project.c"
	}
#line 162 "../src/Objects/Project.vala"
	_tmp5_ = json_node_get_object (node);
#line 162 "../src/Objects/Project.vala"
	if (!json_object_get_null_member (_tmp5_, "is_deleted")) {
#line 631 "Project.c"
		JsonObject* _tmp6_;
#line 163 "../src/Objects/Project.vala"
		_tmp6_ = json_node_get_object (node);
#line 163 "../src/Objects/Project.vala"
		objects_project_set_is_deleted (self, json_object_get_boolean_member (_tmp6_, "is_deleted"));
#line 637 "Project.c"
	}
#line 166 "../src/Objects/Project.vala"
	_tmp7_ = json_node_get_object (node);
#line 166 "../src/Objects/Project.vala"
	if (!json_object_get_null_member (_tmp7_, "is_archived")) {
#line 643 "Project.c"
		JsonObject* _tmp8_;
#line 167 "../src/Objects/Project.vala"
		_tmp8_ = json_node_get_object (node);
#line 167 "../src/Objects/Project.vala"
		objects_project_set_is_archived (self, json_object_get_boolean_member (_tmp8_, "is_archived"));
#line 649 "Project.c"
	}
#line 170 "../src/Objects/Project.vala"
	_tmp9_ = json_node_get_object (node);
#line 170 "../src/Objects/Project.vala"
	if (!json_object_get_null_member (_tmp9_, "is_favorite")) {
#line 655 "Project.c"
		JsonObject* _tmp10_;
#line 171 "../src/Objects/Project.vala"
		_tmp10_ = json_node_get_object (node);
#line 171 "../src/Objects/Project.vala"
		objects_project_set_is_favorite (self, json_object_get_boolean_member (_tmp10_, "is_favorite"));
#line 661 "Project.c"
	}
#line 174 "../src/Objects/Project.vala"
	_tmp11_ = json_node_get_object (node);
#line 174 "../src/Objects/Project.vala"
	if (!json_object_get_null_member (_tmp11_, "child_order")) {
#line 667 "Project.c"
		JsonObject* _tmp12_;
#line 175 "../src/Objects/Project.vala"
		_tmp12_ = json_node_get_object (node);
#line 175 "../src/Objects/Project.vala"
		objects_project_set_child_order (self, (gint) ((gint32) json_object_get_int_member (_tmp12_, "child_order")));
#line 673 "Project.c"
	}
#line 178 "../src/Objects/Project.vala"
	_tmp13_ = json_node_get_object (node);
#line 178 "../src/Objects/Project.vala"
	if (!json_object_get_null_member (_tmp13_, "parent_id")) {
#line 679 "Project.c"
		JsonObject* _tmp14_;
#line 179 "../src/Objects/Project.vala"
		_tmp14_ = json_node_get_object (node);
#line 179 "../src/Objects/Project.vala"
		objects_project_set_parent_id (self, json_object_get_int_member (_tmp14_, "parent_id"));
#line 685 "Project.c"
	} else {
#line 181 "../src/Objects/Project.vala"
		objects_project_set_parent_id (self, (gint64) CONSTANTS_INACTIVE);
#line 689 "Project.c"
	}
#line 184 "../src/Objects/Project.vala"
	_tmp16_ = json_node_get_object (node);
#line 184 "../src/Objects/Project.vala"
	if (json_object_has_member (_tmp16_, "team_inbox")) {
#line 695 "Project.c"
		JsonObject* _tmp17_;
#line 184 "../src/Objects/Project.vala"
		_tmp17_ = json_node_get_object (node);
#line 184 "../src/Objects/Project.vala"
		_tmp15_ = !json_object_get_null_member (_tmp17_, "team_inbox");
#line 701 "Project.c"
	} else {
#line 184 "../src/Objects/Project.vala"
		_tmp15_ = FALSE;
#line 705 "Project.c"
	}
#line 184 "../src/Objects/Project.vala"
	if (_tmp15_) {
#line 709 "Project.c"
		JsonObject* _tmp18_;
#line 185 "../src/Objects/Project.vala"
		_tmp18_ = json_node_get_object (node);
#line 185 "../src/Objects/Project.vala"
		objects_project_set_team_inbox (self, json_object_get_boolean_member (_tmp18_, "team_inbox"));
#line 715 "Project.c"
	}
#line 188 "../src/Objects/Project.vala"
	_tmp20_ = json_node_get_object (node);
#line 188 "../src/Objects/Project.vala"
	if (json_object_has_member (_tmp20_, "inbox_project")) {
#line 721 "Project.c"
		JsonObject* _tmp21_;
#line 188 "../src/Objects/Project.vala"
		_tmp21_ = json_node_get_object (node);
#line 188 "../src/Objects/Project.vala"
		_tmp19_ = !json_object_get_null_member (_tmp21_, "inbox_project");
#line 727 "Project.c"
	} else {
#line 188 "../src/Objects/Project.vala"
		_tmp19_ = FALSE;
#line 731 "Project.c"
	}
#line 188 "../src/Objects/Project.vala"
	if (_tmp19_) {
#line 735 "Project.c"
		JsonObject* _tmp22_;
#line 189 "../src/Objects/Project.vala"
		_tmp22_ = json_node_get_object (node);
#line 189 "../src/Objects/Project.vala"
		objects_project_set_inbox_project (self, json_object_get_boolean_member (_tmp22_, "inbox_project"));
#line 741 "Project.c"
	}
#line 192 "../src/Objects/Project.vala"
	_tmp23_ = json_node_get_object (node);
#line 192 "../src/Objects/Project.vala"
	objects_project_set_shared (self, json_object_get_boolean_member (_tmp23_, "shared"));
#line 193 "../src/Objects/Project.vala"
	_tmp25_ = json_node_get_object (node);
#line 193 "../src/Objects/Project.vala"
	_tmp26_ = json_object_get_string_member (_tmp25_, "view_style");
#line 193 "../src/Objects/Project.vala"
	if (g_strcmp0 (_tmp26_, "board") == 0) {
#line 194 "../src/Objects/Project.vala"
		_tmp24_ = PROJECT_VIEW_STYLE_BOARD;
#line 755 "Project.c"
	} else {
#line 194 "../src/Objects/Project.vala"
		_tmp24_ = PROJECT_VIEW_STYLE_LIST;
#line 759 "Project.c"
	}
#line 193 "../src/Objects/Project.vala"
	objects_project_set_view_style (self, _tmp24_);
#line 763 "Project.c"
}

static Block44Data*
block44_data_ref (Block44Data* _data44_)
{
#line 197 "../src/Objects/Project.vala"
	g_atomic_int_inc (&_data44_->_ref_count_);
#line 197 "../src/Objects/Project.vala"
	return _data44_;
#line 773 "Project.c"
}

static void
block44_data_unref (void * _userdata_)
{
	Block44Data* _data44_;
	_data44_ = (Block44Data*) _userdata_;
#line 197 "../src/Objects/Project.vala"
	if (g_atomic_int_dec_and_test (&_data44_->_ref_count_)) {
#line 783 "Project.c"
		ObjectsProject* self;
#line 197 "../src/Objects/Project.vala"
		self = _data44_->self;
#line 197 "../src/Objects/Project.vala"
		_g_object_unref0 (self);
#line 197 "../src/Objects/Project.vala"
		g_slice_free (Block44Data, _data44_);
#line 791 "Project.c"
	}
}

static void
___lambda159_ (ObjectsProject* self,
               GObject* obj,
               GAsyncResult* res)
{
	ServicesTodoist* _tmp0_;
#line 207 "../src/Objects/Project.vala"
	g_return_if_fail (res != NULL);
#line 208 "../src/Objects/Project.vala"
	_tmp0_ = planner_todoist;
#line 208 "../src/Objects/Project.vala"
	services_todoist_update_finish (_tmp0_, res);
#line 807 "Project.c"
}

static void
____lambda159__gasync_ready_callback (GObject* source_object,
                                      GAsyncResult* res,
                                      gpointer self)
{
#line 207 "../src/Objects/Project.vala"
	___lambda159_ ((ObjectsProject*) self, source_object, res);
#line 207 "../src/Objects/Project.vala"
	g_object_unref (self);
#line 819 "Project.c"
}

static gboolean
__lambda158_ (Block44Data* _data44_)
{
	ObjectsProject* self;
	ServicesDatabase* _tmp0_;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp2_;
	gboolean result = FALSE;
#line 202 "../src/Objects/Project.vala"
	self = _data44_->self;
#line 203 "../src/Objects/Project.vala"
	objects_base_object_set_update_timeout_id ((ObjectsBaseObject*) self, (guint) 0);
#line 205 "../src/Objects/Project.vala"
	_tmp0_ = planner_database;
#line 205 "../src/Objects/Project.vala"
	services_database_update_project (_tmp0_, self);
#line 206 "../src/Objects/Project.vala"
	_tmp2_ = self->priv->_todoist;
#line 206 "../src/Objects/Project.vala"
	if (_tmp2_) {
#line 206 "../src/Objects/Project.vala"
		_tmp1_ = _data44_->cloud;
#line 844 "Project.c"
	} else {
#line 206 "../src/Objects/Project.vala"
		_tmp1_ = FALSE;
#line 848 "Project.c"
	}
#line 206 "../src/Objects/Project.vala"
	if (_tmp1_) {
#line 852 "Project.c"
		ServicesTodoist* _tmp3_;
#line 207 "../src/Objects/Project.vala"
		_tmp3_ = planner_todoist;
#line 207 "../src/Objects/Project.vala"
		services_todoist_update (_tmp3_, (ObjectsBaseObject*) self, ____lambda159__gasync_ready_callback, g_object_ref (self));
#line 858 "Project.c"
	}
#line 212 "../src/Objects/Project.vala"
	result = G_SOURCE_REMOVE;
#line 212 "../src/Objects/Project.vala"
	return result;
#line 864 "Project.c"
}

static gboolean
___lambda158__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda158_ (self);
#line 202 "../src/Objects/Project.vala"
	return result;
#line 874 "Project.c"
}

void
objects_project_update (ObjectsProject* self,
                        gboolean cloud)
{
	Block44Data* _data44_;
	guint _tmp0_;
	guint _tmp1_;
#line 197 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 197 "../src/Objects/Project.vala"
	_data44_ = g_slice_new0 (Block44Data);
#line 197 "../src/Objects/Project.vala"
	_data44_->_ref_count_ = 1;
#line 197 "../src/Objects/Project.vala"
	_data44_->self = g_object_ref (self);
#line 197 "../src/Objects/Project.vala"
	_data44_->cloud = cloud;
#line 198 "../src/Objects/Project.vala"
	_tmp0_ = objects_base_object_get_update_timeout_id ((ObjectsBaseObject*) self);
#line 198 "../src/Objects/Project.vala"
	_tmp1_ = _tmp0_;
#line 198 "../src/Objects/Project.vala"
	if (_tmp1_ != ((guint) 0)) {
#line 900 "Project.c"
		guint _tmp2_;
		guint _tmp3_;
#line 199 "../src/Objects/Project.vala"
		_tmp2_ = objects_base_object_get_update_timeout_id ((ObjectsBaseObject*) self);
#line 199 "../src/Objects/Project.vala"
		_tmp3_ = _tmp2_;
#line 199 "../src/Objects/Project.vala"
		g_source_remove (_tmp3_);
#line 909 "Project.c"
	}
#line 202 "../src/Objects/Project.vala"
	objects_base_object_set_update_timeout_id ((ObjectsBaseObject*) self, g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) CONSTANTS_UPDATE_TIMEOUT, ___lambda158__gsource_func, block44_data_ref (_data44_), block44_data_unref));
#line 197 "../src/Objects/Project.vala"
	block44_data_unref (_data44_);
#line 197 "../src/Objects/Project.vala"
	_data44_ = NULL;
#line 917 "Project.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 216 "../src/Objects/Project.vala"
	return self ? g_object_ref (self) : NULL;
#line 925 "Project.c"
}

static Block45Data*
block45_data_ref (Block45Data* _data45_)
{
#line 216 "../src/Objects/Project.vala"
	g_atomic_int_inc (&_data45_->_ref_count_);
#line 216 "../src/Objects/Project.vala"
	return _data45_;
#line 935 "Project.c"
}

static void
block45_data_unref (void * _userdata_)
{
	Block45Data* _data45_;
	_data45_ = (Block45Data*) _userdata_;
#line 216 "../src/Objects/Project.vala"
	if (g_atomic_int_dec_and_test (&_data45_->_ref_count_)) {
#line 945 "Project.c"
		ObjectsProject* self;
#line 216 "../src/Objects/Project.vala"
		self = _data45_->self;
#line 216 "../src/Objects/Project.vala"
		_g_object_unref0 (_data45_->loading_button);
#line 216 "../src/Objects/Project.vala"
		_g_object_unref0 (self);
#line 216 "../src/Objects/Project.vala"
		g_slice_free (Block45Data, _data45_);
#line 955 "Project.c"
	}
}

static void
___lambda160_ (Block45Data* _data45_,
               GObject* obj,
               GAsyncResult* res)
{
	ObjectsProject* self;
	ServicesTodoist* _tmp0_;
#line 223 "../src/Objects/Project.vala"
	self = _data45_->self;
#line 223 "../src/Objects/Project.vala"
	g_return_if_fail (res != NULL);
#line 224 "../src/Objects/Project.vala"
	_tmp0_ = planner_todoist;
#line 224 "../src/Objects/Project.vala"
	services_todoist_update_finish (_tmp0_, res);
#line 225 "../src/Objects/Project.vala"
	if (_data45_->loading_button != NULL) {
#line 226 "../src/Objects/Project.vala"
		widgets_loading_button_set_is_loading (_data45_->loading_button, FALSE);
#line 978 "Project.c"
	}
}

static void
____lambda160__gasync_ready_callback (GObject* source_object,
                                      GAsyncResult* res,
                                      gpointer self)
{
#line 223 "../src/Objects/Project.vala"
	___lambda160_ (self, source_object, res);
#line 223 "../src/Objects/Project.vala"
	block45_data_unref (self);
#line 991 "Project.c"
}

void
objects_project_update_async (ObjectsProject* self,
                              WidgetsLoadingButton* loading_button)
{
	Block45Data* _data45_;
	WidgetsLoadingButton* _tmp0_;
	ServicesDatabase* _tmp1_;
	gboolean _tmp2_;
#line 216 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 216 "../src/Objects/Project.vala"
	_data45_ = g_slice_new0 (Block45Data);
#line 216 "../src/Objects/Project.vala"
	_data45_->_ref_count_ = 1;
#line 216 "../src/Objects/Project.vala"
	_data45_->self = g_object_ref (self);
#line 216 "../src/Objects/Project.vala"
	_tmp0_ = _g_object_ref0 (loading_button);
#line 216 "../src/Objects/Project.vala"
	_g_object_unref0 (_data45_->loading_button);
#line 216 "../src/Objects/Project.vala"
	_data45_->loading_button = _tmp0_;
#line 217 "../src/Objects/Project.vala"
	if (_data45_->loading_button != NULL) {
#line 218 "../src/Objects/Project.vala"
		widgets_loading_button_set_is_loading (_data45_->loading_button, TRUE);
#line 1020 "Project.c"
	}
#line 221 "../src/Objects/Project.vala"
	_tmp1_ = planner_database;
#line 221 "../src/Objects/Project.vala"
	services_database_update_project (_tmp1_, self);
#line 222 "../src/Objects/Project.vala"
	_tmp2_ = self->priv->_todoist;
#line 222 "../src/Objects/Project.vala"
	if (_tmp2_) {
#line 1030 "Project.c"
		ServicesTodoist* _tmp3_;
#line 223 "../src/Objects/Project.vala"
		_tmp3_ = planner_todoist;
#line 223 "../src/Objects/Project.vala"
		services_todoist_update (_tmp3_, (ObjectsBaseObject*) self, ____lambda160__gasync_ready_callback, block45_data_ref (_data45_));
#line 1036 "Project.c"
	}
#line 216 "../src/Objects/Project.vala"
	block45_data_unref (_data45_);
#line 216 "../src/Objects/Project.vala"
	_data45_ = NULL;
#line 1042 "Project.c"
}

ObjectsProject*
objects_project_add_subproject_if_not_exists (ObjectsProject* self,
                                              ObjectsProject* new_project)
{
	ObjectsProject* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsProject* result = NULL;
#line 232 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 232 "../src/Objects/Project.vala"
	g_return_val_if_fail (new_project != NULL, NULL);
#line 233 "../src/Objects/Project.vala"
	return_value = NULL;
#line 1058 "Project.c"
	{
		GeeArrayList* _tmp0_;
		GeeArrayList* _tmp1_;
#line 234 "../src/Objects/Project.vala"
		_tmp0_ = objects_project_get_subprojects (self);
#line 234 "../src/Objects/Project.vala"
		_tmp1_ = _tmp0_;
#line 234 "../src/Objects/Project.vala"
		g_rec_mutex_lock (&self->priv->__lock_subprojects);
#line 1068 "Project.c"
		{
			gint64 _tmp2_;
			gint64 _tmp3_;
			ObjectsProject* _tmp4_;
			ObjectsProject* _tmp5_;
			ObjectsProject* _tmp8_;
			ObjectsProject* _tmp9_;
#line 235 "../src/Objects/Project.vala"
			_tmp2_ = objects_base_object_get_id ((ObjectsBaseObject*) new_project);
#line 235 "../src/Objects/Project.vala"
			_tmp3_ = _tmp2_;
#line 235 "../src/Objects/Project.vala"
			_tmp4_ = objects_project_get_subproject (self, _tmp3_);
#line 235 "../src/Objects/Project.vala"
			_g_object_unref0 (return_value);
#line 235 "../src/Objects/Project.vala"
			return_value = _tmp4_;
#line 236 "../src/Objects/Project.vala"
			_tmp5_ = return_value;
#line 236 "../src/Objects/Project.vala"
			if (_tmp5_ == NULL) {
#line 1090 "Project.c"
				ServicesDatabase* _tmp6_;
				ObjectsProject* _tmp7_;
#line 237 "../src/Objects/Project.vala"
				objects_project_set_parent (new_project, self);
#line 238 "../src/Objects/Project.vala"
				_tmp6_ = planner_database;
#line 238 "../src/Objects/Project.vala"
				services_database_insert_project (_tmp6_, new_project);
#line 239 "../src/Objects/Project.vala"
				_tmp7_ = _g_object_ref0 (new_project);
#line 239 "../src/Objects/Project.vala"
				_g_object_unref0 (return_value);
#line 239 "../src/Objects/Project.vala"
				return_value = _tmp7_;
#line 1105 "Project.c"
			}
#line 241 "../src/Objects/Project.vala"
			_tmp8_ = return_value;
#line 241 "../src/Objects/Project.vala"
			_tmp9_ = _g_object_ref0 (_tmp8_);
#line 241 "../src/Objects/Project.vala"
			result = _tmp9_;
#line 1113 "Project.c"
			{
				GeeArrayList* _tmp10_;
				GeeArrayList* _tmp11_;
#line 234 "../src/Objects/Project.vala"
				_tmp10_ = objects_project_get_subprojects (self);
#line 234 "../src/Objects/Project.vala"
				_tmp11_ = _tmp10_;
#line 234 "../src/Objects/Project.vala"
				g_rec_mutex_unlock (&self->priv->__lock_subprojects);
#line 1123 "Project.c"
			}
#line 241 "../src/Objects/Project.vala"
			_g_object_unref0 (return_value);
#line 241 "../src/Objects/Project.vala"
			return result;
#line 1129 "Project.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp12_;
			GeeArrayList* _tmp13_;
#line 234 "../src/Objects/Project.vala"
			_tmp12_ = objects_project_get_subprojects (self);
#line 234 "../src/Objects/Project.vala"
			_tmp13_ = _tmp12_;
#line 234 "../src/Objects/Project.vala"
			g_rec_mutex_unlock (&self->priv->__lock_subprojects);
#line 1141 "Project.c"
		}
#line 234 "../src/Objects/Project.vala"
		_g_object_unref0 (return_value);
#line 234 "../src/Objects/Project.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 234 "../src/Objects/Project.vala"
		g_clear_error (&_inner_error0_);
#line 234 "../src/Objects/Project.vala"
		return NULL;
#line 1151 "Project.c"
	}
#line 232 "../src/Objects/Project.vala"
	_g_object_unref0 (return_value);
#line 1155 "Project.c"
}

ObjectsProject*
objects_project_get_subproject (ObjectsProject* self,
                                gint64 id)
{
	ObjectsProject* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsProject* result = NULL;
#line 245 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 246 "../src/Objects/Project.vala"
	return_value = NULL;
#line 1169 "Project.c"
	{
		GeeArrayList* _tmp0_;
#line 247 "../src/Objects/Project.vala"
		_tmp0_ = self->priv->_subprojects;
#line 247 "../src/Objects/Project.vala"
		g_rec_mutex_lock (&self->priv->__lock__subprojects);
#line 1176 "Project.c"
		{
			{
				GeeArrayList* _project_list = NULL;
				GeeArrayList* _tmp1_;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				gint _project_size = 0;
				GeeArrayList* _tmp4_;
				gint _tmp5_;
				gint _tmp6_;
				gint _project_index = 0;
#line 248 "../src/Objects/Project.vala"
				_tmp1_ = objects_project_get_subprojects (self);
#line 248 "../src/Objects/Project.vala"
				_tmp2_ = _tmp1_;
#line 248 "../src/Objects/Project.vala"
				_tmp3_ = _g_object_ref0 (_tmp2_);
#line 248 "../src/Objects/Project.vala"
				_project_list = _tmp3_;
#line 248 "../src/Objects/Project.vala"
				_tmp4_ = _project_list;
#line 248 "../src/Objects/Project.vala"
				_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 248 "../src/Objects/Project.vala"
				_tmp6_ = _tmp5_;
#line 248 "../src/Objects/Project.vala"
				_project_size = _tmp6_;
#line 248 "../src/Objects/Project.vala"
				_project_index = -1;
#line 248 "../src/Objects/Project.vala"
				while (TRUE) {
#line 1208 "Project.c"
					gint _tmp7_;
					gint _tmp8_;
					ObjectsProject* project = NULL;
					GeeArrayList* _tmp9_;
					gpointer _tmp10_;
					ObjectsProject* _tmp11_;
					gint64 _tmp12_;
					gint64 _tmp13_;
#line 248 "../src/Objects/Project.vala"
					_project_index = _project_index + 1;
#line 248 "../src/Objects/Project.vala"
					_tmp7_ = _project_index;
#line 248 "../src/Objects/Project.vala"
					_tmp8_ = _project_size;
#line 248 "../src/Objects/Project.vala"
					if (!(_tmp7_ < _tmp8_)) {
#line 248 "../src/Objects/Project.vala"
						break;
#line 1227 "Project.c"
					}
#line 248 "../src/Objects/Project.vala"
					_tmp9_ = _project_list;
#line 248 "../src/Objects/Project.vala"
					_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _project_index);
#line 248 "../src/Objects/Project.vala"
					project = (ObjectsProject*) _tmp10_;
#line 249 "../src/Objects/Project.vala"
					_tmp11_ = project;
#line 249 "../src/Objects/Project.vala"
					_tmp12_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp11_);
#line 249 "../src/Objects/Project.vala"
					_tmp13_ = _tmp12_;
#line 249 "../src/Objects/Project.vala"
					if (_tmp13_ == id) {
#line 1243 "Project.c"
						ObjectsProject* _tmp14_;
						ObjectsProject* _tmp15_;
#line 250 "../src/Objects/Project.vala"
						_tmp14_ = project;
#line 250 "../src/Objects/Project.vala"
						_tmp15_ = _g_object_ref0 (_tmp14_);
#line 250 "../src/Objects/Project.vala"
						_g_object_unref0 (return_value);
#line 250 "../src/Objects/Project.vala"
						return_value = _tmp15_;
#line 251 "../src/Objects/Project.vala"
						_g_object_unref0 (project);
#line 251 "../src/Objects/Project.vala"
						break;
#line 1258 "Project.c"
					}
#line 248 "../src/Objects/Project.vala"
					_g_object_unref0 (project);
#line 1262 "Project.c"
				}
#line 248 "../src/Objects/Project.vala"
				_g_object_unref0 (_project_list);
#line 1266 "Project.c"
			}
		}
		__finally0:
		{
			GeeArrayList* _tmp16_;
#line 247 "../src/Objects/Project.vala"
			_tmp16_ = self->priv->_subprojects;
#line 247 "../src/Objects/Project.vala"
			g_rec_mutex_unlock (&self->priv->__lock__subprojects);
#line 1276 "Project.c"
		}
#line 247 "../src/Objects/Project.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 247 "../src/Objects/Project.vala"
			_g_object_unref0 (return_value);
#line 247 "../src/Objects/Project.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 247 "../src/Objects/Project.vala"
			g_clear_error (&_inner_error0_);
#line 247 "../src/Objects/Project.vala"
			return NULL;
#line 1288 "Project.c"
		}
	}
#line 255 "../src/Objects/Project.vala"
	result = return_value;
#line 255 "../src/Objects/Project.vala"
	return result;
#line 1295 "Project.c"
}

void
objects_project_set_parent (ObjectsProject* self,
                            ObjectsProject* project)
{
	ObjectsProject* _tmp0_;
#line 258 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 258 "../src/Objects/Project.vala"
	g_return_if_fail (project != NULL);
#line 259 "../src/Objects/Project.vala"
	_tmp0_ = _g_object_ref0 (project);
#line 259 "../src/Objects/Project.vala"
	_g_object_unref0 (self->priv->_parent);
#line 259 "../src/Objects/Project.vala"
	self->priv->_parent = _tmp0_;
#line 1313 "Project.c"
}

ObjectsSection*
objects_project_add_section_if_not_exists (ObjectsProject* self,
                                           ObjectsSection* new_section)
{
	ObjectsSection* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsSection* result = NULL;
#line 262 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 262 "../src/Objects/Project.vala"
	g_return_val_if_fail (new_section != NULL, NULL);
#line 263 "../src/Objects/Project.vala"
	return_value = NULL;
#line 1329 "Project.c"
	{
		GeeArrayList* _tmp0_;
#line 264 "../src/Objects/Project.vala"
		_tmp0_ = self->priv->_sections;
#line 264 "../src/Objects/Project.vala"
		g_rec_mutex_lock (&self->priv->__lock__sections);
#line 1336 "Project.c"
		{
			gint64 _tmp1_;
			gint64 _tmp2_;
			ObjectsSection* _tmp3_;
			ObjectsSection* _tmp4_;
			ObjectsSection* _tmp7_;
			ObjectsSection* _tmp8_;
#line 265 "../src/Objects/Project.vala"
			_tmp1_ = objects_base_object_get_id ((ObjectsBaseObject*) new_section);
#line 265 "../src/Objects/Project.vala"
			_tmp2_ = _tmp1_;
#line 265 "../src/Objects/Project.vala"
			_tmp3_ = objects_project_get_section (self, _tmp2_);
#line 265 "../src/Objects/Project.vala"
			_g_object_unref0 (return_value);
#line 265 "../src/Objects/Project.vala"
			return_value = _tmp3_;
#line 266 "../src/Objects/Project.vala"
			_tmp4_ = return_value;
#line 266 "../src/Objects/Project.vala"
			if (_tmp4_ == NULL) {
#line 1358 "Project.c"
				ServicesDatabase* _tmp5_;
				ObjectsSection* _tmp6_;
#line 267 "../src/Objects/Project.vala"
				objects_section_set_project (new_section, self);
#line 268 "../src/Objects/Project.vala"
				objects_project_add_section (self, new_section);
#line 269 "../src/Objects/Project.vala"
				_tmp5_ = planner_database;
#line 269 "../src/Objects/Project.vala"
				services_database_insert_section (_tmp5_, new_section);
#line 270 "../src/Objects/Project.vala"
				_tmp6_ = _g_object_ref0 (new_section);
#line 270 "../src/Objects/Project.vala"
				_g_object_unref0 (return_value);
#line 270 "../src/Objects/Project.vala"
				return_value = _tmp6_;
#line 1375 "Project.c"
			}
#line 272 "../src/Objects/Project.vala"
			_tmp7_ = return_value;
#line 272 "../src/Objects/Project.vala"
			_tmp8_ = _g_object_ref0 (_tmp7_);
#line 272 "../src/Objects/Project.vala"
			result = _tmp8_;
#line 1383 "Project.c"
			{
				GeeArrayList* _tmp9_;
#line 264 "../src/Objects/Project.vala"
				_tmp9_ = self->priv->_sections;
#line 264 "../src/Objects/Project.vala"
				g_rec_mutex_unlock (&self->priv->__lock__sections);
#line 1390 "Project.c"
			}
#line 272 "../src/Objects/Project.vala"
			_g_object_unref0 (return_value);
#line 272 "../src/Objects/Project.vala"
			return result;
#line 1396 "Project.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp10_;
#line 264 "../src/Objects/Project.vala"
			_tmp10_ = self->priv->_sections;
#line 264 "../src/Objects/Project.vala"
			g_rec_mutex_unlock (&self->priv->__lock__sections);
#line 1405 "Project.c"
		}
#line 264 "../src/Objects/Project.vala"
		_g_object_unref0 (return_value);
#line 264 "../src/Objects/Project.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 264 "../src/Objects/Project.vala"
		g_clear_error (&_inner_error0_);
#line 264 "../src/Objects/Project.vala"
		return NULL;
#line 1415 "Project.c"
	}
#line 262 "../src/Objects/Project.vala"
	_g_object_unref0 (return_value);
#line 1419 "Project.c"
}

ObjectsSection*
objects_project_get_section (ObjectsProject* self,
                             gint64 id)
{
	ObjectsSection* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsSection* result = NULL;
#line 276 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 277 "../src/Objects/Project.vala"
	return_value = NULL;
#line 1433 "Project.c"
	{
		GeeArrayList* _tmp0_;
#line 278 "../src/Objects/Project.vala"
		_tmp0_ = self->priv->_sections;
#line 278 "../src/Objects/Project.vala"
		g_rec_mutex_lock (&self->priv->__lock__sections);
#line 1440 "Project.c"
		{
			{
				GeeArrayList* _section_list = NULL;
				GeeArrayList* _tmp1_;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				gint _section_size = 0;
				GeeArrayList* _tmp4_;
				gint _tmp5_;
				gint _tmp6_;
				gint _section_index = 0;
#line 279 "../src/Objects/Project.vala"
				_tmp1_ = objects_project_get_sections (self);
#line 279 "../src/Objects/Project.vala"
				_tmp2_ = _tmp1_;
#line 279 "../src/Objects/Project.vala"
				_tmp3_ = _g_object_ref0 (_tmp2_);
#line 279 "../src/Objects/Project.vala"
				_section_list = _tmp3_;
#line 279 "../src/Objects/Project.vala"
				_tmp4_ = _section_list;
#line 279 "../src/Objects/Project.vala"
				_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 279 "../src/Objects/Project.vala"
				_tmp6_ = _tmp5_;
#line 279 "../src/Objects/Project.vala"
				_section_size = _tmp6_;
#line 279 "../src/Objects/Project.vala"
				_section_index = -1;
#line 279 "../src/Objects/Project.vala"
				while (TRUE) {
#line 1472 "Project.c"
					gint _tmp7_;
					gint _tmp8_;
					ObjectsSection* section = NULL;
					GeeArrayList* _tmp9_;
					gpointer _tmp10_;
					ObjectsSection* _tmp11_;
					gint64 _tmp12_;
					gint64 _tmp13_;
#line 279 "../src/Objects/Project.vala"
					_section_index = _section_index + 1;
#line 279 "../src/Objects/Project.vala"
					_tmp7_ = _section_index;
#line 279 "../src/Objects/Project.vala"
					_tmp8_ = _section_size;
#line 279 "../src/Objects/Project.vala"
					if (!(_tmp7_ < _tmp8_)) {
#line 279 "../src/Objects/Project.vala"
						break;
#line 1491 "Project.c"
					}
#line 279 "../src/Objects/Project.vala"
					_tmp9_ = _section_list;
#line 279 "../src/Objects/Project.vala"
					_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _section_index);
#line 279 "../src/Objects/Project.vala"
					section = (ObjectsSection*) _tmp10_;
#line 280 "../src/Objects/Project.vala"
					_tmp11_ = section;
#line 280 "../src/Objects/Project.vala"
					_tmp12_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp11_);
#line 280 "../src/Objects/Project.vala"
					_tmp13_ = _tmp12_;
#line 280 "../src/Objects/Project.vala"
					if (_tmp13_ == id) {
#line 1507 "Project.c"
						ObjectsSection* _tmp14_;
						ObjectsSection* _tmp15_;
#line 281 "../src/Objects/Project.vala"
						_tmp14_ = section;
#line 281 "../src/Objects/Project.vala"
						_tmp15_ = _g_object_ref0 (_tmp14_);
#line 281 "../src/Objects/Project.vala"
						_g_object_unref0 (return_value);
#line 281 "../src/Objects/Project.vala"
						return_value = _tmp15_;
#line 282 "../src/Objects/Project.vala"
						_g_object_unref0 (section);
#line 282 "../src/Objects/Project.vala"
						break;
#line 1522 "Project.c"
					}
#line 279 "../src/Objects/Project.vala"
					_g_object_unref0 (section);
#line 1526 "Project.c"
				}
#line 279 "../src/Objects/Project.vala"
				_g_object_unref0 (_section_list);
#line 1530 "Project.c"
			}
		}
		__finally0:
		{
			GeeArrayList* _tmp16_;
#line 278 "../src/Objects/Project.vala"
			_tmp16_ = self->priv->_sections;
#line 278 "../src/Objects/Project.vala"
			g_rec_mutex_unlock (&self->priv->__lock__sections);
#line 1540 "Project.c"
		}
#line 278 "../src/Objects/Project.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 278 "../src/Objects/Project.vala"
			_g_object_unref0 (return_value);
#line 278 "../src/Objects/Project.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 278 "../src/Objects/Project.vala"
			g_clear_error (&_inner_error0_);
#line 278 "../src/Objects/Project.vala"
			return NULL;
#line 1552 "Project.c"
		}
	}
#line 286 "../src/Objects/Project.vala"
	result = return_value;
#line 286 "../src/Objects/Project.vala"
	return result;
#line 1559 "Project.c"
}

static Block46Data*
block46_data_ref (Block46Data* _data46_)
{
#line 289 "../src/Objects/Project.vala"
	g_atomic_int_inc (&_data46_->_ref_count_);
#line 289 "../src/Objects/Project.vala"
	return _data46_;
#line 1569 "Project.c"
}

static void
block46_data_unref (void * _userdata_)
{
	Block46Data* _data46_;
	_data46_ = (Block46Data*) _userdata_;
#line 289 "../src/Objects/Project.vala"
	if (g_atomic_int_dec_and_test (&_data46_->_ref_count_)) {
#line 1579 "Project.c"
		ObjectsProject* self;
#line 289 "../src/Objects/Project.vala"
		self = _data46_->self;
#line 289 "../src/Objects/Project.vala"
		_g_object_unref0 (_data46_->section);
#line 289 "../src/Objects/Project.vala"
		_g_object_unref0 (self);
#line 289 "../src/Objects/Project.vala"
		g_slice_free (Block46Data, _data46_);
#line 1589 "Project.c"
	}
}

static void
__lambda14_ (Block46Data* _data46_)
{
	ObjectsProject* self;
	GeeArrayList* _tmp0_;
#line 291 "../src/Objects/Project.vala"
	self = _data46_->self;
#line 292 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_sections;
#line 292 "../src/Objects/Project.vala"
	gee_abstract_collection_remove ((GeeAbstractCollection*) _tmp0_, _data46_->section);
#line 1604 "Project.c"
}

static void
___lambda14__objects_base_object_deleted (ObjectsBaseObject* _sender,
                                          gpointer self)
{
#line 291 "../src/Objects/Project.vala"
	__lambda14_ (self);
#line 1613 "Project.c"
}

void
objects_project_add_section (ObjectsProject* self,
                             ObjectsSection* section)
{
	Block46Data* _data46_;
	ObjectsSection* _tmp0_;
	GeeArrayList* _tmp1_;
#line 289 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 289 "../src/Objects/Project.vala"
	g_return_if_fail (section != NULL);
#line 289 "../src/Objects/Project.vala"
	_data46_ = g_slice_new0 (Block46Data);
#line 289 "../src/Objects/Project.vala"
	_data46_->_ref_count_ = 1;
#line 289 "../src/Objects/Project.vala"
	_data46_->self = g_object_ref (self);
#line 289 "../src/Objects/Project.vala"
	_tmp0_ = _g_object_ref0 (section);
#line 289 "../src/Objects/Project.vala"
	_g_object_unref0 (_data46_->section);
#line 289 "../src/Objects/Project.vala"
	_data46_->section = _tmp0_;
#line 290 "../src/Objects/Project.vala"
	_tmp1_ = self->priv->_sections;
#line 290 "../src/Objects/Project.vala"
	gee_abstract_collection_add ((GeeAbstractCollection*) _tmp1_, _data46_->section);
#line 291 "../src/Objects/Project.vala"
	g_signal_connect_data ((ObjectsBaseObject*) _data46_->section, "deleted", (GCallback) ___lambda14__objects_base_object_deleted, block46_data_ref (_data46_), (GClosureNotify) block46_data_unref, 0);
#line 289 "../src/Objects/Project.vala"
	block46_data_unref (_data46_);
#line 289 "../src/Objects/Project.vala"
	_data46_ = NULL;
#line 1649 "Project.c"
}

ObjectsItem*
objects_project_add_item_if_not_exists (ObjectsProject* self,
                                        ObjectsItem* new_item,
                                        gboolean insert)
{
	ObjectsItem* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsItem* result = NULL;
#line 296 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 296 "../src/Objects/Project.vala"
	g_return_val_if_fail (new_item != NULL, NULL);
#line 297 "../src/Objects/Project.vala"
	return_value = NULL;
#line 1666 "Project.c"
	{
		GeeArrayList* _tmp0_;
#line 298 "../src/Objects/Project.vala"
		_tmp0_ = self->priv->_items;
#line 298 "../src/Objects/Project.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 1673 "Project.c"
		{
			gint64 _tmp1_;
			gint64 _tmp2_;
			ObjectsItem* _tmp3_;
			ObjectsItem* _tmp4_;
			ObjectsItem* _tmp7_;
			ObjectsItem* _tmp8_;
#line 299 "../src/Objects/Project.vala"
			_tmp1_ = objects_base_object_get_id ((ObjectsBaseObject*) new_item);
#line 299 "../src/Objects/Project.vala"
			_tmp2_ = _tmp1_;
#line 299 "../src/Objects/Project.vala"
			_tmp3_ = objects_project_get_item (self, _tmp2_);
#line 299 "../src/Objects/Project.vala"
			_g_object_unref0 (return_value);
#line 299 "../src/Objects/Project.vala"
			return_value = _tmp3_;
#line 300 "../src/Objects/Project.vala"
			_tmp4_ = return_value;
#line 300 "../src/Objects/Project.vala"
			if (_tmp4_ == NULL) {
#line 1695 "Project.c"
				ServicesDatabase* _tmp5_;
				ObjectsItem* _tmp6_;
#line 301 "../src/Objects/Project.vala"
				objects_item_set_project (new_item, self);
#line 302 "../src/Objects/Project.vala"
				objects_project_add_item (self, new_item);
#line 303 "../src/Objects/Project.vala"
				_tmp5_ = planner_database;
#line 303 "../src/Objects/Project.vala"
				services_database_insert_item (_tmp5_, new_item, insert);
#line 304 "../src/Objects/Project.vala"
				_tmp6_ = _g_object_ref0 (new_item);
#line 304 "../src/Objects/Project.vala"
				_g_object_unref0 (return_value);
#line 304 "../src/Objects/Project.vala"
				return_value = _tmp6_;
#line 1712 "Project.c"
			}
#line 306 "../src/Objects/Project.vala"
			_tmp7_ = return_value;
#line 306 "../src/Objects/Project.vala"
			_tmp8_ = _g_object_ref0 (_tmp7_);
#line 306 "../src/Objects/Project.vala"
			result = _tmp8_;
#line 1720 "Project.c"
			{
				GeeArrayList* _tmp9_;
#line 298 "../src/Objects/Project.vala"
				_tmp9_ = self->priv->_items;
#line 298 "../src/Objects/Project.vala"
				g_rec_mutex_unlock (&self->priv->__lock__items);
#line 1727 "Project.c"
			}
#line 306 "../src/Objects/Project.vala"
			_g_object_unref0 (return_value);
#line 306 "../src/Objects/Project.vala"
			return result;
#line 1733 "Project.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp10_;
#line 298 "../src/Objects/Project.vala"
			_tmp10_ = self->priv->_items;
#line 298 "../src/Objects/Project.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 1742 "Project.c"
		}
#line 298 "../src/Objects/Project.vala"
		_g_object_unref0 (return_value);
#line 298 "../src/Objects/Project.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 298 "../src/Objects/Project.vala"
		g_clear_error (&_inner_error0_);
#line 298 "../src/Objects/Project.vala"
		return NULL;
#line 1752 "Project.c"
	}
#line 296 "../src/Objects/Project.vala"
	_g_object_unref0 (return_value);
#line 1756 "Project.c"
}

ObjectsItem*
objects_project_get_item (ObjectsProject* self,
                          gint64 id)
{
	ObjectsItem* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsItem* result = NULL;
#line 310 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 311 "../src/Objects/Project.vala"
	return_value = NULL;
#line 1770 "Project.c"
	{
		GeeArrayList* _tmp0_;
#line 312 "../src/Objects/Project.vala"
		_tmp0_ = self->priv->_items;
#line 312 "../src/Objects/Project.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 1777 "Project.c"
		{
			{
				GeeArrayList* _item_list = NULL;
				GeeArrayList* _tmp1_;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				gint _item_size = 0;
				GeeArrayList* _tmp4_;
				gint _tmp5_;
				gint _tmp6_;
				gint _item_index = 0;
#line 313 "../src/Objects/Project.vala"
				_tmp1_ = objects_project_get_items (self);
#line 313 "../src/Objects/Project.vala"
				_tmp2_ = _tmp1_;
#line 313 "../src/Objects/Project.vala"
				_tmp3_ = _g_object_ref0 (_tmp2_);
#line 313 "../src/Objects/Project.vala"
				_item_list = _tmp3_;
#line 313 "../src/Objects/Project.vala"
				_tmp4_ = _item_list;
#line 313 "../src/Objects/Project.vala"
				_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 313 "../src/Objects/Project.vala"
				_tmp6_ = _tmp5_;
#line 313 "../src/Objects/Project.vala"
				_item_size = _tmp6_;
#line 313 "../src/Objects/Project.vala"
				_item_index = -1;
#line 313 "../src/Objects/Project.vala"
				while (TRUE) {
#line 1809 "Project.c"
					gint _tmp7_;
					gint _tmp8_;
					ObjectsItem* item = NULL;
					GeeArrayList* _tmp9_;
					gpointer _tmp10_;
					ObjectsItem* _tmp11_;
					gint64 _tmp12_;
					gint64 _tmp13_;
#line 313 "../src/Objects/Project.vala"
					_item_index = _item_index + 1;
#line 313 "../src/Objects/Project.vala"
					_tmp7_ = _item_index;
#line 313 "../src/Objects/Project.vala"
					_tmp8_ = _item_size;
#line 313 "../src/Objects/Project.vala"
					if (!(_tmp7_ < _tmp8_)) {
#line 313 "../src/Objects/Project.vala"
						break;
#line 1828 "Project.c"
					}
#line 313 "../src/Objects/Project.vala"
					_tmp9_ = _item_list;
#line 313 "../src/Objects/Project.vala"
					_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _item_index);
#line 313 "../src/Objects/Project.vala"
					item = (ObjectsItem*) _tmp10_;
#line 314 "../src/Objects/Project.vala"
					_tmp11_ = item;
#line 314 "../src/Objects/Project.vala"
					_tmp12_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp11_);
#line 314 "../src/Objects/Project.vala"
					_tmp13_ = _tmp12_;
#line 314 "../src/Objects/Project.vala"
					if (_tmp13_ == id) {
#line 1844 "Project.c"
						ObjectsItem* _tmp14_;
						ObjectsItem* _tmp15_;
#line 315 "../src/Objects/Project.vala"
						_tmp14_ = item;
#line 315 "../src/Objects/Project.vala"
						_tmp15_ = _g_object_ref0 (_tmp14_);
#line 315 "../src/Objects/Project.vala"
						_g_object_unref0 (return_value);
#line 315 "../src/Objects/Project.vala"
						return_value = _tmp15_;
#line 316 "../src/Objects/Project.vala"
						_g_object_unref0 (item);
#line 316 "../src/Objects/Project.vala"
						break;
#line 1859 "Project.c"
					}
#line 313 "../src/Objects/Project.vala"
					_g_object_unref0 (item);
#line 1863 "Project.c"
				}
#line 313 "../src/Objects/Project.vala"
				_g_object_unref0 (_item_list);
#line 1867 "Project.c"
			}
		}
		__finally0:
		{
			GeeArrayList* _tmp16_;
#line 312 "../src/Objects/Project.vala"
			_tmp16_ = self->priv->_items;
#line 312 "../src/Objects/Project.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 1877 "Project.c"
		}
#line 312 "../src/Objects/Project.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 312 "../src/Objects/Project.vala"
			_g_object_unref0 (return_value);
#line 312 "../src/Objects/Project.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 312 "../src/Objects/Project.vala"
			g_clear_error (&_inner_error0_);
#line 312 "../src/Objects/Project.vala"
			return NULL;
#line 1889 "Project.c"
		}
	}
#line 320 "../src/Objects/Project.vala"
	result = return_value;
#line 320 "../src/Objects/Project.vala"
	return result;
#line 1896 "Project.c"
}

void
objects_project_add_item (ObjectsProject* self,
                          ObjectsItem* item)
{
	GeeArrayList* _tmp0_;
#line 323 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 323 "../src/Objects/Project.vala"
	g_return_if_fail (item != NULL);
#line 324 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_items;
#line 324 "../src/Objects/Project.vala"
	gee_abstract_collection_add ((GeeAbstractCollection*) _tmp0_, item);
#line 1912 "Project.c"
}

static gchar*
objects_project_real_get_add_json (ObjectsBaseObject* base,
                                   const gchar* temp_id,
                                   const gchar* uuid)
{
	ObjectsProject * self;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 327 "../src/Objects/Project.vala"
	self = (ObjectsProject*) base;
#line 327 "../src/Objects/Project.vala"
	g_return_val_if_fail (temp_id != NULL, NULL);
#line 327 "../src/Objects/Project.vala"
	g_return_val_if_fail (uuid != NULL, NULL);
#line 328 "../src/Objects/Project.vala"
	_tmp0_ = objects_base_object_get_update_json ((ObjectsBaseObject*) self, uuid, temp_id);
#line 328 "../src/Objects/Project.vala"
	result = _tmp0_;
#line 328 "../src/Objects/Project.vala"
	return result;
#line 1935 "Project.c"
}

static void
_vala_JsonNode_free (JsonNode* self)
{
#line 376 "../src/Objects/Project.vala"
	g_boxed_free (json_node_get_type (), self);
#line 1943 "Project.c"
}

static gchar*
objects_project_real_get_update_json (ObjectsBaseObject* base,
                                      const gchar* uuid,
                                      const gchar* temp_id)
{
	ObjectsProject * self;
	JsonBuilder* builder = NULL;
	JsonBuilder* _tmp0_;
	JsonBuilder* _tmp1_;
	JsonBuilder* _tmp2_;
	JsonBuilder* _tmp3_;
	const gchar* _tmp4_ = NULL;
	JsonBuilder* _tmp5_;
	JsonBuilder* _tmp6_;
	JsonBuilder* _tmp7_;
	JsonBuilder* _tmp10_;
	JsonBuilder* _tmp11_;
	JsonBuilder* _tmp16_;
	JsonBuilder* _tmp17_;
	Util* _tmp18_;
	Util* _tmp19_;
	const gchar* _tmp20_;
	gchar* _tmp21_;
	gchar* _tmp22_;
	JsonBuilder* _tmp23_;
	JsonBuilder* _tmp24_;
	const gchar* _tmp25_;
	JsonBuilder* _tmp26_;
	JsonBuilder* _tmp27_;
	gboolean _tmp28_;
	JsonBuilder* _tmp29_;
	JsonBuilder* _tmp30_;
	gboolean _tmp31_;
	JsonBuilder* _tmp32_;
	JsonBuilder* _tmp33_;
	JsonBuilder* _tmp34_;
	JsonGenerator* generator = NULL;
	JsonGenerator* _tmp35_;
	JsonNode* root = NULL;
	JsonBuilder* _tmp36_;
	JsonNode* _tmp37_;
	gchar* _tmp38_;
	gchar* result = NULL;
#line 331 "../src/Objects/Project.vala"
	self = (ObjectsProject*) base;
#line 331 "../src/Objects/Project.vala"
	g_return_val_if_fail (uuid != NULL, NULL);
#line 332 "../src/Objects/Project.vala"
	_tmp0_ = json_builder_new ();
#line 332 "../src/Objects/Project.vala"
	builder = _tmp0_;
#line 333 "../src/Objects/Project.vala"
	_tmp1_ = builder;
#line 333 "../src/Objects/Project.vala"
	json_builder_begin_array (_tmp1_);
#line 334 "../src/Objects/Project.vala"
	_tmp2_ = builder;
#line 334 "../src/Objects/Project.vala"
	json_builder_begin_object (_tmp2_);
#line 337 "../src/Objects/Project.vala"
	_tmp3_ = builder;
#line 337 "../src/Objects/Project.vala"
	json_builder_set_member_name (_tmp3_, "type");
#line 338 "../src/Objects/Project.vala"
	if (temp_id == NULL) {
#line 338 "../src/Objects/Project.vala"
		_tmp4_ = "project_update";
#line 2013 "Project.c"
	} else {
#line 338 "../src/Objects/Project.vala"
		_tmp4_ = "project_add";
#line 2017 "Project.c"
	}
#line 338 "../src/Objects/Project.vala"
	_tmp5_ = builder;
#line 338 "../src/Objects/Project.vala"
	json_builder_add_string_value (_tmp5_, _tmp4_);
#line 340 "../src/Objects/Project.vala"
	_tmp6_ = builder;
#line 340 "../src/Objects/Project.vala"
	json_builder_set_member_name (_tmp6_, "uuid");
#line 341 "../src/Objects/Project.vala"
	_tmp7_ = builder;
#line 341 "../src/Objects/Project.vala"
	json_builder_add_string_value (_tmp7_, uuid);
#line 343 "../src/Objects/Project.vala"
	if (temp_id != NULL) {
#line 2033 "Project.c"
		JsonBuilder* _tmp8_;
		JsonBuilder* _tmp9_;
#line 344 "../src/Objects/Project.vala"
		_tmp8_ = builder;
#line 344 "../src/Objects/Project.vala"
		json_builder_set_member_name (_tmp8_, "temp_id");
#line 345 "../src/Objects/Project.vala"
		_tmp9_ = builder;
#line 345 "../src/Objects/Project.vala"
		json_builder_add_string_value (_tmp9_, temp_id);
#line 2044 "Project.c"
	}
#line 348 "../src/Objects/Project.vala"
	_tmp10_ = builder;
#line 348 "../src/Objects/Project.vala"
	json_builder_set_member_name (_tmp10_, "args");
#line 349 "../src/Objects/Project.vala"
	_tmp11_ = builder;
#line 349 "../src/Objects/Project.vala"
	json_builder_begin_object (_tmp11_);
#line 351 "../src/Objects/Project.vala"
	if (temp_id == NULL) {
#line 2056 "Project.c"
		JsonBuilder* _tmp12_;
		JsonBuilder* _tmp13_;
		gint64 _tmp14_;
		gint64 _tmp15_;
#line 352 "../src/Objects/Project.vala"
		_tmp12_ = builder;
#line 352 "../src/Objects/Project.vala"
		json_builder_set_member_name (_tmp12_, "id");
#line 353 "../src/Objects/Project.vala"
		_tmp13_ = builder;
#line 353 "../src/Objects/Project.vala"
		_tmp14_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 353 "../src/Objects/Project.vala"
		_tmp15_ = _tmp14_;
#line 353 "../src/Objects/Project.vala"
		json_builder_add_int_value (_tmp13_, _tmp15_);
#line 2073 "Project.c"
	}
#line 356 "../src/Objects/Project.vala"
	_tmp16_ = builder;
#line 356 "../src/Objects/Project.vala"
	json_builder_set_member_name (_tmp16_, "name");
#line 357 "../src/Objects/Project.vala"
	_tmp17_ = builder;
#line 357 "../src/Objects/Project.vala"
	_tmp18_ = util_get_default ();
#line 357 "../src/Objects/Project.vala"
	_tmp19_ = _tmp18_;
#line 357 "../src/Objects/Project.vala"
	_tmp20_ = self->priv->_name;
#line 357 "../src/Objects/Project.vala"
	_tmp21_ = util_get_encode_text (_tmp19_, _tmp20_);
#line 357 "../src/Objects/Project.vala"
	_tmp22_ = _tmp21_;
#line 357 "../src/Objects/Project.vala"
	json_builder_add_string_value (_tmp17_, _tmp22_);
#line 357 "../src/Objects/Project.vala"
	_g_free0 (_tmp22_);
#line 357 "../src/Objects/Project.vala"
	_g_object_unref0 (_tmp19_);
#line 359 "../src/Objects/Project.vala"
	_tmp23_ = builder;
#line 359 "../src/Objects/Project.vala"
	json_builder_set_member_name (_tmp23_, "color");
#line 360 "../src/Objects/Project.vala"
	_tmp24_ = builder;
#line 360 "../src/Objects/Project.vala"
	_tmp25_ = self->priv->_color;
#line 360 "../src/Objects/Project.vala"
	json_builder_add_string_value (_tmp24_, _tmp25_);
#line 362 "../src/Objects/Project.vala"
	_tmp26_ = builder;
#line 362 "../src/Objects/Project.vala"
	json_builder_set_member_name (_tmp26_, "collapsed");
#line 363 "../src/Objects/Project.vala"
	_tmp27_ = builder;
#line 363 "../src/Objects/Project.vala"
	_tmp28_ = self->priv->_collapsed;
#line 363 "../src/Objects/Project.vala"
	json_builder_add_boolean_value (_tmp27_, _tmp28_);
#line 365 "../src/Objects/Project.vala"
	_tmp29_ = builder;
#line 365 "../src/Objects/Project.vala"
	json_builder_set_member_name (_tmp29_, "is_favorite");
#line 366 "../src/Objects/Project.vala"
	_tmp30_ = builder;
#line 366 "../src/Objects/Project.vala"
	_tmp31_ = self->priv->_is_favorite;
#line 366 "../src/Objects/Project.vala"
	json_builder_add_boolean_value (_tmp30_, _tmp31_);
#line 368 "../src/Objects/Project.vala"
	_tmp32_ = builder;
#line 368 "../src/Objects/Project.vala"
	json_builder_end_object (_tmp32_);
#line 369 "../src/Objects/Project.vala"
	_tmp33_ = builder;
#line 369 "../src/Objects/Project.vala"
	json_builder_end_object (_tmp33_);
#line 370 "../src/Objects/Project.vala"
	_tmp34_ = builder;
#line 370 "../src/Objects/Project.vala"
	json_builder_end_array (_tmp34_);
#line 372 "../src/Objects/Project.vala"
	_tmp35_ = json_generator_new ();
#line 372 "../src/Objects/Project.vala"
	generator = _tmp35_;
#line 373 "../src/Objects/Project.vala"
	_tmp36_ = builder;
#line 373 "../src/Objects/Project.vala"
	_tmp37_ = json_builder_get_root (_tmp36_);
#line 373 "../src/Objects/Project.vala"
	root = _tmp37_;
#line 374 "../src/Objects/Project.vala"
	json_generator_set_root (generator, root);
#line 376 "../src/Objects/Project.vala"
	_tmp38_ = json_generator_to_data (generator, NULL);
#line 376 "../src/Objects/Project.vala"
	result = _tmp38_;
#line 376 "../src/Objects/Project.vala"
	__vala_JsonNode_free0 (root);
#line 376 "../src/Objects/Project.vala"
	_g_object_unref0 (generator);
#line 376 "../src/Objects/Project.vala"
	_g_object_unref0 (builder);
#line 376 "../src/Objects/Project.vala"
	return result;
#line 2163 "Project.c"
}

static Block47Data*
block47_data_ref (Block47Data* _data47_)
{
#line 379 "../src/Objects/Project.vala"
	g_atomic_int_inc (&_data47_->_ref_count_);
#line 379 "../src/Objects/Project.vala"
	return _data47_;
#line 2173 "Project.c"
}

static void
block47_data_unref (void * _userdata_)
{
	Block47Data* _data47_;
	_data47_ = (Block47Data*) _userdata_;
#line 379 "../src/Objects/Project.vala"
	if (g_atomic_int_dec_and_test (&_data47_->_ref_count_)) {
#line 2183 "Project.c"
		ObjectsProject* self;
#line 379 "../src/Objects/Project.vala"
		self = _data47_->self;
#line 379 "../src/Objects/Project.vala"
		_g_object_unref0 (_data47_->remove_button);
#line 379 "../src/Objects/Project.vala"
		_g_object_unref0 (_data47_->message_dialog);
#line 379 "../src/Objects/Project.vala"
		_g_object_unref0 (self);
#line 379 "../src/Objects/Project.vala"
		g_slice_free (Block47Data, _data47_);
#line 2195 "Project.c"
	}
}

static void
____lambda161_ (ObjectsProject* self,
                GObject* obj,
                GAsyncResult* res)
{
	ServicesTodoist* _tmp0_;
	ServicesDatabase* _tmp1_;
#line 382 "../src/Objects/Project.vala"
	g_return_if_fail (res != NULL);
#line 383 "../src/Objects/Project.vala"
	_tmp0_ = planner_todoist;
#line 383 "../src/Objects/Project.vala"
	services_todoist_delete_finish (_tmp0_, res);
#line 384 "../src/Objects/Project.vala"
	_tmp1_ = planner_database;
#line 384 "../src/Objects/Project.vala"
	services_database_delete_project (_tmp1_, self);
#line 2216 "Project.c"
}

static void
_____lambda161__gasync_ready_callback (GObject* source_object,
                                       GAsyncResult* res,
                                       gpointer self)
{
#line 382 "../src/Objects/Project.vala"
	____lambda161_ ((ObjectsProject*) self, source_object, res);
#line 382 "../src/Objects/Project.vala"
	g_object_unref (self);
#line 2228 "Project.c"
}

static void
____lambda162_ (Block47Data* _data47_,
                GObject* obj,
                GAsyncResult* res)
{
	ObjectsProject* self;
	ServicesTodoist* _tmp0_;
	ServicesDatabase* _tmp1_;
	WidgetsLoadingButton* _tmp2_;
	GraniteMessageDialog* _tmp3_;
#line 408 "../src/Objects/Project.vala"
	self = _data47_->self;
#line 408 "../src/Objects/Project.vala"
	g_return_if_fail (res != NULL);
#line 409 "../src/Objects/Project.vala"
	_tmp0_ = planner_todoist;
#line 409 "../src/Objects/Project.vala"
	services_todoist_delete_finish (_tmp0_, res);
#line 410 "../src/Objects/Project.vala"
	_tmp1_ = planner_database;
#line 410 "../src/Objects/Project.vala"
	services_database_delete_project (_tmp1_, self);
#line 411 "../src/Objects/Project.vala"
	_tmp2_ = _data47_->remove_button;
#line 411 "../src/Objects/Project.vala"
	widgets_loading_button_set_is_loading (_tmp2_, FALSE);
#line 412 "../src/Objects/Project.vala"
	_tmp3_ = _data47_->message_dialog;
#line 412 "../src/Objects/Project.vala"
	gtk_widget_destroy ((GtkWidget*) _tmp3_);
#line 2261 "Project.c"
}

static void
_____lambda162__gasync_ready_callback (GObject* source_object,
                                       GAsyncResult* res,
                                       gpointer self)
{
#line 408 "../src/Objects/Project.vala"
	____lambda162_ (self, source_object, res);
#line 408 "../src/Objects/Project.vala"
	block47_data_unref (self);
#line 2273 "Project.c"
}

void
objects_project_delete (ObjectsProject* self,
                        gboolean confirm)
{
	Block47Data* _data47_;
	Util* _tmp3_;
	Util* _tmp4_;
	const gchar* _tmp5_;
	const gchar* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	GraniteMessageDialog* _tmp11_;
	GraniteMessageDialog* _tmp12_;
	WidgetsLoadingButton* _tmp13_;
	WidgetsLoadingButton* _tmp14_;
	GtkStyleContext* _tmp15_;
	GraniteMessageDialog* _tmp16_;
	WidgetsLoadingButton* _tmp17_;
	GraniteMessageDialog* _tmp18_;
	GraniteMessageDialog* _tmp19_;
#line 379 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 379 "../src/Objects/Project.vala"
	_data47_ = g_slice_new0 (Block47Data);
#line 379 "../src/Objects/Project.vala"
	_data47_->_ref_count_ = 1;
#line 379 "../src/Objects/Project.vala"
	_data47_->self = g_object_ref (self);
#line 380 "../src/Objects/Project.vala"
	if (!confirm) {
#line 2308 "Project.c"
		gboolean _tmp0_;
#line 381 "../src/Objects/Project.vala"
		_tmp0_ = self->priv->_todoist;
#line 381 "../src/Objects/Project.vala"
		if (_tmp0_) {
#line 2314 "Project.c"
			ServicesTodoist* _tmp1_;
#line 382 "../src/Objects/Project.vala"
			_tmp1_ = planner_todoist;
#line 382 "../src/Objects/Project.vala"
			services_todoist_delete (_tmp1_, (ObjectsBaseObject*) self, _____lambda161__gasync_ready_callback, g_object_ref (self));
#line 2320 "Project.c"
		} else {
			ServicesDatabase* _tmp2_;
#line 387 "../src/Objects/Project.vala"
			_tmp2_ = planner_database;
#line 387 "../src/Objects/Project.vala"
			services_database_delete_project (_tmp2_, self);
#line 2327 "Project.c"
		}
#line 390 "../src/Objects/Project.vala"
		block47_data_unref (_data47_);
#line 390 "../src/Objects/Project.vala"
		_data47_ = NULL;
#line 390 "../src/Objects/Project.vala"
		return;
#line 2335 "Project.c"
	}
#line 393 "../src/Objects/Project.vala"
	_tmp3_ = util_get_default ();
#line 393 "../src/Objects/Project.vala"
	_tmp4_ = _tmp3_;
#line 393 "../src/Objects/Project.vala"
	_tmp5_ = objects_project_get_short_name (self);
#line 393 "../src/Objects/Project.vala"
	_tmp6_ = _tmp5_;
#line 393 "../src/Objects/Project.vala"
	_tmp7_ = util_get_dialog_text (_tmp4_, _tmp6_);
#line 393 "../src/Objects/Project.vala"
	_tmp8_ = _tmp7_;
#line 393 "../src/Objects/Project.vala"
	_tmp9_ = g_strdup_printf ("Are you sure you want to delete <b>%s</b>?", _tmp8_);
#line 393 "../src/Objects/Project.vala"
	_tmp10_ = _tmp9_;
#line 393 "../src/Objects/Project.vala"
	_tmp11_ = granite_message_dialog_new_with_image_from_icon_name (_ ("Delete project"), _ (_tmp10_), "dialog-warning", GTK_BUTTONS_CANCEL);
#line 393 "../src/Objects/Project.vala"
	g_object_ref_sink (_tmp11_);
#line 393 "../src/Objects/Project.vala"
	_tmp12_ = _tmp11_;
#line 393 "../src/Objects/Project.vala"
	_g_free0 (_tmp10_);
#line 393 "../src/Objects/Project.vala"
	_g_free0 (_tmp8_);
#line 393 "../src/Objects/Project.vala"
	_g_object_unref0 (_tmp4_);
#line 393 "../src/Objects/Project.vala"
	_data47_->message_dialog = _tmp12_;
#line 399 "../src/Objects/Project.vala"
	_tmp13_ = widgets_loading_button_new (LOADING_BUTTON_TYPE_LABEL, _ ("Delete"));
#line 399 "../src/Objects/Project.vala"
	g_object_ref_sink (_tmp13_);
#line 399 "../src/Objects/Project.vala"
	_data47_->remove_button = _tmp13_;
#line 400 "../src/Objects/Project.vala"
	_tmp14_ = _data47_->remove_button;
#line 400 "../src/Objects/Project.vala"
	_tmp15_ = gtk_widget_get_style_context ((GtkWidget*) _tmp14_);
#line 400 "../src/Objects/Project.vala"
	gtk_style_context_add_class (_tmp15_, GTK_STYLE_CLASS_DESTRUCTIVE_ACTION);
#line 401 "../src/Objects/Project.vala"
	_tmp16_ = _data47_->message_dialog;
#line 401 "../src/Objects/Project.vala"
	_tmp17_ = _data47_->remove_button;
#line 401 "../src/Objects/Project.vala"
	gtk_dialog_add_action_widget ((GtkDialog*) _tmp16_, (GtkWidget*) _tmp17_, (gint) GTK_RESPONSE_ACCEPT);
#line 403 "../src/Objects/Project.vala"
	_tmp18_ = _data47_->message_dialog;
#line 403 "../src/Objects/Project.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp18_);
#line 405 "../src/Objects/Project.vala"
	_tmp19_ = _data47_->message_dialog;
#line 405 "../src/Objects/Project.vala"
	if (gtk_dialog_run ((GtkDialog*) _tmp19_) == ((gint) GTK_RESPONSE_ACCEPT)) {
#line 2393 "Project.c"
		gboolean _tmp20_;
#line 406 "../src/Objects/Project.vala"
		_tmp20_ = self->priv->_todoist;
#line 406 "../src/Objects/Project.vala"
		if (_tmp20_) {
#line 2399 "Project.c"
			WidgetsLoadingButton* _tmp21_;
			ServicesTodoist* _tmp22_;
#line 407 "../src/Objects/Project.vala"
			_tmp21_ = _data47_->remove_button;
#line 407 "../src/Objects/Project.vala"
			widgets_loading_button_set_is_loading (_tmp21_, TRUE);
#line 408 "../src/Objects/Project.vala"
			_tmp22_ = planner_todoist;
#line 408 "../src/Objects/Project.vala"
			services_todoist_delete (_tmp22_, (ObjectsBaseObject*) self, _____lambda162__gasync_ready_callback, block47_data_ref (_data47_));
#line 2410 "Project.c"
		} else {
			ServicesDatabase* _tmp23_;
			GraniteMessageDialog* _tmp24_;
#line 415 "../src/Objects/Project.vala"
			_tmp23_ = planner_database;
#line 415 "../src/Objects/Project.vala"
			services_database_delete_project (_tmp23_, self);
#line 416 "../src/Objects/Project.vala"
			_tmp24_ = _data47_->message_dialog;
#line 416 "../src/Objects/Project.vala"
			gtk_widget_destroy ((GtkWidget*) _tmp24_);
#line 2422 "Project.c"
		}
	} else {
		GraniteMessageDialog* _tmp25_;
#line 419 "../src/Objects/Project.vala"
		_tmp25_ = _data47_->message_dialog;
#line 419 "../src/Objects/Project.vala"
		gtk_widget_destroy ((GtkWidget*) _tmp25_);
#line 2430 "Project.c"
	}
#line 379 "../src/Objects/Project.vala"
	block47_data_unref (_data47_);
#line 379 "../src/Objects/Project.vala"
	_data47_ = NULL;
#line 2436 "Project.c"
}

static gchar*
bool_to_string (gboolean self)
{
	gchar* result = NULL;
#line 37 "glib-2.0.vapi"
	if (self) {
#line 2445 "Project.c"
		gchar* _tmp0_;
#line 38 "glib-2.0.vapi"
		_tmp0_ = g_strdup ("true");
#line 38 "glib-2.0.vapi"
		result = _tmp0_;
#line 38 "glib-2.0.vapi"
		return result;
#line 2453 "Project.c"
	} else {
		gchar* _tmp1_;
#line 40 "glib-2.0.vapi"
		_tmp1_ = g_strdup ("false");
#line 40 "glib-2.0.vapi"
		result = _tmp1_;
#line 40 "glib-2.0.vapi"
		return result;
#line 2462 "Project.c"
	}
}

gchar*
objects_project_to_string (ObjectsProject* self)
{
	gint64 _tmp0_;
	gint64 _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
	gboolean _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_;
	gboolean _tmp9_;
	gchar* _tmp10_;
	gchar* _tmp11_;
	gboolean _tmp12_;
	gchar* _tmp13_;
	gchar* _tmp14_;
	gint _tmp15_;
	gboolean _tmp16_;
	gchar* _tmp17_;
	gchar* _tmp18_;
	gboolean _tmp19_;
	gchar* _tmp20_;
	gchar* _tmp21_;
	gboolean _tmp22_;
	gchar* _tmp23_;
	gchar* _tmp24_;
	gboolean _tmp25_;
	gchar* _tmp26_;
	gchar* _tmp27_;
	ProjectViewStyle _tmp28_;
	gchar* _tmp29_;
	gchar* _tmp30_;
	gboolean _tmp31_;
	gchar* _tmp32_;
	gchar* _tmp33_;
	gint _tmp34_;
	gboolean _tmp35_;
	gchar* _tmp36_;
	gchar* _tmp37_;
	gint64 _tmp38_;
	gchar* _tmp39_;
	gchar* _tmp40_;
	gchar* _tmp41_;
	gchar* _tmp42_;
	gchar* result = NULL;
#line 423 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 424 "../src/Objects/Project.vala"
	_tmp0_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 424 "../src/Objects/Project.vala"
	_tmp1_ = _tmp0_;
#line 424 "../src/Objects/Project.vala"
	_tmp2_ = g_strdup_printf ("%" G_GINT64_FORMAT, _tmp1_);
#line 424 "../src/Objects/Project.vala"
	_tmp3_ = _tmp2_;
#line 424 "../src/Objects/Project.vala"
	_tmp4_ = self->priv->_name;
#line 424 "../src/Objects/Project.vala"
	_tmp5_ = self->priv->_color;
#line 424 "../src/Objects/Project.vala"
	_tmp6_ = self->priv->_todoist;
#line 424 "../src/Objects/Project.vala"
	_tmp7_ = bool_to_string (_tmp6_);
#line 424 "../src/Objects/Project.vala"
	_tmp8_ = _tmp7_;
#line 424 "../src/Objects/Project.vala"
	_tmp9_ = self->priv->_inbox_project;
#line 424 "../src/Objects/Project.vala"
	_tmp10_ = bool_to_string (_tmp9_);
#line 424 "../src/Objects/Project.vala"
	_tmp11_ = _tmp10_;
#line 424 "../src/Objects/Project.vala"
	_tmp12_ = self->priv->_team_inbox;
#line 424 "../src/Objects/Project.vala"
	_tmp13_ = bool_to_string (_tmp12_);
#line 424 "../src/Objects/Project.vala"
	_tmp14_ = _tmp13_;
#line 424 "../src/Objects/Project.vala"
	_tmp15_ = self->priv->_child_order;
#line 424 "../src/Objects/Project.vala"
	_tmp16_ = self->priv->_is_deleted;
#line 424 "../src/Objects/Project.vala"
	_tmp17_ = bool_to_string (_tmp16_);
#line 424 "../src/Objects/Project.vala"
	_tmp18_ = _tmp17_;
#line 424 "../src/Objects/Project.vala"
	_tmp19_ = self->priv->_is_archived;
#line 424 "../src/Objects/Project.vala"
	_tmp20_ = bool_to_string (_tmp19_);
#line 424 "../src/Objects/Project.vala"
	_tmp21_ = _tmp20_;
#line 424 "../src/Objects/Project.vala"
	_tmp22_ = self->priv->_is_favorite;
#line 424 "../src/Objects/Project.vala"
	_tmp23_ = bool_to_string (_tmp22_);
#line 424 "../src/Objects/Project.vala"
	_tmp24_ = _tmp23_;
#line 424 "../src/Objects/Project.vala"
	_tmp25_ = self->priv->_shared;
#line 424 "../src/Objects/Project.vala"
	_tmp26_ = bool_to_string (_tmp25_);
#line 424 "../src/Objects/Project.vala"
	_tmp27_ = _tmp26_;
#line 424 "../src/Objects/Project.vala"
	_tmp28_ = self->priv->_view_style;
#line 424 "../src/Objects/Project.vala"
	_tmp29_ = project_view_style_to_string (_tmp28_);
#line 424 "../src/Objects/Project.vala"
	_tmp30_ = _tmp29_;
#line 424 "../src/Objects/Project.vala"
	_tmp31_ = self->priv->_show_completed;
#line 424 "../src/Objects/Project.vala"
	_tmp32_ = bool_to_string (_tmp31_);
#line 424 "../src/Objects/Project.vala"
	_tmp33_ = _tmp32_;
#line 424 "../src/Objects/Project.vala"
	_tmp34_ = self->priv->_sort_order;
#line 424 "../src/Objects/Project.vala"
	_tmp35_ = self->priv->_collapsed;
#line 424 "../src/Objects/Project.vala"
	_tmp36_ = bool_to_string (_tmp35_);
#line 424 "../src/Objects/Project.vala"
	_tmp37_ = _tmp36_;
#line 424 "../src/Objects/Project.vala"
	_tmp38_ = self->priv->_parent_id;
#line 424 "../src/Objects/Project.vala"
	_tmp39_ = g_strdup_printf ("%" G_GINT64_FORMAT, _tmp38_);
#line 424 "../src/Objects/Project.vala"
	_tmp40_ = _tmp39_;
#line 424 "../src/Objects/Project.vala"
	_tmp41_ = g_strdup_printf ("\n" \
"        _________________________________\n" \
"            ID: %s\n" \
"            NAME: %s\n" \
"            COLOR: %s\n" \
"            TODOIST: %s\n" \
"            INBOX: %s\n" \
"            TEAM INBOX: %s\n" \
"            CHILD ORDER: %i\n" \
"            DELETED: %s\n" \
"            ARCHIVED: %s\n" \
"            FAVORITE: %s\n" \
"            SHARED: %s\n" \
"            VIEW: %s\n" \
"            SHOW COMPLETED: %s\n" \
"            SORT ORDER: %i\n" \
"            COLLAPSED: %s\n" \
"            PARENT ID: %s\n" \
"        ---------------------------------\n" \
"        ", _tmp3_, _tmp4_, _tmp5_, _tmp8_, _tmp11_, _tmp14_, _tmp15_, _tmp18_, _tmp21_, _tmp24_, _tmp27_, _tmp30_, _tmp33_, _tmp34_, _tmp37_, _tmp40_);
#line 424 "../src/Objects/Project.vala"
	_tmp42_ = _tmp41_;
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp40_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp37_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp33_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp30_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp27_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp24_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp21_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp18_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp14_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp11_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp8_);
#line 424 "../src/Objects/Project.vala"
	_g_free0 (_tmp3_);
#line 424 "../src/Objects/Project.vala"
	result = _tmp42_;
#line 424 "../src/Objects/Project.vala"
	return result;
#line 2629 "Project.c"
}

static gint
objects_project_update_project_count (ObjectsProject* self)
{
	gint returned = 0;
	gint result = 0;
#line 463 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 464 "../src/Objects/Project.vala"
	returned = 0;
#line 2641 "Project.c"
	{
		GeeArrayList* _item_list = NULL;
		ServicesDatabase* _tmp0_;
		GeeArrayList* _tmp1_;
		gint _item_size = 0;
		GeeArrayList* _tmp2_;
		gint _tmp3_;
		gint _tmp4_;
		gint _item_index = 0;
#line 465 "../src/Objects/Project.vala"
		_tmp0_ = planner_database;
#line 465 "../src/Objects/Project.vala"
		_tmp1_ = services_database_get_items_by_project (_tmp0_, self);
#line 465 "../src/Objects/Project.vala"
		_item_list = _tmp1_;
#line 465 "../src/Objects/Project.vala"
		_tmp2_ = _item_list;
#line 465 "../src/Objects/Project.vala"
		_tmp3_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp2_);
#line 465 "../src/Objects/Project.vala"
		_tmp4_ = _tmp3_;
#line 465 "../src/Objects/Project.vala"
		_item_size = _tmp4_;
#line 465 "../src/Objects/Project.vala"
		_item_index = -1;
#line 465 "../src/Objects/Project.vala"
		while (TRUE) {
#line 2669 "Project.c"
			gint _tmp5_;
			gint _tmp6_;
			ObjectsItem* item = NULL;
			GeeArrayList* _tmp7_;
			gpointer _tmp8_;
			ObjectsItem* _tmp9_;
			gboolean _tmp10_;
			gboolean _tmp11_;
#line 465 "../src/Objects/Project.vala"
			_item_index = _item_index + 1;
#line 465 "../src/Objects/Project.vala"
			_tmp5_ = _item_index;
#line 465 "../src/Objects/Project.vala"
			_tmp6_ = _item_size;
#line 465 "../src/Objects/Project.vala"
			if (!(_tmp5_ < _tmp6_)) {
#line 465 "../src/Objects/Project.vala"
				break;
#line 2688 "Project.c"
			}
#line 465 "../src/Objects/Project.vala"
			_tmp7_ = _item_list;
#line 465 "../src/Objects/Project.vala"
			_tmp8_ = gee_abstract_list_get ((GeeAbstractList*) _tmp7_, _item_index);
#line 465 "../src/Objects/Project.vala"
			item = (ObjectsItem*) _tmp8_;
#line 466 "../src/Objects/Project.vala"
			_tmp9_ = item;
#line 466 "../src/Objects/Project.vala"
			_tmp10_ = objects_item_get_checked (_tmp9_);
#line 466 "../src/Objects/Project.vala"
			_tmp11_ = _tmp10_;
#line 466 "../src/Objects/Project.vala"
			if (!_tmp11_) {
#line 2704 "Project.c"
				gint _tmp12_;
#line 467 "../src/Objects/Project.vala"
				_tmp12_ = returned;
#line 467 "../src/Objects/Project.vala"
				returned = _tmp12_ + 1;
#line 2710 "Project.c"
			}
#line 465 "../src/Objects/Project.vala"
			_g_object_unref0 (item);
#line 2714 "Project.c"
		}
#line 465 "../src/Objects/Project.vala"
		_g_object_unref0 (_item_list);
#line 2718 "Project.c"
	}
#line 470 "../src/Objects/Project.vala"
	result = returned;
#line 470 "../src/Objects/Project.vala"
	return result;
#line 2724 "Project.c"
}

gdouble
objects_project_update_percentage (ObjectsProject* self)
{
	gint items_total = 0;
	gint items_checked = 0;
	gdouble result = 0.0;
#line 473 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, 0.0);
#line 474 "../src/Objects/Project.vala"
	items_total = 0;
#line 475 "../src/Objects/Project.vala"
	items_checked = 0;
#line 2739 "Project.c"
	{
		GeeArrayList* _item_list = NULL;
		ServicesDatabase* _tmp0_;
		GeeArrayList* _tmp1_;
		gint _item_size = 0;
		GeeArrayList* _tmp2_;
		gint _tmp3_;
		gint _tmp4_;
		gint _item_index = 0;
#line 476 "../src/Objects/Project.vala"
		_tmp0_ = planner_database;
#line 476 "../src/Objects/Project.vala"
		_tmp1_ = services_database_get_items_by_project (_tmp0_, self);
#line 476 "../src/Objects/Project.vala"
		_item_list = _tmp1_;
#line 476 "../src/Objects/Project.vala"
		_tmp2_ = _item_list;
#line 476 "../src/Objects/Project.vala"
		_tmp3_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp2_);
#line 476 "../src/Objects/Project.vala"
		_tmp4_ = _tmp3_;
#line 476 "../src/Objects/Project.vala"
		_item_size = _tmp4_;
#line 476 "../src/Objects/Project.vala"
		_item_index = -1;
#line 476 "../src/Objects/Project.vala"
		while (TRUE) {
#line 2767 "Project.c"
			gint _tmp5_;
			gint _tmp6_;
			ObjectsItem* item = NULL;
			GeeArrayList* _tmp7_;
			gpointer _tmp8_;
			gint _tmp9_;
			ObjectsItem* _tmp10_;
			gboolean _tmp11_;
			gboolean _tmp12_;
#line 476 "../src/Objects/Project.vala"
			_item_index = _item_index + 1;
#line 476 "../src/Objects/Project.vala"
			_tmp5_ = _item_index;
#line 476 "../src/Objects/Project.vala"
			_tmp6_ = _item_size;
#line 476 "../src/Objects/Project.vala"
			if (!(_tmp5_ < _tmp6_)) {
#line 476 "../src/Objects/Project.vala"
				break;
#line 2787 "Project.c"
			}
#line 476 "../src/Objects/Project.vala"
			_tmp7_ = _item_list;
#line 476 "../src/Objects/Project.vala"
			_tmp8_ = gee_abstract_list_get ((GeeAbstractList*) _tmp7_, _item_index);
#line 476 "../src/Objects/Project.vala"
			item = (ObjectsItem*) _tmp8_;
#line 477 "../src/Objects/Project.vala"
			_tmp9_ = items_total;
#line 477 "../src/Objects/Project.vala"
			items_total = _tmp9_ + 1;
#line 478 "../src/Objects/Project.vala"
			_tmp10_ = item;
#line 478 "../src/Objects/Project.vala"
			_tmp11_ = objects_item_get_checked (_tmp10_);
#line 478 "../src/Objects/Project.vala"
			_tmp12_ = _tmp11_;
#line 478 "../src/Objects/Project.vala"
			if (_tmp12_) {
#line 2807 "Project.c"
				gint _tmp13_;
#line 479 "../src/Objects/Project.vala"
				_tmp13_ = items_checked;
#line 479 "../src/Objects/Project.vala"
				items_checked = _tmp13_ + 1;
#line 2813 "Project.c"
			}
#line 476 "../src/Objects/Project.vala"
			_g_object_unref0 (item);
#line 2817 "Project.c"
		}
#line 476 "../src/Objects/Project.vala"
		_g_object_unref0 (_item_list);
#line 2821 "Project.c"
	}
#line 483 "../src/Objects/Project.vala"
	result = ((gdouble) items_checked) / ((gdouble) items_total);
#line 483 "../src/Objects/Project.vala"
	return result;
#line 2827 "Project.c"
}

ObjectsProject*
objects_project_construct (GType object_type)
{
	ObjectsProject * self = NULL;
#line 1 "../src/Objects/Project.vala"
	self = (ObjectsProject*) objects_base_object_construct (object_type);
#line 1 "../src/Objects/Project.vala"
	return self;
#line 2838 "Project.c"
}

ObjectsProject*
objects_project_new (void)
{
#line 1 "../src/Objects/Project.vala"
	return objects_project_construct (OBJECTS_TYPE_PROJECT);
#line 2846 "Project.c"
}

gint64
objects_project_get_parent_id (ObjectsProject* self)
{
	gint64 result;
#line 2 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, 0LL);
#line 2 "../src/Objects/Project.vala"
	result = self->priv->_parent_id;
#line 2 "../src/Objects/Project.vala"
	return result;
#line 2859 "Project.c"
}

void
objects_project_set_parent_id (ObjectsProject* self,
                               gint64 value)
{
	gint64 old_value;
#line 2 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 2 "../src/Objects/Project.vala"
	old_value = objects_project_get_parent_id (self);
#line 2 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 2 "../src/Objects/Project.vala"
		self->priv->_parent_id = value;
#line 2 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_PARENT_ID_PROPERTY]);
#line 2877 "Project.c"
	}
}

const gchar*
objects_project_get_name (ObjectsProject* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 4 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 4 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_name;
#line 4 "../src/Objects/Project.vala"
	result = _tmp0_;
#line 4 "../src/Objects/Project.vala"
	return result;
#line 2894 "Project.c"
}

void
objects_project_set_name (ObjectsProject* self,
                          const gchar* value)
{
	gchar* old_value;
#line 4 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 4 "../src/Objects/Project.vala"
	old_value = objects_project_get_name (self);
#line 4 "../src/Objects/Project.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2908 "Project.c"
		gchar* _tmp0_;
#line 4 "../src/Objects/Project.vala"
		_tmp0_ = g_strdup (value);
#line 4 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_name);
#line 4 "../src/Objects/Project.vala"
		self->priv->_name = _tmp0_;
#line 4 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_NAME_PROPERTY]);
#line 2918 "Project.c"
	}
}

const gchar*
objects_project_get_due_date (ObjectsProject* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 5 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 5 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_due_date;
#line 5 "../src/Objects/Project.vala"
	result = _tmp0_;
#line 5 "../src/Objects/Project.vala"
	return result;
#line 2935 "Project.c"
}

void
objects_project_set_due_date (ObjectsProject* self,
                              const gchar* value)
{
	gchar* old_value;
#line 5 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 5 "../src/Objects/Project.vala"
	old_value = objects_project_get_due_date (self);
#line 5 "../src/Objects/Project.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2949 "Project.c"
		gchar* _tmp0_;
#line 5 "../src/Objects/Project.vala"
		_tmp0_ = g_strdup (value);
#line 5 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_due_date);
#line 5 "../src/Objects/Project.vala"
		self->priv->_due_date = _tmp0_;
#line 5 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_DUE_DATE_PROPERTY]);
#line 2959 "Project.c"
	}
}

const gchar*
objects_project_get_color (ObjectsProject* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 6 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 6 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_color;
#line 6 "../src/Objects/Project.vala"
	result = _tmp0_;
#line 6 "../src/Objects/Project.vala"
	return result;
#line 2976 "Project.c"
}

void
objects_project_set_color (ObjectsProject* self,
                           const gchar* value)
{
	gchar* old_value;
#line 6 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 6 "../src/Objects/Project.vala"
	old_value = objects_project_get_color (self);
#line 6 "../src/Objects/Project.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 2990 "Project.c"
		gchar* _tmp0_;
#line 6 "../src/Objects/Project.vala"
		_tmp0_ = g_strdup (value);
#line 6 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_color);
#line 6 "../src/Objects/Project.vala"
		self->priv->_color = _tmp0_;
#line 6 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_COLOR_PROPERTY]);
#line 3000 "Project.c"
	}
}

const gchar*
objects_project_get_emoji (ObjectsProject* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 7 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 7 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_emoji;
#line 7 "../src/Objects/Project.vala"
	result = _tmp0_;
#line 7 "../src/Objects/Project.vala"
	return result;
#line 3017 "Project.c"
}

void
objects_project_set_emoji (ObjectsProject* self,
                           const gchar* value)
{
	gchar* old_value;
#line 7 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 7 "../src/Objects/Project.vala"
	old_value = objects_project_get_emoji (self);
#line 7 "../src/Objects/Project.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 3031 "Project.c"
		gchar* _tmp0_;
#line 7 "../src/Objects/Project.vala"
		_tmp0_ = g_strdup (value);
#line 7 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_emoji);
#line 7 "../src/Objects/Project.vala"
		self->priv->_emoji = _tmp0_;
#line 7 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_EMOJI_PROPERTY]);
#line 3041 "Project.c"
	}
}

ProjectViewStyle
objects_project_get_view_style (ObjectsProject* self)
{
	ProjectViewStyle result;
	ProjectViewStyle _tmp0_;
#line 8 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 8 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_view_style;
#line 8 "../src/Objects/Project.vala"
	result = _tmp0_;
#line 8 "../src/Objects/Project.vala"
	return result;
#line 3058 "Project.c"
}

void
objects_project_set_view_style (ObjectsProject* self,
                                ProjectViewStyle value)
{
	ProjectViewStyle old_value;
#line 8 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 8 "../src/Objects/Project.vala"
	old_value = objects_project_get_view_style (self);
#line 8 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 8 "../src/Objects/Project.vala"
		self->priv->_view_style = value;
#line 8 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_VIEW_STYLE_PROPERTY]);
#line 3076 "Project.c"
	}
}

ProjectIconStyle
objects_project_get_icon_style (ObjectsProject* self)
{
	ProjectIconStyle result;
	ProjectIconStyle _tmp0_;
#line 9 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 9 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_icon_style;
#line 9 "../src/Objects/Project.vala"
	result = _tmp0_;
#line 9 "../src/Objects/Project.vala"
	return result;
#line 3093 "Project.c"
}

void
objects_project_set_icon_style (ObjectsProject* self,
                                ProjectIconStyle value)
{
	ProjectIconStyle old_value;
#line 9 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 9 "../src/Objects/Project.vala"
	old_value = objects_project_get_icon_style (self);
#line 9 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 9 "../src/Objects/Project.vala"
		self->priv->_icon_style = value;
#line 9 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_ICON_STYLE_PROPERTY]);
#line 3111 "Project.c"
	}
}

gboolean
objects_project_get_todoist (ObjectsProject* self)
{
	gboolean result;
#line 10 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 10 "../src/Objects/Project.vala"
	result = self->priv->_todoist;
#line 10 "../src/Objects/Project.vala"
	return result;
#line 3125 "Project.c"
}

void
objects_project_set_todoist (ObjectsProject* self,
                             gboolean value)
{
	gboolean old_value;
#line 10 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 10 "../src/Objects/Project.vala"
	old_value = objects_project_get_todoist (self);
#line 10 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 10 "../src/Objects/Project.vala"
		self->priv->_todoist = value;
#line 10 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_TODOIST_PROPERTY]);
#line 3143 "Project.c"
	}
}

gboolean
objects_project_get_inbox_project (ObjectsProject* self)
{
	gboolean result;
#line 11 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 11 "../src/Objects/Project.vala"
	result = self->priv->_inbox_project;
#line 11 "../src/Objects/Project.vala"
	return result;
#line 3157 "Project.c"
}

void
objects_project_set_inbox_project (ObjectsProject* self,
                                   gboolean value)
{
	gboolean old_value;
#line 11 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 11 "../src/Objects/Project.vala"
	old_value = objects_project_get_inbox_project (self);
#line 11 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 11 "../src/Objects/Project.vala"
		self->priv->_inbox_project = value;
#line 11 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_INBOX_PROJECT_PROPERTY]);
#line 3175 "Project.c"
	}
}

gboolean
objects_project_get_team_inbox (ObjectsProject* self)
{
	gboolean result;
#line 12 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 12 "../src/Objects/Project.vala"
	result = self->priv->_team_inbox;
#line 12 "../src/Objects/Project.vala"
	return result;
#line 3189 "Project.c"
}

void
objects_project_set_team_inbox (ObjectsProject* self,
                                gboolean value)
{
	gboolean old_value;
#line 12 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 12 "../src/Objects/Project.vala"
	old_value = objects_project_get_team_inbox (self);
#line 12 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 12 "../src/Objects/Project.vala"
		self->priv->_team_inbox = value;
#line 12 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_TEAM_INBOX_PROPERTY]);
#line 3207 "Project.c"
	}
}

gboolean
objects_project_get_is_deleted (ObjectsProject* self)
{
	gboolean result;
#line 13 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 13 "../src/Objects/Project.vala"
	result = self->priv->_is_deleted;
#line 13 "../src/Objects/Project.vala"
	return result;
#line 3221 "Project.c"
}

void
objects_project_set_is_deleted (ObjectsProject* self,
                                gboolean value)
{
	gboolean old_value;
#line 13 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 13 "../src/Objects/Project.vala"
	old_value = objects_project_get_is_deleted (self);
#line 13 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 13 "../src/Objects/Project.vala"
		self->priv->_is_deleted = value;
#line 13 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_IS_DELETED_PROPERTY]);
#line 3239 "Project.c"
	}
}

gboolean
objects_project_get_is_archived (ObjectsProject* self)
{
	gboolean result;
#line 14 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 14 "../src/Objects/Project.vala"
	result = self->priv->_is_archived;
#line 14 "../src/Objects/Project.vala"
	return result;
#line 3253 "Project.c"
}

void
objects_project_set_is_archived (ObjectsProject* self,
                                 gboolean value)
{
	gboolean old_value;
#line 14 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 14 "../src/Objects/Project.vala"
	old_value = objects_project_get_is_archived (self);
#line 14 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 14 "../src/Objects/Project.vala"
		self->priv->_is_archived = value;
#line 14 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_IS_ARCHIVED_PROPERTY]);
#line 3271 "Project.c"
	}
}

gboolean
objects_project_get_is_favorite (ObjectsProject* self)
{
	gboolean result;
#line 15 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 15 "../src/Objects/Project.vala"
	result = self->priv->_is_favorite;
#line 15 "../src/Objects/Project.vala"
	return result;
#line 3285 "Project.c"
}

void
objects_project_set_is_favorite (ObjectsProject* self,
                                 gboolean value)
{
	gboolean old_value;
#line 15 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 15 "../src/Objects/Project.vala"
	old_value = objects_project_get_is_favorite (self);
#line 15 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 15 "../src/Objects/Project.vala"
		self->priv->_is_favorite = value;
#line 15 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_IS_FAVORITE_PROPERTY]);
#line 3303 "Project.c"
	}
}

gboolean
objects_project_get_shared (ObjectsProject* self)
{
	gboolean result;
#line 16 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 16 "../src/Objects/Project.vala"
	result = self->priv->_shared;
#line 16 "../src/Objects/Project.vala"
	return result;
#line 3317 "Project.c"
}

void
objects_project_set_shared (ObjectsProject* self,
                            gboolean value)
{
	gboolean old_value;
#line 16 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 16 "../src/Objects/Project.vala"
	old_value = objects_project_get_shared (self);
#line 16 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 16 "../src/Objects/Project.vala"
		self->priv->_shared = value;
#line 16 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_SHARED_PROPERTY]);
#line 3335 "Project.c"
	}
}

gboolean
objects_project_get_collapsed (ObjectsProject* self)
{
	gboolean result;
#line 17 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 17 "../src/Objects/Project.vala"
	result = self->priv->_collapsed;
#line 17 "../src/Objects/Project.vala"
	return result;
#line 3349 "Project.c"
}

void
objects_project_set_collapsed (ObjectsProject* self,
                               gboolean value)
{
	gboolean old_value;
#line 17 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 17 "../src/Objects/Project.vala"
	old_value = objects_project_get_collapsed (self);
#line 17 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 17 "../src/Objects/Project.vala"
		self->priv->_collapsed = value;
#line 17 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_COLLAPSED_PROPERTY]);
#line 3367 "Project.c"
	}
}

gboolean
objects_project_get_show_completed (ObjectsProject* self)
{
	gboolean result;
#line 18 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 18 "../src/Objects/Project.vala"
	result = self->priv->_show_completed;
#line 18 "../src/Objects/Project.vala"
	return result;
#line 3381 "Project.c"
}

void
objects_project_set_show_completed (ObjectsProject* self,
                                    gboolean value)
{
	gboolean old_value;
#line 18 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 18 "../src/Objects/Project.vala"
	old_value = objects_project_get_show_completed (self);
#line 18 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 18 "../src/Objects/Project.vala"
		self->priv->_show_completed = value;
#line 18 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_SHOW_COMPLETED_PROPERTY]);
#line 3399 "Project.c"
	}
}

gint
objects_project_get_sort_order (ObjectsProject* self)
{
	gint result;
#line 20 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 20 "../src/Objects/Project.vala"
	result = self->priv->_sort_order;
#line 20 "../src/Objects/Project.vala"
	return result;
#line 3413 "Project.c"
}

void
objects_project_set_sort_order (ObjectsProject* self,
                                gint value)
{
	gint old_value;
#line 20 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 20 "../src/Objects/Project.vala"
	old_value = objects_project_get_sort_order (self);
#line 20 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 20 "../src/Objects/Project.vala"
		self->priv->_sort_order = value;
#line 20 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_SORT_ORDER_PROPERTY]);
#line 3431 "Project.c"
	}
}

gint
objects_project_get_child_order (ObjectsProject* self)
{
	gint result;
#line 21 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 21 "../src/Objects/Project.vala"
	result = self->priv->_child_order;
#line 21 "../src/Objects/Project.vala"
	return result;
#line 3445 "Project.c"
}

void
objects_project_set_child_order (ObjectsProject* self,
                                 gint value)
{
	gint old_value;
#line 21 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 21 "../src/Objects/Project.vala"
	old_value = objects_project_get_child_order (self);
#line 21 "../src/Objects/Project.vala"
	if (old_value != value) {
#line 21 "../src/Objects/Project.vala"
		self->priv->_child_order = value;
#line 21 "../src/Objects/Project.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_CHILD_ORDER_PROPERTY]);
#line 3463 "Project.c"
	}
}

const gchar*
objects_project_get_view_id (ObjectsProject* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	const gchar* _tmp3_;
#line 25 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 26 "../src/Objects/Project.vala"
	_tmp0_ = objects_base_object_get_id_string ((ObjectsBaseObject*) self);
#line 26 "../src/Objects/Project.vala"
	_tmp1_ = _tmp0_;
#line 26 "../src/Objects/Project.vala"
	_tmp2_ = g_strdup_printf ("project-%s", _tmp1_);
#line 26 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_view_id);
#line 26 "../src/Objects/Project.vala"
	self->priv->_view_id = _tmp2_;
#line 27 "../src/Objects/Project.vala"
	_tmp3_ = self->priv->_view_id;
#line 27 "../src/Objects/Project.vala"
	result = _tmp3_;
#line 27 "../src/Objects/Project.vala"
	return result;
#line 3493 "Project.c"
}

const gchar*
objects_project_get_parent_id_string (ObjectsProject* self)
{
	const gchar* result;
	gint64 _tmp0_;
	gchar* _tmp1_;
	const gchar* _tmp2_;
#line 33 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 34 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_parent_id;
#line 34 "../src/Objects/Project.vala"
	_tmp1_ = g_strdup_printf ("%" G_GINT64_FORMAT, _tmp0_);
#line 34 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_parent_id_string);
#line 34 "../src/Objects/Project.vala"
	self->priv->_parent_id_string = _tmp1_;
#line 35 "../src/Objects/Project.vala"
	_tmp2_ = self->priv->_parent_id_string;
#line 35 "../src/Objects/Project.vala"
	result = _tmp2_;
#line 35 "../src/Objects/Project.vala"
	return result;
#line 3519 "Project.c"
}

const gchar*
objects_project_get_short_name (ObjectsProject* self)
{
	const gchar* result;
	Util* _tmp0_;
	Util* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp4_;
#line 41 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 42 "../src/Objects/Project.vala"
	_tmp0_ = util_get_default ();
#line 42 "../src/Objects/Project.vala"
	_tmp1_ = _tmp0_;
#line 42 "../src/Objects/Project.vala"
	_tmp2_ = self->priv->_name;
#line 42 "../src/Objects/Project.vala"
	_tmp3_ = util_get_short_name (_tmp1_, _tmp2_, CONSTANTS_SHORT_NAME_SIZE);
#line 42 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_short_name);
#line 42 "../src/Objects/Project.vala"
	self->priv->_short_name = _tmp3_;
#line 42 "../src/Objects/Project.vala"
	_g_object_unref0 (_tmp1_);
#line 43 "../src/Objects/Project.vala"
	_tmp4_ = self->priv->_short_name;
#line 43 "../src/Objects/Project.vala"
	result = _tmp4_;
#line 43 "../src/Objects/Project.vala"
	return result;
#line 3553 "Project.c"
}

GeeArrayList*
objects_project_get_sections (ObjectsProject* self)
{
	GeeArrayList* result;
	ServicesDatabase* _tmp0_;
	GeeArrayList* _tmp1_;
	GeeArrayList* _tmp2_;
#line 49 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 50 "../src/Objects/Project.vala"
	_tmp0_ = planner_database;
#line 50 "../src/Objects/Project.vala"
	_tmp1_ = services_database_get_sections_by_project (_tmp0_, self);
#line 50 "../src/Objects/Project.vala"
	_g_object_unref0 (self->priv->_sections);
#line 50 "../src/Objects/Project.vala"
	self->priv->_sections = _tmp1_;
#line 51 "../src/Objects/Project.vala"
	_tmp2_ = self->priv->_sections;
#line 51 "../src/Objects/Project.vala"
	result = _tmp2_;
#line 51 "../src/Objects/Project.vala"
	return result;
#line 3579 "Project.c"
}

GeeArrayList*
objects_project_get_items (ObjectsProject* self)
{
	GeeArrayList* result;
	ServicesDatabase* _tmp0_;
	GeeArrayList* _tmp1_;
	GeeArrayList* _tmp2_;
#line 57 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 58 "../src/Objects/Project.vala"
	_tmp0_ = planner_database;
#line 58 "../src/Objects/Project.vala"
	_tmp1_ = services_database_get_item_by_baseobject (_tmp0_, (ObjectsBaseObject*) self);
#line 58 "../src/Objects/Project.vala"
	_g_object_unref0 (self->priv->_items);
#line 58 "../src/Objects/Project.vala"
	self->priv->_items = _tmp1_;
#line 59 "../src/Objects/Project.vala"
	_tmp2_ = self->priv->_items;
#line 59 "../src/Objects/Project.vala"
	result = _tmp2_;
#line 59 "../src/Objects/Project.vala"
	return result;
#line 3605 "Project.c"
}

GeeArrayList*
objects_project_get_subprojects (ObjectsProject* self)
{
	GeeArrayList* result;
	ServicesDatabase* _tmp0_;
	GeeArrayList* _tmp1_;
	GeeArrayList* _tmp2_;
#line 65 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 66 "../src/Objects/Project.vala"
	_tmp0_ = planner_database;
#line 66 "../src/Objects/Project.vala"
	_tmp1_ = services_database_get_subprojects (_tmp0_, self);
#line 66 "../src/Objects/Project.vala"
	_g_object_unref0 (self->priv->_subprojects);
#line 66 "../src/Objects/Project.vala"
	self->priv->_subprojects = _tmp1_;
#line 67 "../src/Objects/Project.vala"
	_tmp2_ = self->priv->_subprojects;
#line 67 "../src/Objects/Project.vala"
	result = _tmp2_;
#line 67 "../src/Objects/Project.vala"
	return result;
#line 3631 "Project.c"
}

ObjectsProject*
objects_project_get_parent (ObjectsProject* self)
{
	ObjectsProject* result;
	ServicesDatabase* _tmp0_;
	gint64 _tmp1_;
	ObjectsProject* _tmp2_;
	ObjectsProject* _tmp3_;
#line 73 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 74 "../src/Objects/Project.vala"
	_tmp0_ = planner_database;
#line 74 "../src/Objects/Project.vala"
	_tmp1_ = self->priv->_parent_id;
#line 74 "../src/Objects/Project.vala"
	_tmp2_ = services_database_get_project (_tmp0_, _tmp1_);
#line 74 "../src/Objects/Project.vala"
	_g_object_unref0 (self->priv->_parent);
#line 74 "../src/Objects/Project.vala"
	self->priv->_parent = _tmp2_;
#line 75 "../src/Objects/Project.vala"
	_tmp3_ = self->priv->_parent;
#line 75 "../src/Objects/Project.vala"
	result = _tmp3_;
#line 75 "../src/Objects/Project.vala"
	return result;
#line 3660 "Project.c"
}

static gint*
_int_dup (gint* self)
{
	gint* dup;
#line 87 "../src/Objects/Project.vala"
	dup = g_new0 (gint, 1);
#line 87 "../src/Objects/Project.vala"
	memcpy (dup, self, sizeof (gint));
#line 87 "../src/Objects/Project.vala"
	return dup;
#line 3673 "Project.c"
}

static gpointer
__int_dup0 (gpointer self)
{
#line 87 "../src/Objects/Project.vala"
	return self ? _int_dup (self) : NULL;
#line 3681 "Project.c"
}

gint
objects_project_get_project_count (ObjectsProject* self)
{
	gint result;
	gint* _tmp0_;
	gint* _tmp3_;
#line 85 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 86 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_project_count;
#line 86 "../src/Objects/Project.vala"
	if (_tmp0_ == NULL) {
#line 3696 "Project.c"
		gint _tmp1_;
		gint* _tmp2_;
#line 87 "../src/Objects/Project.vala"
		_tmp1_ = objects_project_update_project_count (self);
#line 87 "../src/Objects/Project.vala"
		_tmp2_ = __int_dup0 (&_tmp1_);
#line 87 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_project_count);
#line 87 "../src/Objects/Project.vala"
		self->priv->_project_count = _tmp2_;
#line 3707 "Project.c"
	}
#line 90 "../src/Objects/Project.vala"
	_tmp3_ = self->priv->_project_count;
#line 90 "../src/Objects/Project.vala"
	result = *_tmp3_;
#line 90 "../src/Objects/Project.vala"
	return result;
#line 3715 "Project.c"
}

void
objects_project_set_project_count (ObjectsProject* self,
                                   gint value)
{
	gint* _tmp0_;
#line 93 "../src/Objects/Project.vala"
	g_return_if_fail (self != NULL);
#line 94 "../src/Objects/Project.vala"
	_tmp0_ = __int_dup0 (&value);
#line 94 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_project_count);
#line 94 "../src/Objects/Project.vala"
	self->priv->_project_count = _tmp0_;
#line 93 "../src/Objects/Project.vala"
	g_object_notify_by_pspec ((GObject *) self, objects_project_properties[OBJECTS_PROJECT_PROJECT_COUNT_PROPERTY]);
#line 3733 "Project.c"
}

static gdouble*
_double_dup (gdouble* self)
{
	gdouble* dup;
#line 102 "../src/Objects/Project.vala"
	dup = g_new0 (gdouble, 1);
#line 102 "../src/Objects/Project.vala"
	memcpy (dup, self, sizeof (gdouble));
#line 102 "../src/Objects/Project.vala"
	return dup;
#line 3746 "Project.c"
}

static gpointer
__double_dup0 (gpointer self)
{
#line 102 "../src/Objects/Project.vala"
	return self ? _double_dup (self) : NULL;
#line 3754 "Project.c"
}

gdouble
objects_project_get_percentage (ObjectsProject* self)
{
	gdouble result;
	gdouble* _tmp0_;
	gdouble* _tmp3_;
#line 100 "../src/Objects/Project.vala"
	g_return_val_if_fail (self != NULL, 0.0);
#line 101 "../src/Objects/Project.vala"
	_tmp0_ = self->priv->_percentage;
#line 101 "../src/Objects/Project.vala"
	if (_tmp0_ == NULL) {
#line 3769 "Project.c"
		gdouble _tmp1_;
		gdouble* _tmp2_;
#line 102 "../src/Objects/Project.vala"
		_tmp1_ = objects_project_update_percentage (self);
#line 102 "../src/Objects/Project.vala"
		_tmp2_ = __double_dup0 (&_tmp1_);
#line 102 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_percentage);
#line 102 "../src/Objects/Project.vala"
		self->priv->_percentage = _tmp2_;
#line 3780 "Project.c"
	}
#line 105 "../src/Objects/Project.vala"
	_tmp3_ = self->priv->_percentage;
#line 105 "../src/Objects/Project.vala"
	result = *_tmp3_;
#line 105 "../src/Objects/Project.vala"
	return result;
#line 3788 "Project.c"
}

static void
_objects_project___lambda163_ (ObjectsProject* self)
{
	ServicesDatabase* _tmp0_;
#line 113 "../src/Objects/Project.vala"
	_tmp0_ = planner_database;
#line 113 "../src/Objects/Project.vala"
	g_signal_emit_by_name (_tmp0_, "project-deleted", self);
#line 3799 "Project.c"
}

static void
__objects_project___lambda163__objects_base_object_deleted (ObjectsBaseObject* _sender,
                                                            gpointer self)
{
#line 112 "../src/Objects/Project.vala"
	_objects_project___lambda163_ ((ObjectsProject*) self);
#line 3808 "Project.c"
}

static void
_objects_project___lambda164_ (ObjectsProject* self,
                               ObjectsItem* item)
{
	gint64 _tmp0_;
	gint64 _tmp1_;
	gint64 _tmp2_;
	gint64 _tmp3_;
#line 116 "../src/Objects/Project.vala"
	g_return_if_fail (item != NULL);
#line 117 "../src/Objects/Project.vala"
	_tmp0_ = objects_item_get_project_id (item);
#line 117 "../src/Objects/Project.vala"
	_tmp1_ = _tmp0_;
#line 117 "../src/Objects/Project.vala"
	_tmp2_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 117 "../src/Objects/Project.vala"
	_tmp3_ = _tmp2_;
#line 117 "../src/Objects/Project.vala"
	if (_tmp1_ == _tmp3_) {
#line 3831 "Project.c"
		gint _tmp4_;
		gint* _tmp5_;
		gdouble _tmp6_;
		gdouble* _tmp7_;
#line 118 "../src/Objects/Project.vala"
		_tmp4_ = objects_project_update_project_count (self);
#line 118 "../src/Objects/Project.vala"
		_tmp5_ = __int_dup0 (&_tmp4_);
#line 118 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_project_count);
#line 118 "../src/Objects/Project.vala"
		self->priv->_project_count = _tmp5_;
#line 119 "../src/Objects/Project.vala"
		_tmp6_ = objects_project_update_percentage (self);
#line 119 "../src/Objects/Project.vala"
		_tmp7_ = __double_dup0 (&_tmp6_);
#line 119 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_percentage);
#line 119 "../src/Objects/Project.vala"
		self->priv->_percentage = _tmp7_;
#line 120 "../src/Objects/Project.vala"
		g_signal_emit (self, objects_project_signals[OBJECTS_PROJECT_PROJECT_COUNT_UPDATED_SIGNAL], 0);
#line 3854 "Project.c"
	}
}

static void
__objects_project___lambda164__services_event_bus_checked_toggled (ServicesEventBus* _sender,
                                                                   ObjectsItem* item,
                                                                   gboolean old_checked,
                                                                   gpointer self)
{
#line 116 "../src/Objects/Project.vala"
	_objects_project___lambda164_ ((ObjectsProject*) self, item);
#line 3866 "Project.c"
}

static void
_objects_project___lambda165_ (ObjectsProject* self,
                               ObjectsItem* item)
{
	gint64 _tmp0_;
	gint64 _tmp1_;
	gint64 _tmp2_;
	gint64 _tmp3_;
#line 124 "../src/Objects/Project.vala"
	g_return_if_fail (item != NULL);
#line 125 "../src/Objects/Project.vala"
	_tmp0_ = objects_item_get_project_id (item);
#line 125 "../src/Objects/Project.vala"
	_tmp1_ = _tmp0_;
#line 125 "../src/Objects/Project.vala"
	_tmp2_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 125 "../src/Objects/Project.vala"
	_tmp3_ = _tmp2_;
#line 125 "../src/Objects/Project.vala"
	if (_tmp1_ == _tmp3_) {
#line 3889 "Project.c"
		gint _tmp4_;
		gint* _tmp5_;
		gdouble _tmp6_;
		gdouble* _tmp7_;
#line 126 "../src/Objects/Project.vala"
		_tmp4_ = objects_project_update_project_count (self);
#line 126 "../src/Objects/Project.vala"
		_tmp5_ = __int_dup0 (&_tmp4_);
#line 126 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_project_count);
#line 126 "../src/Objects/Project.vala"
		self->priv->_project_count = _tmp5_;
#line 127 "../src/Objects/Project.vala"
		_tmp6_ = objects_project_update_percentage (self);
#line 127 "../src/Objects/Project.vala"
		_tmp7_ = __double_dup0 (&_tmp6_);
#line 127 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_percentage);
#line 127 "../src/Objects/Project.vala"
		self->priv->_percentage = _tmp7_;
#line 128 "../src/Objects/Project.vala"
		g_signal_emit (self, objects_project_signals[OBJECTS_PROJECT_PROJECT_COUNT_UPDATED_SIGNAL], 0);
#line 3912 "Project.c"
	}
}

static void
__objects_project___lambda165__services_database_item_deleted (ServicesDatabase* _sender,
                                                               ObjectsItem* item,
                                                               gpointer self)
{
#line 124 "../src/Objects/Project.vala"
	_objects_project___lambda165_ ((ObjectsProject*) self, item);
#line 3923 "Project.c"
}

static void
_objects_project___lambda166_ (ObjectsProject* self,
                               ObjectsItem* item)
{
	gint64 _tmp0_;
	gint64 _tmp1_;
	gint64 _tmp2_;
	gint64 _tmp3_;
#line 132 "../src/Objects/Project.vala"
	g_return_if_fail (item != NULL);
#line 133 "../src/Objects/Project.vala"
	_tmp0_ = objects_item_get_project_id (item);
#line 133 "../src/Objects/Project.vala"
	_tmp1_ = _tmp0_;
#line 133 "../src/Objects/Project.vala"
	_tmp2_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 133 "../src/Objects/Project.vala"
	_tmp3_ = _tmp2_;
#line 133 "../src/Objects/Project.vala"
	if (_tmp1_ == _tmp3_) {
#line 3946 "Project.c"
		gint _tmp4_;
		gint* _tmp5_;
		gdouble _tmp6_;
		gdouble* _tmp7_;
#line 134 "../src/Objects/Project.vala"
		_tmp4_ = objects_project_update_project_count (self);
#line 134 "../src/Objects/Project.vala"
		_tmp5_ = __int_dup0 (&_tmp4_);
#line 134 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_project_count);
#line 134 "../src/Objects/Project.vala"
		self->priv->_project_count = _tmp5_;
#line 135 "../src/Objects/Project.vala"
		_tmp6_ = objects_project_update_percentage (self);
#line 135 "../src/Objects/Project.vala"
		_tmp7_ = __double_dup0 (&_tmp6_);
#line 135 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_percentage);
#line 135 "../src/Objects/Project.vala"
		self->priv->_percentage = _tmp7_;
#line 136 "../src/Objects/Project.vala"
		g_signal_emit (self, objects_project_signals[OBJECTS_PROJECT_PROJECT_COUNT_UPDATED_SIGNAL], 0);
#line 3969 "Project.c"
	}
}

static void
__objects_project___lambda166__services_database_item_added (ServicesDatabase* _sender,
                                                             ObjectsItem* item,
                                                             gboolean insert,
                                                             gpointer self)
{
#line 132 "../src/Objects/Project.vala"
	_objects_project___lambda166_ ((ObjectsProject*) self, item);
#line 3981 "Project.c"
}

static void
_objects_project___lambda167_ (ObjectsProject* self,
                               ObjectsItem* item,
                               gint64 old_project_id,
                               gint64 section_id,
                               gboolean insert)
{
	gboolean _tmp0_ = FALSE;
	gint64 _tmp1_;
	gint64 _tmp2_;
	gint64 _tmp3_;
	gint64 _tmp4_;
#line 140 "../src/Objects/Project.vala"
	g_return_if_fail (item != NULL);
#line 141 "../src/Objects/Project.vala"
	_tmp1_ = objects_item_get_project_id (item);
#line 141 "../src/Objects/Project.vala"
	_tmp2_ = _tmp1_;
#line 141 "../src/Objects/Project.vala"
	_tmp3_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 141 "../src/Objects/Project.vala"
	_tmp4_ = _tmp3_;
#line 141 "../src/Objects/Project.vala"
	if (_tmp2_ == _tmp4_) {
#line 141 "../src/Objects/Project.vala"
		_tmp0_ = TRUE;
#line 4010 "Project.c"
	} else {
		gint64 _tmp5_;
		gint64 _tmp6_;
#line 141 "../src/Objects/Project.vala"
		_tmp5_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 141 "../src/Objects/Project.vala"
		_tmp6_ = _tmp5_;
#line 141 "../src/Objects/Project.vala"
		_tmp0_ = old_project_id == _tmp6_;
#line 4020 "Project.c"
	}
#line 141 "../src/Objects/Project.vala"
	if (_tmp0_) {
#line 4024 "Project.c"
		gint _tmp7_;
		gint* _tmp8_;
		gdouble _tmp9_;
		gdouble* _tmp10_;
#line 142 "../src/Objects/Project.vala"
		_tmp7_ = objects_project_update_project_count (self);
#line 142 "../src/Objects/Project.vala"
		_tmp8_ = __int_dup0 (&_tmp7_);
#line 142 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_project_count);
#line 142 "../src/Objects/Project.vala"
		self->priv->_project_count = _tmp8_;
#line 143 "../src/Objects/Project.vala"
		_tmp9_ = objects_project_update_percentage (self);
#line 143 "../src/Objects/Project.vala"
		_tmp10_ = __double_dup0 (&_tmp9_);
#line 143 "../src/Objects/Project.vala"
		_g_free0 (self->priv->_percentage);
#line 143 "../src/Objects/Project.vala"
		self->priv->_percentage = _tmp10_;
#line 144 "../src/Objects/Project.vala"
		g_signal_emit (self, objects_project_signals[OBJECTS_PROJECT_PROJECT_COUNT_UPDATED_SIGNAL], 0);
#line 4047 "Project.c"
	}
}

static void
__objects_project___lambda167__services_event_bus_item_moved (ServicesEventBus* _sender,
                                                              ObjectsItem* item,
                                                              gint64 old_project_id,
                                                              gint64 old_section_id,
                                                              gboolean insert,
                                                              gpointer self)
{
#line 140 "../src/Objects/Project.vala"
	_objects_project___lambda167_ ((ObjectsProject*) self, item, old_project_id, old_section_id, insert);
#line 4061 "Project.c"
}

static GObject *
objects_project_constructor (GType type,
                             guint n_construct_properties,
                             GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ObjectsProject * self;
	ServicesEventBus* _tmp0_;
	ServicesDatabase* _tmp1_;
	ServicesDatabase* _tmp2_;
	ServicesEventBus* _tmp3_;
#line 111 "../src/Objects/Project.vala"
	parent_class = G_OBJECT_CLASS (objects_project_parent_class);
#line 111 "../src/Objects/Project.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 111 "../src/Objects/Project.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, OBJECTS_TYPE_PROJECT, ObjectsProject);
#line 112 "../src/Objects/Project.vala"
	g_signal_connect_object ((ObjectsBaseObject*) self, "deleted", (GCallback) __objects_project___lambda163__objects_base_object_deleted, self, 0);
#line 116 "../src/Objects/Project.vala"
	_tmp0_ = planner_event_bus;
#line 116 "../src/Objects/Project.vala"
	g_signal_connect_object (_tmp0_, "checked-toggled", (GCallback) __objects_project___lambda164__services_event_bus_checked_toggled, self, 0);
#line 124 "../src/Objects/Project.vala"
	_tmp1_ = planner_database;
#line 124 "../src/Objects/Project.vala"
	g_signal_connect_object (_tmp1_, "item-deleted", (GCallback) __objects_project___lambda165__services_database_item_deleted, self, 0);
#line 132 "../src/Objects/Project.vala"
	_tmp2_ = planner_database;
#line 132 "../src/Objects/Project.vala"
	g_signal_connect_object (_tmp2_, "item-added", (GCallback) __objects_project___lambda166__services_database_item_added, self, 0);
#line 140 "../src/Objects/Project.vala"
	_tmp3_ = planner_event_bus;
#line 140 "../src/Objects/Project.vala"
	g_signal_connect_object (_tmp3_, "item-moved", (GCallback) __objects_project___lambda167__services_event_bus_item_moved, self, 0);
#line 111 "../src/Objects/Project.vala"
	return obj;
#line 4102 "Project.c"
}

static void
objects_project_class_init (ObjectsProjectClass * klass,
                            gpointer klass_data)
{
#line 1 "../src/Objects/Project.vala"
	objects_project_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Objects/Project.vala"
	g_type_class_adjust_private_offset (klass, &ObjectsProject_private_offset);
#line 1 "../src/Objects/Project.vala"
	((ObjectsBaseObjectClass *) klass)->get_add_json = (gchar* (*) (ObjectsBaseObject*, const gchar*, const gchar*)) objects_project_real_get_add_json;
#line 1 "../src/Objects/Project.vala"
	((ObjectsBaseObjectClass *) klass)->get_update_json = (gchar* (*) (ObjectsBaseObject*, const gchar*, const gchar*)) objects_project_real_get_update_json;
#line 1 "../src/Objects/Project.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_objects_project_get_property;
#line 1 "../src/Objects/Project.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_objects_project_set_property;
#line 1 "../src/Objects/Project.vala"
	G_OBJECT_CLASS (klass)->constructor = objects_project_constructor;
#line 1 "../src/Objects/Project.vala"
	G_OBJECT_CLASS (klass)->finalize = objects_project_finalize;
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_PARENT_ID_PROPERTY, objects_project_properties[OBJECTS_PROJECT_PARENT_ID_PROPERTY] = g_param_spec_int64 ("parent-id", "parent-id", "parent-id", G_MININT64, G_MAXINT64, (gint64) 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_NAME_PROPERTY, objects_project_properties[OBJECTS_PROJECT_NAME_PROPERTY] = g_param_spec_string ("name", "name", "name", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_DUE_DATE_PROPERTY, objects_project_properties[OBJECTS_PROJECT_DUE_DATE_PROPERTY] = g_param_spec_string ("due-date", "due-date", "due-date", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_COLOR_PROPERTY, objects_project_properties[OBJECTS_PROJECT_COLOR_PROPERTY] = g_param_spec_string ("color", "color", "color", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_EMOJI_PROPERTY, objects_project_properties[OBJECTS_PROJECT_EMOJI_PROPERTY] = g_param_spec_string ("emoji", "emoji", "emoji", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_VIEW_STYLE_PROPERTY, objects_project_properties[OBJECTS_PROJECT_VIEW_STYLE_PROPERTY] = g_param_spec_enum ("view-style", "view-style", "view-style", TYPE_PROJECT_VIEW_STYLE, PROJECT_VIEW_STYLE_LIST, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_ICON_STYLE_PROPERTY, objects_project_properties[OBJECTS_PROJECT_ICON_STYLE_PROPERTY] = g_param_spec_enum ("icon-style", "icon-style", "icon-style", TYPE_PROJECT_ICON_STYLE, PROJECT_ICON_STYLE_PROGRESS, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_TODOIST_PROPERTY, objects_project_properties[OBJECTS_PROJECT_TODOIST_PROPERTY] = g_param_spec_boolean ("todoist", "todoist", "todoist", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_INBOX_PROJECT_PROPERTY, objects_project_properties[OBJECTS_PROJECT_INBOX_PROJECT_PROPERTY] = g_param_spec_boolean ("inbox-project", "inbox-project", "inbox-project", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_TEAM_INBOX_PROPERTY, objects_project_properties[OBJECTS_PROJECT_TEAM_INBOX_PROPERTY] = g_param_spec_boolean ("team-inbox", "team-inbox", "team-inbox", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_IS_DELETED_PROPERTY, objects_project_properties[OBJECTS_PROJECT_IS_DELETED_PROPERTY] = g_param_spec_boolean ("is-deleted", "is-deleted", "is-deleted", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_IS_ARCHIVED_PROPERTY, objects_project_properties[OBJECTS_PROJECT_IS_ARCHIVED_PROPERTY] = g_param_spec_boolean ("is-archived", "is-archived", "is-archived", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_IS_FAVORITE_PROPERTY, objects_project_properties[OBJECTS_PROJECT_IS_FAVORITE_PROPERTY] = g_param_spec_boolean ("is-favorite", "is-favorite", "is-favorite", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_SHARED_PROPERTY, objects_project_properties[OBJECTS_PROJECT_SHARED_PROPERTY] = g_param_spec_boolean ("shared", "shared", "shared", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_COLLAPSED_PROPERTY, objects_project_properties[OBJECTS_PROJECT_COLLAPSED_PROPERTY] = g_param_spec_boolean ("collapsed", "collapsed", "collapsed", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_SHOW_COMPLETED_PROPERTY, objects_project_properties[OBJECTS_PROJECT_SHOW_COMPLETED_PROPERTY] = g_param_spec_boolean ("show-completed", "show-completed", "show-completed", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_SORT_ORDER_PROPERTY, objects_project_properties[OBJECTS_PROJECT_SORT_ORDER_PROPERTY] = g_param_spec_int ("sort-order", "sort-order", "sort-order", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_CHILD_ORDER_PROPERTY, objects_project_properties[OBJECTS_PROJECT_CHILD_ORDER_PROPERTY] = g_param_spec_int ("child-order", "child-order", "child-order", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_VIEW_ID_PROPERTY, objects_project_properties[OBJECTS_PROJECT_VIEW_ID_PROPERTY] = g_param_spec_string ("view-id", "view-id", "view-id", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_PARENT_ID_STRING_PROPERTY, objects_project_properties[OBJECTS_PROJECT_PARENT_ID_STRING_PROPERTY] = g_param_spec_string ("parent-id-string", "parent-id-string", "parent-id-string", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_SHORT_NAME_PROPERTY, objects_project_properties[OBJECTS_PROJECT_SHORT_NAME_PROPERTY] = g_param_spec_string ("short-name", "short-name", "short-name", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_SECTIONS_PROPERTY, objects_project_properties[OBJECTS_PROJECT_SECTIONS_PROPERTY] = g_param_spec_object ("sections", "sections", "sections", GEE_TYPE_ARRAY_LIST, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_ITEMS_PROPERTY, objects_project_properties[OBJECTS_PROJECT_ITEMS_PROPERTY] = g_param_spec_object ("items", "items", "items", GEE_TYPE_ARRAY_LIST, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_SUBPROJECTS_PROPERTY, objects_project_properties[OBJECTS_PROJECT_SUBPROJECTS_PROPERTY] = g_param_spec_object ("subprojects", "subprojects", "subprojects", GEE_TYPE_ARRAY_LIST, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_PARENT_PROPERTY, objects_project_properties[OBJECTS_PROJECT_PARENT_PROPERTY] = g_param_spec_object ("parent", "parent", "parent", OBJECTS_TYPE_PROJECT, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_PROJECT_COUNT_PROPERTY, objects_project_properties[OBJECTS_PROJECT_PROJECT_COUNT_PROPERTY] = g_param_spec_int ("project-count", "project-count", "project-count", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/Project.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_PROJECT_PERCENTAGE_PROPERTY, objects_project_properties[OBJECTS_PROJECT_PERCENTAGE_PROPERTY] = g_param_spec_double ("percentage", "percentage", "percentage", -G_MAXDOUBLE, G_MAXDOUBLE, 0.0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Objects/Project.vala"
	objects_project_signals[OBJECTS_PROJECT_SECTION_ADDED_SIGNAL] = g_signal_new ("section-added", OBJECTS_TYPE_PROJECT, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_SECTION);
#line 1 "../src/Objects/Project.vala"
	objects_project_signals[OBJECTS_PROJECT_SUBPROJECT_ADDED_SIGNAL] = g_signal_new ("subproject-added", OBJECTS_TYPE_PROJECT, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_PROJECT);
#line 1 "../src/Objects/Project.vala"
	objects_project_signals[OBJECTS_PROJECT_ITEM_ADDED_SIGNAL] = g_signal_new ("item-added", OBJECTS_TYPE_PROJECT, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_ITEM);
#line 1 "../src/Objects/Project.vala"
	objects_project_signals[OBJECTS_PROJECT_PROJECT_COUNT_UPDATED_SIGNAL] = g_signal_new ("project-count-updated", OBJECTS_TYPE_PROJECT, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 4187 "Project.c"
}

static void
objects_project_instance_init (ObjectsProject * self,
                               gpointer klass)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
#line 1 "../src/Objects/Project.vala"
	self->priv = objects_project_get_instance_private (self);
#line 2 "../src/Objects/Project.vala"
	self->priv->_parent_id = (gint64) 0;
#line 4 "../src/Objects/Project.vala"
	_tmp0_ = g_strdup ("");
#line 4 "../src/Objects/Project.vala"
	self->priv->_name = _tmp0_;
#line 5 "../src/Objects/Project.vala"
	_tmp1_ = g_strdup ("");
#line 5 "../src/Objects/Project.vala"
	self->priv->_due_date = _tmp1_;
#line 6 "../src/Objects/Project.vala"
	_tmp2_ = g_strdup ("");
#line 6 "../src/Objects/Project.vala"
	self->priv->_color = _tmp2_;
#line 7 "../src/Objects/Project.vala"
	_tmp3_ = g_strdup ("");
#line 7 "../src/Objects/Project.vala"
	self->priv->_emoji = _tmp3_;
#line 8 "../src/Objects/Project.vala"
	self->priv->_view_style = PROJECT_VIEW_STYLE_LIST;
#line 9 "../src/Objects/Project.vala"
	self->priv->_icon_style = PROJECT_ICON_STYLE_PROGRESS;
#line 10 "../src/Objects/Project.vala"
	self->priv->_todoist = FALSE;
#line 11 "../src/Objects/Project.vala"
	self->priv->_inbox_project = FALSE;
#line 12 "../src/Objects/Project.vala"
	self->priv->_team_inbox = FALSE;
#line 13 "../src/Objects/Project.vala"
	self->priv->_is_deleted = FALSE;
#line 14 "../src/Objects/Project.vala"
	self->priv->_is_archived = FALSE;
#line 15 "../src/Objects/Project.vala"
	self->priv->_is_favorite = FALSE;
#line 16 "../src/Objects/Project.vala"
	self->priv->_shared = FALSE;
#line 17 "../src/Objects/Project.vala"
	self->priv->_collapsed = FALSE;
#line 18 "../src/Objects/Project.vala"
	self->priv->_show_completed = FALSE;
#line 20 "../src/Objects/Project.vala"
	self->priv->_sort_order = 0;
#line 21 "../src/Objects/Project.vala"
	self->priv->_child_order = 0;
#line 47 "../src/Objects/Project.vala"
	g_rec_mutex_init (&self->priv->__lock__sections);
#line 55 "../src/Objects/Project.vala"
	g_rec_mutex_init (&self->priv->__lock__items);
#line 63 "../src/Objects/Project.vala"
	g_rec_mutex_init (&self->priv->__lock__subprojects);
#line 83 "../src/Objects/Project.vala"
	self->priv->_project_count = NULL;
#line 98 "../src/Objects/Project.vala"
	self->priv->_percentage = NULL;
#line 1 "../src/Objects/Project.vala"
	g_rec_mutex_init (&self->priv->__lock_subprojects);
#line 4256 "Project.c"
}

static void
objects_project_finalize (GObject * obj)
{
	ObjectsProject * self;
#line 1 "../src/Objects/Project.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, OBJECTS_TYPE_PROJECT, ObjectsProject);
#line 4 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_name);
#line 5 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_due_date);
#line 6 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_color);
#line 7 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_emoji);
#line 23 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_view_id);
#line 31 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_parent_id_string);
#line 39 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_short_name);
#line 47 "../src/Objects/Project.vala"
	g_rec_mutex_clear (&self->priv->__lock__sections);
#line 47 "../src/Objects/Project.vala"
	_g_object_unref0 (self->priv->_sections);
#line 55 "../src/Objects/Project.vala"
	g_rec_mutex_clear (&self->priv->__lock__items);
#line 55 "../src/Objects/Project.vala"
	_g_object_unref0 (self->priv->_items);
#line 63 "../src/Objects/Project.vala"
	g_rec_mutex_clear (&self->priv->__lock__subprojects);
#line 63 "../src/Objects/Project.vala"
	_g_object_unref0 (self->priv->_subprojects);
#line 71 "../src/Objects/Project.vala"
	_g_object_unref0 (self->priv->_parent);
#line 83 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_project_count);
#line 98 "../src/Objects/Project.vala"
	_g_free0 (self->priv->_percentage);
#line 1 "../src/Objects/Project.vala"
	g_rec_mutex_clear (&self->priv->__lock_subprojects);
#line 1 "../src/Objects/Project.vala"
	G_OBJECT_CLASS (objects_project_parent_class)->finalize (obj);
#line 4301 "Project.c"
}

static GType
objects_project_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (ObjectsProjectClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) objects_project_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ObjectsProject), 0, (GInstanceInitFunc) objects_project_instance_init, NULL };
	GType objects_project_type_id;
	objects_project_type_id = g_type_register_static (OBJECTS_TYPE_BASE_OBJECT, "ObjectsProject", &g_define_type_info, 0);
	ObjectsProject_private_offset = g_type_add_instance_private (objects_project_type_id, sizeof (ObjectsProjectPrivate));
	return objects_project_type_id;
}

GType
objects_project_get_type (void)
{
	static volatile gsize objects_project_type_id__volatile = 0;
	if (g_once_init_enter (&objects_project_type_id__volatile)) {
		GType objects_project_type_id;
		objects_project_type_id = objects_project_get_type_once ();
		g_once_init_leave (&objects_project_type_id__volatile, objects_project_type_id);
	}
	return objects_project_type_id__volatile;
}

static void
_vala_objects_project_get_property (GObject * object,
                                    guint property_id,
                                    GValue * value,
                                    GParamSpec * pspec)
{
	ObjectsProject * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, OBJECTS_TYPE_PROJECT, ObjectsProject);
#line 1 "../src/Objects/Project.vala"
	switch (property_id) {
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_PARENT_ID_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_int64 (value, objects_project_get_parent_id (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_NAME_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_string (value, objects_project_get_name (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_DUE_DATE_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_string (value, objects_project_get_due_date (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_COLOR_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_string (value, objects_project_get_color (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_EMOJI_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_string (value, objects_project_get_emoji (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_VIEW_STYLE_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_enum (value, objects_project_get_view_style (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_ICON_STYLE_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_enum (value, objects_project_get_icon_style (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_TODOIST_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_boolean (value, objects_project_get_todoist (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_INBOX_PROJECT_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_boolean (value, objects_project_get_inbox_project (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_TEAM_INBOX_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_boolean (value, objects_project_get_team_inbox (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_IS_DELETED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_boolean (value, objects_project_get_is_deleted (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_IS_ARCHIVED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_boolean (value, objects_project_get_is_archived (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_IS_FAVORITE_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_boolean (value, objects_project_get_is_favorite (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_SHARED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_boolean (value, objects_project_get_shared (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_COLLAPSED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_boolean (value, objects_project_get_collapsed (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_SHOW_COMPLETED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_boolean (value, objects_project_get_show_completed (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_SORT_ORDER_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_int (value, objects_project_get_sort_order (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_CHILD_ORDER_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_int (value, objects_project_get_child_order (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_VIEW_ID_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_string (value, objects_project_get_view_id (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_PARENT_ID_STRING_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_string (value, objects_project_get_parent_id_string (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_SHORT_NAME_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_string (value, objects_project_get_short_name (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_SECTIONS_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_object (value, objects_project_get_sections (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_ITEMS_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_object (value, objects_project_get_items (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_SUBPROJECTS_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_object (value, objects_project_get_subprojects (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_PARENT_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_object (value, objects_project_get_parent (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_PROJECT_COUNT_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_int (value, objects_project_get_project_count (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_PERCENTAGE_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		g_value_set_double (value, objects_project_get_percentage (self));
#line 1 "../src/Objects/Project.vala"
		break;
#line 4498 "Project.c"
		default:
#line 1 "../src/Objects/Project.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Objects/Project.vala"
		break;
#line 4504 "Project.c"
	}
}

static void
_vala_objects_project_set_property (GObject * object,
                                    guint property_id,
                                    const GValue * value,
                                    GParamSpec * pspec)
{
	ObjectsProject * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, OBJECTS_TYPE_PROJECT, ObjectsProject);
#line 1 "../src/Objects/Project.vala"
	switch (property_id) {
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_PARENT_ID_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_parent_id (self, g_value_get_int64 (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_NAME_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_name (self, g_value_get_string (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_DUE_DATE_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_due_date (self, g_value_get_string (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_COLOR_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_color (self, g_value_get_string (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_EMOJI_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_emoji (self, g_value_get_string (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_VIEW_STYLE_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_view_style (self, g_value_get_enum (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_ICON_STYLE_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_icon_style (self, g_value_get_enum (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_TODOIST_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_todoist (self, g_value_get_boolean (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_INBOX_PROJECT_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_inbox_project (self, g_value_get_boolean (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_TEAM_INBOX_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_team_inbox (self, g_value_get_boolean (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_IS_DELETED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_is_deleted (self, g_value_get_boolean (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_IS_ARCHIVED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_is_archived (self, g_value_get_boolean (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_IS_FAVORITE_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_is_favorite (self, g_value_get_boolean (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_SHARED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_shared (self, g_value_get_boolean (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_COLLAPSED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_collapsed (self, g_value_get_boolean (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_SHOW_COMPLETED_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_show_completed (self, g_value_get_boolean (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_SORT_ORDER_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_sort_order (self, g_value_get_int (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_CHILD_ORDER_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_child_order (self, g_value_get_int (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 1 "../src/Objects/Project.vala"
		case OBJECTS_PROJECT_PROJECT_COUNT_PROPERTY:
#line 1 "../src/Objects/Project.vala"
		objects_project_set_project_count (self, g_value_get_int (value));
#line 1 "../src/Objects/Project.vala"
		break;
#line 4632 "Project.c"
		default:
#line 1 "../src/Objects/Project.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Objects/Project.vala"
		break;
#line 4638 "Project.c"
	}
}


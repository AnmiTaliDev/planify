/* DueDate.c generated by valac 0.50.10, the Vala compiler
 * generated from DueDate.vala, do not modify */

#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <json-glib/json-glib.h>

#define OBJECTS_TYPE_DUE_DATE (objects_due_date_get_type ())
#define OBJECTS_DUE_DATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_DUE_DATE, ObjectsDueDate))
#define OBJECTS_DUE_DATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_DUE_DATE, ObjectsDueDateClass))
#define OBJECTS_IS_DUE_DATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_DUE_DATE))
#define OBJECTS_IS_DUE_DATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_DUE_DATE))
#define OBJECTS_DUE_DATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_DUE_DATE, ObjectsDueDateClass))

typedef struct _ObjectsDueDate ObjectsDueDate;
typedef struct _ObjectsDueDateClass ObjectsDueDateClass;
typedef struct _ObjectsDueDatePrivate ObjectsDueDatePrivate;
enum  {
	OBJECTS_DUE_DATE_0_PROPERTY,
	OBJECTS_DUE_DATE_DATE_PROPERTY,
	OBJECTS_DUE_DATE_TIMEZONE_PROPERTY,
	OBJECTS_DUE_DATE_TEXT_PROPERTY,
	OBJECTS_DUE_DATE_LANG_PROPERTY,
	OBJECTS_DUE_DATE_IS_RECURRING_PROPERTY,
	OBJECTS_DUE_DATE_DATETIME_PROPERTY,
	OBJECTS_DUE_DATE_NUM_PROPERTIES
};
static GParamSpec* objects_due_date_properties[OBJECTS_DUE_DATE_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
#define __vala_JsonNode_free0(var) ((var == NULL) ? NULL : (var = (_vala_JsonNode_free (var), NULL)))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define TYPE_UTIL (util_get_type ())
#define UTIL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTIL, Util))
#define UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTIL, UtilClass))
#define IS_UTIL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTIL))
#define IS_UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTIL))
#define UTIL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTIL, UtilClass))

typedef struct _Util Util;
typedef struct _UtilClass UtilClass;

struct _ObjectsDueDate {
	GObject parent_instance;
	ObjectsDueDatePrivate * priv;
};

struct _ObjectsDueDateClass {
	GObjectClass parent_class;
};

struct _ObjectsDueDatePrivate {
	gchar* _date;
	gchar* _timezone;
	gchar* _text;
	gchar* _lang;
	gboolean _is_recurring;
	GDateTime* _datetime;
};

static gint ObjectsDueDate_private_offset;
static gpointer objects_due_date_parent_class = NULL;

GType objects_due_date_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsDueDate, g_object_unref)
ObjectsDueDate* objects_due_date_new_from_json (JsonObject* object);
ObjectsDueDate* objects_due_date_construct_from_json (GType object_type,
                                                      JsonObject* object);
void objects_due_date_update_from_json (ObjectsDueDate* self,
                                        JsonObject* object);
void objects_due_date_set_date (ObjectsDueDate* self,
                                const gchar* value);
void objects_due_date_set_timezone (ObjectsDueDate* self,
                                    const gchar* value);
void objects_due_date_set_text (ObjectsDueDate* self,
                                const gchar* value);
void objects_due_date_set_lang (ObjectsDueDate* self,
                                const gchar* value);
void objects_due_date_set_is_recurring (ObjectsDueDate* self,
                                        gboolean value);
void objects_due_date_reset (ObjectsDueDate* self);
gchar* objects_due_date_to_string (ObjectsDueDate* self);
const gchar* objects_due_date_get_date (ObjectsDueDate* self);
const gchar* objects_due_date_get_timezone (ObjectsDueDate* self);
const gchar* objects_due_date_get_text (ObjectsDueDate* self);
const gchar* objects_due_date_get_lang (ObjectsDueDate* self);
gboolean objects_due_date_get_is_recurring (ObjectsDueDate* self);
static void _vala_JsonNode_free (JsonNode* self);
ObjectsDueDate* objects_due_date_new (void);
ObjectsDueDate* objects_due_date_construct (GType object_type);
GDateTime* objects_due_date_get_datetime (ObjectsDueDate* self);
GType util_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Util, g_object_unref)
Util* util_get_default (void);
GDateTime* util_get_todoist_datetime (Util* self,
                                      const gchar* date);
static GObject * objects_due_date_constructor (GType type,
                                        guint n_construct_properties,
                                        GObjectConstructParam * construct_properties);
static void _objects_due_date___lambda5_ (ObjectsDueDate* self);
static void __objects_due_date___lambda5__g_object_notify (GObject* _sender,
                                                    GParamSpec* pspec,
                                                    gpointer self);
static void objects_due_date_finalize (GObject * obj);
static GType objects_due_date_get_type_once (void);
static void _vala_objects_due_date_get_property (GObject * object,
                                          guint property_id,
                                          GValue * value,
                                          GParamSpec * pspec);
static void _vala_objects_due_date_set_property (GObject * object,
                                          guint property_id,
                                          const GValue * value,
                                          GParamSpec * pspec);

static inline gpointer
objects_due_date_get_instance_private (ObjectsDueDate* self)
{
	return G_STRUCT_MEMBER_P (self, ObjectsDueDate_private_offset);
}

ObjectsDueDate*
objects_due_date_construct_from_json (GType object_type,
                                      JsonObject* object)
{
	ObjectsDueDate * self = NULL;
#line 19 "../src/Objects/DueDate.vala"
	g_return_val_if_fail (object != NULL, NULL);
#line 19 "../src/Objects/DueDate.vala"
	self = (ObjectsDueDate*) g_object_new (object_type, NULL);
#line 20 "../src/Objects/DueDate.vala"
	objects_due_date_update_from_json (self, object);
#line 19 "../src/Objects/DueDate.vala"
	return self;
#line 138 "DueDate.c"
}

ObjectsDueDate*
objects_due_date_new_from_json (JsonObject* object)
{
#line 19 "../src/Objects/DueDate.vala"
	return objects_due_date_construct_from_json (OBJECTS_TYPE_DUE_DATE, object);
#line 146 "DueDate.c"
}

void
objects_due_date_update_from_json (ObjectsDueDate* self,
                                   JsonObject* object)
{
#line 29 "../src/Objects/DueDate.vala"
	g_return_if_fail (self != NULL);
#line 29 "../src/Objects/DueDate.vala"
	g_return_if_fail (object != NULL);
#line 30 "../src/Objects/DueDate.vala"
	if (!json_object_get_null_member (object, "date")) {
#line 159 "DueDate.c"
		const gchar* _tmp0_;
#line 31 "../src/Objects/DueDate.vala"
		_tmp0_ = json_object_get_string_member (object, "date");
#line 31 "../src/Objects/DueDate.vala"
		objects_due_date_set_date (self, _tmp0_);
#line 165 "DueDate.c"
	}
#line 34 "../src/Objects/DueDate.vala"
	if (!json_object_get_null_member (object, "timezone")) {
#line 169 "DueDate.c"
		const gchar* _tmp1_;
#line 35 "../src/Objects/DueDate.vala"
		_tmp1_ = json_object_get_string_member (object, "timezone");
#line 35 "../src/Objects/DueDate.vala"
		objects_due_date_set_timezone (self, _tmp1_);
#line 175 "DueDate.c"
	}
#line 38 "../src/Objects/DueDate.vala"
	if (!json_object_get_null_member (object, "string")) {
#line 179 "DueDate.c"
		const gchar* _tmp2_;
#line 39 "../src/Objects/DueDate.vala"
		_tmp2_ = json_object_get_string_member (object, "string");
#line 39 "../src/Objects/DueDate.vala"
		objects_due_date_set_text (self, _tmp2_);
#line 185 "DueDate.c"
	}
#line 42 "../src/Objects/DueDate.vala"
	if (!json_object_get_null_member (object, "lang")) {
#line 189 "DueDate.c"
		const gchar* _tmp3_;
#line 43 "../src/Objects/DueDate.vala"
		_tmp3_ = json_object_get_string_member (object, "lang");
#line 43 "../src/Objects/DueDate.vala"
		objects_due_date_set_lang (self, _tmp3_);
#line 195 "DueDate.c"
	}
#line 46 "../src/Objects/DueDate.vala"
	if (!json_object_get_null_member (object, "is_recurring")) {
#line 47 "../src/Objects/DueDate.vala"
		objects_due_date_set_is_recurring (self, json_object_get_boolean_member (object, "is_recurring"));
#line 201 "DueDate.c"
	}
}

void
objects_due_date_reset (ObjectsDueDate* self)
{
#line 51 "../src/Objects/DueDate.vala"
	g_return_if_fail (self != NULL);
#line 52 "../src/Objects/DueDate.vala"
	objects_due_date_set_date (self, "");
#line 53 "../src/Objects/DueDate.vala"
	objects_due_date_set_timezone (self, "");
#line 54 "../src/Objects/DueDate.vala"
	objects_due_date_set_text (self, "");
#line 55 "../src/Objects/DueDate.vala"
	objects_due_date_set_lang (self, "");
#line 56 "../src/Objects/DueDate.vala"
	objects_due_date_set_is_recurring (self, FALSE);
#line 220 "DueDate.c"
}

static void
_vala_JsonNode_free (JsonNode* self)
{
#line 84 "../src/Objects/DueDate.vala"
	g_boxed_free (json_node_get_type (), self);
#line 228 "DueDate.c"
}

gchar*
objects_due_date_to_string (ObjectsDueDate* self)
{
	JsonBuilder* builder = NULL;
	JsonBuilder* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	gboolean _tmp5_;
	JsonGenerator* generator = NULL;
	JsonGenerator* _tmp6_;
	JsonNode* root = NULL;
	JsonNode* _tmp7_;
	gchar* _tmp8_;
	gchar* result = NULL;
#line 59 "../src/Objects/DueDate.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 60 "../src/Objects/DueDate.vala"
	_tmp0_ = json_builder_new ();
#line 60 "../src/Objects/DueDate.vala"
	builder = _tmp0_;
#line 61 "../src/Objects/DueDate.vala"
	json_builder_begin_object (builder);
#line 63 "../src/Objects/DueDate.vala"
	json_builder_set_member_name (builder, "date");
#line 64 "../src/Objects/DueDate.vala"
	_tmp1_ = self->priv->_date;
#line 64 "../src/Objects/DueDate.vala"
	json_builder_add_string_value (builder, _tmp1_);
#line 66 "../src/Objects/DueDate.vala"
	json_builder_set_member_name (builder, "timezone");
#line 67 "../src/Objects/DueDate.vala"
	_tmp2_ = self->priv->_timezone;
#line 67 "../src/Objects/DueDate.vala"
	json_builder_add_string_value (builder, _tmp2_);
#line 69 "../src/Objects/DueDate.vala"
	json_builder_set_member_name (builder, "string");
#line 70 "../src/Objects/DueDate.vala"
	_tmp3_ = self->priv->_text;
#line 70 "../src/Objects/DueDate.vala"
	json_builder_add_string_value (builder, _tmp3_);
#line 72 "../src/Objects/DueDate.vala"
	json_builder_set_member_name (builder, "lang");
#line 73 "../src/Objects/DueDate.vala"
	_tmp4_ = self->priv->_lang;
#line 73 "../src/Objects/DueDate.vala"
	json_builder_add_string_value (builder, _tmp4_);
#line 75 "../src/Objects/DueDate.vala"
	json_builder_set_member_name (builder, "is_recurring");
#line 76 "../src/Objects/DueDate.vala"
	_tmp5_ = self->priv->_is_recurring;
#line 76 "../src/Objects/DueDate.vala"
	json_builder_add_boolean_value (builder, _tmp5_);
#line 78 "../src/Objects/DueDate.vala"
	json_builder_end_object (builder);
#line 80 "../src/Objects/DueDate.vala"
	_tmp6_ = json_generator_new ();
#line 80 "../src/Objects/DueDate.vala"
	generator = _tmp6_;
#line 81 "../src/Objects/DueDate.vala"
	_tmp7_ = json_builder_get_root (builder);
#line 81 "../src/Objects/DueDate.vala"
	root = _tmp7_;
#line 82 "../src/Objects/DueDate.vala"
	json_generator_set_root (generator, root);
#line 84 "../src/Objects/DueDate.vala"
	_tmp8_ = json_generator_to_data (generator, NULL);
#line 84 "../src/Objects/DueDate.vala"
	result = _tmp8_;
#line 84 "../src/Objects/DueDate.vala"
	__vala_JsonNode_free0 (root);
#line 84 "../src/Objects/DueDate.vala"
	_g_object_unref0 (generator);
#line 84 "../src/Objects/DueDate.vala"
	_g_object_unref0 (builder);
#line 84 "../src/Objects/DueDate.vala"
	return result;
#line 309 "DueDate.c"
}

ObjectsDueDate*
objects_due_date_construct (GType object_type)
{
	ObjectsDueDate * self = NULL;
#line 1 "../src/Objects/DueDate.vala"
	self = (ObjectsDueDate*) g_object_new (object_type, NULL);
#line 1 "../src/Objects/DueDate.vala"
	return self;
#line 320 "DueDate.c"
}

ObjectsDueDate*
objects_due_date_new (void)
{
#line 1 "../src/Objects/DueDate.vala"
	return objects_due_date_construct (OBJECTS_TYPE_DUE_DATE);
#line 328 "DueDate.c"
}

const gchar*
objects_due_date_get_date (ObjectsDueDate* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 2 "../src/Objects/DueDate.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2 "../src/Objects/DueDate.vala"
	_tmp0_ = self->priv->_date;
#line 2 "../src/Objects/DueDate.vala"
	result = _tmp0_;
#line 2 "../src/Objects/DueDate.vala"
	return result;
#line 344 "DueDate.c"
}

void
objects_due_date_set_date (ObjectsDueDate* self,
                           const gchar* value)
{
	gchar* old_value;
#line 2 "../src/Objects/DueDate.vala"
	g_return_if_fail (self != NULL);
#line 2 "../src/Objects/DueDate.vala"
	old_value = objects_due_date_get_date (self);
#line 2 "../src/Objects/DueDate.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 358 "DueDate.c"
		gchar* _tmp0_;
#line 2 "../src/Objects/DueDate.vala"
		_tmp0_ = g_strdup (value);
#line 2 "../src/Objects/DueDate.vala"
		_g_free0 (self->priv->_date);
#line 2 "../src/Objects/DueDate.vala"
		self->priv->_date = _tmp0_;
#line 2 "../src/Objects/DueDate.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_due_date_properties[OBJECTS_DUE_DATE_DATE_PROPERTY]);
#line 368 "DueDate.c"
	}
}

const gchar*
objects_due_date_get_timezone (ObjectsDueDate* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 3 "../src/Objects/DueDate.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 3 "../src/Objects/DueDate.vala"
	_tmp0_ = self->priv->_timezone;
#line 3 "../src/Objects/DueDate.vala"
	result = _tmp0_;
#line 3 "../src/Objects/DueDate.vala"
	return result;
#line 385 "DueDate.c"
}

void
objects_due_date_set_timezone (ObjectsDueDate* self,
                               const gchar* value)
{
	gchar* old_value;
#line 3 "../src/Objects/DueDate.vala"
	g_return_if_fail (self != NULL);
#line 3 "../src/Objects/DueDate.vala"
	old_value = objects_due_date_get_timezone (self);
#line 3 "../src/Objects/DueDate.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 399 "DueDate.c"
		gchar* _tmp0_;
#line 3 "../src/Objects/DueDate.vala"
		_tmp0_ = g_strdup (value);
#line 3 "../src/Objects/DueDate.vala"
		_g_free0 (self->priv->_timezone);
#line 3 "../src/Objects/DueDate.vala"
		self->priv->_timezone = _tmp0_;
#line 3 "../src/Objects/DueDate.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_due_date_properties[OBJECTS_DUE_DATE_TIMEZONE_PROPERTY]);
#line 409 "DueDate.c"
	}
}

const gchar*
objects_due_date_get_text (ObjectsDueDate* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 4 "../src/Objects/DueDate.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 4 "../src/Objects/DueDate.vala"
	_tmp0_ = self->priv->_text;
#line 4 "../src/Objects/DueDate.vala"
	result = _tmp0_;
#line 4 "../src/Objects/DueDate.vala"
	return result;
#line 426 "DueDate.c"
}

void
objects_due_date_set_text (ObjectsDueDate* self,
                           const gchar* value)
{
	gchar* old_value;
#line 4 "../src/Objects/DueDate.vala"
	g_return_if_fail (self != NULL);
#line 4 "../src/Objects/DueDate.vala"
	old_value = objects_due_date_get_text (self);
#line 4 "../src/Objects/DueDate.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 440 "DueDate.c"
		gchar* _tmp0_;
#line 4 "../src/Objects/DueDate.vala"
		_tmp0_ = g_strdup (value);
#line 4 "../src/Objects/DueDate.vala"
		_g_free0 (self->priv->_text);
#line 4 "../src/Objects/DueDate.vala"
		self->priv->_text = _tmp0_;
#line 4 "../src/Objects/DueDate.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_due_date_properties[OBJECTS_DUE_DATE_TEXT_PROPERTY]);
#line 450 "DueDate.c"
	}
}

const gchar*
objects_due_date_get_lang (ObjectsDueDate* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 5 "../src/Objects/DueDate.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 5 "../src/Objects/DueDate.vala"
	_tmp0_ = self->priv->_lang;
#line 5 "../src/Objects/DueDate.vala"
	result = _tmp0_;
#line 5 "../src/Objects/DueDate.vala"
	return result;
#line 467 "DueDate.c"
}

void
objects_due_date_set_lang (ObjectsDueDate* self,
                           const gchar* value)
{
	gchar* old_value;
#line 5 "../src/Objects/DueDate.vala"
	g_return_if_fail (self != NULL);
#line 5 "../src/Objects/DueDate.vala"
	old_value = objects_due_date_get_lang (self);
#line 5 "../src/Objects/DueDate.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 481 "DueDate.c"
		gchar* _tmp0_;
#line 5 "../src/Objects/DueDate.vala"
		_tmp0_ = g_strdup (value);
#line 5 "../src/Objects/DueDate.vala"
		_g_free0 (self->priv->_lang);
#line 5 "../src/Objects/DueDate.vala"
		self->priv->_lang = _tmp0_;
#line 5 "../src/Objects/DueDate.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_due_date_properties[OBJECTS_DUE_DATE_LANG_PROPERTY]);
#line 491 "DueDate.c"
	}
}

gboolean
objects_due_date_get_is_recurring (ObjectsDueDate* self)
{
	gboolean result;
#line 6 "../src/Objects/DueDate.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 6 "../src/Objects/DueDate.vala"
	result = self->priv->_is_recurring;
#line 6 "../src/Objects/DueDate.vala"
	return result;
#line 505 "DueDate.c"
}

void
objects_due_date_set_is_recurring (ObjectsDueDate* self,
                                   gboolean value)
{
	gboolean old_value;
#line 6 "../src/Objects/DueDate.vala"
	g_return_if_fail (self != NULL);
#line 6 "../src/Objects/DueDate.vala"
	old_value = objects_due_date_get_is_recurring (self);
#line 6 "../src/Objects/DueDate.vala"
	if (old_value != value) {
#line 6 "../src/Objects/DueDate.vala"
		self->priv->_is_recurring = value;
#line 6 "../src/Objects/DueDate.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_due_date_properties[OBJECTS_DUE_DATE_IS_RECURRING_PROPERTY]);
#line 523 "DueDate.c"
	}
}

GDateTime*
objects_due_date_get_datetime (ObjectsDueDate* self)
{
	GDateTime* result;
	GDateTime* _tmp0_;
	GDateTime* _tmp5_;
#line 10 "../src/Objects/DueDate.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 11 "../src/Objects/DueDate.vala"
	_tmp0_ = self->priv->_datetime;
#line 11 "../src/Objects/DueDate.vala"
	if (_tmp0_ == NULL) {
#line 539 "DueDate.c"
		Util* _tmp1_;
		Util* _tmp2_;
		const gchar* _tmp3_;
		GDateTime* _tmp4_;
#line 12 "../src/Objects/DueDate.vala"
		_tmp1_ = util_get_default ();
#line 12 "../src/Objects/DueDate.vala"
		_tmp2_ = _tmp1_;
#line 12 "../src/Objects/DueDate.vala"
		_tmp3_ = self->priv->_date;
#line 12 "../src/Objects/DueDate.vala"
		_tmp4_ = util_get_todoist_datetime (_tmp2_, _tmp3_);
#line 12 "../src/Objects/DueDate.vala"
		_g_date_time_unref0 (self->priv->_datetime);
#line 12 "../src/Objects/DueDate.vala"
		self->priv->_datetime = _tmp4_;
#line 12 "../src/Objects/DueDate.vala"
		_g_object_unref0 (_tmp2_);
#line 558 "DueDate.c"
	}
#line 15 "../src/Objects/DueDate.vala"
	_tmp5_ = self->priv->_datetime;
#line 15 "../src/Objects/DueDate.vala"
	result = _tmp5_;
#line 15 "../src/Objects/DueDate.vala"
	return result;
#line 566 "DueDate.c"
}

static void
_objects_due_date___lambda5_ (ObjectsDueDate* self)
{
#line 25 "../src/Objects/DueDate.vala"
	_g_date_time_unref0 (self->priv->_datetime);
#line 25 "../src/Objects/DueDate.vala"
	self->priv->_datetime = NULL;
#line 576 "DueDate.c"
}

static void
__objects_due_date___lambda5__g_object_notify (GObject* _sender,
                                               GParamSpec* pspec,
                                               gpointer self)
{
#line 24 "../src/Objects/DueDate.vala"
	_objects_due_date___lambda5_ ((ObjectsDueDate*) self);
#line 586 "DueDate.c"
}

static GObject *
objects_due_date_constructor (GType type,
                              guint n_construct_properties,
                              GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ObjectsDueDate * self;
#line 23 "../src/Objects/DueDate.vala"
	parent_class = G_OBJECT_CLASS (objects_due_date_parent_class);
#line 23 "../src/Objects/DueDate.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 23 "../src/Objects/DueDate.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, OBJECTS_TYPE_DUE_DATE, ObjectsDueDate);
#line 24 "../src/Objects/DueDate.vala"
	g_signal_connect_object ((GObject*) self, "notify::date", (GCallback) __objects_due_date___lambda5__g_object_notify, self, 0);
#line 23 "../src/Objects/DueDate.vala"
	return obj;
#line 607 "DueDate.c"
}

static void
objects_due_date_class_init (ObjectsDueDateClass * klass,
                             gpointer klass_data)
{
#line 1 "../src/Objects/DueDate.vala"
	objects_due_date_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Objects/DueDate.vala"
	g_type_class_adjust_private_offset (klass, &ObjectsDueDate_private_offset);
#line 1 "../src/Objects/DueDate.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_objects_due_date_get_property;
#line 1 "../src/Objects/DueDate.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_objects_due_date_set_property;
#line 1 "../src/Objects/DueDate.vala"
	G_OBJECT_CLASS (klass)->constructor = objects_due_date_constructor;
#line 1 "../src/Objects/DueDate.vala"
	G_OBJECT_CLASS (klass)->finalize = objects_due_date_finalize;
#line 1 "../src/Objects/DueDate.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_DUE_DATE_DATE_PROPERTY, objects_due_date_properties[OBJECTS_DUE_DATE_DATE_PROPERTY] = g_param_spec_string ("date", "date", "date", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/DueDate.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_DUE_DATE_TIMEZONE_PROPERTY, objects_due_date_properties[OBJECTS_DUE_DATE_TIMEZONE_PROPERTY] = g_param_spec_string ("timezone", "timezone", "timezone", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/DueDate.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_DUE_DATE_TEXT_PROPERTY, objects_due_date_properties[OBJECTS_DUE_DATE_TEXT_PROPERTY] = g_param_spec_string ("text", "text", "text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/DueDate.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_DUE_DATE_LANG_PROPERTY, objects_due_date_properties[OBJECTS_DUE_DATE_LANG_PROPERTY] = g_param_spec_string ("lang", "lang", "lang", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/DueDate.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_DUE_DATE_IS_RECURRING_PROPERTY, objects_due_date_properties[OBJECTS_DUE_DATE_IS_RECURRING_PROPERTY] = g_param_spec_boolean ("is-recurring", "is-recurring", "is-recurring", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Objects/DueDate.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_DUE_DATE_DATETIME_PROPERTY, objects_due_date_properties[OBJECTS_DUE_DATE_DATETIME_PROPERTY] = g_param_spec_boxed ("datetime", "datetime", "datetime", G_TYPE_DATE_TIME, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 638 "DueDate.c"
}

static void
objects_due_date_instance_init (ObjectsDueDate * self,
                                gpointer klass)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
#line 1 "../src/Objects/DueDate.vala"
	self->priv = objects_due_date_get_instance_private (self);
#line 2 "../src/Objects/DueDate.vala"
	_tmp0_ = g_strdup ("");
#line 2 "../src/Objects/DueDate.vala"
	self->priv->_date = _tmp0_;
#line 3 "../src/Objects/DueDate.vala"
	_tmp1_ = g_strdup ("");
#line 3 "../src/Objects/DueDate.vala"
	self->priv->_timezone = _tmp1_;
#line 4 "../src/Objects/DueDate.vala"
	_tmp2_ = g_strdup ("");
#line 4 "../src/Objects/DueDate.vala"
	self->priv->_text = _tmp2_;
#line 5 "../src/Objects/DueDate.vala"
	_tmp3_ = g_strdup ("");
#line 5 "../src/Objects/DueDate.vala"
	self->priv->_lang = _tmp3_;
#line 6 "../src/Objects/DueDate.vala"
	self->priv->_is_recurring = FALSE;
#line 8 "../src/Objects/DueDate.vala"
	self->priv->_datetime = NULL;
#line 671 "DueDate.c"
}

static void
objects_due_date_finalize (GObject * obj)
{
	ObjectsDueDate * self;
#line 1 "../src/Objects/DueDate.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, OBJECTS_TYPE_DUE_DATE, ObjectsDueDate);
#line 2 "../src/Objects/DueDate.vala"
	_g_free0 (self->priv->_date);
#line 3 "../src/Objects/DueDate.vala"
	_g_free0 (self->priv->_timezone);
#line 4 "../src/Objects/DueDate.vala"
	_g_free0 (self->priv->_text);
#line 5 "../src/Objects/DueDate.vala"
	_g_free0 (self->priv->_lang);
#line 8 "../src/Objects/DueDate.vala"
	_g_date_time_unref0 (self->priv->_datetime);
#line 1 "../src/Objects/DueDate.vala"
	G_OBJECT_CLASS (objects_due_date_parent_class)->finalize (obj);
#line 692 "DueDate.c"
}

static GType
objects_due_date_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (ObjectsDueDateClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) objects_due_date_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ObjectsDueDate), 0, (GInstanceInitFunc) objects_due_date_instance_init, NULL };
	GType objects_due_date_type_id;
	objects_due_date_type_id = g_type_register_static (G_TYPE_OBJECT, "ObjectsDueDate", &g_define_type_info, 0);
	ObjectsDueDate_private_offset = g_type_add_instance_private (objects_due_date_type_id, sizeof (ObjectsDueDatePrivate));
	return objects_due_date_type_id;
}

GType
objects_due_date_get_type (void)
{
	static volatile gsize objects_due_date_type_id__volatile = 0;
	if (g_once_init_enter (&objects_due_date_type_id__volatile)) {
		GType objects_due_date_type_id;
		objects_due_date_type_id = objects_due_date_get_type_once ();
		g_once_init_leave (&objects_due_date_type_id__volatile, objects_due_date_type_id);
	}
	return objects_due_date_type_id__volatile;
}

static void
_vala_objects_due_date_get_property (GObject * object,
                                     guint property_id,
                                     GValue * value,
                                     GParamSpec * pspec)
{
	ObjectsDueDate * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, OBJECTS_TYPE_DUE_DATE, ObjectsDueDate);
#line 1 "../src/Objects/DueDate.vala"
	switch (property_id) {
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_DATE_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		g_value_set_string (value, objects_due_date_get_date (self));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_TIMEZONE_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		g_value_set_string (value, objects_due_date_get_timezone (self));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_TEXT_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		g_value_set_string (value, objects_due_date_get_text (self));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_LANG_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		g_value_set_string (value, objects_due_date_get_lang (self));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_IS_RECURRING_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		g_value_set_boolean (value, objects_due_date_get_is_recurring (self));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_DATETIME_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		g_value_set_boxed (value, objects_due_date_get_datetime (self));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 763 "DueDate.c"
		default:
#line 1 "../src/Objects/DueDate.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 769 "DueDate.c"
	}
}

static void
_vala_objects_due_date_set_property (GObject * object,
                                     guint property_id,
                                     const GValue * value,
                                     GParamSpec * pspec)
{
	ObjectsDueDate * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, OBJECTS_TYPE_DUE_DATE, ObjectsDueDate);
#line 1 "../src/Objects/DueDate.vala"
	switch (property_id) {
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_DATE_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		objects_due_date_set_date (self, g_value_get_string (value));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_TIMEZONE_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		objects_due_date_set_timezone (self, g_value_get_string (value));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_TEXT_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		objects_due_date_set_text (self, g_value_get_string (value));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_LANG_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		objects_due_date_set_lang (self, g_value_get_string (value));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 1 "../src/Objects/DueDate.vala"
		case OBJECTS_DUE_DATE_IS_RECURRING_PROPERTY:
#line 1 "../src/Objects/DueDate.vala"
		objects_due_date_set_is_recurring (self, g_value_get_boolean (value));
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 813 "DueDate.c"
		default:
#line 1 "../src/Objects/DueDate.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Objects/DueDate.vala"
		break;
#line 819 "DueDate.c"
	}
}


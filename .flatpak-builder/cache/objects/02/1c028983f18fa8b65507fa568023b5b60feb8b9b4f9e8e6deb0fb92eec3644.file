/* SettingsItem.c generated by valac 0.50.10, the Vala compiler
 * generated from SettingsItem.vala, do not modify */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gio/gio.h>
#include <float.h>
#include <math.h>
#include <granite.h>
#include <gdk/gdk.h>

#define DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM (dialogs_settings_settings_item_get_type ())
#define DIALOGS_SETTINGS_SETTINGS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM, DialogsSettingsSettingsItem))
#define DIALOGS_SETTINGS_SETTINGS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM, DialogsSettingsSettingsItemClass))
#define DIALOGS_SETTINGS_IS_SETTINGS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM))
#define DIALOGS_SETTINGS_IS_SETTINGS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM))
#define DIALOGS_SETTINGS_SETTINGS_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM, DialogsSettingsSettingsItemClass))

typedef struct _DialogsSettingsSettingsItem DialogsSettingsSettingsItem;
typedef struct _DialogsSettingsSettingsItemClass DialogsSettingsSettingsItemClass;
typedef struct _DialogsSettingsSettingsItemPrivate DialogsSettingsSettingsItemPrivate;
enum  {
	DIALOGS_SETTINGS_SETTINGS_ITEM_0_PROPERTY,
	DIALOGS_SETTINGS_SETTINGS_ITEM_ICON_PROPERTY,
	DIALOGS_SETTINGS_SETTINGS_ITEM_TITLE_PROPERTY,
	DIALOGS_SETTINGS_SETTINGS_ITEM_DESCRIPTION_PROPERTY,
	DIALOGS_SETTINGS_SETTINGS_ITEM_NUM_PROPERTIES
};
static GParamSpec* dialogs_settings_settings_item_properties[DIALOGS_SETTINGS_SETTINGS_ITEM_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))

#define WIDGETS_TYPE_DYNAMIC_ICON (widgets_dynamic_icon_get_type ())
#define WIDGETS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIcon))
#define WIDGETS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))
#define WIDGETS_IS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_IS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_DYNAMIC_ICON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))

typedef struct _WidgetsDynamicIcon WidgetsDynamicIcon;
typedef struct _WidgetsDynamicIconClass WidgetsDynamicIconClass;
enum  {
	DIALOGS_SETTINGS_SETTINGS_ITEM_ACTIVATED_SIGNAL,
	DIALOGS_SETTINGS_SETTINGS_ITEM_NUM_SIGNALS
};
static guint dialogs_settings_settings_item_signals[DIALOGS_SETTINGS_SETTINGS_ITEM_NUM_SIGNALS] = {0};

struct _DialogsSettingsSettingsItem {
	GtkEventBox parent_instance;
	DialogsSettingsSettingsItemPrivate * priv;
};

struct _DialogsSettingsSettingsItemClass {
	GtkEventBoxClass parent_class;
};

struct _DialogsSettingsSettingsItemPrivate {
	GtkImage* item_icon;
	GtkLabel* title_label;
	GtkLabel* description_label;
	gchar* _icon;
	gchar* _title;
	gchar* _description;
};

static gint DialogsSettingsSettingsItem_private_offset;
static gpointer dialogs_settings_settings_item_parent_class = NULL;

GType dialogs_settings_settings_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsSettingsSettingsItem, g_object_unref)
DialogsSettingsSettingsItem* dialogs_settings_settings_item_new (const gchar* icon,
                                                                 const gchar* title,
                                                                 const gchar* description);
DialogsSettingsSettingsItem* dialogs_settings_settings_item_construct (GType object_type,
                                                                       const gchar* icon,
                                                                       const gchar* title,
                                                                       const gchar* description);
const gchar* dialogs_settings_settings_item_get_icon (DialogsSettingsSettingsItem* self);
void dialogs_settings_settings_item_set_icon (DialogsSettingsSettingsItem* self,
                                              const gchar* value);
const gchar* dialogs_settings_settings_item_get_title (DialogsSettingsSettingsItem* self);
void dialogs_settings_settings_item_set_title (DialogsSettingsSettingsItem* self,
                                               const gchar* value);
const gchar* dialogs_settings_settings_item_get_description (DialogsSettingsSettingsItem* self);
void dialogs_settings_settings_item_set_description (DialogsSettingsSettingsItem* self,
                                                     const gchar* value);
static GObject * dialogs_settings_settings_item_constructor (GType type,
                                                      guint n_construct_properties,
                                                      GObjectConstructParam * construct_properties);
GType widgets_dynamic_icon_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsDynamicIcon, g_object_unref)
WidgetsDynamicIcon* widgets_dynamic_icon_new (void);
WidgetsDynamicIcon* widgets_dynamic_icon_construct (GType object_type);
void widgets_dynamic_icon_set_size (WidgetsDynamicIcon* self,
                                    gint value);
void widgets_dynamic_icon_update_icon_name (WidgetsDynamicIcon* self,
                                            const gchar* icon_name);
static gboolean _dialogs_settings_settings_item___lambda243_ (DialogsSettingsSettingsItem* self,
                                                       GtkWidget* sender,
                                                       GdkEventButton* evt);
static gboolean __dialogs_settings_settings_item___lambda243__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                                      GdkEventButton* event,
                                                                                      gpointer self);
static void dialogs_settings_settings_item_finalize (GObject * obj);
static GType dialogs_settings_settings_item_get_type_once (void);
static void _vala_dialogs_settings_settings_item_get_property (GObject * object,
                                                        guint property_id,
                                                        GValue * value,
                                                        GParamSpec * pspec);
static void _vala_dialogs_settings_settings_item_set_property (GObject * object,
                                                        guint property_id,
                                                        const GValue * value,
                                                        GParamSpec * pspec);

static inline gpointer
dialogs_settings_settings_item_get_instance_private (DialogsSettingsSettingsItem* self)
{
	return G_STRUCT_MEMBER_P (self, DialogsSettingsSettingsItem_private_offset);
}

DialogsSettingsSettingsItem*
dialogs_settings_settings_item_construct (GType object_type,
                                          const gchar* icon,
                                          const gchar* title,
                                          const gchar* description)
{
	DialogsSettingsSettingsItem * self = NULL;
#line 42 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_val_if_fail (icon != NULL, NULL);
#line 42 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_val_if_fail (title != NULL, NULL);
#line 42 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_val_if_fail (description != NULL, NULL);
#line 43 "../src/Dialogs/Settings/SettingsItem.vala"
	self = (DialogsSettingsSettingsItem*) g_object_new (object_type, "icon", icon, "title", title, "description", description, "hexpand", TRUE, NULL);
#line 42 "../src/Dialogs/Settings/SettingsItem.vala"
	return self;
#line 142 "SettingsItem.c"
}

DialogsSettingsSettingsItem*
dialogs_settings_settings_item_new (const gchar* icon,
                                    const gchar* title,
                                    const gchar* description)
{
#line 42 "../src/Dialogs/Settings/SettingsItem.vala"
	return dialogs_settings_settings_item_construct (DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM, icon, title, description);
#line 152 "SettingsItem.c"
}

const gchar*
dialogs_settings_settings_item_get_icon (DialogsSettingsSettingsItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 8 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 9 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp0_ = self->priv->_icon;
#line 9 "../src/Dialogs/Settings/SettingsItem.vala"
	result = _tmp0_;
#line 9 "../src/Dialogs/Settings/SettingsItem.vala"
	return result;
#line 168 "SettingsItem.c"
}

void
dialogs_settings_settings_item_set_icon (DialogsSettingsSettingsItem* self,
                                         const gchar* value)
{
	gchar* _tmp0_;
	GtkImage* _tmp1_;
	const gchar* _tmp2_;
	GThemedIcon* _tmp3_;
	GThemedIcon* _tmp4_;
#line 12 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_if_fail (self != NULL);
#line 13 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp0_ = g_strdup (value);
#line 13 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_free0 (self->priv->_icon);
#line 13 "../src/Dialogs/Settings/SettingsItem.vala"
	self->priv->_icon = _tmp0_;
#line 14 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp1_ = self->priv->item_icon;
#line 14 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp2_ = self->priv->_icon;
#line 14 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp3_ = (GThemedIcon*) g_themed_icon_new (_tmp2_);
#line 14 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp4_ = _tmp3_;
#line 14 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_set (_tmp1_, "gicon", (GIcon*) _tmp4_, NULL);
#line 14 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_object_unref0 (_tmp4_);
#line 12 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_settings_settings_item_properties[DIALOGS_SETTINGS_SETTINGS_ITEM_ICON_PROPERTY]);
#line 202 "SettingsItem.c"
}

const gchar*
dialogs_settings_settings_item_get_title (DialogsSettingsSettingsItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 20 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 21 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp0_ = self->priv->_title;
#line 21 "../src/Dialogs/Settings/SettingsItem.vala"
	result = _tmp0_;
#line 21 "../src/Dialogs/Settings/SettingsItem.vala"
	return result;
#line 218 "SettingsItem.c"
}

void
dialogs_settings_settings_item_set_title (DialogsSettingsSettingsItem* self,
                                          const gchar* value)
{
	gchar* _tmp0_;
	GtkLabel* _tmp1_;
	const gchar* _tmp2_;
#line 23 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_if_fail (self != NULL);
#line 24 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp0_ = g_strdup (value);
#line 24 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_free0 (self->priv->_title);
#line 24 "../src/Dialogs/Settings/SettingsItem.vala"
	self->priv->_title = _tmp0_;
#line 25 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp1_ = self->priv->title_label;
#line 25 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp2_ = self->priv->_title;
#line 25 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_label_set_label (_tmp1_, _tmp2_);
#line 23 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_settings_settings_item_properties[DIALOGS_SETTINGS_SETTINGS_ITEM_TITLE_PROPERTY]);
#line 244 "SettingsItem.c"
}

const gchar*
dialogs_settings_settings_item_get_description (DialogsSettingsSettingsItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 31 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 32 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp0_ = self->priv->_description;
#line 32 "../src/Dialogs/Settings/SettingsItem.vala"
	result = _tmp0_;
#line 32 "../src/Dialogs/Settings/SettingsItem.vala"
	return result;
#line 260 "SettingsItem.c"
}

void
dialogs_settings_settings_item_set_description (DialogsSettingsSettingsItem* self,
                                                const gchar* value)
{
	gchar* _tmp0_;
	GtkLabel* _tmp1_;
	const gchar* _tmp2_;
#line 34 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_if_fail (self != NULL);
#line 35 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp0_ = g_strdup (value);
#line 35 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_free0 (self->priv->_description);
#line 35 "../src/Dialogs/Settings/SettingsItem.vala"
	self->priv->_description = _tmp0_;
#line 36 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp1_ = self->priv->description_label;
#line 36 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp2_ = self->priv->_description;
#line 36 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_label_set_label (_tmp1_, _tmp2_);
#line 34 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_settings_settings_item_properties[DIALOGS_SETTINGS_SETTINGS_ITEM_DESCRIPTION_PROPERTY]);
#line 286 "SettingsItem.c"
}

static gboolean
_dialogs_settings_settings_item___lambda243_ (DialogsSettingsSettingsItem* self,
                                              GtkWidget* sender,
                                              GdkEventButton* evt)
{
	gboolean _tmp0_ = FALSE;
	GdkEventType _tmp1_;
	gboolean result = FALSE;
#line 92 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_val_if_fail (sender != NULL, FALSE);
#line 92 "../src/Dialogs/Settings/SettingsItem.vala"
	g_return_val_if_fail (evt != NULL, FALSE);
#line 93 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp1_ = evt->type;
#line 93 "../src/Dialogs/Settings/SettingsItem.vala"
	if (_tmp1_ == GDK_BUTTON_PRESS) {
#line 93 "../src/Dialogs/Settings/SettingsItem.vala"
		_tmp0_ = evt->button == ((guint) 1);
#line 307 "SettingsItem.c"
	} else {
#line 93 "../src/Dialogs/Settings/SettingsItem.vala"
		_tmp0_ = FALSE;
#line 311 "SettingsItem.c"
	}
#line 93 "../src/Dialogs/Settings/SettingsItem.vala"
	if (_tmp0_) {
#line 94 "../src/Dialogs/Settings/SettingsItem.vala"
		g_signal_emit (self, dialogs_settings_settings_item_signals[DIALOGS_SETTINGS_SETTINGS_ITEM_ACTIVATED_SIGNAL], 0);
#line 317 "SettingsItem.c"
	}
#line 97 "../src/Dialogs/Settings/SettingsItem.vala"
	result = FALSE;
#line 97 "../src/Dialogs/Settings/SettingsItem.vala"
	return result;
#line 323 "SettingsItem.c"
}

static gboolean
__dialogs_settings_settings_item___lambda243__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                             GdkEventButton* event,
                                                                             gpointer self)
{
	gboolean result;
	result = _dialogs_settings_settings_item___lambda243_ ((DialogsSettingsSettingsItem*) self, _sender, event);
#line 92 "../src/Dialogs/Settings/SettingsItem.vala"
	return result;
#line 335 "SettingsItem.c"
}

static GObject *
dialogs_settings_settings_item_constructor (GType type,
                                            guint n_construct_properties,
                                            GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	DialogsSettingsSettingsItem * self;
	GtkImage* _tmp0_ = NULL;
	GtkLabel* _tmp1_ = NULL;
	GtkLabel* _tmp2_ = NULL;
	GtkLabel* _tmp3_;
	GtkStyleContext* _tmp4_;
	GtkLabel* _tmp5_;
	GtkStyleContext* _tmp6_;
	WidgetsDynamicIcon* forward_image = NULL;
	WidgetsDynamicIcon* _tmp7_ = NULL;
	WidgetsDynamicIcon* _tmp8_;
	WidgetsDynamicIcon* _tmp9_;
	WidgetsDynamicIcon* _tmp10_;
	GtkStyleContext* _tmp11_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp12_ = NULL;
	GtkGrid* _tmp13_;
	GtkImage* _tmp14_;
	GtkGrid* _tmp15_;
	GtkLabel* _tmp16_;
	GtkGrid* _tmp17_;
	GtkLabel* _tmp18_;
	GtkGrid* _tmp19_;
	WidgetsDynamicIcon* _tmp20_;
	GtkGrid* _tmp21_;
#line 51 "../src/Dialogs/Settings/SettingsItem.vala"
	parent_class = G_OBJECT_CLASS (dialogs_settings_settings_item_parent_class);
#line 51 "../src/Dialogs/Settings/SettingsItem.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 51 "../src/Dialogs/Settings/SettingsItem.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM, DialogsSettingsSettingsItem);
#line 52 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp0_ = (GtkImage*) gtk_image_new ();
#line 52 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_image_set_pixel_size (_tmp0_, 27);
#line 52 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_ref_sink (_tmp0_);
#line 52 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_object_unref0 (self->priv->item_icon);
#line 52 "../src/Dialogs/Settings/SettingsItem.vala"
	self->priv->item_icon = _tmp0_;
#line 56 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp1_ = (GtkLabel*) gtk_label_new (NULL);
#line 56 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp1_, GTK_ALIGN_START);
#line 56 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp1_, GTK_ALIGN_END);
#line 56 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_ref_sink (_tmp1_);
#line 56 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_object_unref0 (self->priv->title_label);
#line 56 "../src/Dialogs/Settings/SettingsItem.vala"
	self->priv->title_label = _tmp1_;
#line 61 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp2_ = (GtkLabel*) gtk_label_new (NULL);
#line 61 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp2_, GTK_ALIGN_START);
#line 61 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp2_, GTK_ALIGN_START);
#line 61 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_set (_tmp2_, "wrap", TRUE, NULL);
#line 61 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_label_set_xalign (_tmp2_, (gfloat) 0);
#line 61 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_ref_sink (_tmp2_);
#line 61 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_object_unref0 (self->priv->description_label);
#line 61 "../src/Dialogs/Settings/SettingsItem.vala"
	self->priv->description_label = _tmp2_;
#line 68 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp3_ = self->priv->description_label;
#line 68 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp4_ = gtk_widget_get_style_context ((GtkWidget*) _tmp3_);
#line 68 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_style_context_add_class (_tmp4_, GRANITE_STYLE_CLASS_SMALL_LABEL);
#line 69 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp5_ = self->priv->description_label;
#line 69 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp6_ = gtk_widget_get_style_context ((GtkWidget*) _tmp5_);
#line 69 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_style_context_add_class (_tmp6_, GTK_STYLE_CLASS_DIM_LABEL);
#line 71 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp7_ = widgets_dynamic_icon_new ();
#line 71 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp7_, TRUE);
#line 71 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp7_, GTK_ALIGN_END);
#line 71 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp7_, 6);
#line 71 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_ref_sink (_tmp7_);
#line 71 "../src/Dialogs/Settings/SettingsItem.vala"
	forward_image = _tmp7_;
#line 76 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp8_ = forward_image;
#line 76 "../src/Dialogs/Settings/SettingsItem.vala"
	widgets_dynamic_icon_set_size (_tmp8_, 19);
#line 77 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp9_ = forward_image;
#line 77 "../src/Dialogs/Settings/SettingsItem.vala"
	widgets_dynamic_icon_update_icon_name (_tmp9_, "chevron-right");
#line 78 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp10_ = forward_image;
#line 78 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp11_ = gtk_widget_get_style_context ((GtkWidget*) _tmp10_);
#line 78 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_style_context_add_class (_tmp11_, GTK_STYLE_CLASS_DIM_LABEL);
#line 80 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp12_ = (GtkGrid*) gtk_grid_new ();
#line 80 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_grid_set_column_spacing (_tmp12_, 6);
#line 80 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_grid_set_row_homogeneous (_tmp12_, TRUE);
#line 80 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_ref_sink (_tmp12_);
#line 80 "../src/Dialogs/Settings/SettingsItem.vala"
	main_grid = _tmp12_;
#line 85 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp13_ = main_grid;
#line 85 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp14_ = self->priv->item_icon;
#line 85 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_grid_attach (_tmp13_, (GtkWidget*) _tmp14_, 0, 0, 1, 2);
#line 86 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp15_ = main_grid;
#line 86 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp16_ = self->priv->title_label;
#line 86 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_grid_attach (_tmp15_, (GtkWidget*) _tmp16_, 1, 0, 1, 1);
#line 87 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp17_ = main_grid;
#line 87 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp18_ = self->priv->description_label;
#line 87 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_grid_attach (_tmp17_, (GtkWidget*) _tmp18_, 1, 1, 1, 1);
#line 88 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp19_ = main_grid;
#line 88 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp20_ = forward_image;
#line 88 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_grid_attach (_tmp19_, (GtkWidget*) _tmp20_, 2, 0, 2, 2);
#line 90 "../src/Dialogs/Settings/SettingsItem.vala"
	_tmp21_ = main_grid;
#line 90 "../src/Dialogs/Settings/SettingsItem.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp21_);
#line 92 "../src/Dialogs/Settings/SettingsItem.vala"
	g_signal_connect_object ((GtkWidget*) self, "button-press-event", (GCallback) __dialogs_settings_settings_item___lambda243__gtk_widget_button_press_event, self, 0);
#line 51 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_object_unref0 (main_grid);
#line 51 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_object_unref0 (forward_image);
#line 51 "../src/Dialogs/Settings/SettingsItem.vala"
	return obj;
#line 498 "SettingsItem.c"
}

static void
dialogs_settings_settings_item_class_init (DialogsSettingsSettingsItemClass * klass,
                                           gpointer klass_data)
{
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	dialogs_settings_settings_item_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	g_type_class_adjust_private_offset (klass, &DialogsSettingsSettingsItem_private_offset);
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_dialogs_settings_settings_item_get_property;
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_dialogs_settings_settings_item_set_property;
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	G_OBJECT_CLASS (klass)->constructor = dialogs_settings_settings_item_constructor;
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	G_OBJECT_CLASS (klass)->finalize = dialogs_settings_settings_item_finalize;
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_SETTINGS_SETTINGS_ITEM_ICON_PROPERTY, dialogs_settings_settings_item_properties[DIALOGS_SETTINGS_SETTINGS_ITEM_ICON_PROPERTY] = g_param_spec_string ("icon", "icon", "icon", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_SETTINGS_SETTINGS_ITEM_TITLE_PROPERTY, dialogs_settings_settings_item_properties[DIALOGS_SETTINGS_SETTINGS_ITEM_TITLE_PROPERTY] = g_param_spec_string ("title", "title", "title", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_SETTINGS_SETTINGS_ITEM_DESCRIPTION_PROPERTY, dialogs_settings_settings_item_properties[DIALOGS_SETTINGS_SETTINGS_ITEM_DESCRIPTION_PROPERTY] = g_param_spec_string ("description", "description", "description", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	dialogs_settings_settings_item_signals[DIALOGS_SETTINGS_SETTINGS_ITEM_ACTIVATED_SIGNAL] = g_signal_new ("activated", DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 525 "SettingsItem.c"
}

static void
dialogs_settings_settings_item_instance_init (DialogsSettingsSettingsItem * self,
                                              gpointer klass)
{
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	self->priv = dialogs_settings_settings_item_get_instance_private (self);
#line 534 "SettingsItem.c"
}

static void
dialogs_settings_settings_item_finalize (GObject * obj)
{
	DialogsSettingsSettingsItem * self;
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM, DialogsSettingsSettingsItem);
#line 2 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_object_unref0 (self->priv->item_icon);
#line 3 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_object_unref0 (self->priv->title_label);
#line 4 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_object_unref0 (self->priv->description_label);
#line 6 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_free0 (self->priv->_icon);
#line 18 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_free0 (self->priv->_title);
#line 29 "../src/Dialogs/Settings/SettingsItem.vala"
	_g_free0 (self->priv->_description);
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	G_OBJECT_CLASS (dialogs_settings_settings_item_parent_class)->finalize (obj);
#line 557 "SettingsItem.c"
}

static GType
dialogs_settings_settings_item_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (DialogsSettingsSettingsItemClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) dialogs_settings_settings_item_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (DialogsSettingsSettingsItem), 0, (GInstanceInitFunc) dialogs_settings_settings_item_instance_init, NULL };
	GType dialogs_settings_settings_item_type_id;
	dialogs_settings_settings_item_type_id = g_type_register_static (gtk_event_box_get_type (), "DialogsSettingsSettingsItem", &g_define_type_info, 0);
	DialogsSettingsSettingsItem_private_offset = g_type_add_instance_private (dialogs_settings_settings_item_type_id, sizeof (DialogsSettingsSettingsItemPrivate));
	return dialogs_settings_settings_item_type_id;
}

GType
dialogs_settings_settings_item_get_type (void)
{
	static volatile gsize dialogs_settings_settings_item_type_id__volatile = 0;
	if (g_once_init_enter (&dialogs_settings_settings_item_type_id__volatile)) {
		GType dialogs_settings_settings_item_type_id;
		dialogs_settings_settings_item_type_id = dialogs_settings_settings_item_get_type_once ();
		g_once_init_leave (&dialogs_settings_settings_item_type_id__volatile, dialogs_settings_settings_item_type_id);
	}
	return dialogs_settings_settings_item_type_id__volatile;
}

static void
_vala_dialogs_settings_settings_item_get_property (GObject * object,
                                                   guint property_id,
                                                   GValue * value,
                                                   GParamSpec * pspec)
{
	DialogsSettingsSettingsItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM, DialogsSettingsSettingsItem);
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	switch (property_id) {
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		case DIALOGS_SETTINGS_SETTINGS_ITEM_ICON_PROPERTY:
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		g_value_set_string (value, dialogs_settings_settings_item_get_icon (self));
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		break;
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		case DIALOGS_SETTINGS_SETTINGS_ITEM_TITLE_PROPERTY:
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		g_value_set_string (value, dialogs_settings_settings_item_get_title (self));
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		break;
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		case DIALOGS_SETTINGS_SETTINGS_ITEM_DESCRIPTION_PROPERTY:
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		g_value_set_string (value, dialogs_settings_settings_item_get_description (self));
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		break;
#line 610 "SettingsItem.c"
		default:
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		break;
#line 616 "SettingsItem.c"
	}
}

static void
_vala_dialogs_settings_settings_item_set_property (GObject * object,
                                                   guint property_id,
                                                   const GValue * value,
                                                   GParamSpec * pspec)
{
	DialogsSettingsSettingsItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_SETTINGS_TYPE_SETTINGS_ITEM, DialogsSettingsSettingsItem);
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
	switch (property_id) {
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		case DIALOGS_SETTINGS_SETTINGS_ITEM_ICON_PROPERTY:
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		dialogs_settings_settings_item_set_icon (self, g_value_get_string (value));
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		break;
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		case DIALOGS_SETTINGS_SETTINGS_ITEM_TITLE_PROPERTY:
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		dialogs_settings_settings_item_set_title (self, g_value_get_string (value));
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		break;
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		case DIALOGS_SETTINGS_SETTINGS_ITEM_DESCRIPTION_PROPERTY:
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		dialogs_settings_settings_item_set_description (self, g_value_get_string (value));
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		break;
#line 648 "SettingsItem.c"
		default:
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Dialogs/Settings/SettingsItem.vala"
		break;
#line 654 "SettingsItem.c"
	}
}


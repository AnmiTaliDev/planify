/* TopHeaderProject.c generated by valac 0.50.10, the Vala compiler
 * generated from TopHeaderProject.vala, do not modify */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <handy.h>
#include <glib/gi18n-lib.h>
#include <stdlib.h>
#include <string.h>
#include <gio/gio.h>
#include <float.h>
#include <math.h>

#define WIDGETS_TYPE_TOP_HEADER_PROJECT (widgets_top_header_project_get_type ())
#define WIDGETS_TOP_HEADER_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_TOP_HEADER_PROJECT, WidgetsTopHeaderProject))
#define WIDGETS_TOP_HEADER_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_TOP_HEADER_PROJECT, WidgetsTopHeaderProjectClass))
#define WIDGETS_IS_TOP_HEADER_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_TOP_HEADER_PROJECT))
#define WIDGETS_IS_TOP_HEADER_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_TOP_HEADER_PROJECT))
#define WIDGETS_TOP_HEADER_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_TOP_HEADER_PROJECT, WidgetsTopHeaderProjectClass))

typedef struct _WidgetsTopHeaderProject WidgetsTopHeaderProject;
typedef struct _WidgetsTopHeaderProjectClass WidgetsTopHeaderProjectClass;
typedef struct _WidgetsTopHeaderProjectPrivate WidgetsTopHeaderProjectPrivate;

#define OBJECTS_TYPE_BASE_OBJECT (objects_base_object_get_type ())
#define OBJECTS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObject))
#define OBJECTS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))
#define OBJECTS_IS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_IS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_BASE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))

typedef struct _ObjectsBaseObject ObjectsBaseObject;
typedef struct _ObjectsBaseObjectClass ObjectsBaseObjectClass;

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;
enum  {
	WIDGETS_TOP_HEADER_PROJECT_0_PROPERTY,
	WIDGETS_TOP_HEADER_PROJECT_PROJECT_PROPERTY,
	WIDGETS_TOP_HEADER_PROJECT_NUM_PROPERTIES
};
static GParamSpec* widgets_top_header_project_properties[WIDGETS_TOP_HEADER_PROJECT_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define DIALOGS_CONTEXT_MENU_TYPE_MENU (dialogs_context_menu_menu_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenu))
#define DIALOGS_CONTEXT_MENU_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_IS_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_MENU_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))

typedef struct _DialogsContextMenuMenu DialogsContextMenuMenu;
typedef struct _DialogsContextMenuMenuClass DialogsContextMenuMenuClass;

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM (dialogs_context_menu_menu_item_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItem))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItemClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItemClass))

typedef struct _DialogsContextMenuMenuItem DialogsContextMenuMenuItem;
typedef struct _DialogsContextMenuMenuItemClass DialogsContextMenuMenuItemClass;
typedef struct _Block20Data Block20Data;

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR (dialogs_context_menu_menu_separator_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_SEPARATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR, DialogsContextMenuMenuSeparator))
#define DIALOGS_CONTEXT_MENU_MENU_SEPARATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR, DialogsContextMenuMenuSeparatorClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_SEPARATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR))
#define DIALOGS_CONTEXT_MENU_IS_MENU_SEPARATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR))
#define DIALOGS_CONTEXT_MENU_MENU_SEPARATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR, DialogsContextMenuMenuSeparatorClass))

typedef struct _DialogsContextMenuMenuSeparator DialogsContextMenuMenuSeparator;
typedef struct _DialogsContextMenuMenuSeparatorClass DialogsContextMenuMenuSeparatorClass;

#define DIALOGS_TYPE_PROJECT (dialogs_project_get_type ())
#define DIALOGS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_TYPE_PROJECT, DialogsProject))
#define DIALOGS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_TYPE_PROJECT, DialogsProjectClass))
#define DIALOGS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_TYPE_PROJECT))
#define DIALOGS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_TYPE_PROJECT))
#define DIALOGS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_TYPE_PROJECT, DialogsProjectClass))

typedef struct _DialogsProject DialogsProject;
typedef struct _DialogsProjectClass DialogsProjectClass;

#define OBJECTS_TYPE_SECTION (objects_section_get_type ())
#define OBJECTS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_SECTION, ObjectsSection))
#define OBJECTS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_SECTION, ObjectsSectionClass))
#define OBJECTS_IS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_SECTION))
#define OBJECTS_IS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_SECTION))
#define OBJECTS_SECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_SECTION, ObjectsSectionClass))

typedef struct _ObjectsSection ObjectsSection;
typedef struct _ObjectsSectionClass ObjectsSectionClass;
typedef struct _Block21Data Block21Data;

#define SERVICES_TYPE_TODOIST (services_todoist_get_type ())
#define SERVICES_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_TODOIST, ServicesTodoist))
#define SERVICES_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_TODOIST, ServicesTodoistClass))
#define SERVICES_IS_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_TODOIST))
#define SERVICES_IS_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_TODOIST))
#define SERVICES_TODOIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_TODOIST, ServicesTodoistClass))

typedef struct _ServicesTodoist ServicesTodoist;
typedef struct _ServicesTodoistClass ServicesTodoistClass;
#define _g_free0(var) ((var == NULL) ? NULL : (var = (g_free (var), NULL)))

#define SERVICES_TYPE_EVENT_BUS (services_event_bus_get_type ())
#define SERVICES_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBus))
#define SERVICES_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))
#define SERVICES_IS_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_IS_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_EVENT_BUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))

typedef struct _ServicesEventBus ServicesEventBus;
typedef struct _ServicesEventBusClass ServicesEventBusClass;

#define TYPE_UTIL (util_get_type ())
#define UTIL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTIL, Util))
#define UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTIL, UtilClass))
#define IS_UTIL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTIL))
#define IS_UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTIL))
#define UTIL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTIL, UtilClass))

typedef struct _Util Util;
typedef struct _UtilClass UtilClass;

#define WIDGETS_TYPE_COLOR_POPOVER (widgets_color_popover_get_type ())
#define WIDGETS_COLOR_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopover))
#define WIDGETS_COLOR_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopoverClass))
#define WIDGETS_IS_COLOR_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_COLOR_POPOVER))
#define WIDGETS_IS_COLOR_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_COLOR_POPOVER))
#define WIDGETS_COLOR_POPOVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopoverClass))

typedef struct _WidgetsColorPopover WidgetsColorPopover;
typedef struct _WidgetsColorPopoverClass WidgetsColorPopoverClass;

#define WIDGETS_TYPE_PROJECT_PROGRESS (widgets_project_progress_get_type ())
#define WIDGETS_PROJECT_PROGRESS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_PROJECT_PROGRESS, WidgetsProjectProgress))
#define WIDGETS_PROJECT_PROGRESS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_PROJECT_PROGRESS, WidgetsProjectProgressClass))
#define WIDGETS_IS_PROJECT_PROGRESS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_PROJECT_PROGRESS))
#define WIDGETS_IS_PROJECT_PROGRESS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_PROJECT_PROGRESS))
#define WIDGETS_PROJECT_PROGRESS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_PROJECT_PROGRESS, WidgetsProjectProgressClass))

typedef struct _WidgetsProjectProgress WidgetsProjectProgress;
typedef struct _WidgetsProjectProgressClass WidgetsProjectProgressClass;

#define WIDGETS_TYPE_EDITABLE_LABEL (widgets_editable_label_get_type ())
#define WIDGETS_EDITABLE_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabel))
#define WIDGETS_EDITABLE_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabelClass))
#define WIDGETS_IS_EDITABLE_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_EDITABLE_LABEL))
#define WIDGETS_IS_EDITABLE_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_EDITABLE_LABEL))
#define WIDGETS_EDITABLE_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabelClass))

typedef struct _WidgetsEditableLabel WidgetsEditableLabel;
typedef struct _WidgetsEditableLabelClass WidgetsEditableLabelClass;
typedef struct _Block22Data Block22Data;
typedef struct _WidgetsProjectProgressPrivate WidgetsProjectProgressPrivate;

#define WIDGETS_TYPE_DYNAMIC_ICON (widgets_dynamic_icon_get_type ())
#define WIDGETS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIcon))
#define WIDGETS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))
#define WIDGETS_IS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_IS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_DYNAMIC_ICON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))

typedef struct _WidgetsDynamicIcon WidgetsDynamicIcon;
typedef struct _WidgetsDynamicIconClass WidgetsDynamicIconClass;
typedef enum  {
	PROJECT_ICON_STYLE_PROGRESS,
	PROJECT_ICON_STYLE_EMOJI
} ProjectIconStyle;

#define TYPE_PROJECT_ICON_STYLE (project_icon_style_get_type ())

struct _WidgetsTopHeaderProject {
	GtkEventBox parent_instance;
	WidgetsTopHeaderProjectPrivate * priv;
};

struct _WidgetsTopHeaderProjectClass {
	GtkEventBoxClass parent_class;
};

struct _WidgetsTopHeaderProjectPrivate {
	ObjectsProject* _project;
};

struct _Block20Data {
	int _ref_count_;
	WidgetsTopHeaderProject* self;
	DialogsContextMenuMenu* menu;
	DialogsContextMenuMenuItem* add_section_item;
};

struct _Block21Data {
	int _ref_count_;
	Block20Data * _data20_;
	ObjectsSection* new_section;
};

struct _Block22Data {
	int _ref_count_;
	WidgetsTopHeaderProject* self;
	WidgetsColorPopover* color_popover;
	WidgetsProjectProgress* project_progress;
	GtkLabel* emoji_label;
	GtkStack* progress_emoji_stack;
	GtkStack* icon_progress_stack;
	WidgetsEditableLabel* name_editable;
};

struct _WidgetsProjectProgress {
	GtkBin parent_instance;
	WidgetsProjectProgressPrivate * priv;
	gint subproject_offset;
	gdouble subproject_line_width;
	gdouble line_width;
	gboolean has_subprojects;
	gboolean enable_subprojects;
};

struct _WidgetsProjectProgressClass {
	GtkBinClass parent_class;
};

static gint WidgetsTopHeaderProject_private_offset;
static gpointer widgets_top_header_project_parent_class = NULL;
extern ServicesTodoist* planner_todoist;
extern ServicesEventBus* planner_event_bus;

GType widgets_top_header_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsTopHeaderProject, g_object_unref)
GType objects_base_object_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsBaseObject, g_object_unref)
GType objects_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsProject, g_object_unref)
WidgetsTopHeaderProject* widgets_top_header_project_new (ObjectsProject* project);
WidgetsTopHeaderProject* widgets_top_header_project_construct (GType object_type,
                                                               ObjectsProject* project);
static void widgets_top_header_project_build_content_menu (WidgetsTopHeaderProject* self);
GType dialogs_context_menu_menu_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenu, g_object_unref)
GType dialogs_context_menu_menu_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuItem, g_object_unref)
static Block20Data* block20_data_ref (Block20Data* _data20_);
static void block20_data_unref (void * _userdata_);
DialogsContextMenuMenu* dialogs_context_menu_menu_new (void);
DialogsContextMenuMenu* dialogs_context_menu_menu_construct (GType object_type);
DialogsContextMenuMenuItem* dialogs_context_menu_menu_item_new (const gchar* title,
                                                                const gchar* icon_name);
DialogsContextMenuMenuItem* dialogs_context_menu_menu_item_construct (GType object_type,
                                                                      const gchar* title,
                                                                      const gchar* icon_name);
void dialogs_context_menu_menu_add_item (DialogsContextMenuMenu* self,
                                         GtkWidget* widget);
DialogsContextMenuMenuSeparator* dialogs_context_menu_menu_separator_new (void);
DialogsContextMenuMenuSeparator* dialogs_context_menu_menu_separator_construct (GType object_type);
GType dialogs_context_menu_menu_separator_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuSeparator, g_object_unref)
void dialogs_context_menu_menu_popup (DialogsContextMenuMenu* self);
static void __lambda318_ (Block20Data* _data20_);
void dialogs_context_menu_menu_hide_destroy (DialogsContextMenuMenu* self);
GType dialogs_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsProject, g_object_unref)
ObjectsProject* widgets_top_header_project_get_project (WidgetsTopHeaderProject* self);
DialogsProject* dialogs_project_new (ObjectsProject* project);
DialogsProject* dialogs_project_construct (GType object_type,
                                           ObjectsProject* project);
static void ___lambda318__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                 gpointer self);
static void __lambda319_ (Block20Data* _data20_);
void objects_project_delete (ObjectsProject* self,
                             gboolean confirm);
static void ___lambda319__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                 gpointer self);
static void __lambda320_ (Block20Data* _data20_);
GType objects_section_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsSection, g_object_unref)
static Block21Data* block21_data_ref (Block21Data* _data21_);
static void block21_data_unref (void * _userdata_);
ObjectsSection* objects_section_new (void);
ObjectsSection* objects_section_construct (GType object_type);
gint64 objects_base_object_get_id (ObjectsBaseObject* self);
void objects_section_set_project_id (ObjectsSection* self,
                                     gint64 value);
void objects_section_set_name (ObjectsSection* self,
                               const gchar* value);
void objects_section_set_section_order (ObjectsSection* self,
                                        gint value);
gboolean objects_project_get_todoist (ObjectsProject* self);
void dialogs_context_menu_menu_item_set_is_loading (DialogsContextMenuMenuItem* self,
                                                    gboolean value);
GType services_todoist_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesTodoist, g_object_unref)
void services_todoist_add (ServicesTodoist* self,
                           ObjectsBaseObject* object,
                           GAsyncReadyCallback _callback_,
                           gpointer _user_data_);
gint64* services_todoist_add_finish (ServicesTodoist* self,
                                     GAsyncResult* _res_);
static void ___lambda321_ (Block21Data* _data21_,
                    GObject* obj,
                    GAsyncResult* res);
void objects_base_object_set_id (ObjectsBaseObject* self,
                                 gint64 value);
ObjectsSection* objects_project_add_section_if_not_exists (ObjectsProject* self,
                                                           ObjectsSection* new_section);
static gboolean __lambda322_ (Block21Data* _data21_);
GType services_event_bus_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesEventBus, g_object_unref)
static gboolean ___lambda322__gsource_func (gpointer self);
static void ____lambda321__gasync_ready_callback (GObject* source_object,
                                           GAsyncResult* res,
                                           gpointer self);
GType util_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Util, g_object_unref)
Util* util_get_default (void);
gint64 util_generate_id (Util* self,
                         gint len);
static gboolean ___lambda323_ (Block21Data* _data21_);
static gboolean ____lambda323__gsource_func (gpointer self);
static void ___lambda320__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                 gpointer self);
static void widgets_top_header_project_set_project (WidgetsTopHeaderProject* self,
                                             ObjectsProject* value);
static GObject * widgets_top_header_project_constructor (GType type,
                                                  guint n_construct_properties,
                                                  GObjectConstructParam * construct_properties);
GType widgets_color_popover_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsColorPopover, g_object_unref)
GType widgets_project_progress_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsProjectProgress, g_object_unref)
GType widgets_editable_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsEditableLabel, g_object_unref)
static Block22Data* block22_data_ref (Block22Data* _data22_);
static void block22_data_unref (void * _userdata_);
WidgetsColorPopover* widgets_color_popover_new (void);
WidgetsColorPopover* widgets_color_popover_construct (GType object_type);
const gchar* objects_project_get_color (ObjectsProject* self);
void widgets_color_popover_set_selected (WidgetsColorPopover* self,
                                         const gchar* value);
gchar* util_get_color (Util* self,
                       const gchar* key);
gdouble objects_project_get_percentage (ObjectsProject* self);
WidgetsProjectProgress* widgets_project_progress_new (gint min_d);
WidgetsProjectProgress* widgets_project_progress_construct (GType object_type,
                                                            gint min_d);
void widgets_project_progress_set_progress_fill_color (WidgetsProjectProgress* self,
                                                       const gchar* value);
void widgets_project_progress_set_percentage (WidgetsProjectProgress* self,
                                              gdouble value);
const gchar* objects_project_get_emoji (ObjectsProject* self);
gboolean objects_project_get_inbox_project (ObjectsProject* self);
WidgetsEditableLabel* widgets_editable_label_new (const gchar* title_style,
                                                  const gchar* placeholder_text);
WidgetsEditableLabel* widgets_editable_label_construct (GType object_type,
                                                        const gchar* title_style,
                                                        const gchar* placeholder_text);
void widgets_editable_label_set_editable (WidgetsEditableLabel* self,
                                          gboolean value);
const gchar* objects_project_get_name (ObjectsProject* self);
void widgets_editable_label_set_text (WidgetsEditableLabel* self,
                                      const gchar* value);
GType widgets_dynamic_icon_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsDynamicIcon, g_object_unref)
WidgetsDynamicIcon* widgets_dynamic_icon_new (void);
WidgetsDynamicIcon* widgets_dynamic_icon_construct (GType object_type);
void widgets_dynamic_icon_set_size (WidgetsDynamicIcon* self,
                                    gint value);
void widgets_dynamic_icon_update_icon_name (WidgetsDynamicIcon* self,
                                            const gchar* icon_name);
static gboolean _widgets_top_header_project___lambda326_ (Block22Data* _data22_);
GType project_icon_style_get_type (void) G_GNUC_CONST;
ProjectIconStyle objects_project_get_icon_style (ObjectsProject* self);
static gboolean __widgets_top_header_project___lambda326__gsource_func (gpointer self);
static void _widgets_top_header_project___lambda327_ (Block22Data* _data22_);
const gchar* widgets_editable_label_get_text (WidgetsEditableLabel* self);
void objects_project_set_name (ObjectsProject* self,
                               const gchar* value);
void objects_project_update (ObjectsProject* self,
                             gboolean cloud);
static void __widgets_top_header_project___lambda327__widgets_editable_label_changed (WidgetsEditableLabel* _sender,
                                                                               gpointer self);
static void _widgets_top_header_project___lambda328_ (WidgetsTopHeaderProject* self,
                                               const gchar* color);
void objects_project_set_color (ObjectsProject* self,
                                const gchar* value);
static void __widgets_top_header_project___lambda328__widgets_color_popover_color_changed (WidgetsColorPopover* _sender,
                                                                                    const gchar* color,
                                                                                    gpointer self);
static void _widgets_top_header_project___lambda329_ (Block22Data* _data22_);
static void __widgets_top_header_project___lambda329__objects_base_object_updated (ObjectsBaseObject* _sender,
                                                                            gpointer self);
static void _widgets_top_header_project___lambda330_ (Block22Data* _data22_);
static void __widgets_top_header_project___lambda330__objects_project_project_count_updated (ObjectsProject* _sender,
                                                                                      gpointer self);
static void _widgets_top_header_project___lambda331_ (WidgetsTopHeaderProject* self);
static void __widgets_top_header_project___lambda331__gtk_button_clicked (GtkButton* _sender,
                                                                   gpointer self);
static void widgets_top_header_project_finalize (GObject * obj);
static GType widgets_top_header_project_get_type_once (void);
static void _vala_widgets_top_header_project_get_property (GObject * object,
                                                    guint property_id,
                                                    GValue * value,
                                                    GParamSpec * pspec);
static void _vala_widgets_top_header_project_set_property (GObject * object,
                                                    guint property_id,
                                                    const GValue * value,
                                                    GParamSpec * pspec);

static inline gpointer
widgets_top_header_project_get_instance_private (WidgetsTopHeaderProject* self)
{
	return G_STRUCT_MEMBER_P (self, WidgetsTopHeaderProject_private_offset);
}

WidgetsTopHeaderProject*
widgets_top_header_project_construct (GType object_type,
                                      ObjectsProject* project)
{
	WidgetsTopHeaderProject * self = NULL;
#line 4 "../src/Widgets/TopHeaderProject.vala"
	g_return_val_if_fail (project != NULL, NULL);
#line 5 "../src/Widgets/TopHeaderProject.vala"
	self = (WidgetsTopHeaderProject*) g_object_new (object_type, "project", project, NULL);
#line 4 "../src/Widgets/TopHeaderProject.vala"
	return self;
#line 438 "TopHeaderProject.c"
}

WidgetsTopHeaderProject*
widgets_top_header_project_new (ObjectsProject* project)
{
#line 4 "../src/Widgets/TopHeaderProject.vala"
	return widgets_top_header_project_construct (WIDGETS_TYPE_TOP_HEADER_PROJECT, project);
#line 446 "TopHeaderProject.c"
}

static Block20Data*
block20_data_ref (Block20Data* _data20_)
{
#line 146 "../src/Widgets/TopHeaderProject.vala"
	g_atomic_int_inc (&_data20_->_ref_count_);
#line 146 "../src/Widgets/TopHeaderProject.vala"
	return _data20_;
#line 456 "TopHeaderProject.c"
}

static void
block20_data_unref (void * _userdata_)
{
	Block20Data* _data20_;
	_data20_ = (Block20Data*) _userdata_;
#line 146 "../src/Widgets/TopHeaderProject.vala"
	if (g_atomic_int_dec_and_test (&_data20_->_ref_count_)) {
#line 466 "TopHeaderProject.c"
		WidgetsTopHeaderProject* self;
#line 146 "../src/Widgets/TopHeaderProject.vala"
		self = _data20_->self;
#line 146 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_data20_->add_section_item);
#line 146 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_data20_->menu);
#line 146 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (self);
#line 146 "../src/Widgets/TopHeaderProject.vala"
		g_slice_free (Block20Data, _data20_);
#line 478 "TopHeaderProject.c"
	}
}

static void
__lambda318_ (Block20Data* _data20_)
{
	WidgetsTopHeaderProject* self;
	DialogsProject* dialog = NULL;
	ObjectsProject* _tmp0_;
	DialogsProject* _tmp1_;
#line 163 "../src/Widgets/TopHeaderProject.vala"
	self = _data20_->self;
#line 164 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_hide_destroy (_data20_->menu);
#line 165 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = self->priv->_project;
#line 165 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = dialogs_project_new (_tmp0_);
#line 165 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp1_);
#line 165 "../src/Widgets/TopHeaderProject.vala"
	dialog = _tmp1_;
#line 166 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_show_all ((GtkWidget*) dialog);
#line 163 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (dialog);
#line 505 "TopHeaderProject.c"
}

static void
___lambda318__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                            gpointer self)
{
#line 163 "../src/Widgets/TopHeaderProject.vala"
	__lambda318_ (self);
#line 514 "TopHeaderProject.c"
}

static void
__lambda319_ (Block20Data* _data20_)
{
	WidgetsTopHeaderProject* self;
	ObjectsProject* _tmp0_;
#line 169 "../src/Widgets/TopHeaderProject.vala"
	self = _data20_->self;
#line 170 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_hide_destroy (_data20_->menu);
#line 171 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = self->priv->_project;
#line 171 "../src/Widgets/TopHeaderProject.vala"
	objects_project_delete (_tmp0_, TRUE);
#line 530 "TopHeaderProject.c"
}

static void
___lambda319__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                            gpointer self)
{
#line 169 "../src/Widgets/TopHeaderProject.vala"
	__lambda319_ (self);
#line 539 "TopHeaderProject.c"
}

static Block21Data*
block21_data_ref (Block21Data* _data21_)
{
#line 174 "../src/Widgets/TopHeaderProject.vala"
	g_atomic_int_inc (&_data21_->_ref_count_);
#line 174 "../src/Widgets/TopHeaderProject.vala"
	return _data21_;
#line 549 "TopHeaderProject.c"
}

static void
block21_data_unref (void * _userdata_)
{
	Block21Data* _data21_;
	_data21_ = (Block21Data*) _userdata_;
#line 174 "../src/Widgets/TopHeaderProject.vala"
	if (g_atomic_int_dec_and_test (&_data21_->_ref_count_)) {
#line 559 "TopHeaderProject.c"
		WidgetsTopHeaderProject* self;
#line 174 "../src/Widgets/TopHeaderProject.vala"
		self = _data21_->_data20_->self;
#line 174 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_data21_->new_section);
#line 174 "../src/Widgets/TopHeaderProject.vala"
		block20_data_unref (_data21_->_data20_);
#line 174 "../src/Widgets/TopHeaderProject.vala"
		_data21_->_data20_ = NULL;
#line 174 "../src/Widgets/TopHeaderProject.vala"
		g_slice_free (Block21Data, _data21_);
#line 571 "TopHeaderProject.c"
	}
}

static gboolean
__lambda322_ (Block21Data* _data21_)
{
	Block20Data* _data20_;
	WidgetsTopHeaderProject* self;
	ServicesEventBus* _tmp0_;
	ObjectsSection* _tmp1_;
	gboolean result = FALSE;
#line 187 "../src/Widgets/TopHeaderProject.vala"
	_data20_ = _data21_->_data20_;
#line 187 "../src/Widgets/TopHeaderProject.vala"
	self = _data20_->self;
#line 188 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = planner_event_bus;
#line 188 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = _data21_->new_section;
#line 188 "../src/Widgets/TopHeaderProject.vala"
	g_signal_emit_by_name (_tmp0_, "activate-name-editable-section", _tmp1_);
#line 189 "../src/Widgets/TopHeaderProject.vala"
	result = G_SOURCE_REMOVE;
#line 189 "../src/Widgets/TopHeaderProject.vala"
	return result;
#line 597 "TopHeaderProject.c"
}

static gboolean
___lambda322__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda322_ (self);
#line 187 "../src/Widgets/TopHeaderProject.vala"
	return result;
#line 607 "TopHeaderProject.c"
}

static void
___lambda321_ (Block21Data* _data21_,
               GObject* obj,
               GAsyncResult* res)
{
	Block20Data* _data20_;
	WidgetsTopHeaderProject* self;
	ObjectsSection* _tmp0_;
	ServicesTodoist* _tmp1_;
	gint64* _tmp2_;
	gint64* _tmp3_;
	ObjectsProject* _tmp4_;
	ObjectsSection* _tmp5_;
	ObjectsSection* _tmp6_;
	ObjectsSection* _tmp7_;
#line 182 "../src/Widgets/TopHeaderProject.vala"
	_data20_ = _data21_->_data20_;
#line 182 "../src/Widgets/TopHeaderProject.vala"
	self = _data20_->self;
#line 182 "../src/Widgets/TopHeaderProject.vala"
	g_return_if_fail (res != NULL);
#line 183 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = _data21_->new_section;
#line 183 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = planner_todoist;
#line 183 "../src/Widgets/TopHeaderProject.vala"
	_tmp2_ = services_todoist_add_finish (_tmp1_, res);
#line 183 "../src/Widgets/TopHeaderProject.vala"
	_tmp3_ = _tmp2_;
#line 183 "../src/Widgets/TopHeaderProject.vala"
	objects_base_object_set_id ((ObjectsBaseObject*) _tmp0_, *_tmp3_);
#line 183 "../src/Widgets/TopHeaderProject.vala"
	_g_free0 (_tmp3_);
#line 184 "../src/Widgets/TopHeaderProject.vala"
	_tmp4_ = self->priv->_project;
#line 184 "../src/Widgets/TopHeaderProject.vala"
	_tmp5_ = _data21_->new_section;
#line 184 "../src/Widgets/TopHeaderProject.vala"
	_tmp6_ = objects_project_add_section_if_not_exists (_tmp4_, _tmp5_);
#line 184 "../src/Widgets/TopHeaderProject.vala"
	_tmp7_ = _tmp6_;
#line 184 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (_tmp7_);
#line 185 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_item_set_is_loading (_data20_->add_section_item, FALSE);
#line 187 "../src/Widgets/TopHeaderProject.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 300, ___lambda322__gsource_func, block21_data_ref (_data21_), block21_data_unref);
#line 192 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_hide_destroy (_data20_->menu);
#line 659 "TopHeaderProject.c"
}

static void
____lambda321__gasync_ready_callback (GObject* source_object,
                                      GAsyncResult* res,
                                      gpointer self)
{
#line 182 "../src/Widgets/TopHeaderProject.vala"
	___lambda321_ (self, source_object, res);
#line 182 "../src/Widgets/TopHeaderProject.vala"
	block21_data_unref (self);
#line 671 "TopHeaderProject.c"
}

static gboolean
___lambda323_ (Block21Data* _data21_)
{
	Block20Data* _data20_;
	WidgetsTopHeaderProject* self;
	ServicesEventBus* _tmp0_;
	ObjectsSection* _tmp1_;
	gboolean result = FALSE;
#line 198 "../src/Widgets/TopHeaderProject.vala"
	_data20_ = _data21_->_data20_;
#line 198 "../src/Widgets/TopHeaderProject.vala"
	self = _data20_->self;
#line 199 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = planner_event_bus;
#line 199 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = _data21_->new_section;
#line 199 "../src/Widgets/TopHeaderProject.vala"
	g_signal_emit_by_name (_tmp0_, "activate-name-editable-section", _tmp1_);
#line 200 "../src/Widgets/TopHeaderProject.vala"
	result = G_SOURCE_REMOVE;
#line 200 "../src/Widgets/TopHeaderProject.vala"
	return result;
#line 696 "TopHeaderProject.c"
}

static gboolean
____lambda323__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda323_ (self);
#line 198 "../src/Widgets/TopHeaderProject.vala"
	return result;
#line 706 "TopHeaderProject.c"
}

static void
__lambda320_ (Block20Data* _data20_)
{
	WidgetsTopHeaderProject* self;
	Block21Data* _data21_;
	ObjectsSection* _tmp0_;
	ObjectsSection* _tmp1_;
	ObjectsProject* _tmp2_;
	gint64 _tmp3_;
	gint64 _tmp4_;
	ObjectsSection* _tmp5_;
	ObjectsSection* _tmp6_;
	ObjectsProject* _tmp7_;
	gboolean _tmp8_;
	gboolean _tmp9_;
#line 174 "../src/Widgets/TopHeaderProject.vala"
	self = _data20_->self;
#line 174 "../src/Widgets/TopHeaderProject.vala"
	_data21_ = g_slice_new0 (Block21Data);
#line 174 "../src/Widgets/TopHeaderProject.vala"
	_data21_->_ref_count_ = 1;
#line 174 "../src/Widgets/TopHeaderProject.vala"
	_data21_->_data20_ = block20_data_ref (_data20_);
#line 175 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = objects_section_new ();
#line 175 "../src/Widgets/TopHeaderProject.vala"
	_data21_->new_section = _tmp0_;
#line 176 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = _data21_->new_section;
#line 176 "../src/Widgets/TopHeaderProject.vala"
	_tmp2_ = self->priv->_project;
#line 176 "../src/Widgets/TopHeaderProject.vala"
	_tmp3_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp2_);
#line 176 "../src/Widgets/TopHeaderProject.vala"
	_tmp4_ = _tmp3_;
#line 176 "../src/Widgets/TopHeaderProject.vala"
	objects_section_set_project_id (_tmp1_, _tmp4_);
#line 177 "../src/Widgets/TopHeaderProject.vala"
	_tmp5_ = _data21_->new_section;
#line 177 "../src/Widgets/TopHeaderProject.vala"
	objects_section_set_name (_tmp5_, _ ("New section"));
#line 178 "../src/Widgets/TopHeaderProject.vala"
	_tmp6_ = _data21_->new_section;
#line 178 "../src/Widgets/TopHeaderProject.vala"
	objects_section_set_section_order (_tmp6_, 1);
#line 180 "../src/Widgets/TopHeaderProject.vala"
	_tmp7_ = self->priv->_project;
#line 180 "../src/Widgets/TopHeaderProject.vala"
	_tmp8_ = objects_project_get_todoist (_tmp7_);
#line 180 "../src/Widgets/TopHeaderProject.vala"
	_tmp9_ = _tmp8_;
#line 180 "../src/Widgets/TopHeaderProject.vala"
	if (_tmp9_) {
#line 762 "TopHeaderProject.c"
		ServicesTodoist* _tmp10_;
		ObjectsSection* _tmp11_;
#line 181 "../src/Widgets/TopHeaderProject.vala"
		dialogs_context_menu_menu_item_set_is_loading (_data20_->add_section_item, TRUE);
#line 182 "../src/Widgets/TopHeaderProject.vala"
		_tmp10_ = planner_todoist;
#line 182 "../src/Widgets/TopHeaderProject.vala"
		_tmp11_ = _data21_->new_section;
#line 182 "../src/Widgets/TopHeaderProject.vala"
		services_todoist_add (_tmp10_, (ObjectsBaseObject*) _tmp11_, ____lambda321__gasync_ready_callback, block21_data_ref (_data21_));
#line 773 "TopHeaderProject.c"
	} else {
		ObjectsSection* _tmp12_;
		Util* _tmp13_;
		Util* _tmp14_;
		ObjectsProject* _tmp15_;
		ObjectsSection* _tmp16_;
		ObjectsSection* _tmp17_;
		ObjectsSection* _tmp18_;
#line 195 "../src/Widgets/TopHeaderProject.vala"
		_tmp12_ = _data21_->new_section;
#line 195 "../src/Widgets/TopHeaderProject.vala"
		_tmp13_ = util_get_default ();
#line 195 "../src/Widgets/TopHeaderProject.vala"
		_tmp14_ = _tmp13_;
#line 195 "../src/Widgets/TopHeaderProject.vala"
		objects_base_object_set_id ((ObjectsBaseObject*) _tmp12_, util_generate_id (_tmp14_, 10));
#line 195 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_tmp14_);
#line 196 "../src/Widgets/TopHeaderProject.vala"
		_tmp15_ = self->priv->_project;
#line 196 "../src/Widgets/TopHeaderProject.vala"
		_tmp16_ = _data21_->new_section;
#line 196 "../src/Widgets/TopHeaderProject.vala"
		_tmp17_ = objects_project_add_section_if_not_exists (_tmp15_, _tmp16_);
#line 196 "../src/Widgets/TopHeaderProject.vala"
		_tmp18_ = _tmp17_;
#line 196 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_tmp18_);
#line 198 "../src/Widgets/TopHeaderProject.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 300, ____lambda323__gsource_func, block21_data_ref (_data21_), block21_data_unref);
#line 203 "../src/Widgets/TopHeaderProject.vala"
		dialogs_context_menu_menu_hide_destroy (_data20_->menu);
#line 806 "TopHeaderProject.c"
	}
#line 174 "../src/Widgets/TopHeaderProject.vala"
	block21_data_unref (_data21_);
#line 174 "../src/Widgets/TopHeaderProject.vala"
	_data21_ = NULL;
#line 812 "TopHeaderProject.c"
}

static void
___lambda320__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                            gpointer self)
{
#line 174 "../src/Widgets/TopHeaderProject.vala"
	__lambda320_ (self);
#line 821 "TopHeaderProject.c"
}

static void
widgets_top_header_project_build_content_menu (WidgetsTopHeaderProject* self)
{
	Block20Data* _data20_;
	DialogsContextMenuMenu* _tmp0_;
	DialogsContextMenuMenuItem* edit_item = NULL;
	DialogsContextMenuMenuItem* _tmp1_;
	DialogsContextMenuMenuItem* _tmp2_;
	DialogsContextMenuMenuItem* delete_item = NULL;
	DialogsContextMenuMenuItem* _tmp3_;
	GtkStyleContext* _tmp4_;
	DialogsContextMenuMenuSeparator* _tmp5_;
	DialogsContextMenuMenuSeparator* _tmp6_;
	DialogsContextMenuMenuSeparator* _tmp7_;
	DialogsContextMenuMenuSeparator* _tmp8_;
#line 146 "../src/Widgets/TopHeaderProject.vala"
	g_return_if_fail (self != NULL);
#line 146 "../src/Widgets/TopHeaderProject.vala"
	_data20_ = g_slice_new0 (Block20Data);
#line 146 "../src/Widgets/TopHeaderProject.vala"
	_data20_->_ref_count_ = 1;
#line 146 "../src/Widgets/TopHeaderProject.vala"
	_data20_->self = g_object_ref (self);
#line 147 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = dialogs_context_menu_menu_new ();
#line 147 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp0_);
#line 147 "../src/Widgets/TopHeaderProject.vala"
	_data20_->menu = _tmp0_;
#line 149 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = dialogs_context_menu_menu_item_new (_ ("Edit project"), "planner-edit");
#line 149 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp1_);
#line 149 "../src/Widgets/TopHeaderProject.vala"
	edit_item = _tmp1_;
#line 150 "../src/Widgets/TopHeaderProject.vala"
	_tmp2_ = dialogs_context_menu_menu_item_new (_ ("Add section"), "planner-plus-circle");
#line 150 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp2_);
#line 150 "../src/Widgets/TopHeaderProject.vala"
	_data20_->add_section_item = _tmp2_;
#line 152 "../src/Widgets/TopHeaderProject.vala"
	_tmp3_ = dialogs_context_menu_menu_item_new (_ ("Delete project"), "planner-trash");
#line 152 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp3_);
#line 152 "../src/Widgets/TopHeaderProject.vala"
	delete_item = _tmp3_;
#line 153 "../src/Widgets/TopHeaderProject.vala"
	_tmp4_ = gtk_widget_get_style_context ((GtkWidget*) delete_item);
#line 153 "../src/Widgets/TopHeaderProject.vala"
	gtk_style_context_add_class (_tmp4_, "menu-item-danger");
#line 155 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_add_item (_data20_->menu, (GtkWidget*) edit_item);
#line 156 "../src/Widgets/TopHeaderProject.vala"
	_tmp5_ = dialogs_context_menu_menu_separator_new ();
#line 156 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp5_);
#line 156 "../src/Widgets/TopHeaderProject.vala"
	_tmp6_ = _tmp5_;
#line 156 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_add_item (_data20_->menu, (GtkWidget*) _tmp6_);
#line 156 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (_tmp6_);
#line 157 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_add_item (_data20_->menu, (GtkWidget*) _data20_->add_section_item);
#line 158 "../src/Widgets/TopHeaderProject.vala"
	_tmp7_ = dialogs_context_menu_menu_separator_new ();
#line 158 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp7_);
#line 158 "../src/Widgets/TopHeaderProject.vala"
	_tmp8_ = _tmp7_;
#line 158 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_add_item (_data20_->menu, (GtkWidget*) _tmp8_);
#line 158 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (_tmp8_);
#line 159 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_add_item (_data20_->menu, (GtkWidget*) delete_item);
#line 161 "../src/Widgets/TopHeaderProject.vala"
	dialogs_context_menu_menu_popup (_data20_->menu);
#line 163 "../src/Widgets/TopHeaderProject.vala"
	g_signal_connect_data (edit_item, "activate-item", (GCallback) ___lambda318__dialogs_context_menu_menu_item_activate_item, block20_data_ref (_data20_), (GClosureNotify) block20_data_unref, 0);
#line 169 "../src/Widgets/TopHeaderProject.vala"
	g_signal_connect_data (delete_item, "activate-item", (GCallback) ___lambda319__dialogs_context_menu_menu_item_activate_item, block20_data_ref (_data20_), (GClosureNotify) block20_data_unref, 0);
#line 174 "../src/Widgets/TopHeaderProject.vala"
	g_signal_connect_data (_data20_->add_section_item, "activate-item", (GCallback) ___lambda320__dialogs_context_menu_menu_item_activate_item, block20_data_ref (_data20_), (GClosureNotify) block20_data_unref, 0);
#line 146 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (delete_item);
#line 146 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (edit_item);
#line 146 "../src/Widgets/TopHeaderProject.vala"
	block20_data_unref (_data20_);
#line 146 "../src/Widgets/TopHeaderProject.vala"
	_data20_ = NULL;
#line 917 "TopHeaderProject.c"
}

ObjectsProject*
widgets_top_header_project_get_project (WidgetsTopHeaderProject* self)
{
	ObjectsProject* result;
	ObjectsProject* _tmp0_;
#line 2 "../src/Widgets/TopHeaderProject.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = self->priv->_project;
#line 2 "../src/Widgets/TopHeaderProject.vala"
	result = _tmp0_;
#line 2 "../src/Widgets/TopHeaderProject.vala"
	return result;
#line 933 "TopHeaderProject.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 2 "../src/Widgets/TopHeaderProject.vala"
	return self ? g_object_ref (self) : NULL;
#line 941 "TopHeaderProject.c"
}

static void
widgets_top_header_project_set_project (WidgetsTopHeaderProject* self,
                                        ObjectsProject* value)
{
	ObjectsProject* old_value;
#line 2 "../src/Widgets/TopHeaderProject.vala"
	g_return_if_fail (self != NULL);
#line 2 "../src/Widgets/TopHeaderProject.vala"
	old_value = widgets_top_header_project_get_project (self);
#line 2 "../src/Widgets/TopHeaderProject.vala"
	if (old_value != value) {
#line 955 "TopHeaderProject.c"
		ObjectsProject* _tmp0_;
#line 2 "../src/Widgets/TopHeaderProject.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 2 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (self->priv->_project);
#line 2 "../src/Widgets/TopHeaderProject.vala"
		self->priv->_project = _tmp0_;
#line 2 "../src/Widgets/TopHeaderProject.vala"
		g_object_notify_by_pspec ((GObject *) self, widgets_top_header_project_properties[WIDGETS_TOP_HEADER_PROJECT_PROJECT_PROPERTY]);
#line 965 "TopHeaderProject.c"
	}
}

static Block22Data*
block22_data_ref (Block22Data* _data22_)
{
#line 10 "../src/Widgets/TopHeaderProject.vala"
	g_atomic_int_inc (&_data22_->_ref_count_);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	return _data22_;
#line 976 "TopHeaderProject.c"
}

static void
block22_data_unref (void * _userdata_)
{
	Block22Data* _data22_;
	_data22_ = (Block22Data*) _userdata_;
#line 10 "../src/Widgets/TopHeaderProject.vala"
	if (g_atomic_int_dec_and_test (&_data22_->_ref_count_)) {
#line 986 "TopHeaderProject.c"
		WidgetsTopHeaderProject* self;
#line 10 "../src/Widgets/TopHeaderProject.vala"
		self = _data22_->self;
#line 10 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_data22_->name_editable);
#line 10 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_data22_->icon_progress_stack);
#line 10 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_data22_->progress_emoji_stack);
#line 10 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_data22_->emoji_label);
#line 10 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_data22_->project_progress);
#line 10 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (_data22_->color_popover);
#line 10 "../src/Widgets/TopHeaderProject.vala"
		_g_object_unref0 (self);
#line 10 "../src/Widgets/TopHeaderProject.vala"
		g_slice_free (Block22Data, _data22_);
#line 1006 "TopHeaderProject.c"
	}
}

static gboolean
_widgets_top_header_project___lambda326_ (Block22Data* _data22_)
{
	WidgetsTopHeaderProject* self;
	const gchar* _tmp0_ = NULL;
	ObjectsProject* _tmp1_;
	gboolean _tmp2_;
	gboolean _tmp3_;
	GtkStack* _tmp4_;
	ObjectsProject* _tmp5_;
	ProjectIconStyle _tmp6_;
	ProjectIconStyle _tmp7_;
	gboolean result = FALSE;
#line 101 "../src/Widgets/TopHeaderProject.vala"
	self = _data22_->self;
#line 102 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = self->priv->_project;
#line 102 "../src/Widgets/TopHeaderProject.vala"
	_tmp2_ = objects_project_get_inbox_project (_tmp1_);
#line 102 "../src/Widgets/TopHeaderProject.vala"
	_tmp3_ = _tmp2_;
#line 102 "../src/Widgets/TopHeaderProject.vala"
	if (_tmp3_) {
#line 102 "../src/Widgets/TopHeaderProject.vala"
		_tmp0_ = "icon";
#line 1035 "TopHeaderProject.c"
	} else {
#line 102 "../src/Widgets/TopHeaderProject.vala"
		_tmp0_ = "color";
#line 1039 "TopHeaderProject.c"
	}
#line 102 "../src/Widgets/TopHeaderProject.vala"
	_tmp4_ = _data22_->icon_progress_stack;
#line 102 "../src/Widgets/TopHeaderProject.vala"
	gtk_stack_set_visible_child_name (_tmp4_, _tmp0_);
#line 103 "../src/Widgets/TopHeaderProject.vala"
	_tmp5_ = self->priv->_project;
#line 103 "../src/Widgets/TopHeaderProject.vala"
	_tmp6_ = objects_project_get_icon_style (_tmp5_);
#line 103 "../src/Widgets/TopHeaderProject.vala"
	_tmp7_ = _tmp6_;
#line 103 "../src/Widgets/TopHeaderProject.vala"
	if (_tmp7_ == PROJECT_ICON_STYLE_PROGRESS) {
#line 1053 "TopHeaderProject.c"
		GtkStack* _tmp8_;
#line 104 "../src/Widgets/TopHeaderProject.vala"
		_tmp8_ = _data22_->progress_emoji_stack;
#line 104 "../src/Widgets/TopHeaderProject.vala"
		gtk_stack_set_visible_child_name (_tmp8_, "progress");
#line 1059 "TopHeaderProject.c"
	} else {
		GtkStack* _tmp9_;
#line 106 "../src/Widgets/TopHeaderProject.vala"
		_tmp9_ = _data22_->progress_emoji_stack;
#line 106 "../src/Widgets/TopHeaderProject.vala"
		gtk_stack_set_visible_child_name (_tmp9_, "label");
#line 1066 "TopHeaderProject.c"
	}
#line 109 "../src/Widgets/TopHeaderProject.vala"
	result = G_SOURCE_REMOVE;
#line 109 "../src/Widgets/TopHeaderProject.vala"
	return result;
#line 1072 "TopHeaderProject.c"
}

static gboolean
__widgets_top_header_project___lambda326__gsource_func (gpointer self)
{
	gboolean result;
	result = _widgets_top_header_project___lambda326_ (self);
#line 101 "../src/Widgets/TopHeaderProject.vala"
	return result;
#line 1082 "TopHeaderProject.c"
}

static void
_widgets_top_header_project___lambda327_ (Block22Data* _data22_)
{
	WidgetsTopHeaderProject* self;
	ObjectsProject* _tmp0_;
	WidgetsEditableLabel* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	ObjectsProject* _tmp4_;
#line 112 "../src/Widgets/TopHeaderProject.vala"
	self = _data22_->self;
#line 113 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = self->priv->_project;
#line 113 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = _data22_->name_editable;
#line 113 "../src/Widgets/TopHeaderProject.vala"
	_tmp2_ = widgets_editable_label_get_text (_tmp1_);
#line 113 "../src/Widgets/TopHeaderProject.vala"
	_tmp3_ = _tmp2_;
#line 113 "../src/Widgets/TopHeaderProject.vala"
	objects_project_set_name (_tmp0_, _tmp3_);
#line 114 "../src/Widgets/TopHeaderProject.vala"
	_tmp4_ = self->priv->_project;
#line 114 "../src/Widgets/TopHeaderProject.vala"
	objects_project_update (_tmp4_, TRUE);
#line 1110 "TopHeaderProject.c"
}

static void
__widgets_top_header_project___lambda327__widgets_editable_label_changed (WidgetsEditableLabel* _sender,
                                                                          gpointer self)
{
#line 112 "../src/Widgets/TopHeaderProject.vala"
	_widgets_top_header_project___lambda327_ (self);
#line 1119 "TopHeaderProject.c"
}

static void
_widgets_top_header_project___lambda328_ (WidgetsTopHeaderProject* self,
                                          const gchar* color)
{
	ObjectsProject* _tmp0_;
	ObjectsProject* _tmp1_;
#line 117 "../src/Widgets/TopHeaderProject.vala"
	g_return_if_fail (color != NULL);
#line 118 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = self->priv->_project;
#line 118 "../src/Widgets/TopHeaderProject.vala"
	objects_project_set_color (_tmp0_, color);
#line 119 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = self->priv->_project;
#line 119 "../src/Widgets/TopHeaderProject.vala"
	objects_project_update (_tmp1_, TRUE);
#line 1138 "TopHeaderProject.c"
}

static void
__widgets_top_header_project___lambda328__widgets_color_popover_color_changed (WidgetsColorPopover* _sender,
                                                                               const gchar* color,
                                                                               gpointer self)
{
#line 117 "../src/Widgets/TopHeaderProject.vala"
	_widgets_top_header_project___lambda328_ ((WidgetsTopHeaderProject*) self, color);
#line 1148 "TopHeaderProject.c"
}

static void
_widgets_top_header_project___lambda329_ (Block22Data* _data22_)
{
	WidgetsTopHeaderProject* self;
	WidgetsEditableLabel* _tmp0_;
	ObjectsProject* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	WidgetsColorPopover* _tmp4_;
	ObjectsProject* _tmp5_;
	const gchar* _tmp6_;
	const gchar* _tmp7_;
	WidgetsProjectProgress* _tmp8_;
	Util* _tmp9_;
	Util* _tmp10_;
	ObjectsProject* _tmp11_;
	const gchar* _tmp12_;
	const gchar* _tmp13_;
	gchar* _tmp14_;
	gchar* _tmp15_;
	WidgetsProjectProgress* _tmp16_;
	ObjectsProject* _tmp17_;
	gdouble _tmp18_;
	gdouble _tmp19_;
	GtkLabel* _tmp20_;
	ObjectsProject* _tmp21_;
	const gchar* _tmp22_;
	const gchar* _tmp23_;
	ObjectsProject* _tmp24_;
	ProjectIconStyle _tmp25_;
	ProjectIconStyle _tmp26_;
#line 122 "../src/Widgets/TopHeaderProject.vala"
	self = _data22_->self;
#line 123 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = _data22_->name_editable;
#line 123 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = self->priv->_project;
#line 123 "../src/Widgets/TopHeaderProject.vala"
	_tmp2_ = objects_project_get_name (_tmp1_);
#line 123 "../src/Widgets/TopHeaderProject.vala"
	_tmp3_ = _tmp2_;
#line 123 "../src/Widgets/TopHeaderProject.vala"
	widgets_editable_label_set_text (_tmp0_, _tmp3_);
#line 124 "../src/Widgets/TopHeaderProject.vala"
	_tmp4_ = _data22_->color_popover;
#line 124 "../src/Widgets/TopHeaderProject.vala"
	_tmp5_ = self->priv->_project;
#line 124 "../src/Widgets/TopHeaderProject.vala"
	_tmp6_ = objects_project_get_color (_tmp5_);
#line 124 "../src/Widgets/TopHeaderProject.vala"
	_tmp7_ = _tmp6_;
#line 124 "../src/Widgets/TopHeaderProject.vala"
	widgets_color_popover_set_selected (_tmp4_, _tmp7_);
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_tmp8_ = _data22_->project_progress;
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_tmp9_ = util_get_default ();
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_tmp10_ = _tmp9_;
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_tmp11_ = self->priv->_project;
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_tmp12_ = objects_project_get_color (_tmp11_);
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_tmp13_ = _tmp12_;
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_tmp14_ = util_get_color (_tmp10_, _tmp13_);
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_tmp15_ = _tmp14_;
#line 126 "../src/Widgets/TopHeaderProject.vala"
	widgets_project_progress_set_progress_fill_color (_tmp8_, _tmp15_);
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_g_free0 (_tmp15_);
#line 126 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (_tmp10_);
#line 127 "../src/Widgets/TopHeaderProject.vala"
	_tmp16_ = _data22_->project_progress;
#line 127 "../src/Widgets/TopHeaderProject.vala"
	_tmp17_ = self->priv->_project;
#line 127 "../src/Widgets/TopHeaderProject.vala"
	_tmp18_ = objects_project_get_percentage (_tmp17_);
#line 127 "../src/Widgets/TopHeaderProject.vala"
	_tmp19_ = _tmp18_;
#line 127 "../src/Widgets/TopHeaderProject.vala"
	widgets_project_progress_set_percentage (_tmp16_, _tmp19_);
#line 129 "../src/Widgets/TopHeaderProject.vala"
	_tmp20_ = _data22_->emoji_label;
#line 129 "../src/Widgets/TopHeaderProject.vala"
	_tmp21_ = self->priv->_project;
#line 129 "../src/Widgets/TopHeaderProject.vala"
	_tmp22_ = objects_project_get_emoji (_tmp21_);
#line 129 "../src/Widgets/TopHeaderProject.vala"
	_tmp23_ = _tmp22_;
#line 129 "../src/Widgets/TopHeaderProject.vala"
	gtk_label_set_label (_tmp20_, _tmp23_);
#line 130 "../src/Widgets/TopHeaderProject.vala"
	_tmp24_ = self->priv->_project;
#line 130 "../src/Widgets/TopHeaderProject.vala"
	_tmp25_ = objects_project_get_icon_style (_tmp24_);
#line 130 "../src/Widgets/TopHeaderProject.vala"
	_tmp26_ = _tmp25_;
#line 130 "../src/Widgets/TopHeaderProject.vala"
	if (_tmp26_ == PROJECT_ICON_STYLE_PROGRESS) {
#line 1254 "TopHeaderProject.c"
		GtkStack* _tmp27_;
#line 131 "../src/Widgets/TopHeaderProject.vala"
		_tmp27_ = _data22_->progress_emoji_stack;
#line 131 "../src/Widgets/TopHeaderProject.vala"
		gtk_stack_set_visible_child_name (_tmp27_, "progress");
#line 1260 "TopHeaderProject.c"
	} else {
		GtkStack* _tmp28_;
#line 133 "../src/Widgets/TopHeaderProject.vala"
		_tmp28_ = _data22_->progress_emoji_stack;
#line 133 "../src/Widgets/TopHeaderProject.vala"
		gtk_stack_set_visible_child_name (_tmp28_, "label");
#line 1267 "TopHeaderProject.c"
	}
}

static void
__widgets_top_header_project___lambda329__objects_base_object_updated (ObjectsBaseObject* _sender,
                                                                       gpointer self)
{
#line 122 "../src/Widgets/TopHeaderProject.vala"
	_widgets_top_header_project___lambda329_ (self);
#line 1277 "TopHeaderProject.c"
}

static void
_widgets_top_header_project___lambda330_ (Block22Data* _data22_)
{
	WidgetsTopHeaderProject* self;
	WidgetsProjectProgress* _tmp0_;
	ObjectsProject* _tmp1_;
	gdouble _tmp2_;
	gdouble _tmp3_;
#line 137 "../src/Widgets/TopHeaderProject.vala"
	self = _data22_->self;
#line 138 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = _data22_->project_progress;
#line 138 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = self->priv->_project;
#line 138 "../src/Widgets/TopHeaderProject.vala"
	_tmp2_ = objects_project_get_percentage (_tmp1_);
#line 138 "../src/Widgets/TopHeaderProject.vala"
	_tmp3_ = _tmp2_;
#line 138 "../src/Widgets/TopHeaderProject.vala"
	widgets_project_progress_set_percentage (_tmp0_, _tmp3_);
#line 1300 "TopHeaderProject.c"
}

static void
__widgets_top_header_project___lambda330__objects_project_project_count_updated (ObjectsProject* _sender,
                                                                                 gpointer self)
{
#line 137 "../src/Widgets/TopHeaderProject.vala"
	_widgets_top_header_project___lambda330_ (self);
#line 1309 "TopHeaderProject.c"
}

static void
_widgets_top_header_project___lambda331_ (WidgetsTopHeaderProject* self)
{
#line 142 "../src/Widgets/TopHeaderProject.vala"
	widgets_top_header_project_build_content_menu (self);
#line 1317 "TopHeaderProject.c"
}

static void
__widgets_top_header_project___lambda331__gtk_button_clicked (GtkButton* _sender,
                                                              gpointer self)
{
#line 141 "../src/Widgets/TopHeaderProject.vala"
	_widgets_top_header_project___lambda331_ ((WidgetsTopHeaderProject*) self);
#line 1326 "TopHeaderProject.c"
}

static GObject *
widgets_top_header_project_constructor (GType type,
                                        guint n_construct_properties,
                                        GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsTopHeaderProject * self;
	Block22Data* _data22_;
	WidgetsColorPopover* _tmp0_;
	WidgetsColorPopover* _tmp1_;
	ObjectsProject* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	Util* _tmp5_;
	Util* _tmp6_;
	ObjectsProject* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	gchar* _tmp10_;
	ObjectsProject* _tmp11_;
	gdouble _tmp12_;
	gdouble _tmp13_;
	WidgetsProjectProgress* _tmp14_ = NULL;
	WidgetsProjectProgress* _tmp15_;
	ObjectsProject* _tmp16_;
	const gchar* _tmp17_;
	const gchar* _tmp18_;
	GtkLabel* _tmp19_ = NULL;
	GtkLabel* _tmp20_;
	GtkStyleContext* _tmp21_;
	GtkStack* _tmp22_;
	GtkStack* _tmp23_;
	WidgetsProjectProgress* _tmp24_;
	GtkStack* _tmp25_;
	GtkLabel* _tmp26_;
	GtkMenuButton* progress_button = NULL;
	WidgetsColorPopover* _tmp27_;
	GtkPopover* _tmp28_;
	GtkMenuButton* _tmp29_ = NULL;
	GtkMenuButton* _tmp30_;
	GtkStyleContext* _tmp31_;
	GtkMenuButton* _tmp32_;
	GtkStyleContext* _tmp33_;
	GtkMenuButton* _tmp34_;
	GtkStack* _tmp35_;
	GtkImage* inbox_icon = NULL;
	GThemedIcon* _tmp36_;
	GtkImage* _tmp37_ = NULL;
	GtkStack* _tmp38_ = NULL;
	GtkStack* _tmp39_;
	GtkMenuButton* _tmp40_;
	GtkStack* _tmp41_;
	GtkImage* _tmp42_;
	ObjectsProject* _tmp43_;
	gboolean _tmp44_;
	gboolean _tmp45_;
	WidgetsEditableLabel* _tmp46_ = NULL;
	const gchar* _tmp47_ = NULL;
	ObjectsProject* _tmp48_;
	gboolean _tmp49_;
	gboolean _tmp50_;
	WidgetsEditableLabel* _tmp54_;
	WidgetsDynamicIcon* menu_image = NULL;
	WidgetsDynamicIcon* _tmp55_;
	WidgetsDynamicIcon* _tmp56_;
	WidgetsDynamicIcon* _tmp57_;
	GtkButton* menu_button = NULL;
	GtkButton* _tmp58_ = NULL;
	GtkButton* _tmp59_;
	WidgetsDynamicIcon* _tmp60_;
	GtkButton* _tmp61_;
	GtkStyleContext* _tmp62_;
	WidgetsDynamicIcon* search_image = NULL;
	WidgetsDynamicIcon* _tmp63_;
	WidgetsDynamicIcon* _tmp64_;
	WidgetsDynamicIcon* _tmp65_;
	GtkButton* search_button = NULL;
	GtkButton* _tmp66_ = NULL;
	GtkButton* _tmp67_;
	GtkStyleContext* _tmp68_;
	GtkButton* _tmp69_;
	WidgetsDynamicIcon* _tmp70_;
	GtkBox* projectrow_box = NULL;
	GtkBox* _tmp71_ = NULL;
	GtkBox* _tmp72_;
	GtkStack* _tmp73_;
	GtkBox* _tmp74_;
	WidgetsEditableLabel* _tmp75_;
	GtkBox* _tmp76_;
	GtkButton* _tmp77_;
	GtkBox* _tmp78_;
	GtkButton* _tmp79_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp80_ = NULL;
	GtkGrid* _tmp81_;
	GtkBox* _tmp82_;
	GtkGrid* _tmp83_;
	GtkStack* _tmp84_;
	guint _tmp85_;
	guint _tmp86_;
	WidgetsEditableLabel* _tmp87_;
	WidgetsColorPopover* _tmp88_;
	ObjectsProject* _tmp89_;
	ObjectsProject* _tmp90_;
	GtkButton* _tmp91_;
#line 10 "../src/Widgets/TopHeaderProject.vala"
	parent_class = G_OBJECT_CLASS (widgets_top_header_project_parent_class);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_TOP_HEADER_PROJECT, WidgetsTopHeaderProject);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_data22_ = g_slice_new0 (Block22Data);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_data22_->_ref_count_ = 1;
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_data22_->self = g_object_ref (self);
#line 11 "../src/Widgets/TopHeaderProject.vala"
	_tmp0_ = widgets_color_popover_new ();
#line 11 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp0_);
#line 11 "../src/Widgets/TopHeaderProject.vala"
	_data22_->color_popover = _tmp0_;
#line 12 "../src/Widgets/TopHeaderProject.vala"
	_tmp1_ = _data22_->color_popover;
#line 12 "../src/Widgets/TopHeaderProject.vala"
	_tmp2_ = self->priv->_project;
#line 12 "../src/Widgets/TopHeaderProject.vala"
	_tmp3_ = objects_project_get_color (_tmp2_);
#line 12 "../src/Widgets/TopHeaderProject.vala"
	_tmp4_ = _tmp3_;
#line 12 "../src/Widgets/TopHeaderProject.vala"
	widgets_color_popover_set_selected (_tmp1_, _tmp4_);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp5_ = util_get_default ();
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp6_ = _tmp5_;
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp7_ = self->priv->_project;
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp8_ = objects_project_get_color (_tmp7_);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp9_ = _tmp8_;
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp10_ = util_get_color (_tmp6_, _tmp9_);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp11_ = self->priv->_project;
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp12_ = objects_project_get_percentage (_tmp11_);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp13_ = _tmp12_;
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp14_ = widgets_project_progress_new (18);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp14_->enable_subprojects = TRUE;
#line 14 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp14_, GTK_ALIGN_CENTER);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp14_, GTK_ALIGN_CENTER);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	widgets_project_progress_set_progress_fill_color (_tmp14_, _tmp10_);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_g_free0 (_tmp10_);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	widgets_project_progress_set_percentage (_tmp14_, _tmp13_);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp14_);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_tmp15_ = _tmp14_;
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (_tmp6_);
#line 14 "../src/Widgets/TopHeaderProject.vala"
	_data22_->project_progress = _tmp15_;
#line 22 "../src/Widgets/TopHeaderProject.vala"
	_tmp16_ = self->priv->_project;
#line 22 "../src/Widgets/TopHeaderProject.vala"
	_tmp17_ = objects_project_get_emoji (_tmp16_);
#line 22 "../src/Widgets/TopHeaderProject.vala"
	_tmp18_ = _tmp17_;
#line 22 "../src/Widgets/TopHeaderProject.vala"
	_tmp19_ = (GtkLabel*) gtk_label_new (_tmp18_);
#line 22 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp19_, GTK_ALIGN_CENTER);
#line 22 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp19_);
#line 22 "../src/Widgets/TopHeaderProject.vala"
	_data22_->emoji_label = _tmp19_;
#line 25 "../src/Widgets/TopHeaderProject.vala"
	_tmp20_ = _data22_->emoji_label;
#line 25 "../src/Widgets/TopHeaderProject.vala"
	_tmp21_ = gtk_widget_get_style_context ((GtkWidget*) _tmp20_);
#line 25 "../src/Widgets/TopHeaderProject.vala"
	gtk_style_context_add_class (_tmp21_, "header-title");
#line 27 "../src/Widgets/TopHeaderProject.vala"
	_tmp22_ = (GtkStack*) gtk_stack_new ();
#line 27 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp22_);
#line 27 "../src/Widgets/TopHeaderProject.vala"
	_data22_->progress_emoji_stack = _tmp22_;
#line 28 "../src/Widgets/TopHeaderProject.vala"
	_tmp23_ = _data22_->progress_emoji_stack;
#line 28 "../src/Widgets/TopHeaderProject.vala"
	_tmp24_ = _data22_->project_progress;
#line 28 "../src/Widgets/TopHeaderProject.vala"
	gtk_stack_add_named (_tmp23_, (GtkWidget*) _tmp24_, "progress");
#line 29 "../src/Widgets/TopHeaderProject.vala"
	_tmp25_ = _data22_->progress_emoji_stack;
#line 29 "../src/Widgets/TopHeaderProject.vala"
	_tmp26_ = _data22_->emoji_label;
#line 29 "../src/Widgets/TopHeaderProject.vala"
	gtk_stack_add_named (_tmp25_, (GtkWidget*) _tmp26_, "label");
#line 31 "../src/Widgets/TopHeaderProject.vala"
	_tmp27_ = _data22_->color_popover;
#line 31 "../src/Widgets/TopHeaderProject.vala"
	_tmp28_ = _g_object_ref0 ((GtkPopover*) _tmp27_);
#line 31 "../src/Widgets/TopHeaderProject.vala"
	_tmp29_ = (GtkMenuButton*) gtk_menu_button_new ();
#line 31 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp29_, GTK_ALIGN_CENTER);
#line 31 "../src/Widgets/TopHeaderProject.vala"
	gtk_menu_button_set_popover (_tmp29_, _tmp28_);
#line 31 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (_tmp28_);
#line 31 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp29_);
#line 31 "../src/Widgets/TopHeaderProject.vala"
	progress_button = _tmp29_;
#line 35 "../src/Widgets/TopHeaderProject.vala"
	_tmp30_ = progress_button;
#line 35 "../src/Widgets/TopHeaderProject.vala"
	_tmp31_ = gtk_widget_get_style_context ((GtkWidget*) _tmp30_);
#line 35 "../src/Widgets/TopHeaderProject.vala"
	gtk_style_context_add_class (_tmp31_, "no-padding");
#line 36 "../src/Widgets/TopHeaderProject.vala"
	_tmp32_ = progress_button;
#line 36 "../src/Widgets/TopHeaderProject.vala"
	_tmp33_ = gtk_widget_get_style_context ((GtkWidget*) _tmp32_);
#line 36 "../src/Widgets/TopHeaderProject.vala"
	gtk_style_context_add_class (_tmp33_, GTK_STYLE_CLASS_FLAT);
#line 37 "../src/Widgets/TopHeaderProject.vala"
	_tmp34_ = progress_button;
#line 37 "../src/Widgets/TopHeaderProject.vala"
	_tmp35_ = _data22_->progress_emoji_stack;
#line 37 "../src/Widgets/TopHeaderProject.vala"
	gtk_container_add ((GtkContainer*) _tmp34_, (GtkWidget*) _tmp35_);
#line 39 "../src/Widgets/TopHeaderProject.vala"
	_tmp36_ = (GThemedIcon*) g_themed_icon_new ("planner-inbox");
#line 39 "../src/Widgets/TopHeaderProject.vala"
	_tmp37_ = (GtkImage*) gtk_image_new ();
#line 39 "../src/Widgets/TopHeaderProject.vala"
	g_object_set (_tmp37_, "gicon", (GIcon*) _tmp36_, NULL);
#line 39 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (_tmp36_);
#line 39 "../src/Widgets/TopHeaderProject.vala"
	gtk_image_set_pixel_size (_tmp37_, 24);
#line 39 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp37_);
#line 39 "../src/Widgets/TopHeaderProject.vala"
	inbox_icon = _tmp37_;
#line 44 "../src/Widgets/TopHeaderProject.vala"
	_tmp38_ = (GtkStack*) gtk_stack_new ();
#line 44 "../src/Widgets/TopHeaderProject.vala"
	gtk_stack_set_transition_type (_tmp38_, GTK_STACK_TRANSITION_TYPE_CROSSFADE);
#line 44 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp38_);
#line 44 "../src/Widgets/TopHeaderProject.vala"
	_data22_->icon_progress_stack = _tmp38_;
#line 48 "../src/Widgets/TopHeaderProject.vala"
	_tmp39_ = _data22_->icon_progress_stack;
#line 48 "../src/Widgets/TopHeaderProject.vala"
	_tmp40_ = progress_button;
#line 48 "../src/Widgets/TopHeaderProject.vala"
	gtk_stack_add_named (_tmp39_, (GtkWidget*) _tmp40_, "color");
#line 49 "../src/Widgets/TopHeaderProject.vala"
	_tmp41_ = _data22_->icon_progress_stack;
#line 49 "../src/Widgets/TopHeaderProject.vala"
	_tmp42_ = inbox_icon;
#line 49 "../src/Widgets/TopHeaderProject.vala"
	gtk_stack_add_named (_tmp41_, (GtkWidget*) _tmp42_, "icon");
#line 51 "../src/Widgets/TopHeaderProject.vala"
	_tmp43_ = self->priv->_project;
#line 51 "../src/Widgets/TopHeaderProject.vala"
	_tmp44_ = objects_project_get_inbox_project (_tmp43_);
#line 51 "../src/Widgets/TopHeaderProject.vala"
	_tmp45_ = _tmp44_;
#line 51 "../src/Widgets/TopHeaderProject.vala"
	_tmp46_ = widgets_editable_label_new ("header-title", "");
#line 51 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp46_, GTK_ALIGN_CENTER);
#line 51 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp46_, TRUE);
#line 51 "../src/Widgets/TopHeaderProject.vala"
	widgets_editable_label_set_editable (_tmp46_, !_tmp45_);
#line 51 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp46_);
#line 51 "../src/Widgets/TopHeaderProject.vala"
	_data22_->name_editable = _tmp46_;
#line 56 "../src/Widgets/TopHeaderProject.vala"
	_tmp48_ = self->priv->_project;
#line 56 "../src/Widgets/TopHeaderProject.vala"
	_tmp49_ = objects_project_get_inbox_project (_tmp48_);
#line 56 "../src/Widgets/TopHeaderProject.vala"
	_tmp50_ = _tmp49_;
#line 56 "../src/Widgets/TopHeaderProject.vala"
	if (_tmp50_) {
#line 56 "../src/Widgets/TopHeaderProject.vala"
		_tmp47_ = _ ("Inbox");
#line 1637 "TopHeaderProject.c"
	} else {
		ObjectsProject* _tmp51_;
		const gchar* _tmp52_;
		const gchar* _tmp53_;
#line 56 "../src/Widgets/TopHeaderProject.vala"
		_tmp51_ = self->priv->_project;
#line 56 "../src/Widgets/TopHeaderProject.vala"
		_tmp52_ = objects_project_get_name (_tmp51_);
#line 56 "../src/Widgets/TopHeaderProject.vala"
		_tmp53_ = _tmp52_;
#line 56 "../src/Widgets/TopHeaderProject.vala"
		_tmp47_ = _tmp53_;
#line 1650 "TopHeaderProject.c"
	}
#line 56 "../src/Widgets/TopHeaderProject.vala"
	_tmp54_ = _data22_->name_editable;
#line 56 "../src/Widgets/TopHeaderProject.vala"
	widgets_editable_label_set_text (_tmp54_, _tmp47_);
#line 58 "../src/Widgets/TopHeaderProject.vala"
	_tmp55_ = widgets_dynamic_icon_new ();
#line 58 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp55_);
#line 58 "../src/Widgets/TopHeaderProject.vala"
	menu_image = _tmp55_;
#line 59 "../src/Widgets/TopHeaderProject.vala"
	_tmp56_ = menu_image;
#line 59 "../src/Widgets/TopHeaderProject.vala"
	widgets_dynamic_icon_set_size (_tmp56_, 19);
#line 60 "../src/Widgets/TopHeaderProject.vala"
	_tmp57_ = menu_image;
#line 60 "../src/Widgets/TopHeaderProject.vala"
	widgets_dynamic_icon_update_icon_name (_tmp57_, "dots-horizontal");
#line 62 "../src/Widgets/TopHeaderProject.vala"
	_tmp58_ = (GtkButton*) gtk_button_new ();
#line 62 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp58_, GTK_ALIGN_CENTER);
#line 62 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp58_, FALSE);
#line 62 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp58_);
#line 62 "../src/Widgets/TopHeaderProject.vala"
	menu_button = _tmp58_;
#line 67 "../src/Widgets/TopHeaderProject.vala"
	_tmp59_ = menu_button;
#line 67 "../src/Widgets/TopHeaderProject.vala"
	_tmp60_ = menu_image;
#line 67 "../src/Widgets/TopHeaderProject.vala"
	gtk_container_add ((GtkContainer*) _tmp59_, (GtkWidget*) _tmp60_);
#line 68 "../src/Widgets/TopHeaderProject.vala"
	_tmp61_ = menu_button;
#line 68 "../src/Widgets/TopHeaderProject.vala"
	_tmp62_ = gtk_widget_get_style_context ((GtkWidget*) _tmp61_);
#line 68 "../src/Widgets/TopHeaderProject.vala"
	gtk_style_context_add_class (_tmp62_, GTK_STYLE_CLASS_FLAT);
#line 70 "../src/Widgets/TopHeaderProject.vala"
	_tmp63_ = widgets_dynamic_icon_new ();
#line 70 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp63_);
#line 70 "../src/Widgets/TopHeaderProject.vala"
	search_image = _tmp63_;
#line 71 "../src/Widgets/TopHeaderProject.vala"
	_tmp64_ = search_image;
#line 71 "../src/Widgets/TopHeaderProject.vala"
	widgets_dynamic_icon_set_size (_tmp64_, 19);
#line 72 "../src/Widgets/TopHeaderProject.vala"
	_tmp65_ = search_image;
#line 72 "../src/Widgets/TopHeaderProject.vala"
	widgets_dynamic_icon_update_icon_name (_tmp65_, "planner-search");
#line 74 "../src/Widgets/TopHeaderProject.vala"
	_tmp66_ = (GtkButton*) gtk_button_new ();
#line 74 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp66_, GTK_ALIGN_CENTER);
#line 74 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp66_, FALSE);
#line 74 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp66_);
#line 74 "../src/Widgets/TopHeaderProject.vala"
	search_button = _tmp66_;
#line 78 "../src/Widgets/TopHeaderProject.vala"
	_tmp67_ = search_button;
#line 78 "../src/Widgets/TopHeaderProject.vala"
	_tmp68_ = gtk_widget_get_style_context ((GtkWidget*) _tmp67_);
#line 78 "../src/Widgets/TopHeaderProject.vala"
	gtk_style_context_add_class (_tmp68_, GTK_STYLE_CLASS_FLAT);
#line 79 "../src/Widgets/TopHeaderProject.vala"
	_tmp69_ = search_button;
#line 79 "../src/Widgets/TopHeaderProject.vala"
	_tmp70_ = search_image;
#line 79 "../src/Widgets/TopHeaderProject.vala"
	gtk_container_add ((GtkContainer*) _tmp69_, (GtkWidget*) _tmp70_);
#line 81 "../src/Widgets/TopHeaderProject.vala"
	_tmp71_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
#line 81 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp71_, GTK_ALIGN_START);
#line 81 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp71_, TRUE);
#line 81 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp71_, 2);
#line 81 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp71_, 6);
#line 81 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp71_);
#line 81 "../src/Widgets/TopHeaderProject.vala"
	projectrow_box = _tmp71_;
#line 88 "../src/Widgets/TopHeaderProject.vala"
	_tmp72_ = projectrow_box;
#line 88 "../src/Widgets/TopHeaderProject.vala"
	_tmp73_ = _data22_->icon_progress_stack;
#line 88 "../src/Widgets/TopHeaderProject.vala"
	gtk_box_pack_start (_tmp72_, (GtkWidget*) _tmp73_, FALSE, FALSE, (guint) 0);
#line 89 "../src/Widgets/TopHeaderProject.vala"
	_tmp74_ = projectrow_box;
#line 89 "../src/Widgets/TopHeaderProject.vala"
	_tmp75_ = _data22_->name_editable;
#line 89 "../src/Widgets/TopHeaderProject.vala"
	gtk_box_pack_start (_tmp74_, (GtkWidget*) _tmp75_, FALSE, TRUE, (guint) 6);
#line 90 "../src/Widgets/TopHeaderProject.vala"
	_tmp76_ = projectrow_box;
#line 90 "../src/Widgets/TopHeaderProject.vala"
	_tmp77_ = menu_button;
#line 90 "../src/Widgets/TopHeaderProject.vala"
	gtk_box_pack_end (_tmp76_, (GtkWidget*) _tmp77_, FALSE, FALSE, (guint) 0);
#line 91 "../src/Widgets/TopHeaderProject.vala"
	_tmp78_ = projectrow_box;
#line 91 "../src/Widgets/TopHeaderProject.vala"
	_tmp79_ = search_button;
#line 91 "../src/Widgets/TopHeaderProject.vala"
	gtk_box_pack_end (_tmp78_, (GtkWidget*) _tmp79_, FALSE, FALSE, (guint) 0);
#line 93 "../src/Widgets/TopHeaderProject.vala"
	_tmp80_ = (GtkGrid*) gtk_grid_new ();
#line 93 "../src/Widgets/TopHeaderProject.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp80_, GTK_ORIENTATION_VERTICAL);
#line 93 "../src/Widgets/TopHeaderProject.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp80_, TRUE);
#line 93 "../src/Widgets/TopHeaderProject.vala"
	g_object_ref_sink (_tmp80_);
#line 93 "../src/Widgets/TopHeaderProject.vala"
	main_grid = _tmp80_;
#line 97 "../src/Widgets/TopHeaderProject.vala"
	_tmp81_ = main_grid;
#line 97 "../src/Widgets/TopHeaderProject.vala"
	_tmp82_ = projectrow_box;
#line 97 "../src/Widgets/TopHeaderProject.vala"
	gtk_container_add ((GtkContainer*) _tmp81_, (GtkWidget*) _tmp82_);
#line 99 "../src/Widgets/TopHeaderProject.vala"
	_tmp83_ = main_grid;
#line 99 "../src/Widgets/TopHeaderProject.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp83_);
#line 101 "../src/Widgets/TopHeaderProject.vala"
	_tmp84_ = _data22_->icon_progress_stack;
#line 101 "../src/Widgets/TopHeaderProject.vala"
	_tmp85_ = gtk_stack_get_transition_duration (_tmp84_);
#line 101 "../src/Widgets/TopHeaderProject.vala"
	_tmp86_ = _tmp85_;
#line 101 "../src/Widgets/TopHeaderProject.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, _tmp86_, __widgets_top_header_project___lambda326__gsource_func, block22_data_ref (_data22_), block22_data_unref);
#line 112 "../src/Widgets/TopHeaderProject.vala"
	_tmp87_ = _data22_->name_editable;
#line 112 "../src/Widgets/TopHeaderProject.vala"
	g_signal_connect_data (_tmp87_, "changed", (GCallback) __widgets_top_header_project___lambda327__widgets_editable_label_changed, block22_data_ref (_data22_), (GClosureNotify) block22_data_unref, 0);
#line 117 "../src/Widgets/TopHeaderProject.vala"
	_tmp88_ = _data22_->color_popover;
#line 117 "../src/Widgets/TopHeaderProject.vala"
	g_signal_connect_object (_tmp88_, "color-changed", (GCallback) __widgets_top_header_project___lambda328__widgets_color_popover_color_changed, self, 0);
#line 122 "../src/Widgets/TopHeaderProject.vala"
	_tmp89_ = self->priv->_project;
#line 122 "../src/Widgets/TopHeaderProject.vala"
	g_signal_connect_data ((ObjectsBaseObject*) _tmp89_, "updated", (GCallback) __widgets_top_header_project___lambda329__objects_base_object_updated, block22_data_ref (_data22_), (GClosureNotify) block22_data_unref, 0);
#line 137 "../src/Widgets/TopHeaderProject.vala"
	_tmp90_ = self->priv->_project;
#line 137 "../src/Widgets/TopHeaderProject.vala"
	g_signal_connect_data (_tmp90_, "project-count-updated", (GCallback) __widgets_top_header_project___lambda330__objects_project_project_count_updated, block22_data_ref (_data22_), (GClosureNotify) block22_data_unref, 0);
#line 141 "../src/Widgets/TopHeaderProject.vala"
	_tmp91_ = menu_button;
#line 141 "../src/Widgets/TopHeaderProject.vala"
	g_signal_connect_object (_tmp91_, "clicked", (GCallback) __widgets_top_header_project___lambda331__gtk_button_clicked, self, 0);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (main_grid);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (projectrow_box);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (search_button);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (search_image);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (menu_button);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (menu_image);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (inbox_icon);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (progress_button);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	block22_data_unref (_data22_);
#line 10 "../src/Widgets/TopHeaderProject.vala"
	_data22_ = NULL;
#line 10 "../src/Widgets/TopHeaderProject.vala"
	return obj;
#line 1836 "TopHeaderProject.c"
}

static void
widgets_top_header_project_class_init (WidgetsTopHeaderProjectClass * klass,
                                       gpointer klass_data)
{
#line 1 "../src/Widgets/TopHeaderProject.vala"
	widgets_top_header_project_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Widgets/TopHeaderProject.vala"
	g_type_class_adjust_private_offset (klass, &WidgetsTopHeaderProject_private_offset);
#line 1 "../src/Widgets/TopHeaderProject.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_widgets_top_header_project_get_property;
#line 1 "../src/Widgets/TopHeaderProject.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_widgets_top_header_project_set_property;
#line 1 "../src/Widgets/TopHeaderProject.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_top_header_project_constructor;
#line 1 "../src/Widgets/TopHeaderProject.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_top_header_project_finalize;
#line 1 "../src/Widgets/TopHeaderProject.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_TOP_HEADER_PROJECT_PROJECT_PROPERTY, widgets_top_header_project_properties[WIDGETS_TOP_HEADER_PROJECT_PROJECT_PROPERTY] = g_param_spec_object ("project", "project", "project", OBJECTS_TYPE_PROJECT, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1857 "TopHeaderProject.c"
}

static void
widgets_top_header_project_instance_init (WidgetsTopHeaderProject * self,
                                          gpointer klass)
{
#line 1 "../src/Widgets/TopHeaderProject.vala"
	self->priv = widgets_top_header_project_get_instance_private (self);
#line 1866 "TopHeaderProject.c"
}

static void
widgets_top_header_project_finalize (GObject * obj)
{
	WidgetsTopHeaderProject * self;
#line 1 "../src/Widgets/TopHeaderProject.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_TOP_HEADER_PROJECT, WidgetsTopHeaderProject);
#line 2 "../src/Widgets/TopHeaderProject.vala"
	_g_object_unref0 (self->priv->_project);
#line 1 "../src/Widgets/TopHeaderProject.vala"
	G_OBJECT_CLASS (widgets_top_header_project_parent_class)->finalize (obj);
#line 1879 "TopHeaderProject.c"
}

static GType
widgets_top_header_project_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (WidgetsTopHeaderProjectClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_top_header_project_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsTopHeaderProject), 0, (GInstanceInitFunc) widgets_top_header_project_instance_init, NULL };
	GType widgets_top_header_project_type_id;
	widgets_top_header_project_type_id = g_type_register_static (gtk_event_box_get_type (), "WidgetsTopHeaderProject", &g_define_type_info, 0);
	WidgetsTopHeaderProject_private_offset = g_type_add_instance_private (widgets_top_header_project_type_id, sizeof (WidgetsTopHeaderProjectPrivate));
	return widgets_top_header_project_type_id;
}

GType
widgets_top_header_project_get_type (void)
{
	static volatile gsize widgets_top_header_project_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_top_header_project_type_id__volatile)) {
		GType widgets_top_header_project_type_id;
		widgets_top_header_project_type_id = widgets_top_header_project_get_type_once ();
		g_once_init_leave (&widgets_top_header_project_type_id__volatile, widgets_top_header_project_type_id);
	}
	return widgets_top_header_project_type_id__volatile;
}

static void
_vala_widgets_top_header_project_get_property (GObject * object,
                                               guint property_id,
                                               GValue * value,
                                               GParamSpec * pspec)
{
	WidgetsTopHeaderProject * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_TOP_HEADER_PROJECT, WidgetsTopHeaderProject);
#line 1 "../src/Widgets/TopHeaderProject.vala"
	switch (property_id) {
#line 1 "../src/Widgets/TopHeaderProject.vala"
		case WIDGETS_TOP_HEADER_PROJECT_PROJECT_PROPERTY:
#line 1 "../src/Widgets/TopHeaderProject.vala"
		g_value_set_object (value, widgets_top_header_project_get_project (self));
#line 1 "../src/Widgets/TopHeaderProject.vala"
		break;
#line 1920 "TopHeaderProject.c"
		default:
#line 1 "../src/Widgets/TopHeaderProject.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Widgets/TopHeaderProject.vala"
		break;
#line 1926 "TopHeaderProject.c"
	}
}

static void
_vala_widgets_top_header_project_set_property (GObject * object,
                                               guint property_id,
                                               const GValue * value,
                                               GParamSpec * pspec)
{
	WidgetsTopHeaderProject * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_TOP_HEADER_PROJECT, WidgetsTopHeaderProject);
#line 1 "../src/Widgets/TopHeaderProject.vala"
	switch (property_id) {
#line 1 "../src/Widgets/TopHeaderProject.vala"
		case WIDGETS_TOP_HEADER_PROJECT_PROJECT_PROPERTY:
#line 1 "../src/Widgets/TopHeaderProject.vala"
		widgets_top_header_project_set_project (self, g_value_get_object (value));
#line 1 "../src/Widgets/TopHeaderProject.vala"
		break;
#line 1946 "TopHeaderProject.c"
		default:
#line 1 "../src/Widgets/TopHeaderProject.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Widgets/TopHeaderProject.vala"
		break;
#line 1952 "TopHeaderProject.c"
	}
}


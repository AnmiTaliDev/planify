/* SettingsContent.c generated by valac 0.50.10, the Vala compiler
 * generated from SettingsContent.vala, do not modify */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <granite.h>

#define DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT (dialogs_settings_settings_content_get_type ())
#define DIALOGS_SETTINGS_SETTINGS_CONTENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT, DialogsSettingsSettingsContent))
#define DIALOGS_SETTINGS_SETTINGS_CONTENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT, DialogsSettingsSettingsContentClass))
#define DIALOGS_SETTINGS_IS_SETTINGS_CONTENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT))
#define DIALOGS_SETTINGS_IS_SETTINGS_CONTENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT))
#define DIALOGS_SETTINGS_SETTINGS_CONTENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT, DialogsSettingsSettingsContentClass))

typedef struct _DialogsSettingsSettingsContent DialogsSettingsSettingsContent;
typedef struct _DialogsSettingsSettingsContentClass DialogsSettingsSettingsContentClass;
typedef struct _DialogsSettingsSettingsContentPrivate DialogsSettingsSettingsContentPrivate;
enum  {
	DIALOGS_SETTINGS_SETTINGS_CONTENT_0_PROPERTY,
	DIALOGS_SETTINGS_SETTINGS_CONTENT_TITLE_PROPERTY,
	DIALOGS_SETTINGS_SETTINGS_CONTENT_NUM_PROPERTIES
};
static GParamSpec* dialogs_settings_settings_content_properties[DIALOGS_SETTINGS_SETTINGS_CONTENT_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _DialogsSettingsSettingsContent {
	GtkEventBox parent_instance;
	DialogsSettingsSettingsContentPrivate * priv;
};

struct _DialogsSettingsSettingsContentClass {
	GtkEventBoxClass parent_class;
};

struct _DialogsSettingsSettingsContentPrivate {
	gchar* _title;
	GtkGrid* content_grid;
};

static gint DialogsSettingsSettingsContent_private_offset;
static gpointer dialogs_settings_settings_content_parent_class = NULL;

GType dialogs_settings_settings_content_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsSettingsSettingsContent, g_object_unref)
DialogsSettingsSettingsContent* dialogs_settings_settings_content_new (const gchar* title);
DialogsSettingsSettingsContent* dialogs_settings_settings_content_construct (GType object_type,
                                                                             const gchar* title);
void dialogs_settings_settings_content_add_child (DialogsSettingsSettingsContent* self,
                                                  GtkWidget* child);
const gchar* dialogs_settings_settings_content_get_title (DialogsSettingsSettingsContent* self);
static void dialogs_settings_settings_content_set_title (DialogsSettingsSettingsContent* self,
                                                  const gchar* value);
static GObject * dialogs_settings_settings_content_constructor (GType type,
                                                         guint n_construct_properties,
                                                         GObjectConstructParam * construct_properties);
static void dialogs_settings_settings_content_finalize (GObject * obj);
static GType dialogs_settings_settings_content_get_type_once (void);
static void _vala_dialogs_settings_settings_content_get_property (GObject * object,
                                                           guint property_id,
                                                           GValue * value,
                                                           GParamSpec * pspec);
static void _vala_dialogs_settings_settings_content_set_property (GObject * object,
                                                           guint property_id,
                                                           const GValue * value,
                                                           GParamSpec * pspec);

static inline gpointer
dialogs_settings_settings_content_get_instance_private (DialogsSettingsSettingsContent* self)
{
	return G_STRUCT_MEMBER_P (self, DialogsSettingsSettingsContent_private_offset);
}

DialogsSettingsSettingsContent*
dialogs_settings_settings_content_construct (GType object_type,
                                             const gchar* title)
{
	DialogsSettingsSettingsContent * self = NULL;
#line 7 "../src/Dialogs/Settings/SettingsContent.vala"
	self = (DialogsSettingsSettingsContent*) g_object_new (object_type, "title", title, "margin", 12, "margin-top", 0, NULL);
#line 6 "../src/Dialogs/Settings/SettingsContent.vala"
	return self;
#line 87 "SettingsContent.c"
}

DialogsSettingsSettingsContent*
dialogs_settings_settings_content_new (const gchar* title)
{
#line 6 "../src/Dialogs/Settings/SettingsContent.vala"
	return dialogs_settings_settings_content_construct (DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT, title);
#line 95 "SettingsContent.c"
}

void
dialogs_settings_settings_content_add_child (DialogsSettingsSettingsContent* self,
                                             GtkWidget* child)
{
	GtkGrid* _tmp0_;
	GtkGrid* _tmp1_;
#line 44 "../src/Dialogs/Settings/SettingsContent.vala"
	g_return_if_fail (self != NULL);
#line 44 "../src/Dialogs/Settings/SettingsContent.vala"
	g_return_if_fail (child != NULL);
#line 45 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp0_ = self->priv->content_grid;
#line 45 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_container_add ((GtkContainer*) _tmp0_, child);
#line 46 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp1_ = self->priv->content_grid;
#line 46 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp1_);
#line 116 "SettingsContent.c"
}

const gchar*
dialogs_settings_settings_content_get_title (DialogsSettingsSettingsContent* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp0_ = self->priv->_title;
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
	result = _tmp0_;
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
	return result;
#line 132 "SettingsContent.c"
}

static void
dialogs_settings_settings_content_set_title (DialogsSettingsSettingsContent* self,
                                             const gchar* value)
{
	gchar* old_value;
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
	g_return_if_fail (self != NULL);
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
	old_value = dialogs_settings_settings_content_get_title (self);
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 146 "SettingsContent.c"
		gchar* _tmp0_;
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
		_tmp0_ = g_strdup (value);
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
		_g_free0 (self->priv->_title);
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
		self->priv->_title = _tmp0_;
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
		g_object_notify_by_pspec ((GObject *) self, dialogs_settings_settings_content_properties[DIALOGS_SETTINGS_SETTINGS_CONTENT_TITLE_PROPERTY]);
#line 156 "SettingsContent.c"
	}
}

static GObject *
dialogs_settings_settings_content_constructor (GType type,
                                               guint n_construct_properties,
                                               GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	DialogsSettingsSettingsContent * self;
	GtkLabel* title_label = NULL;
	const gchar* _tmp0_;
	GtkLabel* _tmp1_ = NULL;
	GtkLabel* _tmp2_;
	GtkStyleContext* _tmp3_;
	GtkLabel* _tmp4_;
	GtkStyleContext* _tmp5_;
	GtkGrid* _tmp6_ = NULL;
	GtkStyleContext* content_grid_context = NULL;
	GtkGrid* _tmp7_;
	GtkStyleContext* _tmp8_;
	GtkStyleContext* _tmp9_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp10_ = NULL;
	const gchar* _tmp11_;
	GtkGrid* _tmp14_;
	GtkGrid* _tmp15_;
	GtkGrid* _tmp16_;
#line 14 "../src/Dialogs/Settings/SettingsContent.vala"
	parent_class = G_OBJECT_CLASS (dialogs_settings_settings_content_parent_class);
#line 14 "../src/Dialogs/Settings/SettingsContent.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 14 "../src/Dialogs/Settings/SettingsContent.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT, DialogsSettingsSettingsContent);
#line 15 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp0_ = self->priv->_title;
#line 15 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp1_ = (GtkLabel*) gtk_label_new (_tmp0_);
#line 15 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp1_, GTK_ALIGN_START);
#line 15 "../src/Dialogs/Settings/SettingsContent.vala"
	g_object_ref_sink (_tmp1_);
#line 15 "../src/Dialogs/Settings/SettingsContent.vala"
	title_label = _tmp1_;
#line 18 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp2_ = title_label;
#line 18 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp3_ = gtk_widget_get_style_context ((GtkWidget*) _tmp2_);
#line 18 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_style_context_add_class (_tmp3_, GRANITE_STYLE_CLASS_H4_LABEL);
#line 19 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp4_ = title_label;
#line 19 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) _tmp4_);
#line 19 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_style_context_add_class (_tmp5_, GRANITE_STYLE_CLASS_SMALL_LABEL);
#line 21 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp6_ = (GtkGrid*) gtk_grid_new ();
#line 21 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_grid_set_row_spacing (_tmp6_, 6);
#line 21 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp6_, GTK_ORIENTATION_VERTICAL);
#line 21 "../src/Dialogs/Settings/SettingsContent.vala"
	g_object_set ((GtkWidget*) _tmp6_, "height-request", 32, NULL);
#line 21 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp6_, TRUE);
#line 21 "../src/Dialogs/Settings/SettingsContent.vala"
	g_object_ref_sink (_tmp6_);
#line 21 "../src/Dialogs/Settings/SettingsContent.vala"
	_g_object_unref0 (self->priv->content_grid);
#line 21 "../src/Dialogs/Settings/SettingsContent.vala"
	self->priv->content_grid = _tmp6_;
#line 28 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp7_ = self->priv->content_grid;
#line 28 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp8_ = gtk_widget_get_style_context ((GtkWidget*) _tmp7_);
#line 28 "../src/Dialogs/Settings/SettingsContent.vala"
	content_grid_context = _tmp8_;
#line 29 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp9_ = content_grid_context;
#line 29 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_style_context_add_class (_tmp9_, "picker-content");
#line 31 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp10_ = (GtkGrid*) gtk_grid_new ();
#line 31 "../src/Dialogs/Settings/SettingsContent.vala"
	g_object_set ((GtkWidget*) _tmp10_, "expand", TRUE, NULL);
#line 31 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp10_, GTK_ORIENTATION_VERTICAL);
#line 31 "../src/Dialogs/Settings/SettingsContent.vala"
	g_object_ref_sink (_tmp10_);
#line 31 "../src/Dialogs/Settings/SettingsContent.vala"
	main_grid = _tmp10_;
#line 36 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp11_ = self->priv->_title;
#line 36 "../src/Dialogs/Settings/SettingsContent.vala"
	if (_tmp11_ != NULL) {
#line 254 "SettingsContent.c"
		GtkGrid* _tmp12_;
		GtkLabel* _tmp13_;
#line 37 "../src/Dialogs/Settings/SettingsContent.vala"
		_tmp12_ = main_grid;
#line 37 "../src/Dialogs/Settings/SettingsContent.vala"
		_tmp13_ = title_label;
#line 37 "../src/Dialogs/Settings/SettingsContent.vala"
		gtk_container_add ((GtkContainer*) _tmp12_, (GtkWidget*) _tmp13_);
#line 263 "SettingsContent.c"
	}
#line 39 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp14_ = main_grid;
#line 39 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp15_ = self->priv->content_grid;
#line 39 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_container_add ((GtkContainer*) _tmp14_, (GtkWidget*) _tmp15_);
#line 41 "../src/Dialogs/Settings/SettingsContent.vala"
	_tmp16_ = main_grid;
#line 41 "../src/Dialogs/Settings/SettingsContent.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp16_);
#line 14 "../src/Dialogs/Settings/SettingsContent.vala"
	_g_object_unref0 (main_grid);
#line 14 "../src/Dialogs/Settings/SettingsContent.vala"
	_g_object_unref0 (title_label);
#line 14 "../src/Dialogs/Settings/SettingsContent.vala"
	return obj;
#line 281 "SettingsContent.c"
}

static void
dialogs_settings_settings_content_class_init (DialogsSettingsSettingsContentClass * klass,
                                              gpointer klass_data)
{
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	dialogs_settings_settings_content_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	g_type_class_adjust_private_offset (klass, &DialogsSettingsSettingsContent_private_offset);
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_dialogs_settings_settings_content_get_property;
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_dialogs_settings_settings_content_set_property;
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	G_OBJECT_CLASS (klass)->constructor = dialogs_settings_settings_content_constructor;
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	G_OBJECT_CLASS (klass)->finalize = dialogs_settings_settings_content_finalize;
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_SETTINGS_SETTINGS_CONTENT_TITLE_PROPERTY, dialogs_settings_settings_content_properties[DIALOGS_SETTINGS_SETTINGS_CONTENT_TITLE_PROPERTY] = g_param_spec_string ("title", "title", "title", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 302 "SettingsContent.c"
}

static void
dialogs_settings_settings_content_instance_init (DialogsSettingsSettingsContent * self,
                                                 gpointer klass)
{
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	self->priv = dialogs_settings_settings_content_get_instance_private (self);
#line 311 "SettingsContent.c"
}

static void
dialogs_settings_settings_content_finalize (GObject * obj)
{
	DialogsSettingsSettingsContent * self;
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT, DialogsSettingsSettingsContent);
#line 2 "../src/Dialogs/Settings/SettingsContent.vala"
	_g_free0 (self->priv->_title);
#line 4 "../src/Dialogs/Settings/SettingsContent.vala"
	_g_object_unref0 (self->priv->content_grid);
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	G_OBJECT_CLASS (dialogs_settings_settings_content_parent_class)->finalize (obj);
#line 326 "SettingsContent.c"
}

static GType
dialogs_settings_settings_content_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (DialogsSettingsSettingsContentClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) dialogs_settings_settings_content_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (DialogsSettingsSettingsContent), 0, (GInstanceInitFunc) dialogs_settings_settings_content_instance_init, NULL };
	GType dialogs_settings_settings_content_type_id;
	dialogs_settings_settings_content_type_id = g_type_register_static (gtk_event_box_get_type (), "DialogsSettingsSettingsContent", &g_define_type_info, 0);
	DialogsSettingsSettingsContent_private_offset = g_type_add_instance_private (dialogs_settings_settings_content_type_id, sizeof (DialogsSettingsSettingsContentPrivate));
	return dialogs_settings_settings_content_type_id;
}

GType
dialogs_settings_settings_content_get_type (void)
{
	static volatile gsize dialogs_settings_settings_content_type_id__volatile = 0;
	if (g_once_init_enter (&dialogs_settings_settings_content_type_id__volatile)) {
		GType dialogs_settings_settings_content_type_id;
		dialogs_settings_settings_content_type_id = dialogs_settings_settings_content_get_type_once ();
		g_once_init_leave (&dialogs_settings_settings_content_type_id__volatile, dialogs_settings_settings_content_type_id);
	}
	return dialogs_settings_settings_content_type_id__volatile;
}

static void
_vala_dialogs_settings_settings_content_get_property (GObject * object,
                                                      guint property_id,
                                                      GValue * value,
                                                      GParamSpec * pspec)
{
	DialogsSettingsSettingsContent * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT, DialogsSettingsSettingsContent);
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	switch (property_id) {
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		case DIALOGS_SETTINGS_SETTINGS_CONTENT_TITLE_PROPERTY:
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		g_value_set_string (value, dialogs_settings_settings_content_get_title (self));
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		break;
#line 367 "SettingsContent.c"
		default:
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		break;
#line 373 "SettingsContent.c"
	}
}

static void
_vala_dialogs_settings_settings_content_set_property (GObject * object,
                                                      guint property_id,
                                                      const GValue * value,
                                                      GParamSpec * pspec)
{
	DialogsSettingsSettingsContent * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_SETTINGS_TYPE_SETTINGS_CONTENT, DialogsSettingsSettingsContent);
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
	switch (property_id) {
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		case DIALOGS_SETTINGS_SETTINGS_CONTENT_TITLE_PROPERTY:
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		dialogs_settings_settings_content_set_title (self, g_value_get_string (value));
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		break;
#line 393 "SettingsContent.c"
		default:
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Dialogs/Settings/SettingsContent.vala"
		break;
#line 399 "SettingsContent.c"
	}
}


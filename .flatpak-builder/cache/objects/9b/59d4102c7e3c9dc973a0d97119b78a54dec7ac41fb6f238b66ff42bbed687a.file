/* Database.c generated by valac 0.50.10, the Vala compiler
 * generated from Database.vala, do not modify */

#include <glib-object.h>
#include <sqlite3.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gee.h>
#include <json-glib/json-glib.h>
#include <granite.h>
#include <gio/gio.h>

#define SERVICES_TYPE_DATABASE (services_database_get_type ())
#define SERVICES_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_DATABASE, ServicesDatabase))
#define SERVICES_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))
#define SERVICES_IS_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_DATABASE))
#define SERVICES_IS_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_DATABASE))
#define SERVICES_DATABASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))

typedef struct _ServicesDatabase ServicesDatabase;
typedef struct _ServicesDatabaseClass ServicesDatabaseClass;
typedef struct _ServicesDatabasePrivate ServicesDatabasePrivate;

#define OBJECTS_TYPE_BASE_OBJECT (objects_base_object_get_type ())
#define OBJECTS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObject))
#define OBJECTS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))
#define OBJECTS_IS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_IS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_BASE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))

typedef struct _ObjectsBaseObject ObjectsBaseObject;
typedef struct _ObjectsBaseObjectClass ObjectsBaseObjectClass;

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;

#define OBJECTS_TYPE_SECTION (objects_section_get_type ())
#define OBJECTS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_SECTION, ObjectsSection))
#define OBJECTS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_SECTION, ObjectsSectionClass))
#define OBJECTS_IS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_SECTION))
#define OBJECTS_IS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_SECTION))
#define OBJECTS_SECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_SECTION, ObjectsSectionClass))

typedef struct _ObjectsSection ObjectsSection;
typedef struct _ObjectsSectionClass ObjectsSectionClass;

#define OBJECTS_TYPE_ITEM (objects_item_get_type ())
#define OBJECTS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_ITEM, ObjectsItem))
#define OBJECTS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_ITEM, ObjectsItemClass))
#define OBJECTS_IS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_ITEM))
#define OBJECTS_IS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_ITEM))
#define OBJECTS_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_ITEM, ObjectsItemClass))

typedef struct _ObjectsItem ObjectsItem;
typedef struct _ObjectsItemClass ObjectsItemClass;

#define OBJECTS_TYPE_LABEL (objects_label_get_type ())
#define OBJECTS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_LABEL, ObjectsLabel))
#define OBJECTS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_LABEL, ObjectsLabelClass))
#define OBJECTS_IS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_LABEL))
#define OBJECTS_IS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_LABEL))
#define OBJECTS_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_LABEL, ObjectsLabelClass))

typedef struct _ObjectsLabel ObjectsLabel;
typedef struct _ObjectsLabelClass ObjectsLabelClass;
enum  {
	SERVICES_DATABASE_0_PROPERTY,
	SERVICES_DATABASE_PROJECTS_PROPERTY,
	SERVICES_DATABASE_SECTIONS_PROPERTY,
	SERVICES_DATABASE_ITEMS_PROPERTY,
	SERVICES_DATABASE_LABELS_PROPERTY,
	SERVICES_DATABASE_NUM_PROPERTIES
};
static GParamSpec* services_database_properties[SERVICES_DATABASE_NUM_PROPERTIES];
#define _sqlite3_close0(var) ((var == NULL) ? NULL : (var = (sqlite3_close (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _sqlite3_finalize0(var) ((var == NULL) ? NULL : (var = (sqlite3_finalize (var), NULL)))
typedef enum  {
	PROJECT_VIEW_STYLE_LIST,
	PROJECT_VIEW_STYLE_BOARD
} ProjectViewStyle;

#define TYPE_PROJECT_VIEW_STYLE (project_view_style_get_type ())
typedef enum  {
	PROJECT_ICON_STYLE_PROGRESS,
	PROJECT_ICON_STYLE_EMOJI
} ProjectIconStyle;

#define TYPE_PROJECT_ICON_STYLE (project_icon_style_get_type ())

#define OBJECTS_TYPE_ITEM_LABEL (objects_item_label_get_type ())
#define OBJECTS_ITEM_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_ITEM_LABEL, ObjectsItemLabel))
#define OBJECTS_ITEM_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_ITEM_LABEL, ObjectsItemLabelClass))
#define OBJECTS_IS_ITEM_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_ITEM_LABEL))
#define OBJECTS_IS_ITEM_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_ITEM_LABEL))
#define OBJECTS_ITEM_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_ITEM_LABEL, ObjectsItemLabelClass))

typedef struct _ObjectsItemLabel ObjectsItemLabel;
typedef struct _ObjectsItemLabelClass ObjectsItemLabelClass;

#define OBJECTS_TYPE_DUE_DATE (objects_due_date_get_type ())
#define OBJECTS_DUE_DATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_DUE_DATE, ObjectsDueDate))
#define OBJECTS_DUE_DATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_DUE_DATE, ObjectsDueDateClass))
#define OBJECTS_IS_DUE_DATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_DUE_DATE))
#define OBJECTS_IS_DUE_DATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_DUE_DATE))
#define OBJECTS_DUE_DATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_DUE_DATE, ObjectsDueDateClass))

typedef struct _ObjectsDueDate ObjectsDueDate;
typedef struct _ObjectsDueDateClass ObjectsDueDateClass;

#define SERVICES_TYPE_EVENT_BUS (services_event_bus_get_type ())
#define SERVICES_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBus))
#define SERVICES_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))
#define SERVICES_IS_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_IS_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_EVENT_BUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))

typedef struct _ServicesEventBus ServicesEventBus;
typedef struct _ServicesEventBusClass ServicesEventBusClass;
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))

#define SERVICES_TYPE_TODOIST (services_todoist_get_type ())
#define SERVICES_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_TODOIST, ServicesTodoist))
#define SERVICES_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_TODOIST, ServicesTodoistClass))
#define SERVICES_IS_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_TODOIST))
#define SERVICES_IS_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_TODOIST))
#define SERVICES_TODOIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_TODOIST, ServicesTodoistClass))

typedef struct _ServicesTodoist ServicesTodoist;
typedef struct _ServicesTodoistClass ServicesTodoistClass;
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
enum  {
	SERVICES_DATABASE_OPENED_SIGNAL,
	SERVICES_DATABASE_RESET_SIGNAL,
	SERVICES_DATABASE_PROJECT_ADDED_SIGNAL,
	SERVICES_DATABASE_PROJECT_DELETED_SIGNAL,
	SERVICES_DATABASE_LABEL_ADDED_SIGNAL,
	SERVICES_DATABASE_LABEL_DELETED_SIGNAL,
	SERVICES_DATABASE_SECTION_DELETED_SIGNAL,
	SERVICES_DATABASE_ITEM_DELETED_SIGNAL,
	SERVICES_DATABASE_ITEM_ADDED_SIGNAL,
	SERVICES_DATABASE_ITEM_UPDATED_SIGNAL,
	SERVICES_DATABASE_ITEM_LABEL_ADDED_SIGNAL,
	SERVICES_DATABASE_ITEM_LABEL_DELETED_SIGNAL,
	SERVICES_DATABASE_NUM_SIGNALS
};
static guint services_database_signals[SERVICES_DATABASE_NUM_SIGNALS] = {0};

struct _ServicesDatabase {
	GObject parent_instance;
	ServicesDatabasePrivate * priv;
};

struct _ServicesDatabaseClass {
	GObjectClass parent_class;
};

struct _ServicesDatabasePrivate {
	sqlite3* db;
	gchar* db_path;
	gchar* errormsg;
	gchar* sql;
	GeeArrayList* _projects;
	GRecMutex __lock__projects;
	GeeArrayList* _sections;
	GRecMutex __lock__sections;
	GeeArrayList* _items;
	GRecMutex __lock__items;
	GeeArrayList* _labels;
	GRecMutex __lock__labels;
	JsonParser* parser;
};

static gint ServicesDatabase_private_offset;
static gpointer services_database_parent_class = NULL;
static ServicesDatabase* services_database__instance;
static ServicesDatabase* services_database__instance = NULL;
extern ServicesEventBus* planner_event_bus;
extern ServicesTodoist* planner_todoist;

GType services_database_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesDatabase, g_object_unref)
GType objects_base_object_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsBaseObject, g_object_unref)
GType objects_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsProject, g_object_unref)
GType objects_section_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsSection, g_object_unref)
GType objects_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsItem, g_object_unref)
GType objects_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsLabel, g_object_unref)
ServicesDatabase* services_database_get_default (void);
ServicesDatabase* services_database_new (void);
ServicesDatabase* services_database_construct (GType object_type);
void services_database_init_database (ServicesDatabase* self);
static void services_database_create_tables (ServicesDatabase* self);
void services_database_patch_database (ServicesDatabase* self);
void services_database_add_int_column (ServicesDatabase* self,
                                       const gchar* table,
                                       const gchar* column,
                                       gint default_value);
gboolean services_database_is_database_empty (ServicesDatabase* self);
GeeArrayList* services_database_get_projects (ServicesDatabase* self);
GeeArrayList* services_database_get_projects_collection (ServicesDatabase* self);
ObjectsProject* _services_database_fill_project (ServicesDatabase* self,
                                                 sqlite3_stmt* stmt);
GeeArrayList* services_database_get_subprojects (ServicesDatabase* self,
                                                 ObjectsProject* p);
gint64 objects_project_get_parent_id (ObjectsProject* self);
gint64 objects_base_object_get_id (ObjectsBaseObject* self);
ObjectsProject* objects_project_new (void);
ObjectsProject* objects_project_construct (GType object_type);
void objects_base_object_set_id (ObjectsBaseObject* self,
                                 gint64 value);
void objects_project_set_name (ObjectsProject* self,
                               const gchar* value);
void objects_project_set_color (ObjectsProject* self,
                                const gchar* value);
static gboolean services_database_get_parameter_bool (ServicesDatabase* self,
                                               sqlite3_stmt* stmt,
                                               gint col);
void objects_project_set_todoist (ObjectsProject* self,
                                  gboolean value);
void objects_project_set_inbox_project (ObjectsProject* self,
                                        gboolean value);
void objects_project_set_team_inbox (ObjectsProject* self,
                                     gboolean value);
void objects_project_set_child_order (ObjectsProject* self,
                                      gint value);
void objects_project_set_is_deleted (ObjectsProject* self,
                                     gboolean value);
void objects_project_set_is_archived (ObjectsProject* self,
                                      gboolean value);
void objects_project_set_is_favorite (ObjectsProject* self,
                                      gboolean value);
void objects_project_set_shared (ObjectsProject* self,
                                 gboolean value);
GType project_view_style_get_type (void) G_GNUC_CONST;
static ProjectViewStyle services_database_get_view_style_by_text (ServicesDatabase* self,
                                                           sqlite3_stmt* stmt,
                                                           gint col);
void objects_project_set_view_style (ObjectsProject* self,
                                     ProjectViewStyle value);
void objects_project_set_show_completed (ObjectsProject* self,
                                         gboolean value);
void objects_project_set_sort_order (ObjectsProject* self,
                                     gint value);
void objects_project_set_parent_id (ObjectsProject* self,
                                    gint64 value);
void objects_project_set_collapsed (ObjectsProject* self,
                                    gboolean value);
GType project_icon_style_get_type (void) G_GNUC_CONST;
static ProjectIconStyle services_database_get_icon_style_by_text (ServicesDatabase* self,
                                                           sqlite3_stmt* stmt,
                                                           gint col);
void objects_project_set_icon_style (ObjectsProject* self,
                                     ProjectIconStyle value);
void objects_project_set_emoji (ObjectsProject* self,
                                const gchar* value);
gboolean services_database_insert_project (ServicesDatabase* self,
                                           ObjectsProject* project);
static void services_database_set_parameter_int64 (ServicesDatabase* self,
                                            sqlite3_stmt* stmt,
                                            const gchar* par,
                                            gint64 val);
static void services_database_set_parameter_str (ServicesDatabase* self,
                                          sqlite3_stmt* stmt,
                                          const gchar* par,
                                          const gchar* val);
const gchar* objects_project_get_name (ObjectsProject* self);
const gchar* objects_project_get_color (ObjectsProject* self);
static void services_database_set_parameter_bool (ServicesDatabase* self,
                                           sqlite3_stmt* stmt,
                                           const gchar* par,
                                           gboolean val);
gboolean objects_project_get_todoist (ObjectsProject* self);
gboolean objects_project_get_inbox_project (ObjectsProject* self);
gboolean objects_project_get_team_inbox (ObjectsProject* self);
static void services_database_set_parameter_int (ServicesDatabase* self,
                                          sqlite3_stmt* stmt,
                                          const gchar* par,
                                          gint val);
gint objects_project_get_child_order (ObjectsProject* self);
gboolean objects_project_get_is_deleted (ObjectsProject* self);
gboolean objects_project_get_is_archived (ObjectsProject* self);
gboolean objects_project_get_is_favorite (ObjectsProject* self);
gboolean objects_project_get_shared (ObjectsProject* self);
ProjectViewStyle objects_project_get_view_style (ObjectsProject* self);
gchar* project_view_style_to_string (ProjectViewStyle self);
gboolean objects_project_get_show_completed (ObjectsProject* self);
gint objects_project_get_sort_order (ObjectsProject* self);
gboolean objects_project_get_collapsed (ObjectsProject* self);
ProjectIconStyle objects_project_get_icon_style (ObjectsProject* self);
gchar* project_icon_style_to_string (ProjectIconStyle self);
const gchar* objects_project_get_emoji (ObjectsProject* self);
ObjectsProject* objects_project_get_parent (ObjectsProject* self);
ObjectsProject* services_database_get_project (ServicesDatabase* self,
                                               gint64 id);
void services_database_delete_project (ServicesDatabase* self,
                                       ObjectsProject* project);
GeeArrayList* objects_project_get_sections (ObjectsProject* self);
void services_database_delete_section (ServicesDatabase* self,
                                       ObjectsSection* section);
GeeArrayList* objects_project_get_items (ObjectsProject* self);
void services_database_delete_item (ServicesDatabase* self,
                                    ObjectsItem* item);
GeeArrayList* objects_project_get_subprojects (ObjectsProject* self);
void services_database_update_project (ServicesDatabase* self,
                                       ObjectsProject* project);
GeeArrayList* services_database_get_labels_collection (ServicesDatabase* self);
ObjectsLabel* _services_database_fill_label (ServicesDatabase* self,
                                             sqlite3_stmt* stmt);
ObjectsLabel* objects_label_new (void);
ObjectsLabel* objects_label_construct (GType object_type);
void objects_label_set_name (ObjectsLabel* self,
                             const gchar* value);
void objects_label_set_color (ObjectsLabel* self,
                              const gchar* value);
void objects_label_set_item_order (ObjectsLabel* self,
                                   gint value);
void objects_label_set_is_deleted (ObjectsLabel* self,
                                   gboolean value);
void objects_label_set_is_favorite (ObjectsLabel* self,
                                    gboolean value);
void objects_label_set_todoist (ObjectsLabel* self,
                                gboolean value);
gboolean services_database_insert_label (ServicesDatabase* self,
                                         ObjectsLabel* label);
const gchar* objects_label_get_name (ObjectsLabel* self);
const gchar* objects_label_get_color (ObjectsLabel* self);
gint objects_label_get_item_order (ObjectsLabel* self);
gboolean objects_label_get_is_deleted (ObjectsLabel* self);
gboolean objects_label_get_is_favorite (ObjectsLabel* self);
gboolean objects_label_get_todoist (ObjectsLabel* self);
GeeArrayList* services_database_get_labels (ServicesDatabase* self);
gboolean services_database_label_exists (ServicesDatabase* self,
                                         gint64 id);
ObjectsLabel* services_database_get_label (ServicesDatabase* self,
                                           gint64 id);
ObjectsLabel* services_database_get_label_by_name (ServicesDatabase* self,
                                                   const gchar* name);
void services_database_delete_label (ServicesDatabase* self,
                                     ObjectsLabel* label);
void services_database_update_label (ServicesDatabase* self,
                                     ObjectsLabel* label);
GType objects_item_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsItemLabel, g_object_unref)
GeeHashMap* services_database_get_labels_by_item (ServicesDatabase* self,
                                                  ObjectsItem* item);
ObjectsItemLabel* objects_item_label_new (void);
ObjectsItemLabel* objects_item_label_construct (GType object_type);
void objects_item_label_set_item_id (ObjectsItemLabel* self,
                                     gint64 value);
void objects_item_label_set_label_id (ObjectsItemLabel* self,
                                      gint64 value);
gint64 objects_item_label_get_label_id (ObjectsItemLabel* self);
void services_database_insert_item_label (ServicesDatabase* self,
                                          ObjectsItemLabel* item_label);
gint64 objects_item_label_get_item_id (ObjectsItemLabel* self);
void services_database_delete_item_label (ServicesDatabase* self,
                                          ObjectsItemLabel* item_label);
gboolean services_database_insert_section (ServicesDatabase* self,
                                           ObjectsSection* section);
const gchar* objects_section_get_name (ObjectsSection* self);
const gchar* objects_section_get_archived_at (ObjectsSection* self);
const gchar* objects_section_get_added_at (ObjectsSection* self);
gint64 objects_section_get_project_id (ObjectsSection* self);
gint objects_section_get_section_order (ObjectsSection* self);
gboolean objects_section_get_collapsed (ObjectsSection* self);
gboolean objects_section_get_is_deleted (ObjectsSection* self);
gboolean objects_section_get_is_archived (ObjectsSection* self);
GeeArrayList* services_database_get_sections (ServicesDatabase* self);
ObjectsProject* objects_section_get_project (ObjectsSection* self);
GeeArrayList* services_database_get_sections_collection (ServicesDatabase* self);
ObjectsSection* _services_database_fill_section (ServicesDatabase* self,
                                                 sqlite3_stmt* stmt);
GeeArrayList* services_database_get_sections_by_project (ServicesDatabase* self,
                                                         ObjectsProject* project);
ObjectsSection* services_database_get_section (ServicesDatabase* self,
                                               gint64 id);
ObjectsSection* objects_section_new (void);
ObjectsSection* objects_section_construct (GType object_type);
void objects_section_set_name (ObjectsSection* self,
                               const gchar* value);
void objects_section_set_archived_at (ObjectsSection* self,
                                      const gchar* value);
void objects_section_set_added_at (ObjectsSection* self,
                                   const gchar* value);
void objects_section_set_project_id (ObjectsSection* self,
                                     gint64 value);
void objects_section_set_section_order (ObjectsSection* self,
                                        gint value);
void objects_section_set_collapsed (ObjectsSection* self,
                                    gboolean value);
void objects_section_set_is_deleted (ObjectsSection* self,
                                     gboolean value);
void objects_section_set_is_archived (ObjectsSection* self,
                                      gboolean value);
GeeArrayList* objects_section_get_items (ObjectsSection* self);
void services_database_update_section (ServicesDatabase* self,
                                       ObjectsSection* section);
gboolean services_database_insert_item (ServicesDatabase* self,
                                        ObjectsItem* item,
                                        gboolean insert);
const gchar* objects_item_get_content (ObjectsItem* self);
const gchar* objects_item_get_description (ObjectsItem* self);
GType objects_due_date_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsDueDate, g_object_unref)
ObjectsDueDate* objects_item_get_due (ObjectsItem* self);
gchar* objects_due_date_to_string (ObjectsDueDate* self);
const gchar* objects_item_get_added_at (ObjectsItem* self);
const gchar* objects_item_get_completed_at (ObjectsItem* self);
const gchar* objects_item_get_updated_at (ObjectsItem* self);
gint64 objects_item_get_section_id (ObjectsItem* self);
gint64 objects_item_get_project_id (ObjectsItem* self);
gint64 objects_item_get_parent_id (ObjectsItem* self);
gint objects_item_get_priority (ObjectsItem* self);
gint objects_item_get_child_order (ObjectsItem* self);
gboolean objects_item_get_checked (ObjectsItem* self);
gboolean objects_item_get_is_deleted (ObjectsItem* self);
gint objects_item_get_day_order (ObjectsItem* self);
gboolean objects_item_get_collapsed (ObjectsItem* self);
gboolean objects_item_get_pinned (ObjectsItem* self);
GeeArrayList* services_database_get_items (ServicesDatabase* self);
#define CONSTANTS_INACTIVE 0
ObjectsProject* objects_item_get_project (ObjectsItem* self);
ObjectsSection* objects_item_get_section (ObjectsItem* self);
void objects_item_insert_local_labels (ObjectsItem* self);
GType services_event_bus_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesEventBus, g_object_unref)
GeeArrayList* services_database_get_items_collection (ServicesDatabase* self);
ObjectsItem* _services_database_fill_item (ServicesDatabase* self,
                                           sqlite3_stmt* stmt);
ObjectsItem* services_database_get_item (ServicesDatabase* self,
                                         gint64 id);
GeeArrayList* services_database_get_item_by_baseobject (ServicesDatabase* self,
                                                        ObjectsBaseObject* object);
GeeArrayList* services_database_get_items_by_project (ServicesDatabase* self,
                                                      ObjectsProject* project);
ObjectsItem* objects_item_new (void);
ObjectsItem* objects_item_construct (GType object_type);
void objects_item_set_content (ObjectsItem* self,
                               const gchar* value);
void objects_item_set_description (ObjectsItem* self,
                                   const gchar* value);
static void services_database_get_due_parameter (ServicesDatabase* self,
                                          ObjectsItem* item,
                                          sqlite3_stmt* stmt,
                                          gint col);
void objects_item_set_added_at (ObjectsItem* self,
                                const gchar* value);
void objects_item_set_completed_at (ObjectsItem* self,
                                    const gchar* value);
void objects_item_set_updated_at (ObjectsItem* self,
                                  const gchar* value);
void objects_item_set_section_id (ObjectsItem* self,
                                  gint64 value);
void objects_item_set_project_id (ObjectsItem* self,
                                  gint64 value);
void objects_item_set_parent_id (ObjectsItem* self,
                                 gint64 value);
void objects_item_set_priority (ObjectsItem* self,
                                gint value);
void objects_item_set_child_order (ObjectsItem* self,
                                   gint value);
void objects_item_set_checked (ObjectsItem* self,
                               gboolean value);
void objects_item_set_is_deleted (ObjectsItem* self,
                                  gboolean value);
void objects_item_set_day_order (ObjectsItem* self,
                                 gint value);
void objects_item_set_collapsed (ObjectsItem* self,
                                 gboolean value);
void objects_item_set_pinned (ObjectsItem* self,
                              gboolean value);
GeeArrayList* services_database_get_items_by_date (ServicesDatabase* self,
                                                   GDateTime* date,
                                                   gboolean checked);
gboolean services_database_valid_item_by_date (ServicesDatabase* self,
                                               ObjectsItem* item,
                                               GDateTime* date,
                                               gboolean checked);
GeeArrayList* services_database_get_items_pinned (ServicesDatabase* self,
                                                  gboolean checked);
GeeArrayList* services_database_get_items_by_label (ServicesDatabase* self,
                                                    ObjectsLabel* label,
                                                    gboolean checked);
GeeHashMap* objects_item_get_labels (ObjectsItem* self);
const gchar* objects_base_object_get_id_string (ObjectsBaseObject* self);
GeeArrayList* services_database_get_items_by_scheduled (ServicesDatabase* self,
                                                        gboolean checked);
gboolean objects_item_get_has_due (ObjectsItem* self);
GDateTime* objects_due_date_get_datetime (ObjectsDueDate* self);
GeeArrayList* services_database_get_items_by_overdeue_view (ServicesDatabase* self,
                                                            gboolean checked);
gboolean services_database_valid_item_by_overdue (ServicesDatabase* self,
                                                  ObjectsItem* item,
                                                  GDateTime* date,
                                                  gboolean checked);
void services_database_update_item (ServicesDatabase* self,
                                    ObjectsItem* item,
                                    gint64 update_id);
void services_database_checked_toggled (ServicesDatabase* self,
                                        ObjectsItem* item,
                                        gboolean old_checked);
GType services_todoist_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesTodoist, g_object_unref)
void services_todoist_complete_item (ServicesTodoist* self,
                                     ObjectsItem* item,
                                     GAsyncReadyCallback _callback_,
                                     gpointer _user_data_);
gboolean services_todoist_complete_item_finish (ServicesTodoist* self,
                                                GAsyncResult* _res_);
static void ____lambda22_ (ServicesDatabase* self,
                    GObject* obj,
                    GAsyncResult* res);
static void _____lambda22__gasync_ready_callback (GObject* source_object,
                                           GAsyncResult* res,
                                           gpointer self);
void services_database_update_item_position (ServicesDatabase* self,
                                             ObjectsItem* item);
#define CONSTANTS_ACTIVE 1
void objects_due_date_update_from_json (ObjectsDueDate* self,
                                        JsonObject* object);
gboolean services_database_column_exists (ServicesDatabase* self,
                                          const gchar* table,
                                          const gchar* column);
void services_database_add_text_column (ServicesDatabase* self,
                                        const gchar* table,
                                        const gchar* column,
                                        const gchar* default_value);
static void g_cclosure_user_marshal_VOID__OBJECT_BOOLEAN (GClosure * closure,
                                                   GValue * return_value,
                                                   guint n_param_values,
                                                   const GValue * param_values,
                                                   gpointer invocation_hint,
                                                   gpointer marshal_data);
static void g_cclosure_user_marshal_VOID__OBJECT_INT64 (GClosure * closure,
                                                 GValue * return_value,
                                                 guint n_param_values,
                                                 const GValue * param_values,
                                                 gpointer invocation_hint,
                                                 gpointer marshal_data);
static GObject * services_database_constructor (GType type,
                                         guint n_construct_properties,
                                         GObjectConstructParam * construct_properties);
static void _services_database___lambda23_ (ServicesDatabase* self,
                                     ObjectsLabel* label);
static void __services_database___lambda23__services_database_label_deleted (ServicesDatabase* _sender,
                                                                      ObjectsLabel* label,
                                                                      gpointer self);
static void _services_database___lambda24_ (ServicesDatabase* self,
                                     ObjectsProject* project);
static void __services_database___lambda24__services_database_project_deleted (ServicesDatabase* _sender,
                                                                        ObjectsProject* project,
                                                                        gpointer self);
static void _services_database___lambda25_ (ServicesDatabase* self,
                                     ObjectsSection* section);
static void __services_database___lambda25__services_database_section_deleted (ServicesDatabase* _sender,
                                                                        ObjectsSection* section,
                                                                        gpointer self);
static void _services_database___lambda26_ (ServicesDatabase* self,
                                     ObjectsItem* item);
static void __services_database___lambda26__services_database_item_deleted (ServicesDatabase* _sender,
                                                                     ObjectsItem* item,
                                                                     gpointer self);
static void services_database_finalize (GObject * obj);
static GType services_database_get_type_once (void);
static void _vala_services_database_get_property (GObject * object,
                                           guint property_id,
                                           GValue * value,
                                           GParamSpec * pspec);

static inline gpointer
services_database_get_instance_private (ServicesDatabase* self)
{
	return G_STRUCT_MEMBER_P (self, ServicesDatabase_private_offset);
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 31 "../src/Services/Database.vala"
	return self ? g_object_ref (self) : NULL;
#line 596 "Database.c"
}

ServicesDatabase*
services_database_get_default (void)
{
	ServicesDatabase* _tmp0_;
	ServicesDatabase* _tmp2_;
	ServicesDatabase* _tmp3_;
	ServicesDatabase* result = NULL;
#line 27 "../src/Services/Database.vala"
	_tmp0_ = services_database__instance;
#line 27 "../src/Services/Database.vala"
	if (_tmp0_ == NULL) {
#line 610 "Database.c"
		ServicesDatabase* _tmp1_;
#line 28 "../src/Services/Database.vala"
		_tmp1_ = services_database_new ();
#line 28 "../src/Services/Database.vala"
		_g_object_unref0 (services_database__instance);
#line 28 "../src/Services/Database.vala"
		services_database__instance = _tmp1_;
#line 618 "Database.c"
	}
#line 31 "../src/Services/Database.vala"
	_tmp2_ = services_database__instance;
#line 31 "../src/Services/Database.vala"
	_tmp3_ = _g_object_ref0 (_tmp2_);
#line 31 "../src/Services/Database.vala"
	result = _tmp3_;
#line 31 "../src/Services/Database.vala"
	return result;
#line 628 "Database.c"
}

void
services_database_init_database (ServicesDatabase* self)
{
	const gchar* _tmp0_;
	gchar* _tmp1_;
#line 100 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 101 "../src/Services/Database.vala"
	_tmp0_ = g_get_user_data_dir ();
#line 101 "../src/Services/Database.vala"
	_tmp1_ = g_strconcat (_tmp0_, "/com.github.alainm23.planner/database.db", NULL);
#line 101 "../src/Services/Database.vala"
	_g_free0 (self->priv->db_path);
#line 101 "../src/Services/Database.vala"
	self->priv->db_path = _tmp1_;
#line 103 "../src/Services/Database.vala"
	services_database_create_tables (self);
#line 104 "../src/Services/Database.vala"
	services_database_patch_database (self);
#line 105 "../src/Services/Database.vala"
	g_signal_emit (self, services_database_signals[SERVICES_DATABASE_OPENED_SIGNAL], 0);
#line 652 "Database.c"
}

void
services_database_patch_database (ServicesDatabase* self)
{
#line 108 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 114 "../src/Services/Database.vala"
	services_database_add_int_column (self, "Items", "pinned", 0);
#line 662 "Database.c"
}

static gint
_sqlite3_exec (sqlite3* self,
               const gchar* sql,
               sqlite3_callback callback,
               gpointer callback_target,
               gchar* * errmsg)
{
	gchar* _vala_errmsg = NULL;
	const gchar* sqlite_errmsg = NULL;
	gint ec = 0;
	const gchar* _tmp0_ = NULL;
	gint _tmp1_;
	const gchar* _tmp4_;
	gint result = 0;
#line 34 "sqlite3.vapi"
	g_return_val_if_fail (self != NULL, 0);
#line 34 "sqlite3.vapi"
	g_return_val_if_fail (sql != NULL, 0);
#line 36 "sqlite3.vapi"
	_tmp1_ = sqlite3_exec (self, sql, callback, callback_target, (char**) (&_tmp0_));
#line 36 "sqlite3.vapi"
	sqlite_errmsg = _tmp0_;
#line 36 "sqlite3.vapi"
	ec = _tmp1_;
#line 37 "sqlite3.vapi"
	if ((&_vala_errmsg) != NULL) {
#line 691 "Database.c"
		const gchar* _tmp2_;
		gchar* _tmp3_;
#line 38 "sqlite3.vapi"
		_tmp2_ = sqlite_errmsg;
#line 38 "sqlite3.vapi"
		_tmp3_ = g_strdup (_tmp2_);
#line 38 "sqlite3.vapi"
		_g_free0 (_vala_errmsg);
#line 38 "sqlite3.vapi"
		_vala_errmsg = _tmp3_;
#line 702 "Database.c"
	} else {
#line 40 "sqlite3.vapi"
		_g_free0 (_vala_errmsg);
#line 40 "sqlite3.vapi"
		_vala_errmsg = NULL;
#line 708 "Database.c"
	}
#line 42 "sqlite3.vapi"
	_tmp4_ = sqlite_errmsg;
#line 42 "sqlite3.vapi"
	sqlite3_free ((void*) _tmp4_);
#line 43 "sqlite3.vapi"
	result = ec;
#line 43 "sqlite3.vapi"
	if (errmsg) {
#line 43 "sqlite3.vapi"
		*errmsg = _vala_errmsg;
#line 720 "Database.c"
	} else {
#line 43 "sqlite3.vapi"
		_g_free0 (_vala_errmsg);
#line 724 "Database.c"
	}
#line 43 "sqlite3.vapi"
	return result;
#line 728 "Database.c"
}

static void
services_database_create_tables (ServicesDatabase* self)
{
	const gchar* _tmp0_;
	sqlite3* _tmp1_ = NULL;
	gchar* _tmp2_;
	sqlite3* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_ = NULL;
	gint _tmp6_;
	gchar* _tmp8_;
	sqlite3* _tmp9_;
	const gchar* _tmp10_;
	gchar* _tmp11_ = NULL;
	gint _tmp12_;
	gchar* _tmp14_;
	sqlite3* _tmp15_;
	const gchar* _tmp16_;
	gchar* _tmp17_ = NULL;
	gint _tmp18_;
	gchar* _tmp20_;
	sqlite3* _tmp21_;
	const gchar* _tmp22_;
	gchar* _tmp23_ = NULL;
	gint _tmp24_;
	gchar* _tmp26_;
	sqlite3* _tmp27_;
	const gchar* _tmp28_;
	gchar* _tmp29_ = NULL;
	gint _tmp30_;
	gchar* _tmp32_;
	sqlite3* _tmp33_;
	const gchar* _tmp34_;
	gchar* _tmp35_ = NULL;
	gint _tmp36_;
#line 117 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 118 "../src/Services/Database.vala"
	_tmp0_ = self->priv->db_path;
#line 118 "../src/Services/Database.vala"
	sqlite3_open (_tmp0_, &_tmp1_);
#line 118 "../src/Services/Database.vala"
	_sqlite3_close0 (self->priv->db);
#line 118 "../src/Services/Database.vala"
	self->priv->db = _tmp1_;
#line 120 "../src/Services/Database.vala"
	_tmp2_ = g_strdup ("\n" \
"            CREATE TABLE IF NOT EXISTS Labels (\n" \
"                id              INTEGER PRIMARY KEY,\n" \
"                name            TEXT,\n" \
"                color           TEXT,\n" \
"                item_order      INTEGER,\n" \
"                is_deleted      INTEGER,\n" \
"                is_favorite     INTEGER,\n" \
"                todoist         INTEGER,\n" \
"                CONSTRAINT unique_label UNIQUE (name)\n" \
"            );\n" \
"        ");
#line 120 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 120 "../src/Services/Database.vala"
	self->priv->sql = _tmp2_;
#line 133 "../src/Services/Database.vala"
	_tmp3_ = self->priv->db;
#line 133 "../src/Services/Database.vala"
	_tmp4_ = self->priv->sql;
#line 133 "../src/Services/Database.vala"
	_tmp6_ = _sqlite3_exec (_tmp3_, _tmp4_, NULL, NULL, &_tmp5_);
#line 133 "../src/Services/Database.vala"
	_g_free0 (self->priv->errormsg);
#line 133 "../src/Services/Database.vala"
	self->priv->errormsg = _tmp5_;
#line 133 "../src/Services/Database.vala"
	if (_tmp6_ != SQLITE_OK) {
#line 794 "Database.c"
		const gchar* _tmp7_;
#line 134 "../src/Services/Database.vala"
		_tmp7_ = self->priv->errormsg;
#line 134 "../src/Services/Database.vala"
		g_warning ("Database.vala:134: %s", _tmp7_);
#line 800 "Database.c"
	}
#line 137 "../src/Services/Database.vala"
	_tmp8_ = g_strdup ("\n" \
"            CREATE TABLE IF NOT EXISTS Projects (\n" \
"                id               INTEGER PRIMARY KEY,\n" \
"                name             TEXT NOT NULL,\n" \
"                color            TEXT,\n" \
"                todoist          INTEGER,\n" \
"                inbox_project    INTEGER,\n" \
"                team_inbox       INTEGER,\n" \
"                child_order      INTEGER,\n" \
"                is_deleted       INTEGER,\n" \
"                is_archived      INTEGER,\n" \
"                is_favorite      INTEGER,\n" \
"                shared           INTEGER,\n" \
"                view_style       TEXT,\n" \
"                show_completed   INTEGER,\n" \
"                sort_order       INTEGER,\n" \
"                parent_id        INTEGER,\n" \
"                collapsed        INTEGER,\n" \
"                icon_style       TEXT,\n" \
"                emoji            TEXT\n" \
"            );\n" \
"        ");
#line 137 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 137 "../src/Services/Database.vala"
	self->priv->sql = _tmp8_;
#line 160 "../src/Services/Database.vala"
	_tmp9_ = self->priv->db;
#line 160 "../src/Services/Database.vala"
	_tmp10_ = self->priv->sql;
#line 160 "../src/Services/Database.vala"
	_tmp12_ = _sqlite3_exec (_tmp9_, _tmp10_, NULL, NULL, &_tmp11_);
#line 160 "../src/Services/Database.vala"
	_g_free0 (self->priv->errormsg);
#line 160 "../src/Services/Database.vala"
	self->priv->errormsg = _tmp11_;
#line 160 "../src/Services/Database.vala"
	if (_tmp12_ != SQLITE_OK) {
#line 820 "Database.c"
		const gchar* _tmp13_;
#line 161 "../src/Services/Database.vala"
		_tmp13_ = self->priv->errormsg;
#line 161 "../src/Services/Database.vala"
		g_warning ("Database.vala:161: %s", _tmp13_);
#line 826 "Database.c"
	}
#line 164 "../src/Services/Database.vala"
	_tmp14_ = g_strdup ("\n" \
"            CREATE TABLE IF NOT EXISTS Sections (\n" \
"                id              INTEGER PRIMARY KEY,\n" \
"                name            TEXT,\n" \
"                archived_at     TEXT,\n" \
"                added_at        TEXT,\n" \
"                project_id      INTEGER,\n" \
"                section_order   INTEGER,\n" \
"                collapsed       INTEGER,\n" \
"                is_deleted      INTEGER,\n" \
"                is_archived     INTEGER,\n" \
"                FOREIGN KEY (project_id) REFERENCES Projects (id) ON D" \
"ELETE CASCADE\n" \
"            );\n" \
"        ");
#line 164 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 164 "../src/Services/Database.vala"
	self->priv->sql = _tmp14_;
#line 179 "../src/Services/Database.vala"
	_tmp15_ = self->priv->db;
#line 179 "../src/Services/Database.vala"
	_tmp16_ = self->priv->sql;
#line 179 "../src/Services/Database.vala"
	_tmp18_ = _sqlite3_exec (_tmp15_, _tmp16_, NULL, NULL, &_tmp17_);
#line 179 "../src/Services/Database.vala"
	_g_free0 (self->priv->errormsg);
#line 179 "../src/Services/Database.vala"
	self->priv->errormsg = _tmp17_;
#line 179 "../src/Services/Database.vala"
	if (_tmp18_ != SQLITE_OK) {
#line 846 "Database.c"
		const gchar* _tmp19_;
#line 180 "../src/Services/Database.vala"
		_tmp19_ = self->priv->errormsg;
#line 180 "../src/Services/Database.vala"
		g_warning ("Database.vala:180: %s", _tmp19_);
#line 852 "Database.c"
	}
#line 183 "../src/Services/Database.vala"
	_tmp20_ = g_strdup ("\n" \
"            CREATE TABLE IF NOT EXISTS Items (\n" \
"                id                  INTEGER PRIMARY KEY,\n" \
"                content             TEXT NOT NULL,\n" \
"                description         TEXT,\n" \
"                due                 TEXT,\n" \
"                added_at            TEXT,\n" \
"                completed_at        TEXT,\n" \
"                updated_at          TEXT,\n" \
"                section_id          INTEGER,\n" \
"                project_id          INTEGER,\n" \
"                parent_id           INTEGER,\n" \
"                priority            INTEGER,\n" \
"                child_order         INTEGER,\n" \
"                checked             INTEGER,\n" \
"                is_deleted          INTEGER,\n" \
"                day_order           INTEGER,\n" \
"                collapsed           INTEGER,\n" \
"                pinned              INTEGER\n" \
"            );\n" \
"        ");
#line 183 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 183 "../src/Services/Database.vala"
	self->priv->sql = _tmp20_;
#line 205 "../src/Services/Database.vala"
	_tmp21_ = self->priv->db;
#line 205 "../src/Services/Database.vala"
	_tmp22_ = self->priv->sql;
#line 205 "../src/Services/Database.vala"
	_tmp24_ = _sqlite3_exec (_tmp21_, _tmp22_, NULL, NULL, &_tmp23_);
#line 205 "../src/Services/Database.vala"
	_g_free0 (self->priv->errormsg);
#line 205 "../src/Services/Database.vala"
	self->priv->errormsg = _tmp23_;
#line 205 "../src/Services/Database.vala"
	if (_tmp24_ != SQLITE_OK) {
#line 872 "Database.c"
		const gchar* _tmp25_;
#line 206 "../src/Services/Database.vala"
		_tmp25_ = self->priv->errormsg;
#line 206 "../src/Services/Database.vala"
		g_warning ("Database.vala:206: %s", _tmp25_);
#line 878 "Database.c"
	}
#line 209 "../src/Services/Database.vala"
	_tmp26_ = g_strdup ("\n" \
"            CREATE TABLE IF NOT EXISTS Items_Labels (\n" \
"                id              INTEGER PRIMARY KEY,\n" \
"                item_id         INTEGER,\n" \
"                label_id        INTEGER,\n" \
"                CONSTRAINT unique_items_labels UNIQUE (item_id, label_" \
"id),\n" \
"                FOREIGN KEY (item_id) REFERENCES Items (id) ON DELETE " \
"CASCADE,\n" \
"                FOREIGN KEY (label_id) REFERENCES Labels (id) ON DELET" \
"E CASCADE\n" \
"            );\n" \
"        ");
#line 209 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 209 "../src/Services/Database.vala"
	self->priv->sql = _tmp26_;
#line 220 "../src/Services/Database.vala"
	_tmp27_ = self->priv->db;
#line 220 "../src/Services/Database.vala"
	_tmp28_ = self->priv->sql;
#line 220 "../src/Services/Database.vala"
	_tmp30_ = _sqlite3_exec (_tmp27_, _tmp28_, NULL, NULL, &_tmp29_);
#line 220 "../src/Services/Database.vala"
	_g_free0 (self->priv->errormsg);
#line 220 "../src/Services/Database.vala"
	self->priv->errormsg = _tmp29_;
#line 220 "../src/Services/Database.vala"
	if (_tmp30_ != SQLITE_OK) {
#line 898 "Database.c"
		const gchar* _tmp31_;
#line 221 "../src/Services/Database.vala"
		_tmp31_ = self->priv->errormsg;
#line 221 "../src/Services/Database.vala"
		g_warning ("Database.vala:221: %s", _tmp31_);
#line 904 "Database.c"
	}
#line 224 "../src/Services/Database.vala"
	_tmp32_ = g_strdup ("PRAGMA foreign_keys = ON;");
#line 224 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 224 "../src/Services/Database.vala"
	self->priv->sql = _tmp32_;
#line 226 "../src/Services/Database.vala"
	_tmp33_ = self->priv->db;
#line 226 "../src/Services/Database.vala"
	_tmp34_ = self->priv->sql;
#line 226 "../src/Services/Database.vala"
	_tmp36_ = _sqlite3_exec (_tmp33_, _tmp34_, NULL, NULL, &_tmp35_);
#line 226 "../src/Services/Database.vala"
	_g_free0 (self->priv->errormsg);
#line 226 "../src/Services/Database.vala"
	self->priv->errormsg = _tmp35_;
#line 226 "../src/Services/Database.vala"
	if (_tmp36_ != SQLITE_OK) {
#line 924 "Database.c"
		const gchar* _tmp37_;
#line 227 "../src/Services/Database.vala"
		_tmp37_ = self->priv->errormsg;
#line 227 "../src/Services/Database.vala"
		g_warning ("Database.vala:227: %s", _tmp37_);
#line 930 "Database.c"
	}
}

gboolean
services_database_is_database_empty (ServicesDatabase* self)
{
	GeeArrayList* _tmp0_;
	GeeArrayList* _tmp1_;
	gint _tmp2_;
	gint _tmp3_;
	gboolean result = FALSE;
#line 231 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 232 "../src/Services/Database.vala"
	_tmp0_ = services_database_get_projects (self);
#line 232 "../src/Services/Database.vala"
	_tmp1_ = _tmp0_;
#line 232 "../src/Services/Database.vala"
	_tmp2_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp1_);
#line 232 "../src/Services/Database.vala"
	_tmp3_ = _tmp2_;
#line 232 "../src/Services/Database.vala"
	result = _tmp3_ <= 0;
#line 232 "../src/Services/Database.vala"
	return result;
#line 956 "Database.c"
}

GeeArrayList*
services_database_get_projects_collection (ServicesDatabase* self)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp1_;
	sqlite3* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	gint _tmp5_;
	gint _tmp6_;
	sqlite3_stmt* _tmp7_ = NULL;
	sqlite3_stmt* _tmp13_;
	GeeArrayList* result = NULL;
#line 239 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 240 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_PROJECT, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 240 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 244 "../src/Services/Database.vala"
	_tmp1_ = g_strdup ("\n            SELECT * FROM Projects ORDER BY child_order;\n        ");
#line 244 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 244 "../src/Services/Database.vala"
	self->priv->sql = _tmp1_;
#line 248 "../src/Services/Database.vala"
	_tmp2_ = self->priv->db;
#line 248 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 248 "../src/Services/Database.vala"
	_tmp4_ = self->priv->sql;
#line 248 "../src/Services/Database.vala"
	_tmp5_ = strlen (_tmp4_);
#line 248 "../src/Services/Database.vala"
	_tmp6_ = _tmp5_;
#line 248 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp2_, _tmp3_, _tmp6_, &_tmp7_, NULL);
#line 248 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 248 "../src/Services/Database.vala"
	stmt = _tmp7_;
#line 250 "../src/Services/Database.vala"
	while (TRUE) {
#line 1004 "Database.c"
		sqlite3_stmt* _tmp8_;
		GeeArrayList* _tmp9_;
		sqlite3_stmt* _tmp10_;
		ObjectsProject* _tmp11_;
		ObjectsProject* _tmp12_;
#line 250 "../src/Services/Database.vala"
		_tmp8_ = stmt;
#line 250 "../src/Services/Database.vala"
		if (!(sqlite3_step (_tmp8_) == SQLITE_ROW)) {
#line 250 "../src/Services/Database.vala"
			break;
#line 1016 "Database.c"
		}
#line 251 "../src/Services/Database.vala"
		_tmp9_ = return_value;
#line 251 "../src/Services/Database.vala"
		_tmp10_ = stmt;
#line 251 "../src/Services/Database.vala"
		_tmp11_ = _services_database_fill_project (self, _tmp10_);
#line 251 "../src/Services/Database.vala"
		_tmp12_ = _tmp11_;
#line 251 "../src/Services/Database.vala"
		gee_abstract_collection_add ((GeeAbstractCollection*) _tmp9_, _tmp12_);
#line 251 "../src/Services/Database.vala"
		_g_object_unref0 (_tmp12_);
#line 1030 "Database.c"
	}
#line 253 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 253 "../src/Services/Database.vala"
	sqlite3_reset (_tmp13_);
#line 254 "../src/Services/Database.vala"
	result = return_value;
#line 254 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 254 "../src/Services/Database.vala"
	return result;
#line 1042 "Database.c"
}

GeeArrayList*
services_database_get_subprojects (ServicesDatabase* self,
                                   ObjectsProject* p)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	GError* _inner_error0_ = NULL;
	GeeArrayList* result = NULL;
#line 257 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 257 "../src/Services/Database.vala"
	g_return_val_if_fail (p != NULL, NULL);
#line 258 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_PROJECT, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 258 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 1061 "Database.c"
	{
		GeeArrayList* _tmp1_;
#line 259 "../src/Services/Database.vala"
		_tmp1_ = self->priv->_projects;
#line 259 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__projects);
#line 1068 "Database.c"
		{
			GeeArrayList* _tmp19_;
			GeeArrayList* _tmp20_;
			{
				GeeArrayList* _project_list = NULL;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				GeeArrayList* _tmp4_;
				gint _project_size = 0;
				GeeArrayList* _tmp5_;
				gint _tmp6_;
				gint _tmp7_;
				gint _project_index = 0;
#line 260 "../src/Services/Database.vala"
				_tmp2_ = services_database_get_projects (self);
#line 260 "../src/Services/Database.vala"
				_tmp3_ = _tmp2_;
#line 260 "../src/Services/Database.vala"
				_tmp4_ = _g_object_ref0 (_tmp3_);
#line 260 "../src/Services/Database.vala"
				_project_list = _tmp4_;
#line 260 "../src/Services/Database.vala"
				_tmp5_ = _project_list;
#line 260 "../src/Services/Database.vala"
				_tmp6_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp5_);
#line 260 "../src/Services/Database.vala"
				_tmp7_ = _tmp6_;
#line 260 "../src/Services/Database.vala"
				_project_size = _tmp7_;
#line 260 "../src/Services/Database.vala"
				_project_index = -1;
#line 260 "../src/Services/Database.vala"
				while (TRUE) {
#line 1102 "Database.c"
					gint _tmp8_;
					gint _tmp9_;
					ObjectsProject* project = NULL;
					GeeArrayList* _tmp10_;
					gpointer _tmp11_;
					ObjectsProject* _tmp12_;
					gint64 _tmp13_;
					gint64 _tmp14_;
					gint64 _tmp15_;
					gint64 _tmp16_;
#line 260 "../src/Services/Database.vala"
					_project_index = _project_index + 1;
#line 260 "../src/Services/Database.vala"
					_tmp8_ = _project_index;
#line 260 "../src/Services/Database.vala"
					_tmp9_ = _project_size;
#line 260 "../src/Services/Database.vala"
					if (!(_tmp8_ < _tmp9_)) {
#line 260 "../src/Services/Database.vala"
						break;
#line 1123 "Database.c"
					}
#line 260 "../src/Services/Database.vala"
					_tmp10_ = _project_list;
#line 260 "../src/Services/Database.vala"
					_tmp11_ = gee_abstract_list_get ((GeeAbstractList*) _tmp10_, _project_index);
#line 260 "../src/Services/Database.vala"
					project = (ObjectsProject*) _tmp11_;
#line 261 "../src/Services/Database.vala"
					_tmp12_ = project;
#line 261 "../src/Services/Database.vala"
					_tmp13_ = objects_project_get_parent_id (_tmp12_);
#line 261 "../src/Services/Database.vala"
					_tmp14_ = _tmp13_;
#line 261 "../src/Services/Database.vala"
					_tmp15_ = objects_base_object_get_id ((ObjectsBaseObject*) p);
#line 261 "../src/Services/Database.vala"
					_tmp16_ = _tmp15_;
#line 261 "../src/Services/Database.vala"
					if (_tmp14_ == _tmp16_) {
#line 1143 "Database.c"
						GeeArrayList* _tmp17_;
						ObjectsProject* _tmp18_;
#line 262 "../src/Services/Database.vala"
						_tmp17_ = return_value;
#line 262 "../src/Services/Database.vala"
						_tmp18_ = project;
#line 262 "../src/Services/Database.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp17_, _tmp18_);
#line 1152 "Database.c"
					}
#line 260 "../src/Services/Database.vala"
					_g_object_unref0 (project);
#line 1156 "Database.c"
				}
#line 260 "../src/Services/Database.vala"
				_g_object_unref0 (_project_list);
#line 1160 "Database.c"
			}
#line 266 "../src/Services/Database.vala"
			_tmp19_ = return_value;
#line 266 "../src/Services/Database.vala"
			_tmp20_ = _g_object_ref0 (_tmp19_);
#line 266 "../src/Services/Database.vala"
			result = _tmp20_;
#line 1168 "Database.c"
			{
				GeeArrayList* _tmp21_;
#line 259 "../src/Services/Database.vala"
				_tmp21_ = self->priv->_projects;
#line 259 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__projects);
#line 1175 "Database.c"
			}
#line 266 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 266 "../src/Services/Database.vala"
			return result;
#line 1181 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp22_;
#line 259 "../src/Services/Database.vala"
			_tmp22_ = self->priv->_projects;
#line 259 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__projects);
#line 1190 "Database.c"
		}
#line 259 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 259 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 259 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 259 "../src/Services/Database.vala"
		return NULL;
#line 1200 "Database.c"
	}
#line 257 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 1204 "Database.c"
}

ObjectsProject*
_services_database_fill_project (ServicesDatabase* self,
                                 sqlite3_stmt* stmt)
{
	ObjectsProject* return_value = NULL;
	ObjectsProject* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	ObjectsProject* result = NULL;
#line 270 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 270 "../src/Services/Database.vala"
	g_return_val_if_fail (stmt != NULL, NULL);
#line 271 "../src/Services/Database.vala"
	_tmp0_ = objects_project_new ();
#line 271 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 272 "../src/Services/Database.vala"
	objects_base_object_set_id ((ObjectsBaseObject*) return_value, sqlite3_column_int64 (stmt, 0));
#line 273 "../src/Services/Database.vala"
	_tmp1_ = (const gchar*) sqlite3_column_text (stmt, 1);
#line 273 "../src/Services/Database.vala"
	objects_project_set_name (return_value, _tmp1_);
#line 274 "../src/Services/Database.vala"
	_tmp2_ = (const gchar*) sqlite3_column_text (stmt, 2);
#line 274 "../src/Services/Database.vala"
	objects_project_set_color (return_value, _tmp2_);
#line 275 "../src/Services/Database.vala"
	objects_project_set_todoist (return_value, services_database_get_parameter_bool (self, stmt, 3));
#line 276 "../src/Services/Database.vala"
	objects_project_set_inbox_project (return_value, services_database_get_parameter_bool (self, stmt, 4));
#line 277 "../src/Services/Database.vala"
	objects_project_set_team_inbox (return_value, services_database_get_parameter_bool (self, stmt, 5));
#line 278 "../src/Services/Database.vala"
	objects_project_set_child_order (return_value, sqlite3_column_int (stmt, 6));
#line 279 "../src/Services/Database.vala"
	objects_project_set_is_deleted (return_value, services_database_get_parameter_bool (self, stmt, 7));
#line 280 "../src/Services/Database.vala"
	objects_project_set_is_archived (return_value, services_database_get_parameter_bool (self, stmt, 8));
#line 281 "../src/Services/Database.vala"
	objects_project_set_is_favorite (return_value, services_database_get_parameter_bool (self, stmt, 9));
#line 282 "../src/Services/Database.vala"
	objects_project_set_shared (return_value, services_database_get_parameter_bool (self, stmt, 10));
#line 283 "../src/Services/Database.vala"
	objects_project_set_view_style (return_value, services_database_get_view_style_by_text (self, stmt, 11));
#line 284 "../src/Services/Database.vala"
	objects_project_set_show_completed (return_value, services_database_get_parameter_bool (self, stmt, 12));
#line 285 "../src/Services/Database.vala"
	objects_project_set_sort_order (return_value, sqlite3_column_int (stmt, 13));
#line 286 "../src/Services/Database.vala"
	objects_project_set_parent_id (return_value, sqlite3_column_int64 (stmt, 14));
#line 287 "../src/Services/Database.vala"
	objects_project_set_collapsed (return_value, services_database_get_parameter_bool (self, stmt, 15));
#line 288 "../src/Services/Database.vala"
	objects_project_set_icon_style (return_value, services_database_get_icon_style_by_text (self, stmt, 16));
#line 289 "../src/Services/Database.vala"
	_tmp3_ = (const gchar*) sqlite3_column_text (stmt, 17);
#line 289 "../src/Services/Database.vala"
	objects_project_set_emoji (return_value, _tmp3_);
#line 290 "../src/Services/Database.vala"
	result = return_value;
#line 290 "../src/Services/Database.vala"
	return result;
#line 1271 "Database.c"
}

static ProjectViewStyle
services_database_get_view_style_by_text (ServicesDatabase* self,
                                          sqlite3_stmt* stmt,
                                          gint col)
{
	const gchar* _tmp0_;
	ProjectViewStyle result = 0;
#line 293 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 293 "../src/Services/Database.vala"
	g_return_val_if_fail (stmt != NULL, 0);
#line 294 "../src/Services/Database.vala"
	_tmp0_ = (const gchar*) sqlite3_column_text (stmt, col);
#line 294 "../src/Services/Database.vala"
	if (g_strcmp0 (_tmp0_, "board") == 0) {
#line 295 "../src/Services/Database.vala"
		result = PROJECT_VIEW_STYLE_BOARD;
#line 295 "../src/Services/Database.vala"
		return result;
#line 1293 "Database.c"
	}
#line 298 "../src/Services/Database.vala"
	result = PROJECT_VIEW_STYLE_LIST;
#line 298 "../src/Services/Database.vala"
	return result;
#line 1299 "Database.c"
}

static ProjectIconStyle
services_database_get_icon_style_by_text (ServicesDatabase* self,
                                          sqlite3_stmt* stmt,
                                          gint col)
{
	const gchar* _tmp0_;
	ProjectIconStyle result = 0;
#line 301 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 301 "../src/Services/Database.vala"
	g_return_val_if_fail (stmt != NULL, 0);
#line 302 "../src/Services/Database.vala"
	_tmp0_ = (const gchar*) sqlite3_column_text (stmt, col);
#line 302 "../src/Services/Database.vala"
	if (g_strcmp0 (_tmp0_, "emoji") == 0) {
#line 303 "../src/Services/Database.vala"
		result = PROJECT_ICON_STYLE_EMOJI;
#line 303 "../src/Services/Database.vala"
		return result;
#line 1321 "Database.c"
	}
#line 306 "../src/Services/Database.vala"
	result = PROJECT_ICON_STYLE_PROGRESS;
#line 306 "../src/Services/Database.vala"
	return result;
#line 1327 "Database.c"
}

gboolean
services_database_insert_project (ServicesDatabase* self,
                                  ObjectsProject* project)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	sqlite3_stmt* _tmp13_;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	sqlite3_stmt* _tmp16_;
	gboolean _tmp17_;
	gboolean _tmp18_;
	sqlite3_stmt* _tmp19_;
	gboolean _tmp20_;
	gboolean _tmp21_;
	sqlite3_stmt* _tmp22_;
	gboolean _tmp23_;
	gboolean _tmp24_;
	sqlite3_stmt* _tmp25_;
	gint _tmp26_;
	gint _tmp27_;
	sqlite3_stmt* _tmp28_;
	gboolean _tmp29_;
	gboolean _tmp30_;
	sqlite3_stmt* _tmp31_;
	gboolean _tmp32_;
	gboolean _tmp33_;
	sqlite3_stmt* _tmp34_;
	gboolean _tmp35_;
	gboolean _tmp36_;
	sqlite3_stmt* _tmp37_;
	gboolean _tmp38_;
	gboolean _tmp39_;
	sqlite3_stmt* _tmp40_;
	ProjectViewStyle _tmp41_;
	ProjectViewStyle _tmp42_;
	gchar* _tmp43_;
	gchar* _tmp44_;
	sqlite3_stmt* _tmp45_;
	gboolean _tmp46_;
	gboolean _tmp47_;
	sqlite3_stmt* _tmp48_;
	gint _tmp49_;
	gint _tmp50_;
	sqlite3_stmt* _tmp51_;
	gint64 _tmp52_;
	gint64 _tmp53_;
	sqlite3_stmt* _tmp54_;
	gboolean _tmp55_;
	gboolean _tmp56_;
	sqlite3_stmt* _tmp57_;
	ProjectIconStyle _tmp58_;
	ProjectIconStyle _tmp59_;
	gchar* _tmp60_;
	gchar* _tmp61_;
	sqlite3_stmt* _tmp62_;
	const gchar* _tmp63_;
	const gchar* _tmp64_;
	sqlite3_stmt* _tmp65_;
	sqlite3_stmt* _tmp75_;
	sqlite3_stmt* _tmp76_;
	gboolean result = FALSE;
#line 309 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 309 "../src/Services/Database.vala"
	g_return_val_if_fail (project != NULL, FALSE);
#line 312 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            INSERT OR IGNORE INTO Projects (id, name, color, todoist, " \
"inbox_project,\n" \
"                team_inbox, child_order, is_deleted, is_archived, is_f" \
"avorite, shared, view_style,\n" \
"                show_completed, sort_order, parent_id, collapsed, icon" \
"_style, emoji)\n" \
"            VALUES ($id, $name, $color, $todoist, $inbox_project, $tea" \
"m_inbox,\n" \
"                $child_order, $is_deleted, $is_archived, $is_favorite," \
" $shared, $view_style, $show_completed,\n" \
"                $sort_order, $parent_id, $collapsed, $icon_style, $emo" \
"ji);\n" \
"        ");
#line 312 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 312 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 321 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 321 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 321 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 321 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 321 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 321 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 321 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 321 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 322 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 322 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) project);
#line 322 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 322 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 323 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 323 "../src/Services/Database.vala"
	_tmp11_ = objects_project_get_name (project);
#line 323 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 323 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp10_, "$name", _tmp12_);
#line 324 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 324 "../src/Services/Database.vala"
	_tmp14_ = objects_project_get_color (project);
#line 324 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 324 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp13_, "$color", _tmp15_);
#line 325 "../src/Services/Database.vala"
	_tmp16_ = stmt;
#line 325 "../src/Services/Database.vala"
	_tmp17_ = objects_project_get_todoist (project);
#line 325 "../src/Services/Database.vala"
	_tmp18_ = _tmp17_;
#line 325 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp16_, "$todoist", _tmp18_);
#line 326 "../src/Services/Database.vala"
	_tmp19_ = stmt;
#line 326 "../src/Services/Database.vala"
	_tmp20_ = objects_project_get_inbox_project (project);
#line 326 "../src/Services/Database.vala"
	_tmp21_ = _tmp20_;
#line 326 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp19_, "$inbox_project", _tmp21_);
#line 327 "../src/Services/Database.vala"
	_tmp22_ = stmt;
#line 327 "../src/Services/Database.vala"
	_tmp23_ = objects_project_get_team_inbox (project);
#line 327 "../src/Services/Database.vala"
	_tmp24_ = _tmp23_;
#line 327 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp22_, "$team_inbox", _tmp24_);
#line 328 "../src/Services/Database.vala"
	_tmp25_ = stmt;
#line 328 "../src/Services/Database.vala"
	_tmp26_ = objects_project_get_child_order (project);
#line 328 "../src/Services/Database.vala"
	_tmp27_ = _tmp26_;
#line 328 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp25_, "$child_order", _tmp27_);
#line 329 "../src/Services/Database.vala"
	_tmp28_ = stmt;
#line 329 "../src/Services/Database.vala"
	_tmp29_ = objects_project_get_is_deleted (project);
#line 329 "../src/Services/Database.vala"
	_tmp30_ = _tmp29_;
#line 329 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp28_, "$is_deleted", _tmp30_);
#line 330 "../src/Services/Database.vala"
	_tmp31_ = stmt;
#line 330 "../src/Services/Database.vala"
	_tmp32_ = objects_project_get_is_archived (project);
#line 330 "../src/Services/Database.vala"
	_tmp33_ = _tmp32_;
#line 330 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp31_, "$is_archived", _tmp33_);
#line 331 "../src/Services/Database.vala"
	_tmp34_ = stmt;
#line 331 "../src/Services/Database.vala"
	_tmp35_ = objects_project_get_is_favorite (project);
#line 331 "../src/Services/Database.vala"
	_tmp36_ = _tmp35_;
#line 331 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp34_, "$is_favorite", _tmp36_);
#line 332 "../src/Services/Database.vala"
	_tmp37_ = stmt;
#line 332 "../src/Services/Database.vala"
	_tmp38_ = objects_project_get_shared (project);
#line 332 "../src/Services/Database.vala"
	_tmp39_ = _tmp38_;
#line 332 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp37_, "$shared", _tmp39_);
#line 333 "../src/Services/Database.vala"
	_tmp40_ = stmt;
#line 333 "../src/Services/Database.vala"
	_tmp41_ = objects_project_get_view_style (project);
#line 333 "../src/Services/Database.vala"
	_tmp42_ = _tmp41_;
#line 333 "../src/Services/Database.vala"
	_tmp43_ = project_view_style_to_string (_tmp42_);
#line 333 "../src/Services/Database.vala"
	_tmp44_ = _tmp43_;
#line 333 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp40_, "$view_style", _tmp44_);
#line 333 "../src/Services/Database.vala"
	_g_free0 (_tmp44_);
#line 334 "../src/Services/Database.vala"
	_tmp45_ = stmt;
#line 334 "../src/Services/Database.vala"
	_tmp46_ = objects_project_get_show_completed (project);
#line 334 "../src/Services/Database.vala"
	_tmp47_ = _tmp46_;
#line 334 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp45_, "$show_completed", _tmp47_);
#line 335 "../src/Services/Database.vala"
	_tmp48_ = stmt;
#line 335 "../src/Services/Database.vala"
	_tmp49_ = objects_project_get_sort_order (project);
#line 335 "../src/Services/Database.vala"
	_tmp50_ = _tmp49_;
#line 335 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp48_, "$sort_order", _tmp50_);
#line 336 "../src/Services/Database.vala"
	_tmp51_ = stmt;
#line 336 "../src/Services/Database.vala"
	_tmp52_ = objects_project_get_parent_id (project);
#line 336 "../src/Services/Database.vala"
	_tmp53_ = _tmp52_;
#line 336 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp51_, "$parent_id", _tmp53_);
#line 337 "../src/Services/Database.vala"
	_tmp54_ = stmt;
#line 337 "../src/Services/Database.vala"
	_tmp55_ = objects_project_get_collapsed (project);
#line 337 "../src/Services/Database.vala"
	_tmp56_ = _tmp55_;
#line 337 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp54_, "$collapsed", _tmp56_);
#line 338 "../src/Services/Database.vala"
	_tmp57_ = stmt;
#line 338 "../src/Services/Database.vala"
	_tmp58_ = objects_project_get_icon_style (project);
#line 338 "../src/Services/Database.vala"
	_tmp59_ = _tmp58_;
#line 338 "../src/Services/Database.vala"
	_tmp60_ = project_icon_style_to_string (_tmp59_);
#line 338 "../src/Services/Database.vala"
	_tmp61_ = _tmp60_;
#line 338 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp57_, "$icon_style", _tmp61_);
#line 338 "../src/Services/Database.vala"
	_g_free0 (_tmp61_);
#line 339 "../src/Services/Database.vala"
	_tmp62_ = stmt;
#line 339 "../src/Services/Database.vala"
	_tmp63_ = objects_project_get_emoji (project);
#line 339 "../src/Services/Database.vala"
	_tmp64_ = _tmp63_;
#line 339 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp62_, "$emoji", _tmp64_);
#line 341 "../src/Services/Database.vala"
	_tmp65_ = stmt;
#line 341 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp65_) == SQLITE_DONE) {
#line 1590 "Database.c"
		GeeArrayList* _tmp66_;
		GeeArrayList* _tmp67_;
		ObjectsProject* _tmp68_;
		ObjectsProject* _tmp69_;
#line 342 "../src/Services/Database.vala"
		_tmp66_ = services_database_get_projects (self);
#line 342 "../src/Services/Database.vala"
		_tmp67_ = _tmp66_;
#line 342 "../src/Services/Database.vala"
		gee_abstract_collection_add ((GeeAbstractCollection*) _tmp67_, project);
#line 344 "../src/Services/Database.vala"
		_tmp68_ = objects_project_get_parent (project);
#line 344 "../src/Services/Database.vala"
		_tmp69_ = _tmp68_;
#line 344 "../src/Services/Database.vala"
		if (_tmp69_ == NULL) {
#line 345 "../src/Services/Database.vala"
			g_signal_emit (self, services_database_signals[SERVICES_DATABASE_PROJECT_ADDED_SIGNAL], 0, project);
#line 1609 "Database.c"
		} else {
			ObjectsProject* _tmp70_;
			ObjectsProject* _tmp71_;
#line 347 "../src/Services/Database.vala"
			_tmp70_ = objects_project_get_parent (project);
#line 347 "../src/Services/Database.vala"
			_tmp71_ = _tmp70_;
#line 347 "../src/Services/Database.vala"
			g_signal_emit_by_name (_tmp71_, "subproject-added", project);
#line 1619 "Database.c"
		}
	} else {
		sqlite3* _tmp72_;
		sqlite3* _tmp73_;
		const gchar* _tmp74_;
#line 350 "../src/Services/Database.vala"
		_tmp72_ = self->priv->db;
#line 350 "../src/Services/Database.vala"
		_tmp73_ = self->priv->db;
#line 350 "../src/Services/Database.vala"
		_tmp74_ = sqlite3_errmsg (_tmp73_);
#line 350 "../src/Services/Database.vala"
		g_warning ("Database.vala:350: Error: %d: %s", sqlite3_errcode (_tmp72_), _tmp74_);
#line 1633 "Database.c"
	}
#line 353 "../src/Services/Database.vala"
	_tmp75_ = stmt;
#line 353 "../src/Services/Database.vala"
	sqlite3_reset (_tmp75_);
#line 354 "../src/Services/Database.vala"
	_tmp76_ = stmt;
#line 354 "../src/Services/Database.vala"
	result = sqlite3_step (_tmp76_) == SQLITE_DONE;
#line 354 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 354 "../src/Services/Database.vala"
	return result;
#line 1647 "Database.c"
}

ObjectsProject*
services_database_get_project (ServicesDatabase* self,
                               gint64 id)
{
	ObjectsProject* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsProject* result = NULL;
#line 357 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 358 "../src/Services/Database.vala"
	return_value = NULL;
#line 1661 "Database.c"
	{
		GeeArrayList* _tmp0_;
#line 359 "../src/Services/Database.vala"
		_tmp0_ = self->priv->_projects;
#line 359 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__projects);
#line 1668 "Database.c"
		{
			ObjectsProject* _tmp16_;
			ObjectsProject* _tmp17_;
			{
				GeeArrayList* _project_list = NULL;
				GeeArrayList* _tmp1_;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				gint _project_size = 0;
				GeeArrayList* _tmp4_;
				gint _tmp5_;
				gint _tmp6_;
				gint _project_index = 0;
#line 360 "../src/Services/Database.vala"
				_tmp1_ = services_database_get_projects (self);
#line 360 "../src/Services/Database.vala"
				_tmp2_ = _tmp1_;
#line 360 "../src/Services/Database.vala"
				_tmp3_ = _g_object_ref0 (_tmp2_);
#line 360 "../src/Services/Database.vala"
				_project_list = _tmp3_;
#line 360 "../src/Services/Database.vala"
				_tmp4_ = _project_list;
#line 360 "../src/Services/Database.vala"
				_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 360 "../src/Services/Database.vala"
				_tmp6_ = _tmp5_;
#line 360 "../src/Services/Database.vala"
				_project_size = _tmp6_;
#line 360 "../src/Services/Database.vala"
				_project_index = -1;
#line 360 "../src/Services/Database.vala"
				while (TRUE) {
#line 1702 "Database.c"
					gint _tmp7_;
					gint _tmp8_;
					ObjectsProject* project = NULL;
					GeeArrayList* _tmp9_;
					gpointer _tmp10_;
					ObjectsProject* _tmp11_;
					gint64 _tmp12_;
					gint64 _tmp13_;
#line 360 "../src/Services/Database.vala"
					_project_index = _project_index + 1;
#line 360 "../src/Services/Database.vala"
					_tmp7_ = _project_index;
#line 360 "../src/Services/Database.vala"
					_tmp8_ = _project_size;
#line 360 "../src/Services/Database.vala"
					if (!(_tmp7_ < _tmp8_)) {
#line 360 "../src/Services/Database.vala"
						break;
#line 1721 "Database.c"
					}
#line 360 "../src/Services/Database.vala"
					_tmp9_ = _project_list;
#line 360 "../src/Services/Database.vala"
					_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _project_index);
#line 360 "../src/Services/Database.vala"
					project = (ObjectsProject*) _tmp10_;
#line 361 "../src/Services/Database.vala"
					_tmp11_ = project;
#line 361 "../src/Services/Database.vala"
					_tmp12_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp11_);
#line 361 "../src/Services/Database.vala"
					_tmp13_ = _tmp12_;
#line 361 "../src/Services/Database.vala"
					if (_tmp13_ == id) {
#line 1737 "Database.c"
						ObjectsProject* _tmp14_;
						ObjectsProject* _tmp15_;
#line 362 "../src/Services/Database.vala"
						_tmp14_ = project;
#line 362 "../src/Services/Database.vala"
						_tmp15_ = _g_object_ref0 (_tmp14_);
#line 362 "../src/Services/Database.vala"
						_g_object_unref0 (return_value);
#line 362 "../src/Services/Database.vala"
						return_value = _tmp15_;
#line 363 "../src/Services/Database.vala"
						_g_object_unref0 (project);
#line 363 "../src/Services/Database.vala"
						break;
#line 1752 "Database.c"
					}
#line 360 "../src/Services/Database.vala"
					_g_object_unref0 (project);
#line 1756 "Database.c"
				}
#line 360 "../src/Services/Database.vala"
				_g_object_unref0 (_project_list);
#line 1760 "Database.c"
			}
#line 367 "../src/Services/Database.vala"
			_tmp16_ = return_value;
#line 367 "../src/Services/Database.vala"
			_tmp17_ = _g_object_ref0 (_tmp16_);
#line 367 "../src/Services/Database.vala"
			result = _tmp17_;
#line 1768 "Database.c"
			{
				GeeArrayList* _tmp18_;
#line 359 "../src/Services/Database.vala"
				_tmp18_ = self->priv->_projects;
#line 359 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__projects);
#line 1775 "Database.c"
			}
#line 367 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 367 "../src/Services/Database.vala"
			return result;
#line 1781 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp19_;
#line 359 "../src/Services/Database.vala"
			_tmp19_ = self->priv->_projects;
#line 359 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__projects);
#line 1790 "Database.c"
		}
#line 359 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 359 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 359 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 359 "../src/Services/Database.vala"
		return NULL;
#line 1800 "Database.c"
	}
#line 357 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 1804 "Database.c"
}

void
services_database_delete_project (ServicesDatabase* self,
                                  ObjectsProject* project)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	sqlite3_stmt* _tmp47_;
#line 371 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 371 "../src/Services/Database.vala"
	g_return_if_fail (project != NULL);
#line 374 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n            DELETE FROM Projects WHERE id=$id;\n        ");
#line 374 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 374 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 378 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 378 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 378 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 378 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 378 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 378 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 378 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 378 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 379 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 379 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) project);
#line 379 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 379 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 381 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 381 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp10_) == SQLITE_DONE) {
#line 1862 "Database.c"
		{
			GeeArrayList* _section_list = NULL;
			GeeArrayList* _tmp11_;
			GeeArrayList* _tmp12_;
			GeeArrayList* _tmp13_;
			gint _section_size = 0;
			GeeArrayList* _tmp14_;
			gint _tmp15_;
			gint _tmp16_;
			gint _section_index = 0;
#line 382 "../src/Services/Database.vala"
			_tmp11_ = objects_project_get_sections (project);
#line 382 "../src/Services/Database.vala"
			_tmp12_ = _tmp11_;
#line 382 "../src/Services/Database.vala"
			_tmp13_ = _g_object_ref0 (_tmp12_);
#line 382 "../src/Services/Database.vala"
			_section_list = _tmp13_;
#line 382 "../src/Services/Database.vala"
			_tmp14_ = _section_list;
#line 382 "../src/Services/Database.vala"
			_tmp15_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp14_);
#line 382 "../src/Services/Database.vala"
			_tmp16_ = _tmp15_;
#line 382 "../src/Services/Database.vala"
			_section_size = _tmp16_;
#line 382 "../src/Services/Database.vala"
			_section_index = -1;
#line 382 "../src/Services/Database.vala"
			while (TRUE) {
#line 1893 "Database.c"
				gint _tmp17_;
				gint _tmp18_;
				ObjectsSection* section = NULL;
				GeeArrayList* _tmp19_;
				gpointer _tmp20_;
				ObjectsSection* _tmp21_;
#line 382 "../src/Services/Database.vala"
				_section_index = _section_index + 1;
#line 382 "../src/Services/Database.vala"
				_tmp17_ = _section_index;
#line 382 "../src/Services/Database.vala"
				_tmp18_ = _section_size;
#line 382 "../src/Services/Database.vala"
				if (!(_tmp17_ < _tmp18_)) {
#line 382 "../src/Services/Database.vala"
					break;
#line 1910 "Database.c"
				}
#line 382 "../src/Services/Database.vala"
				_tmp19_ = _section_list;
#line 382 "../src/Services/Database.vala"
				_tmp20_ = gee_abstract_list_get ((GeeAbstractList*) _tmp19_, _section_index);
#line 382 "../src/Services/Database.vala"
				section = (ObjectsSection*) _tmp20_;
#line 383 "../src/Services/Database.vala"
				_tmp21_ = section;
#line 383 "../src/Services/Database.vala"
				services_database_delete_section (self, _tmp21_);
#line 382 "../src/Services/Database.vala"
				_g_object_unref0 (section);
#line 1924 "Database.c"
			}
#line 382 "../src/Services/Database.vala"
			_g_object_unref0 (_section_list);
#line 1928 "Database.c"
		}
		{
			GeeArrayList* _item_list = NULL;
			GeeArrayList* _tmp22_;
			GeeArrayList* _tmp23_;
			GeeArrayList* _tmp24_;
			gint _item_size = 0;
			GeeArrayList* _tmp25_;
			gint _tmp26_;
			gint _tmp27_;
			gint _item_index = 0;
#line 386 "../src/Services/Database.vala"
			_tmp22_ = objects_project_get_items (project);
#line 386 "../src/Services/Database.vala"
			_tmp23_ = _tmp22_;
#line 386 "../src/Services/Database.vala"
			_tmp24_ = _g_object_ref0 (_tmp23_);
#line 386 "../src/Services/Database.vala"
			_item_list = _tmp24_;
#line 386 "../src/Services/Database.vala"
			_tmp25_ = _item_list;
#line 386 "../src/Services/Database.vala"
			_tmp26_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp25_);
#line 386 "../src/Services/Database.vala"
			_tmp27_ = _tmp26_;
#line 386 "../src/Services/Database.vala"
			_item_size = _tmp27_;
#line 386 "../src/Services/Database.vala"
			_item_index = -1;
#line 386 "../src/Services/Database.vala"
			while (TRUE) {
#line 1960 "Database.c"
				gint _tmp28_;
				gint _tmp29_;
				ObjectsItem* item = NULL;
				GeeArrayList* _tmp30_;
				gpointer _tmp31_;
				ObjectsItem* _tmp32_;
#line 386 "../src/Services/Database.vala"
				_item_index = _item_index + 1;
#line 386 "../src/Services/Database.vala"
				_tmp28_ = _item_index;
#line 386 "../src/Services/Database.vala"
				_tmp29_ = _item_size;
#line 386 "../src/Services/Database.vala"
				if (!(_tmp28_ < _tmp29_)) {
#line 386 "../src/Services/Database.vala"
					break;
#line 1977 "Database.c"
				}
#line 386 "../src/Services/Database.vala"
				_tmp30_ = _item_list;
#line 386 "../src/Services/Database.vala"
				_tmp31_ = gee_abstract_list_get ((GeeAbstractList*) _tmp30_, _item_index);
#line 386 "../src/Services/Database.vala"
				item = (ObjectsItem*) _tmp31_;
#line 387 "../src/Services/Database.vala"
				_tmp32_ = item;
#line 387 "../src/Services/Database.vala"
				services_database_delete_item (self, _tmp32_);
#line 386 "../src/Services/Database.vala"
				_g_object_unref0 (item);
#line 1991 "Database.c"
			}
#line 386 "../src/Services/Database.vala"
			_g_object_unref0 (_item_list);
#line 1995 "Database.c"
		}
		{
			GeeArrayList* _subproject_list = NULL;
			GeeArrayList* _tmp33_;
			GeeArrayList* _tmp34_;
			GeeArrayList* _tmp35_;
			gint _subproject_size = 0;
			GeeArrayList* _tmp36_;
			gint _tmp37_;
			gint _tmp38_;
			gint _subproject_index = 0;
#line 390 "../src/Services/Database.vala"
			_tmp33_ = objects_project_get_subprojects (project);
#line 390 "../src/Services/Database.vala"
			_tmp34_ = _tmp33_;
#line 390 "../src/Services/Database.vala"
			_tmp35_ = _g_object_ref0 (_tmp34_);
#line 390 "../src/Services/Database.vala"
			_subproject_list = _tmp35_;
#line 390 "../src/Services/Database.vala"
			_tmp36_ = _subproject_list;
#line 390 "../src/Services/Database.vala"
			_tmp37_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp36_);
#line 390 "../src/Services/Database.vala"
			_tmp38_ = _tmp37_;
#line 390 "../src/Services/Database.vala"
			_subproject_size = _tmp38_;
#line 390 "../src/Services/Database.vala"
			_subproject_index = -1;
#line 390 "../src/Services/Database.vala"
			while (TRUE) {
#line 2027 "Database.c"
				gint _tmp39_;
				gint _tmp40_;
				ObjectsProject* subproject = NULL;
				GeeArrayList* _tmp41_;
				gpointer _tmp42_;
				ObjectsProject* _tmp43_;
#line 390 "../src/Services/Database.vala"
				_subproject_index = _subproject_index + 1;
#line 390 "../src/Services/Database.vala"
				_tmp39_ = _subproject_index;
#line 390 "../src/Services/Database.vala"
				_tmp40_ = _subproject_size;
#line 390 "../src/Services/Database.vala"
				if (!(_tmp39_ < _tmp40_)) {
#line 390 "../src/Services/Database.vala"
					break;
#line 2044 "Database.c"
				}
#line 390 "../src/Services/Database.vala"
				_tmp41_ = _subproject_list;
#line 390 "../src/Services/Database.vala"
				_tmp42_ = gee_abstract_list_get ((GeeAbstractList*) _tmp41_, _subproject_index);
#line 390 "../src/Services/Database.vala"
				subproject = (ObjectsProject*) _tmp42_;
#line 391 "../src/Services/Database.vala"
				_tmp43_ = subproject;
#line 391 "../src/Services/Database.vala"
				services_database_delete_project (self, _tmp43_);
#line 390 "../src/Services/Database.vala"
				_g_object_unref0 (subproject);
#line 2058 "Database.c"
			}
#line 390 "../src/Services/Database.vala"
			_g_object_unref0 (_subproject_list);
#line 2062 "Database.c"
		}
#line 394 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) project, "deleted");
#line 2066 "Database.c"
	} else {
		sqlite3* _tmp44_;
		sqlite3* _tmp45_;
		const gchar* _tmp46_;
#line 396 "../src/Services/Database.vala"
		_tmp44_ = self->priv->db;
#line 396 "../src/Services/Database.vala"
		_tmp45_ = self->priv->db;
#line 396 "../src/Services/Database.vala"
		_tmp46_ = sqlite3_errmsg (_tmp45_);
#line 396 "../src/Services/Database.vala"
		g_warning ("Database.vala:396: Error: %d: %s", sqlite3_errcode (_tmp44_), _tmp46_);
#line 2079 "Database.c"
	}
#line 398 "../src/Services/Database.vala"
	_tmp47_ = stmt;
#line 398 "../src/Services/Database.vala"
	sqlite3_reset (_tmp47_);
#line 371 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 2087 "Database.c"
}

void
services_database_update_project (ServicesDatabase* self,
                                  ObjectsProject* project)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	sqlite3_stmt* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	sqlite3_stmt* _tmp13_;
	gboolean _tmp14_;
	gboolean _tmp15_;
	sqlite3_stmt* _tmp16_;
	gboolean _tmp17_;
	gboolean _tmp18_;
	sqlite3_stmt* _tmp19_;
	gboolean _tmp20_;
	gboolean _tmp21_;
	sqlite3_stmt* _tmp22_;
	gint _tmp23_;
	gint _tmp24_;
	sqlite3_stmt* _tmp25_;
	gboolean _tmp26_;
	gboolean _tmp27_;
	sqlite3_stmt* _tmp28_;
	gboolean _tmp29_;
	gboolean _tmp30_;
	sqlite3_stmt* _tmp31_;
	gboolean _tmp32_;
	gboolean _tmp33_;
	sqlite3_stmt* _tmp34_;
	gboolean _tmp35_;
	gboolean _tmp36_;
	sqlite3_stmt* _tmp37_;
	ProjectViewStyle _tmp38_;
	ProjectViewStyle _tmp39_;
	gchar* _tmp40_;
	gchar* _tmp41_;
	sqlite3_stmt* _tmp42_;
	gboolean _tmp43_;
	gboolean _tmp44_;
	sqlite3_stmt* _tmp45_;
	gint _tmp46_;
	gint _tmp47_;
	sqlite3_stmt* _tmp48_;
	gint64 _tmp49_;
	gint64 _tmp50_;
	sqlite3_stmt* _tmp51_;
	gboolean _tmp52_;
	gboolean _tmp53_;
	sqlite3_stmt* _tmp54_;
	ProjectIconStyle _tmp55_;
	ProjectIconStyle _tmp56_;
	gchar* _tmp57_;
	gchar* _tmp58_;
	sqlite3_stmt* _tmp59_;
	const gchar* _tmp60_;
	const gchar* _tmp61_;
	sqlite3_stmt* _tmp62_;
	gint64 _tmp63_;
	gint64 _tmp64_;
	sqlite3_stmt* _tmp65_;
	sqlite3_stmt* _tmp69_;
#line 401 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 401 "../src/Services/Database.vala"
	g_return_if_fail (project != NULL);
#line 404 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            UPDATE Projects SET name=$name, color=$color, todoist=$tod" \
"oist,\n" \
"                inbox_project=$inbox_project, team_inbox=$team_inbox,\n" \
"                child_order=$child_order, is_deleted=$is_deleted,\n" \
"                is_archived=$is_archived, is_favorite=$is_favorite,\n" \
"                shared=$shared, view_style=$view_style,\n" \
"                show_completed=$show_completed, sort_order=$sort_order" \
",\n" \
"                parent_id=$parent_id, collapsed=$collapsed, icon_style" \
"=$icon_style,\n" \
"                emoji=$emoji\n" \
"            WHERE id=$id;\n" \
"        ");
#line 404 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 404 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 416 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 416 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 416 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 416 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 416 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 416 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 416 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 416 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 417 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 417 "../src/Services/Database.vala"
	_tmp8_ = objects_project_get_name (project);
#line 417 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 417 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp7_, "$name", _tmp9_);
#line 418 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 418 "../src/Services/Database.vala"
	_tmp11_ = objects_project_get_color (project);
#line 418 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 418 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp10_, "$color", _tmp12_);
#line 419 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 419 "../src/Services/Database.vala"
	_tmp14_ = objects_project_get_todoist (project);
#line 419 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 419 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp13_, "$todoist", _tmp15_);
#line 420 "../src/Services/Database.vala"
	_tmp16_ = stmt;
#line 420 "../src/Services/Database.vala"
	_tmp17_ = objects_project_get_inbox_project (project);
#line 420 "../src/Services/Database.vala"
	_tmp18_ = _tmp17_;
#line 420 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp16_, "$inbox_project", _tmp18_);
#line 421 "../src/Services/Database.vala"
	_tmp19_ = stmt;
#line 421 "../src/Services/Database.vala"
	_tmp20_ = objects_project_get_team_inbox (project);
#line 421 "../src/Services/Database.vala"
	_tmp21_ = _tmp20_;
#line 421 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp19_, "$team_inbox", _tmp21_);
#line 422 "../src/Services/Database.vala"
	_tmp22_ = stmt;
#line 422 "../src/Services/Database.vala"
	_tmp23_ = objects_project_get_child_order (project);
#line 422 "../src/Services/Database.vala"
	_tmp24_ = _tmp23_;
#line 422 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp22_, "$child_order", _tmp24_);
#line 423 "../src/Services/Database.vala"
	_tmp25_ = stmt;
#line 423 "../src/Services/Database.vala"
	_tmp26_ = objects_project_get_is_deleted (project);
#line 423 "../src/Services/Database.vala"
	_tmp27_ = _tmp26_;
#line 423 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp25_, "$is_deleted", _tmp27_);
#line 424 "../src/Services/Database.vala"
	_tmp28_ = stmt;
#line 424 "../src/Services/Database.vala"
	_tmp29_ = objects_project_get_is_archived (project);
#line 424 "../src/Services/Database.vala"
	_tmp30_ = _tmp29_;
#line 424 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp28_, "$is_archived", _tmp30_);
#line 425 "../src/Services/Database.vala"
	_tmp31_ = stmt;
#line 425 "../src/Services/Database.vala"
	_tmp32_ = objects_project_get_is_favorite (project);
#line 425 "../src/Services/Database.vala"
	_tmp33_ = _tmp32_;
#line 425 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp31_, "$is_favorite", _tmp33_);
#line 426 "../src/Services/Database.vala"
	_tmp34_ = stmt;
#line 426 "../src/Services/Database.vala"
	_tmp35_ = objects_project_get_shared (project);
#line 426 "../src/Services/Database.vala"
	_tmp36_ = _tmp35_;
#line 426 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp34_, "$shared", _tmp36_);
#line 427 "../src/Services/Database.vala"
	_tmp37_ = stmt;
#line 427 "../src/Services/Database.vala"
	_tmp38_ = objects_project_get_view_style (project);
#line 427 "../src/Services/Database.vala"
	_tmp39_ = _tmp38_;
#line 427 "../src/Services/Database.vala"
	_tmp40_ = project_view_style_to_string (_tmp39_);
#line 427 "../src/Services/Database.vala"
	_tmp41_ = _tmp40_;
#line 427 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp37_, "$view_style", _tmp41_);
#line 427 "../src/Services/Database.vala"
	_g_free0 (_tmp41_);
#line 428 "../src/Services/Database.vala"
	_tmp42_ = stmt;
#line 428 "../src/Services/Database.vala"
	_tmp43_ = objects_project_get_show_completed (project);
#line 428 "../src/Services/Database.vala"
	_tmp44_ = _tmp43_;
#line 428 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp42_, "$show_completed", _tmp44_);
#line 429 "../src/Services/Database.vala"
	_tmp45_ = stmt;
#line 429 "../src/Services/Database.vala"
	_tmp46_ = objects_project_get_sort_order (project);
#line 429 "../src/Services/Database.vala"
	_tmp47_ = _tmp46_;
#line 429 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp45_, "$sort_order", _tmp47_);
#line 430 "../src/Services/Database.vala"
	_tmp48_ = stmt;
#line 430 "../src/Services/Database.vala"
	_tmp49_ = objects_project_get_parent_id (project);
#line 430 "../src/Services/Database.vala"
	_tmp50_ = _tmp49_;
#line 430 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp48_, "$parent_id", _tmp50_);
#line 431 "../src/Services/Database.vala"
	_tmp51_ = stmt;
#line 431 "../src/Services/Database.vala"
	_tmp52_ = objects_project_get_collapsed (project);
#line 431 "../src/Services/Database.vala"
	_tmp53_ = _tmp52_;
#line 431 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp51_, "$collapsed", _tmp53_);
#line 432 "../src/Services/Database.vala"
	_tmp54_ = stmt;
#line 432 "../src/Services/Database.vala"
	_tmp55_ = objects_project_get_icon_style (project);
#line 432 "../src/Services/Database.vala"
	_tmp56_ = _tmp55_;
#line 432 "../src/Services/Database.vala"
	_tmp57_ = project_icon_style_to_string (_tmp56_);
#line 432 "../src/Services/Database.vala"
	_tmp58_ = _tmp57_;
#line 432 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp54_, "$icon_style", _tmp58_);
#line 432 "../src/Services/Database.vala"
	_g_free0 (_tmp58_);
#line 433 "../src/Services/Database.vala"
	_tmp59_ = stmt;
#line 433 "../src/Services/Database.vala"
	_tmp60_ = objects_project_get_emoji (project);
#line 433 "../src/Services/Database.vala"
	_tmp61_ = _tmp60_;
#line 433 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp59_, "$emoji", _tmp61_);
#line 434 "../src/Services/Database.vala"
	_tmp62_ = stmt;
#line 434 "../src/Services/Database.vala"
	_tmp63_ = objects_base_object_get_id ((ObjectsBaseObject*) project);
#line 434 "../src/Services/Database.vala"
	_tmp64_ = _tmp63_;
#line 434 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp62_, "$id", _tmp64_);
#line 436 "../src/Services/Database.vala"
	_tmp65_ = stmt;
#line 436 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp65_) == SQLITE_DONE) {
#line 437 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) project, "updated");
#line 2350 "Database.c"
	} else {
		sqlite3* _tmp66_;
		sqlite3* _tmp67_;
		const gchar* _tmp68_;
#line 439 "../src/Services/Database.vala"
		_tmp66_ = self->priv->db;
#line 439 "../src/Services/Database.vala"
		_tmp67_ = self->priv->db;
#line 439 "../src/Services/Database.vala"
		_tmp68_ = sqlite3_errmsg (_tmp67_);
#line 439 "../src/Services/Database.vala"
		g_warning ("Database.vala:439: Error: %d: %s", sqlite3_errcode (_tmp66_), _tmp68_);
#line 2363 "Database.c"
	}
#line 441 "../src/Services/Database.vala"
	_tmp69_ = stmt;
#line 441 "../src/Services/Database.vala"
	sqlite3_reset (_tmp69_);
#line 401 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 2371 "Database.c"
}

GeeArrayList*
services_database_get_labels_collection (ServicesDatabase* self)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp1_;
	sqlite3* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	gint _tmp5_;
	gint _tmp6_;
	sqlite3_stmt* _tmp7_ = NULL;
	sqlite3_stmt* _tmp13_;
	GeeArrayList* result = NULL;
#line 448 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 449 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_LABEL, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 449 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 452 "../src/Services/Database.vala"
	_tmp1_ = g_strdup ("\n            SELECT * FROM Labels;\n        ");
#line 452 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 452 "../src/Services/Database.vala"
	self->priv->sql = _tmp1_;
#line 456 "../src/Services/Database.vala"
	_tmp2_ = self->priv->db;
#line 456 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 456 "../src/Services/Database.vala"
	_tmp4_ = self->priv->sql;
#line 456 "../src/Services/Database.vala"
	_tmp5_ = strlen (_tmp4_);
#line 456 "../src/Services/Database.vala"
	_tmp6_ = _tmp5_;
#line 456 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp2_, _tmp3_, _tmp6_, &_tmp7_, NULL);
#line 456 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 456 "../src/Services/Database.vala"
	stmt = _tmp7_;
#line 458 "../src/Services/Database.vala"
	while (TRUE) {
#line 2419 "Database.c"
		sqlite3_stmt* _tmp8_;
		GeeArrayList* _tmp9_;
		sqlite3_stmt* _tmp10_;
		ObjectsLabel* _tmp11_;
		ObjectsLabel* _tmp12_;
#line 458 "../src/Services/Database.vala"
		_tmp8_ = stmt;
#line 458 "../src/Services/Database.vala"
		if (!(sqlite3_step (_tmp8_) == SQLITE_ROW)) {
#line 458 "../src/Services/Database.vala"
			break;
#line 2431 "Database.c"
		}
#line 459 "../src/Services/Database.vala"
		_tmp9_ = return_value;
#line 459 "../src/Services/Database.vala"
		_tmp10_ = stmt;
#line 459 "../src/Services/Database.vala"
		_tmp11_ = _services_database_fill_label (self, _tmp10_);
#line 459 "../src/Services/Database.vala"
		_tmp12_ = _tmp11_;
#line 459 "../src/Services/Database.vala"
		gee_abstract_collection_add ((GeeAbstractCollection*) _tmp9_, _tmp12_);
#line 459 "../src/Services/Database.vala"
		_g_object_unref0 (_tmp12_);
#line 2445 "Database.c"
	}
#line 461 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 461 "../src/Services/Database.vala"
	sqlite3_reset (_tmp13_);
#line 462 "../src/Services/Database.vala"
	result = return_value;
#line 462 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 462 "../src/Services/Database.vala"
	return result;
#line 2457 "Database.c"
}

ObjectsLabel*
_services_database_fill_label (ServicesDatabase* self,
                               sqlite3_stmt* stmt)
{
	ObjectsLabel* return_value = NULL;
	ObjectsLabel* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	ObjectsLabel* result = NULL;
#line 465 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 465 "../src/Services/Database.vala"
	g_return_val_if_fail (stmt != NULL, NULL);
#line 466 "../src/Services/Database.vala"
	_tmp0_ = objects_label_new ();
#line 466 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 467 "../src/Services/Database.vala"
	objects_base_object_set_id ((ObjectsBaseObject*) return_value, sqlite3_column_int64 (stmt, 0));
#line 468 "../src/Services/Database.vala"
	_tmp1_ = (const gchar*) sqlite3_column_text (stmt, 1);
#line 468 "../src/Services/Database.vala"
	objects_label_set_name (return_value, _tmp1_);
#line 469 "../src/Services/Database.vala"
	_tmp2_ = (const gchar*) sqlite3_column_text (stmt, 2);
#line 469 "../src/Services/Database.vala"
	objects_label_set_color (return_value, _tmp2_);
#line 470 "../src/Services/Database.vala"
	objects_label_set_item_order (return_value, sqlite3_column_int (stmt, 3));
#line 471 "../src/Services/Database.vala"
	objects_label_set_is_deleted (return_value, services_database_get_parameter_bool (self, stmt, 4));
#line 472 "../src/Services/Database.vala"
	objects_label_set_is_favorite (return_value, services_database_get_parameter_bool (self, stmt, 5));
#line 473 "../src/Services/Database.vala"
	objects_label_set_todoist (return_value, services_database_get_parameter_bool (self, stmt, 6));
#line 474 "../src/Services/Database.vala"
	result = return_value;
#line 474 "../src/Services/Database.vala"
	return result;
#line 2499 "Database.c"
}

gboolean
services_database_insert_label (ServicesDatabase* self,
                                ObjectsLabel* label)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	sqlite3_stmt* _tmp13_;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	sqlite3_stmt* _tmp16_;
	gint _tmp17_;
	gint _tmp18_;
	sqlite3_stmt* _tmp19_;
	gboolean _tmp20_;
	gboolean _tmp21_;
	sqlite3_stmt* _tmp22_;
	gboolean _tmp23_;
	gboolean _tmp24_;
	sqlite3_stmt* _tmp25_;
	gboolean _tmp26_;
	gboolean _tmp27_;
	sqlite3_stmt* _tmp28_;
	sqlite3_stmt* _tmp34_;
	sqlite3_stmt* _tmp35_;
	gboolean result = FALSE;
#line 477 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 477 "../src/Services/Database.vala"
	g_return_val_if_fail (label != NULL, FALSE);
#line 480 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            INSERT OR IGNORE INTO Labels (id, name, color, item_order," \
" is_deleted, is_favorite, todoist)\n" \
"            VALUES ($id, $name, $color, $item_order, $is_deleted, $is_" \
"favorite, $todoist);\n" \
"        ");
#line 480 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 480 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 485 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 485 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 485 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 485 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 485 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 485 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 485 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 485 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 486 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 486 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) label);
#line 486 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 486 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 487 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 487 "../src/Services/Database.vala"
	_tmp11_ = objects_label_get_name (label);
#line 487 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 487 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp10_, "$name", _tmp12_);
#line 488 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 488 "../src/Services/Database.vala"
	_tmp14_ = objects_label_get_color (label);
#line 488 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 488 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp13_, "$color", _tmp15_);
#line 489 "../src/Services/Database.vala"
	_tmp16_ = stmt;
#line 489 "../src/Services/Database.vala"
	_tmp17_ = objects_label_get_item_order (label);
#line 489 "../src/Services/Database.vala"
	_tmp18_ = _tmp17_;
#line 489 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp16_, "$item_order", _tmp18_);
#line 490 "../src/Services/Database.vala"
	_tmp19_ = stmt;
#line 490 "../src/Services/Database.vala"
	_tmp20_ = objects_label_get_is_deleted (label);
#line 490 "../src/Services/Database.vala"
	_tmp21_ = _tmp20_;
#line 490 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp19_, "$is_deleted", _tmp21_);
#line 491 "../src/Services/Database.vala"
	_tmp22_ = stmt;
#line 491 "../src/Services/Database.vala"
	_tmp23_ = objects_label_get_is_favorite (label);
#line 491 "../src/Services/Database.vala"
	_tmp24_ = _tmp23_;
#line 491 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp22_, "$is_favorite", _tmp24_);
#line 492 "../src/Services/Database.vala"
	_tmp25_ = stmt;
#line 492 "../src/Services/Database.vala"
	_tmp26_ = objects_label_get_todoist (label);
#line 492 "../src/Services/Database.vala"
	_tmp27_ = _tmp26_;
#line 492 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp25_, "$todoist", _tmp27_);
#line 494 "../src/Services/Database.vala"
	_tmp28_ = stmt;
#line 494 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp28_) == SQLITE_DONE) {
#line 2625 "Database.c"
		GeeArrayList* _tmp29_;
		GeeArrayList* _tmp30_;
#line 495 "../src/Services/Database.vala"
		_tmp29_ = services_database_get_labels (self);
#line 495 "../src/Services/Database.vala"
		_tmp30_ = _tmp29_;
#line 495 "../src/Services/Database.vala"
		gee_abstract_collection_add ((GeeAbstractCollection*) _tmp30_, label);
#line 496 "../src/Services/Database.vala"
		g_signal_emit (self, services_database_signals[SERVICES_DATABASE_LABEL_ADDED_SIGNAL], 0, label);
#line 2636 "Database.c"
	} else {
		sqlite3* _tmp31_;
		sqlite3* _tmp32_;
		const gchar* _tmp33_;
#line 498 "../src/Services/Database.vala"
		_tmp31_ = self->priv->db;
#line 498 "../src/Services/Database.vala"
		_tmp32_ = self->priv->db;
#line 498 "../src/Services/Database.vala"
		_tmp33_ = sqlite3_errmsg (_tmp32_);
#line 498 "../src/Services/Database.vala"
		g_warning ("Database.vala:498: Error: %d: %s", sqlite3_errcode (_tmp31_), _tmp33_);
#line 2649 "Database.c"
	}
#line 501 "../src/Services/Database.vala"
	_tmp34_ = stmt;
#line 501 "../src/Services/Database.vala"
	sqlite3_reset (_tmp34_);
#line 502 "../src/Services/Database.vala"
	_tmp35_ = stmt;
#line 502 "../src/Services/Database.vala"
	result = sqlite3_step (_tmp35_) == SQLITE_DONE;
#line 502 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 502 "../src/Services/Database.vala"
	return result;
#line 2663 "Database.c"
}

gboolean
services_database_label_exists (ServicesDatabase* self,
                                gint64 id)
{
	gboolean return_value = FALSE;
	GError* _inner_error0_ = NULL;
	gboolean result = FALSE;
#line 505 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 506 "../src/Services/Database.vala"
	return_value = FALSE;
#line 2677 "Database.c"
	{
		GeeArrayList* _tmp0_;
		gboolean _tmp15_ = FALSE;
#line 507 "../src/Services/Database.vala"
		_tmp0_ = self->priv->_labels;
#line 507 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__labels);
#line 2685 "Database.c"
		{
			{
				GeeArrayList* _label_list = NULL;
				GeeArrayList* _tmp1_;
				GeeArrayList* _tmp2_;
				gint _label_size = 0;
				GeeArrayList* _tmp3_;
				gint _tmp4_;
				gint _tmp5_;
				gint _label_index = 0;
#line 508 "../src/Services/Database.vala"
				_tmp1_ = self->priv->_labels;
#line 508 "../src/Services/Database.vala"
				_tmp2_ = _g_object_ref0 (_tmp1_);
#line 508 "../src/Services/Database.vala"
				_label_list = _tmp2_;
#line 508 "../src/Services/Database.vala"
				_tmp3_ = _label_list;
#line 508 "../src/Services/Database.vala"
				_tmp4_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp3_);
#line 508 "../src/Services/Database.vala"
				_tmp5_ = _tmp4_;
#line 508 "../src/Services/Database.vala"
				_label_size = _tmp5_;
#line 508 "../src/Services/Database.vala"
				_label_index = -1;
#line 508 "../src/Services/Database.vala"
				while (TRUE) {
#line 2714 "Database.c"
					gint _tmp6_;
					gint _tmp7_;
					ObjectsLabel* label = NULL;
					GeeArrayList* _tmp8_;
					gpointer _tmp9_;
					ObjectsLabel* _tmp10_;
					gint64 _tmp11_;
					gint64 _tmp12_;
#line 508 "../src/Services/Database.vala"
					_label_index = _label_index + 1;
#line 508 "../src/Services/Database.vala"
					_tmp6_ = _label_index;
#line 508 "../src/Services/Database.vala"
					_tmp7_ = _label_size;
#line 508 "../src/Services/Database.vala"
					if (!(_tmp6_ < _tmp7_)) {
#line 508 "../src/Services/Database.vala"
						break;
#line 2733 "Database.c"
					}
#line 508 "../src/Services/Database.vala"
					_tmp8_ = _label_list;
#line 508 "../src/Services/Database.vala"
					_tmp9_ = gee_abstract_list_get ((GeeAbstractList*) _tmp8_, _label_index);
#line 508 "../src/Services/Database.vala"
					label = (ObjectsLabel*) _tmp9_;
#line 509 "../src/Services/Database.vala"
					_tmp10_ = label;
#line 509 "../src/Services/Database.vala"
					_tmp11_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp10_);
#line 509 "../src/Services/Database.vala"
					_tmp12_ = _tmp11_;
#line 509 "../src/Services/Database.vala"
					if (_tmp12_ == id) {
#line 510 "../src/Services/Database.vala"
						return_value = TRUE;
#line 511 "../src/Services/Database.vala"
						_g_object_unref0 (label);
#line 511 "../src/Services/Database.vala"
						break;
#line 2755 "Database.c"
					}
#line 508 "../src/Services/Database.vala"
					_g_object_unref0 (label);
#line 2759 "Database.c"
				}
#line 508 "../src/Services/Database.vala"
				_g_object_unref0 (_label_list);
#line 2763 "Database.c"
			}
#line 515 "../src/Services/Database.vala"
			result = return_value;
#line 2767 "Database.c"
			{
				GeeArrayList* _tmp13_;
#line 507 "../src/Services/Database.vala"
				_tmp13_ = self->priv->_labels;
#line 507 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__labels);
#line 2774 "Database.c"
			}
#line 515 "../src/Services/Database.vala"
			return result;
#line 2778 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp14_;
#line 507 "../src/Services/Database.vala"
			_tmp14_ = self->priv->_labels;
#line 507 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__labels);
#line 2787 "Database.c"
		}
#line 507 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 507 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 507 "../src/Services/Database.vala"
		return _tmp15_;
#line 2795 "Database.c"
	}
}

ObjectsLabel*
services_database_get_label (ServicesDatabase* self,
                             gint64 id)
{
	ObjectsLabel* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsLabel* result = NULL;
#line 519 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 520 "../src/Services/Database.vala"
	return_value = NULL;
#line 2810 "Database.c"
	{
		GeeArrayList* _tmp0_;
#line 521 "../src/Services/Database.vala"
		_tmp0_ = self->priv->_labels;
#line 521 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__labels);
#line 2817 "Database.c"
		{
			ObjectsLabel* _tmp16_;
			ObjectsLabel* _tmp17_;
			{
				GeeArrayList* _label_list = NULL;
				GeeArrayList* _tmp1_;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				gint _label_size = 0;
				GeeArrayList* _tmp4_;
				gint _tmp5_;
				gint _tmp6_;
				gint _label_index = 0;
#line 522 "../src/Services/Database.vala"
				_tmp1_ = services_database_get_labels (self);
#line 522 "../src/Services/Database.vala"
				_tmp2_ = _tmp1_;
#line 522 "../src/Services/Database.vala"
				_tmp3_ = _g_object_ref0 (_tmp2_);
#line 522 "../src/Services/Database.vala"
				_label_list = _tmp3_;
#line 522 "../src/Services/Database.vala"
				_tmp4_ = _label_list;
#line 522 "../src/Services/Database.vala"
				_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 522 "../src/Services/Database.vala"
				_tmp6_ = _tmp5_;
#line 522 "../src/Services/Database.vala"
				_label_size = _tmp6_;
#line 522 "../src/Services/Database.vala"
				_label_index = -1;
#line 522 "../src/Services/Database.vala"
				while (TRUE) {
#line 2851 "Database.c"
					gint _tmp7_;
					gint _tmp8_;
					ObjectsLabel* label = NULL;
					GeeArrayList* _tmp9_;
					gpointer _tmp10_;
					ObjectsLabel* _tmp11_;
					gint64 _tmp12_;
					gint64 _tmp13_;
#line 522 "../src/Services/Database.vala"
					_label_index = _label_index + 1;
#line 522 "../src/Services/Database.vala"
					_tmp7_ = _label_index;
#line 522 "../src/Services/Database.vala"
					_tmp8_ = _label_size;
#line 522 "../src/Services/Database.vala"
					if (!(_tmp7_ < _tmp8_)) {
#line 522 "../src/Services/Database.vala"
						break;
#line 2870 "Database.c"
					}
#line 522 "../src/Services/Database.vala"
					_tmp9_ = _label_list;
#line 522 "../src/Services/Database.vala"
					_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _label_index);
#line 522 "../src/Services/Database.vala"
					label = (ObjectsLabel*) _tmp10_;
#line 523 "../src/Services/Database.vala"
					_tmp11_ = label;
#line 523 "../src/Services/Database.vala"
					_tmp12_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp11_);
#line 523 "../src/Services/Database.vala"
					_tmp13_ = _tmp12_;
#line 523 "../src/Services/Database.vala"
					if (_tmp13_ == id) {
#line 2886 "Database.c"
						ObjectsLabel* _tmp14_;
						ObjectsLabel* _tmp15_;
#line 524 "../src/Services/Database.vala"
						_tmp14_ = label;
#line 524 "../src/Services/Database.vala"
						_tmp15_ = _g_object_ref0 (_tmp14_);
#line 524 "../src/Services/Database.vala"
						_g_object_unref0 (return_value);
#line 524 "../src/Services/Database.vala"
						return_value = _tmp15_;
#line 525 "../src/Services/Database.vala"
						_g_object_unref0 (label);
#line 525 "../src/Services/Database.vala"
						break;
#line 2901 "Database.c"
					}
#line 522 "../src/Services/Database.vala"
					_g_object_unref0 (label);
#line 2905 "Database.c"
				}
#line 522 "../src/Services/Database.vala"
				_g_object_unref0 (_label_list);
#line 2909 "Database.c"
			}
#line 529 "../src/Services/Database.vala"
			_tmp16_ = return_value;
#line 529 "../src/Services/Database.vala"
			_tmp17_ = _g_object_ref0 (_tmp16_);
#line 529 "../src/Services/Database.vala"
			result = _tmp17_;
#line 2917 "Database.c"
			{
				GeeArrayList* _tmp18_;
#line 521 "../src/Services/Database.vala"
				_tmp18_ = self->priv->_labels;
#line 521 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__labels);
#line 2924 "Database.c"
			}
#line 529 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 529 "../src/Services/Database.vala"
			return result;
#line 2930 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp19_;
#line 521 "../src/Services/Database.vala"
			_tmp19_ = self->priv->_labels;
#line 521 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__labels);
#line 2939 "Database.c"
		}
#line 521 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 521 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 521 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 521 "../src/Services/Database.vala"
		return NULL;
#line 2949 "Database.c"
	}
#line 519 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 2953 "Database.c"
}

ObjectsLabel*
services_database_get_label_by_name (ServicesDatabase* self,
                                     const gchar* name)
{
	ObjectsLabel* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsLabel* result = NULL;
#line 533 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 533 "../src/Services/Database.vala"
	g_return_val_if_fail (name != NULL, NULL);
#line 534 "../src/Services/Database.vala"
	return_value = NULL;
#line 2969 "Database.c"
	{
		GeeArrayList* _tmp0_;
#line 535 "../src/Services/Database.vala"
		_tmp0_ = self->priv->_labels;
#line 535 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__labels);
#line 2976 "Database.c"
		{
			ObjectsLabel* _tmp16_;
			ObjectsLabel* _tmp17_;
			{
				GeeArrayList* _label_list = NULL;
				GeeArrayList* _tmp1_;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				gint _label_size = 0;
				GeeArrayList* _tmp4_;
				gint _tmp5_;
				gint _tmp6_;
				gint _label_index = 0;
#line 536 "../src/Services/Database.vala"
				_tmp1_ = services_database_get_labels (self);
#line 536 "../src/Services/Database.vala"
				_tmp2_ = _tmp1_;
#line 536 "../src/Services/Database.vala"
				_tmp3_ = _g_object_ref0 (_tmp2_);
#line 536 "../src/Services/Database.vala"
				_label_list = _tmp3_;
#line 536 "../src/Services/Database.vala"
				_tmp4_ = _label_list;
#line 536 "../src/Services/Database.vala"
				_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 536 "../src/Services/Database.vala"
				_tmp6_ = _tmp5_;
#line 536 "../src/Services/Database.vala"
				_label_size = _tmp6_;
#line 536 "../src/Services/Database.vala"
				_label_index = -1;
#line 536 "../src/Services/Database.vala"
				while (TRUE) {
#line 3010 "Database.c"
					gint _tmp7_;
					gint _tmp8_;
					ObjectsLabel* label = NULL;
					GeeArrayList* _tmp9_;
					gpointer _tmp10_;
					ObjectsLabel* _tmp11_;
					const gchar* _tmp12_;
					const gchar* _tmp13_;
#line 536 "../src/Services/Database.vala"
					_label_index = _label_index + 1;
#line 536 "../src/Services/Database.vala"
					_tmp7_ = _label_index;
#line 536 "../src/Services/Database.vala"
					_tmp8_ = _label_size;
#line 536 "../src/Services/Database.vala"
					if (!(_tmp7_ < _tmp8_)) {
#line 536 "../src/Services/Database.vala"
						break;
#line 3029 "Database.c"
					}
#line 536 "../src/Services/Database.vala"
					_tmp9_ = _label_list;
#line 536 "../src/Services/Database.vala"
					_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _label_index);
#line 536 "../src/Services/Database.vala"
					label = (ObjectsLabel*) _tmp10_;
#line 537 "../src/Services/Database.vala"
					_tmp11_ = label;
#line 537 "../src/Services/Database.vala"
					_tmp12_ = objects_label_get_name (_tmp11_);
#line 537 "../src/Services/Database.vala"
					_tmp13_ = _tmp12_;
#line 537 "../src/Services/Database.vala"
					if (g_strcmp0 (_tmp13_, name) == 0) {
#line 3045 "Database.c"
						ObjectsLabel* _tmp14_;
						ObjectsLabel* _tmp15_;
#line 538 "../src/Services/Database.vala"
						_tmp14_ = label;
#line 538 "../src/Services/Database.vala"
						_tmp15_ = _g_object_ref0 (_tmp14_);
#line 538 "../src/Services/Database.vala"
						_g_object_unref0 (return_value);
#line 538 "../src/Services/Database.vala"
						return_value = _tmp15_;
#line 539 "../src/Services/Database.vala"
						_g_object_unref0 (label);
#line 539 "../src/Services/Database.vala"
						break;
#line 3060 "Database.c"
					}
#line 536 "../src/Services/Database.vala"
					_g_object_unref0 (label);
#line 3064 "Database.c"
				}
#line 536 "../src/Services/Database.vala"
				_g_object_unref0 (_label_list);
#line 3068 "Database.c"
			}
#line 543 "../src/Services/Database.vala"
			_tmp16_ = return_value;
#line 543 "../src/Services/Database.vala"
			_tmp17_ = _g_object_ref0 (_tmp16_);
#line 543 "../src/Services/Database.vala"
			result = _tmp17_;
#line 3076 "Database.c"
			{
				GeeArrayList* _tmp18_;
#line 535 "../src/Services/Database.vala"
				_tmp18_ = self->priv->_labels;
#line 535 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__labels);
#line 3083 "Database.c"
			}
#line 543 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 543 "../src/Services/Database.vala"
			return result;
#line 3089 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp19_;
#line 535 "../src/Services/Database.vala"
			_tmp19_ = self->priv->_labels;
#line 535 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__labels);
#line 3098 "Database.c"
		}
#line 535 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 535 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 535 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 535 "../src/Services/Database.vala"
		return NULL;
#line 3108 "Database.c"
	}
#line 533 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 3112 "Database.c"
}

void
services_database_delete_label (ServicesDatabase* self,
                                ObjectsLabel* label)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	sqlite3_stmt* _tmp14_;
#line 547 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 547 "../src/Services/Database.vala"
	g_return_if_fail (label != NULL);
#line 550 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n            DELETE FROM Labels WHERE id=$id;\n        ");
#line 550 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 550 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 554 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 554 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 554 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 554 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 554 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 554 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 554 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 554 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 555 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 555 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) label);
#line 555 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 555 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 557 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 557 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp10_) == SQLITE_DONE) {
#line 558 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) label, "deleted");
#line 3172 "Database.c"
	} else {
		sqlite3* _tmp11_;
		sqlite3* _tmp12_;
		const gchar* _tmp13_;
#line 560 "../src/Services/Database.vala"
		_tmp11_ = self->priv->db;
#line 560 "../src/Services/Database.vala"
		_tmp12_ = self->priv->db;
#line 560 "../src/Services/Database.vala"
		_tmp13_ = sqlite3_errmsg (_tmp12_);
#line 560 "../src/Services/Database.vala"
		g_warning ("Database.vala:560: Error: %d: %s", sqlite3_errcode (_tmp11_), _tmp13_);
#line 3185 "Database.c"
	}
#line 562 "../src/Services/Database.vala"
	_tmp14_ = stmt;
#line 562 "../src/Services/Database.vala"
	sqlite3_reset (_tmp14_);
#line 547 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 3193 "Database.c"
}

void
services_database_update_label (ServicesDatabase* self,
                                ObjectsLabel* label)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	sqlite3_stmt* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	sqlite3_stmt* _tmp13_;
	gint _tmp14_;
	gint _tmp15_;
	sqlite3_stmt* _tmp16_;
	gboolean _tmp17_;
	gboolean _tmp18_;
	sqlite3_stmt* _tmp19_;
	gboolean _tmp20_;
	gboolean _tmp21_;
	sqlite3_stmt* _tmp22_;
	gboolean _tmp23_;
	gboolean _tmp24_;
	sqlite3_stmt* _tmp25_;
	gint64 _tmp26_;
	gint64 _tmp27_;
	sqlite3_stmt* _tmp28_;
	sqlite3_stmt* _tmp32_;
#line 565 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 565 "../src/Services/Database.vala"
	g_return_if_fail (label != NULL);
#line 568 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            UPDATE Labels SET name=$name, color=$color, item_order=$it" \
"em_order,\n" \
"                is_deleted=$is_deleted, is_favorite=$is_favorite, todo" \
"ist=$todoist\n" \
"            WHERE id=$id;\n" \
"        ");
#line 568 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 568 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 574 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 574 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 574 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 574 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 574 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 574 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 574 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 574 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 575 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 575 "../src/Services/Database.vala"
	_tmp8_ = objects_label_get_name (label);
#line 575 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 575 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp7_, "$name", _tmp9_);
#line 576 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 576 "../src/Services/Database.vala"
	_tmp11_ = objects_label_get_color (label);
#line 576 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 576 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp10_, "$color", _tmp12_);
#line 577 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 577 "../src/Services/Database.vala"
	_tmp14_ = objects_label_get_item_order (label);
#line 577 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 577 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp13_, "$item_order", _tmp15_);
#line 578 "../src/Services/Database.vala"
	_tmp16_ = stmt;
#line 578 "../src/Services/Database.vala"
	_tmp17_ = objects_label_get_is_deleted (label);
#line 578 "../src/Services/Database.vala"
	_tmp18_ = _tmp17_;
#line 578 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp16_, "$is_deleted", _tmp18_);
#line 579 "../src/Services/Database.vala"
	_tmp19_ = stmt;
#line 579 "../src/Services/Database.vala"
	_tmp20_ = objects_label_get_is_favorite (label);
#line 579 "../src/Services/Database.vala"
	_tmp21_ = _tmp20_;
#line 579 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp19_, "$is_favorite", _tmp21_);
#line 580 "../src/Services/Database.vala"
	_tmp22_ = stmt;
#line 580 "../src/Services/Database.vala"
	_tmp23_ = objects_label_get_todoist (label);
#line 580 "../src/Services/Database.vala"
	_tmp24_ = _tmp23_;
#line 580 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp22_, "$todoist", _tmp24_);
#line 581 "../src/Services/Database.vala"
	_tmp25_ = stmt;
#line 581 "../src/Services/Database.vala"
	_tmp26_ = objects_base_object_get_id ((ObjectsBaseObject*) label);
#line 581 "../src/Services/Database.vala"
	_tmp27_ = _tmp26_;
#line 581 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp25_, "$id", _tmp27_);
#line 583 "../src/Services/Database.vala"
	_tmp28_ = stmt;
#line 583 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp28_) == SQLITE_DONE) {
#line 584 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) label, "updated");
#line 3319 "Database.c"
	} else {
		sqlite3* _tmp29_;
		sqlite3* _tmp30_;
		const gchar* _tmp31_;
#line 586 "../src/Services/Database.vala"
		_tmp29_ = self->priv->db;
#line 586 "../src/Services/Database.vala"
		_tmp30_ = self->priv->db;
#line 586 "../src/Services/Database.vala"
		_tmp31_ = sqlite3_errmsg (_tmp30_);
#line 586 "../src/Services/Database.vala"
		g_warning ("Database.vala:586: Error: %d: %s", sqlite3_errcode (_tmp29_), _tmp31_);
#line 3332 "Database.c"
	}
#line 588 "../src/Services/Database.vala"
	_tmp32_ = stmt;
#line 588 "../src/Services/Database.vala"
	sqlite3_reset (_tmp32_);
#line 565 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 3340 "Database.c"
}

GeeHashMap*
services_database_get_labels_by_item (ServicesDatabase* self,
                                      ObjectsItem* item)
{
	GeeHashMap* return_value = NULL;
	GeeHashMap* _tmp0_;
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp1_;
	sqlite3* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	gint _tmp5_;
	gint _tmp6_;
	sqlite3_stmt* _tmp7_ = NULL;
	sqlite3_stmt* _tmp8_;
	gint64 _tmp9_;
	gint64 _tmp10_;
	sqlite3_stmt* _tmp26_;
	GeeHashMap* result = NULL;
#line 591 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 591 "../src/Services/Database.vala"
	g_return_val_if_fail (item != NULL, NULL);
#line 592 "../src/Services/Database.vala"
	_tmp0_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, OBJECTS_TYPE_ITEM_LABEL, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 592 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 595 "../src/Services/Database.vala"
	_tmp1_ = g_strdup ("\n" \
"            SELECT Items_Labels.id, Items_Labels.item_id, Items_Labels" \
".label_id\n" \
"                FROM Items_Labels\n" \
"            INNER JOIN Labels ON Items_Labels.label_id = Labels.id\n" \
"                WHERE item_id = $id;\n" \
"        ");
#line 595 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 595 "../src/Services/Database.vala"
	self->priv->sql = _tmp1_;
#line 602 "../src/Services/Database.vala"
	_tmp2_ = self->priv->db;
#line 602 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 602 "../src/Services/Database.vala"
	_tmp4_ = self->priv->sql;
#line 602 "../src/Services/Database.vala"
	_tmp5_ = strlen (_tmp4_);
#line 602 "../src/Services/Database.vala"
	_tmp6_ = _tmp5_;
#line 602 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp2_, _tmp3_, _tmp6_, &_tmp7_, NULL);
#line 602 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 602 "../src/Services/Database.vala"
	stmt = _tmp7_;
#line 603 "../src/Services/Database.vala"
	_tmp8_ = stmt;
#line 603 "../src/Services/Database.vala"
	_tmp9_ = objects_base_object_get_id ((ObjectsBaseObject*) item);
#line 603 "../src/Services/Database.vala"
	_tmp10_ = _tmp9_;
#line 603 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp8_, "$id", _tmp10_);
#line 605 "../src/Services/Database.vala"
	while (TRUE) {
#line 3402 "Database.c"
		sqlite3_stmt* _tmp11_;
		ObjectsItemLabel* item_label = NULL;
		ObjectsItemLabel* _tmp12_;
		ObjectsItemLabel* _tmp13_;
		sqlite3_stmt* _tmp14_;
		ObjectsItemLabel* _tmp15_;
		sqlite3_stmt* _tmp16_;
		ObjectsItemLabel* _tmp17_;
		sqlite3_stmt* _tmp18_;
		GeeHashMap* _tmp19_;
		ObjectsItemLabel* _tmp20_;
		gint64 _tmp21_;
		gint64 _tmp22_;
		gchar* _tmp23_;
		gchar* _tmp24_;
		ObjectsItemLabel* _tmp25_;
#line 605 "../src/Services/Database.vala"
		_tmp11_ = stmt;
#line 605 "../src/Services/Database.vala"
		if (!(sqlite3_step (_tmp11_) == SQLITE_ROW)) {
#line 605 "../src/Services/Database.vala"
			break;
#line 3425 "Database.c"
		}
#line 606 "../src/Services/Database.vala"
		_tmp12_ = objects_item_label_new ();
#line 606 "../src/Services/Database.vala"
		item_label = _tmp12_;
#line 607 "../src/Services/Database.vala"
		_tmp13_ = item_label;
#line 607 "../src/Services/Database.vala"
		_tmp14_ = stmt;
#line 607 "../src/Services/Database.vala"
		objects_base_object_set_id ((ObjectsBaseObject*) _tmp13_, sqlite3_column_int64 (_tmp14_, 0));
#line 608 "../src/Services/Database.vala"
		_tmp15_ = item_label;
#line 608 "../src/Services/Database.vala"
		_tmp16_ = stmt;
#line 608 "../src/Services/Database.vala"
		objects_item_label_set_item_id (_tmp15_, sqlite3_column_int64 (_tmp16_, 1));
#line 609 "../src/Services/Database.vala"
		_tmp17_ = item_label;
#line 609 "../src/Services/Database.vala"
		_tmp18_ = stmt;
#line 609 "../src/Services/Database.vala"
		objects_item_label_set_label_id (_tmp17_, sqlite3_column_int64 (_tmp18_, 2));
#line 610 "../src/Services/Database.vala"
		_tmp19_ = return_value;
#line 610 "../src/Services/Database.vala"
		_tmp20_ = item_label;
#line 610 "../src/Services/Database.vala"
		_tmp21_ = objects_item_label_get_label_id (_tmp20_);
#line 610 "../src/Services/Database.vala"
		_tmp22_ = _tmp21_;
#line 610 "../src/Services/Database.vala"
		_tmp23_ = g_strdup_printf ("%" G_GINT64_FORMAT, _tmp22_);
#line 610 "../src/Services/Database.vala"
		_tmp24_ = _tmp23_;
#line 610 "../src/Services/Database.vala"
		_tmp25_ = item_label;
#line 610 "../src/Services/Database.vala"
		gee_abstract_map_set ((GeeAbstractMap*) _tmp19_, _tmp24_, _tmp25_);
#line 610 "../src/Services/Database.vala"
		_g_free0 (_tmp24_);
#line 605 "../src/Services/Database.vala"
		_g_object_unref0 (item_label);
#line 3469 "Database.c"
	}
#line 612 "../src/Services/Database.vala"
	_tmp26_ = stmt;
#line 612 "../src/Services/Database.vala"
	sqlite3_reset (_tmp26_);
#line 613 "../src/Services/Database.vala"
	result = return_value;
#line 613 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 613 "../src/Services/Database.vala"
	return result;
#line 3481 "Database.c"
}

void
services_database_insert_item_label (ServicesDatabase* self,
                                     ObjectsItemLabel* item_label)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	gint64 _tmp11_;
	gint64 _tmp12_;
	sqlite3_stmt* _tmp13_;
	gint64 _tmp14_;
	gint64 _tmp15_;
	sqlite3_stmt* _tmp16_;
	sqlite3_stmt* _tmp20_;
#line 616 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 616 "../src/Services/Database.vala"
	g_return_if_fail (item_label != NULL);
#line 619 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            INSERT OR IGNORE INTO Items_Labels (id, item_id, label_id)" \
"\n" \
"            VALUES ($id, $item_id, $label_id);\n" \
"        ");
#line 619 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 619 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 624 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 624 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 624 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 624 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 624 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 624 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 624 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 624 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 625 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 625 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) item_label);
#line 625 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 625 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 626 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 626 "../src/Services/Database.vala"
	_tmp11_ = objects_item_label_get_item_id (item_label);
#line 626 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 626 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp10_, "$item_id", _tmp12_);
#line 627 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 627 "../src/Services/Database.vala"
	_tmp14_ = objects_item_label_get_label_id (item_label);
#line 627 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 627 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp13_, "$label_id", _tmp15_);
#line 629 "../src/Services/Database.vala"
	_tmp16_ = stmt;
#line 629 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp16_) == SQLITE_DONE) {
#line 630 "../src/Services/Database.vala"
		g_signal_emit (self, services_database_signals[SERVICES_DATABASE_ITEM_LABEL_ADDED_SIGNAL], 0, item_label);
#line 3563 "Database.c"
	} else {
		sqlite3* _tmp17_;
		sqlite3* _tmp18_;
		const gchar* _tmp19_;
#line 632 "../src/Services/Database.vala"
		_tmp17_ = self->priv->db;
#line 632 "../src/Services/Database.vala"
		_tmp18_ = self->priv->db;
#line 632 "../src/Services/Database.vala"
		_tmp19_ = sqlite3_errmsg (_tmp18_);
#line 632 "../src/Services/Database.vala"
		g_warning ("Database.vala:632: Error: %d: %s", sqlite3_errcode (_tmp17_), _tmp19_);
#line 3576 "Database.c"
	}
#line 635 "../src/Services/Database.vala"
	_tmp20_ = stmt;
#line 635 "../src/Services/Database.vala"
	sqlite3_reset (_tmp20_);
#line 616 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 3584 "Database.c"
}

void
services_database_delete_item_label (ServicesDatabase* self,
                                     ObjectsItemLabel* item_label)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	sqlite3_stmt* _tmp14_;
#line 638 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 638 "../src/Services/Database.vala"
	g_return_if_fail (item_label != NULL);
#line 641 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n            DELETE FROM Items_Labels WHERE id=$id;\n        ");
#line 641 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 641 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 645 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 645 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 645 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 645 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 645 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 645 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 645 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 645 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 646 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 646 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) item_label);
#line 646 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 646 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 648 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 648 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp10_) == SQLITE_DONE) {
#line 649 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) item_label, "deleted");
#line 650 "../src/Services/Database.vala"
		g_signal_emit (self, services_database_signals[SERVICES_DATABASE_ITEM_LABEL_DELETED_SIGNAL], 0, item_label);
#line 3646 "Database.c"
	} else {
		sqlite3* _tmp11_;
		sqlite3* _tmp12_;
		const gchar* _tmp13_;
#line 652 "../src/Services/Database.vala"
		_tmp11_ = self->priv->db;
#line 652 "../src/Services/Database.vala"
		_tmp12_ = self->priv->db;
#line 652 "../src/Services/Database.vala"
		_tmp13_ = sqlite3_errmsg (_tmp12_);
#line 652 "../src/Services/Database.vala"
		g_warning ("Database.vala:652: Error: %d: %s", sqlite3_errcode (_tmp11_), _tmp13_);
#line 3659 "Database.c"
	}
#line 655 "../src/Services/Database.vala"
	_tmp14_ = stmt;
#line 655 "../src/Services/Database.vala"
	sqlite3_reset (_tmp14_);
#line 638 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 3667 "Database.c"
}

gboolean
services_database_insert_section (ServicesDatabase* self,
                                  ObjectsSection* section)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	sqlite3_stmt* _tmp13_;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	sqlite3_stmt* _tmp16_;
	const gchar* _tmp17_;
	const gchar* _tmp18_;
	sqlite3_stmt* _tmp19_;
	gint64 _tmp20_;
	gint64 _tmp21_;
	sqlite3_stmt* _tmp22_;
	gint _tmp23_;
	gint _tmp24_;
	sqlite3_stmt* _tmp25_;
	gboolean _tmp26_;
	gboolean _tmp27_;
	sqlite3_stmt* _tmp28_;
	gboolean _tmp29_;
	gboolean _tmp30_;
	sqlite3_stmt* _tmp31_;
	gboolean _tmp32_;
	gboolean _tmp33_;
	sqlite3_stmt* _tmp34_;
	sqlite3_stmt* _tmp42_;
	sqlite3_stmt* _tmp43_;
	gboolean result = FALSE;
#line 662 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 662 "../src/Services/Database.vala"
	g_return_val_if_fail (section != NULL, FALSE);
#line 665 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            INSERT OR IGNORE INTO Sections (id, name, archived_at, add" \
"ed_at, project_id, section_order,\n" \
"            collapsed, is_deleted, is_archived)\n" \
"            VALUES ($id, $name, $archived_at, $added_at, $project_id, " \
"$section_order,\n" \
"            $collapsed, $is_deleted, $is_archived);\n" \
"        ");
#line 665 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 665 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 672 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 672 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 672 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 672 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 672 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 672 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 672 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 672 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 673 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 673 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) section);
#line 673 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 673 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 674 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 674 "../src/Services/Database.vala"
	_tmp11_ = objects_section_get_name (section);
#line 674 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 674 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp10_, "$name", _tmp12_);
#line 675 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 675 "../src/Services/Database.vala"
	_tmp14_ = objects_section_get_archived_at (section);
#line 675 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 675 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp13_, "$archived_at", _tmp15_);
#line 676 "../src/Services/Database.vala"
	_tmp16_ = stmt;
#line 676 "../src/Services/Database.vala"
	_tmp17_ = objects_section_get_added_at (section);
#line 676 "../src/Services/Database.vala"
	_tmp18_ = _tmp17_;
#line 676 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp16_, "$added_at", _tmp18_);
#line 677 "../src/Services/Database.vala"
	_tmp19_ = stmt;
#line 677 "../src/Services/Database.vala"
	_tmp20_ = objects_section_get_project_id (section);
#line 677 "../src/Services/Database.vala"
	_tmp21_ = _tmp20_;
#line 677 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp19_, "$project_id", _tmp21_);
#line 678 "../src/Services/Database.vala"
	_tmp22_ = stmt;
#line 678 "../src/Services/Database.vala"
	_tmp23_ = objects_section_get_section_order (section);
#line 678 "../src/Services/Database.vala"
	_tmp24_ = _tmp23_;
#line 678 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp22_, "$section_order", _tmp24_);
#line 679 "../src/Services/Database.vala"
	_tmp25_ = stmt;
#line 679 "../src/Services/Database.vala"
	_tmp26_ = objects_section_get_collapsed (section);
#line 679 "../src/Services/Database.vala"
	_tmp27_ = _tmp26_;
#line 679 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp25_, "$collapsed", _tmp27_);
#line 680 "../src/Services/Database.vala"
	_tmp28_ = stmt;
#line 680 "../src/Services/Database.vala"
	_tmp29_ = objects_section_get_is_deleted (section);
#line 680 "../src/Services/Database.vala"
	_tmp30_ = _tmp29_;
#line 680 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp28_, "$is_deleted", _tmp30_);
#line 681 "../src/Services/Database.vala"
	_tmp31_ = stmt;
#line 681 "../src/Services/Database.vala"
	_tmp32_ = objects_section_get_is_archived (section);
#line 681 "../src/Services/Database.vala"
	_tmp33_ = _tmp32_;
#line 681 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp31_, "$is_archived", _tmp33_);
#line 683 "../src/Services/Database.vala"
	_tmp34_ = stmt;
#line 683 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp34_) == SQLITE_DONE) {
#line 3815 "Database.c"
		GeeArrayList* _tmp35_;
		GeeArrayList* _tmp36_;
		ObjectsProject* _tmp37_;
		ObjectsProject* _tmp38_;
#line 684 "../src/Services/Database.vala"
		_tmp35_ = services_database_get_sections (self);
#line 684 "../src/Services/Database.vala"
		_tmp36_ = _tmp35_;
#line 684 "../src/Services/Database.vala"
		gee_abstract_collection_add ((GeeAbstractCollection*) _tmp36_, section);
#line 685 "../src/Services/Database.vala"
		_tmp37_ = objects_section_get_project (section);
#line 685 "../src/Services/Database.vala"
		_tmp38_ = _tmp37_;
#line 685 "../src/Services/Database.vala"
		g_signal_emit_by_name (_tmp38_, "section-added", section);
#line 3832 "Database.c"
	} else {
		sqlite3* _tmp39_;
		sqlite3* _tmp40_;
		const gchar* _tmp41_;
#line 687 "../src/Services/Database.vala"
		_tmp39_ = self->priv->db;
#line 687 "../src/Services/Database.vala"
		_tmp40_ = self->priv->db;
#line 687 "../src/Services/Database.vala"
		_tmp41_ = sqlite3_errmsg (_tmp40_);
#line 687 "../src/Services/Database.vala"
		g_warning ("Database.vala:687: Error: %d: %s", sqlite3_errcode (_tmp39_), _tmp41_);
#line 3845 "Database.c"
	}
#line 690 "../src/Services/Database.vala"
	_tmp42_ = stmt;
#line 690 "../src/Services/Database.vala"
	sqlite3_reset (_tmp42_);
#line 691 "../src/Services/Database.vala"
	_tmp43_ = stmt;
#line 691 "../src/Services/Database.vala"
	result = sqlite3_step (_tmp43_) == SQLITE_DONE;
#line 691 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 691 "../src/Services/Database.vala"
	return result;
#line 3859 "Database.c"
}

GeeArrayList*
services_database_get_sections_collection (ServicesDatabase* self)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp1_;
	sqlite3* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	gint _tmp5_;
	gint _tmp6_;
	sqlite3_stmt* _tmp7_ = NULL;
	sqlite3_stmt* _tmp13_;
	GeeArrayList* result = NULL;
#line 694 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 695 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_SECTION, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 695 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 698 "../src/Services/Database.vala"
	_tmp1_ = g_strdup ("SELECT * FROM Sections;");
#line 698 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 698 "../src/Services/Database.vala"
	self->priv->sql = _tmp1_;
#line 700 "../src/Services/Database.vala"
	_tmp2_ = self->priv->db;
#line 700 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 700 "../src/Services/Database.vala"
	_tmp4_ = self->priv->sql;
#line 700 "../src/Services/Database.vala"
	_tmp5_ = strlen (_tmp4_);
#line 700 "../src/Services/Database.vala"
	_tmp6_ = _tmp5_;
#line 700 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp2_, _tmp3_, _tmp6_, &_tmp7_, NULL);
#line 700 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 700 "../src/Services/Database.vala"
	stmt = _tmp7_;
#line 702 "../src/Services/Database.vala"
	while (TRUE) {
#line 3907 "Database.c"
		sqlite3_stmt* _tmp8_;
		GeeArrayList* _tmp9_;
		sqlite3_stmt* _tmp10_;
		ObjectsSection* _tmp11_;
		ObjectsSection* _tmp12_;
#line 702 "../src/Services/Database.vala"
		_tmp8_ = stmt;
#line 702 "../src/Services/Database.vala"
		if (!(sqlite3_step (_tmp8_) == SQLITE_ROW)) {
#line 702 "../src/Services/Database.vala"
			break;
#line 3919 "Database.c"
		}
#line 703 "../src/Services/Database.vala"
		_tmp9_ = return_value;
#line 703 "../src/Services/Database.vala"
		_tmp10_ = stmt;
#line 703 "../src/Services/Database.vala"
		_tmp11_ = _services_database_fill_section (self, _tmp10_);
#line 703 "../src/Services/Database.vala"
		_tmp12_ = _tmp11_;
#line 703 "../src/Services/Database.vala"
		gee_abstract_collection_add ((GeeAbstractCollection*) _tmp9_, _tmp12_);
#line 703 "../src/Services/Database.vala"
		_g_object_unref0 (_tmp12_);
#line 3933 "Database.c"
	}
#line 705 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 705 "../src/Services/Database.vala"
	sqlite3_reset (_tmp13_);
#line 706 "../src/Services/Database.vala"
	result = return_value;
#line 706 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 706 "../src/Services/Database.vala"
	return result;
#line 3945 "Database.c"
}

GeeArrayList*
services_database_get_sections_by_project (ServicesDatabase* self,
                                           ObjectsProject* project)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	GError* _inner_error0_ = NULL;
	GeeArrayList* result = NULL;
#line 709 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 709 "../src/Services/Database.vala"
	g_return_val_if_fail (project != NULL, NULL);
#line 710 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_SECTION, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 710 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 3964 "Database.c"
	{
		GeeArrayList* _tmp1_;
#line 711 "../src/Services/Database.vala"
		_tmp1_ = self->priv->_sections;
#line 711 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__sections);
#line 3971 "Database.c"
		{
			GeeArrayList* _tmp19_;
			GeeArrayList* _tmp20_;
			{
				GeeArrayList* _section_list = NULL;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				GeeArrayList* _tmp4_;
				gint _section_size = 0;
				GeeArrayList* _tmp5_;
				gint _tmp6_;
				gint _tmp7_;
				gint _section_index = 0;
#line 712 "../src/Services/Database.vala"
				_tmp2_ = services_database_get_sections (self);
#line 712 "../src/Services/Database.vala"
				_tmp3_ = _tmp2_;
#line 712 "../src/Services/Database.vala"
				_tmp4_ = _g_object_ref0 (_tmp3_);
#line 712 "../src/Services/Database.vala"
				_section_list = _tmp4_;
#line 712 "../src/Services/Database.vala"
				_tmp5_ = _section_list;
#line 712 "../src/Services/Database.vala"
				_tmp6_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp5_);
#line 712 "../src/Services/Database.vala"
				_tmp7_ = _tmp6_;
#line 712 "../src/Services/Database.vala"
				_section_size = _tmp7_;
#line 712 "../src/Services/Database.vala"
				_section_index = -1;
#line 712 "../src/Services/Database.vala"
				while (TRUE) {
#line 4005 "Database.c"
					gint _tmp8_;
					gint _tmp9_;
					ObjectsSection* section = NULL;
					GeeArrayList* _tmp10_;
					gpointer _tmp11_;
					ObjectsSection* _tmp12_;
					gint64 _tmp13_;
					gint64 _tmp14_;
					gint64 _tmp15_;
					gint64 _tmp16_;
#line 712 "../src/Services/Database.vala"
					_section_index = _section_index + 1;
#line 712 "../src/Services/Database.vala"
					_tmp8_ = _section_index;
#line 712 "../src/Services/Database.vala"
					_tmp9_ = _section_size;
#line 712 "../src/Services/Database.vala"
					if (!(_tmp8_ < _tmp9_)) {
#line 712 "../src/Services/Database.vala"
						break;
#line 4026 "Database.c"
					}
#line 712 "../src/Services/Database.vala"
					_tmp10_ = _section_list;
#line 712 "../src/Services/Database.vala"
					_tmp11_ = gee_abstract_list_get ((GeeAbstractList*) _tmp10_, _section_index);
#line 712 "../src/Services/Database.vala"
					section = (ObjectsSection*) _tmp11_;
#line 713 "../src/Services/Database.vala"
					_tmp12_ = section;
#line 713 "../src/Services/Database.vala"
					_tmp13_ = objects_section_get_project_id (_tmp12_);
#line 713 "../src/Services/Database.vala"
					_tmp14_ = _tmp13_;
#line 713 "../src/Services/Database.vala"
					_tmp15_ = objects_base_object_get_id ((ObjectsBaseObject*) project);
#line 713 "../src/Services/Database.vala"
					_tmp16_ = _tmp15_;
#line 713 "../src/Services/Database.vala"
					if (_tmp14_ == _tmp16_) {
#line 4046 "Database.c"
						GeeArrayList* _tmp17_;
						ObjectsSection* _tmp18_;
#line 714 "../src/Services/Database.vala"
						_tmp17_ = return_value;
#line 714 "../src/Services/Database.vala"
						_tmp18_ = section;
#line 714 "../src/Services/Database.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp17_, _tmp18_);
#line 4055 "Database.c"
					}
#line 712 "../src/Services/Database.vala"
					_g_object_unref0 (section);
#line 4059 "Database.c"
				}
#line 712 "../src/Services/Database.vala"
				_g_object_unref0 (_section_list);
#line 4063 "Database.c"
			}
#line 718 "../src/Services/Database.vala"
			_tmp19_ = return_value;
#line 718 "../src/Services/Database.vala"
			_tmp20_ = _g_object_ref0 (_tmp19_);
#line 718 "../src/Services/Database.vala"
			result = _tmp20_;
#line 4071 "Database.c"
			{
				GeeArrayList* _tmp21_;
#line 711 "../src/Services/Database.vala"
				_tmp21_ = self->priv->_sections;
#line 711 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__sections);
#line 4078 "Database.c"
			}
#line 718 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 718 "../src/Services/Database.vala"
			return result;
#line 4084 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp22_;
#line 711 "../src/Services/Database.vala"
			_tmp22_ = self->priv->_sections;
#line 711 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__sections);
#line 4093 "Database.c"
		}
#line 711 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 711 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 711 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 711 "../src/Services/Database.vala"
		return NULL;
#line 4103 "Database.c"
	}
#line 709 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 4107 "Database.c"
}

ObjectsSection*
services_database_get_section (ServicesDatabase* self,
                               gint64 id)
{
	ObjectsSection* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsSection* result = NULL;
#line 722 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 723 "../src/Services/Database.vala"
	return_value = NULL;
#line 4121 "Database.c"
	{
		GeeArrayList* _tmp0_;
#line 724 "../src/Services/Database.vala"
		_tmp0_ = self->priv->_sections;
#line 724 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__sections);
#line 4128 "Database.c"
		{
			ObjectsSection* _tmp16_;
			ObjectsSection* _tmp17_;
			{
				GeeArrayList* _section_list = NULL;
				GeeArrayList* _tmp1_;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				gint _section_size = 0;
				GeeArrayList* _tmp4_;
				gint _tmp5_;
				gint _tmp6_;
				gint _section_index = 0;
#line 725 "../src/Services/Database.vala"
				_tmp1_ = services_database_get_sections (self);
#line 725 "../src/Services/Database.vala"
				_tmp2_ = _tmp1_;
#line 725 "../src/Services/Database.vala"
				_tmp3_ = _g_object_ref0 (_tmp2_);
#line 725 "../src/Services/Database.vala"
				_section_list = _tmp3_;
#line 725 "../src/Services/Database.vala"
				_tmp4_ = _section_list;
#line 725 "../src/Services/Database.vala"
				_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 725 "../src/Services/Database.vala"
				_tmp6_ = _tmp5_;
#line 725 "../src/Services/Database.vala"
				_section_size = _tmp6_;
#line 725 "../src/Services/Database.vala"
				_section_index = -1;
#line 725 "../src/Services/Database.vala"
				while (TRUE) {
#line 4162 "Database.c"
					gint _tmp7_;
					gint _tmp8_;
					ObjectsSection* section = NULL;
					GeeArrayList* _tmp9_;
					gpointer _tmp10_;
					ObjectsSection* _tmp11_;
					gint64 _tmp12_;
					gint64 _tmp13_;
#line 725 "../src/Services/Database.vala"
					_section_index = _section_index + 1;
#line 725 "../src/Services/Database.vala"
					_tmp7_ = _section_index;
#line 725 "../src/Services/Database.vala"
					_tmp8_ = _section_size;
#line 725 "../src/Services/Database.vala"
					if (!(_tmp7_ < _tmp8_)) {
#line 725 "../src/Services/Database.vala"
						break;
#line 4181 "Database.c"
					}
#line 725 "../src/Services/Database.vala"
					_tmp9_ = _section_list;
#line 725 "../src/Services/Database.vala"
					_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _section_index);
#line 725 "../src/Services/Database.vala"
					section = (ObjectsSection*) _tmp10_;
#line 726 "../src/Services/Database.vala"
					_tmp11_ = section;
#line 726 "../src/Services/Database.vala"
					_tmp12_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp11_);
#line 726 "../src/Services/Database.vala"
					_tmp13_ = _tmp12_;
#line 726 "../src/Services/Database.vala"
					if (_tmp13_ == id) {
#line 4197 "Database.c"
						ObjectsSection* _tmp14_;
						ObjectsSection* _tmp15_;
#line 727 "../src/Services/Database.vala"
						_tmp14_ = section;
#line 727 "../src/Services/Database.vala"
						_tmp15_ = _g_object_ref0 (_tmp14_);
#line 727 "../src/Services/Database.vala"
						_g_object_unref0 (return_value);
#line 727 "../src/Services/Database.vala"
						return_value = _tmp15_;
#line 728 "../src/Services/Database.vala"
						_g_object_unref0 (section);
#line 728 "../src/Services/Database.vala"
						break;
#line 4212 "Database.c"
					}
#line 725 "../src/Services/Database.vala"
					_g_object_unref0 (section);
#line 4216 "Database.c"
				}
#line 725 "../src/Services/Database.vala"
				_g_object_unref0 (_section_list);
#line 4220 "Database.c"
			}
#line 732 "../src/Services/Database.vala"
			_tmp16_ = return_value;
#line 732 "../src/Services/Database.vala"
			_tmp17_ = _g_object_ref0 (_tmp16_);
#line 732 "../src/Services/Database.vala"
			result = _tmp17_;
#line 4228 "Database.c"
			{
				GeeArrayList* _tmp18_;
#line 724 "../src/Services/Database.vala"
				_tmp18_ = self->priv->_sections;
#line 724 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__sections);
#line 4235 "Database.c"
			}
#line 732 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 732 "../src/Services/Database.vala"
			return result;
#line 4241 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp19_;
#line 724 "../src/Services/Database.vala"
			_tmp19_ = self->priv->_sections;
#line 724 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__sections);
#line 4250 "Database.c"
		}
#line 724 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 724 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 724 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 724 "../src/Services/Database.vala"
		return NULL;
#line 4260 "Database.c"
	}
#line 722 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 4264 "Database.c"
}

ObjectsSection*
_services_database_fill_section (ServicesDatabase* self,
                                 sqlite3_stmt* stmt)
{
	ObjectsSection* return_value = NULL;
	ObjectsSection* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	ObjectsSection* result = NULL;
#line 736 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 736 "../src/Services/Database.vala"
	g_return_val_if_fail (stmt != NULL, NULL);
#line 737 "../src/Services/Database.vala"
	_tmp0_ = objects_section_new ();
#line 737 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 738 "../src/Services/Database.vala"
	objects_base_object_set_id ((ObjectsBaseObject*) return_value, sqlite3_column_int64 (stmt, 0));
#line 739 "../src/Services/Database.vala"
	_tmp1_ = (const gchar*) sqlite3_column_text (stmt, 1);
#line 739 "../src/Services/Database.vala"
	objects_section_set_name (return_value, _tmp1_);
#line 740 "../src/Services/Database.vala"
	_tmp2_ = (const gchar*) sqlite3_column_text (stmt, 2);
#line 740 "../src/Services/Database.vala"
	objects_section_set_archived_at (return_value, _tmp2_);
#line 741 "../src/Services/Database.vala"
	_tmp3_ = (const gchar*) sqlite3_column_text (stmt, 3);
#line 741 "../src/Services/Database.vala"
	objects_section_set_added_at (return_value, _tmp3_);
#line 742 "../src/Services/Database.vala"
	objects_section_set_project_id (return_value, sqlite3_column_int64 (stmt, 4));
#line 743 "../src/Services/Database.vala"
	objects_section_set_section_order (return_value, sqlite3_column_int (stmt, 5));
#line 744 "../src/Services/Database.vala"
	objects_section_set_collapsed (return_value, services_database_get_parameter_bool (self, stmt, 6));
#line 745 "../src/Services/Database.vala"
	objects_section_set_is_deleted (return_value, services_database_get_parameter_bool (self, stmt, 7));
#line 746 "../src/Services/Database.vala"
	objects_section_set_is_archived (return_value, services_database_get_parameter_bool (self, stmt, 8));
#line 747 "../src/Services/Database.vala"
	result = return_value;
#line 747 "../src/Services/Database.vala"
	return result;
#line 4313 "Database.c"
}

void
services_database_delete_section (ServicesDatabase* self,
                                  ObjectsSection* section)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	sqlite3_stmt* _tmp25_;
#line 750 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 750 "../src/Services/Database.vala"
	g_return_if_fail (section != NULL);
#line 753 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n            DELETE FROM Sections WHERE id=$id;\n        ");
#line 753 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 753 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 757 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 757 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 757 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 757 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 757 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 757 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 757 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 757 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 758 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 758 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) section);
#line 758 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 758 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 760 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 760 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp10_) == SQLITE_DONE) {
#line 4371 "Database.c"
		{
			GeeArrayList* _item_list = NULL;
			GeeArrayList* _tmp11_;
			GeeArrayList* _tmp12_;
			GeeArrayList* _tmp13_;
			gint _item_size = 0;
			GeeArrayList* _tmp14_;
			gint _tmp15_;
			gint _tmp16_;
			gint _item_index = 0;
#line 761 "../src/Services/Database.vala"
			_tmp11_ = objects_section_get_items (section);
#line 761 "../src/Services/Database.vala"
			_tmp12_ = _tmp11_;
#line 761 "../src/Services/Database.vala"
			_tmp13_ = _g_object_ref0 (_tmp12_);
#line 761 "../src/Services/Database.vala"
			_item_list = _tmp13_;
#line 761 "../src/Services/Database.vala"
			_tmp14_ = _item_list;
#line 761 "../src/Services/Database.vala"
			_tmp15_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp14_);
#line 761 "../src/Services/Database.vala"
			_tmp16_ = _tmp15_;
#line 761 "../src/Services/Database.vala"
			_item_size = _tmp16_;
#line 761 "../src/Services/Database.vala"
			_item_index = -1;
#line 761 "../src/Services/Database.vala"
			while (TRUE) {
#line 4402 "Database.c"
				gint _tmp17_;
				gint _tmp18_;
				ObjectsItem* item = NULL;
				GeeArrayList* _tmp19_;
				gpointer _tmp20_;
				ObjectsItem* _tmp21_;
#line 761 "../src/Services/Database.vala"
				_item_index = _item_index + 1;
#line 761 "../src/Services/Database.vala"
				_tmp17_ = _item_index;
#line 761 "../src/Services/Database.vala"
				_tmp18_ = _item_size;
#line 761 "../src/Services/Database.vala"
				if (!(_tmp17_ < _tmp18_)) {
#line 761 "../src/Services/Database.vala"
					break;
#line 4419 "Database.c"
				}
#line 761 "../src/Services/Database.vala"
				_tmp19_ = _item_list;
#line 761 "../src/Services/Database.vala"
				_tmp20_ = gee_abstract_list_get ((GeeAbstractList*) _tmp19_, _item_index);
#line 761 "../src/Services/Database.vala"
				item = (ObjectsItem*) _tmp20_;
#line 762 "../src/Services/Database.vala"
				_tmp21_ = item;
#line 762 "../src/Services/Database.vala"
				services_database_delete_item (self, _tmp21_);
#line 761 "../src/Services/Database.vala"
				_g_object_unref0 (item);
#line 4433 "Database.c"
			}
#line 761 "../src/Services/Database.vala"
			_g_object_unref0 (_item_list);
#line 4437 "Database.c"
		}
#line 764 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) section, "deleted");
#line 4441 "Database.c"
	} else {
		sqlite3* _tmp22_;
		sqlite3* _tmp23_;
		const gchar* _tmp24_;
#line 766 "../src/Services/Database.vala"
		_tmp22_ = self->priv->db;
#line 766 "../src/Services/Database.vala"
		_tmp23_ = self->priv->db;
#line 766 "../src/Services/Database.vala"
		_tmp24_ = sqlite3_errmsg (_tmp23_);
#line 766 "../src/Services/Database.vala"
		g_warning ("Database.vala:766: Error: %d: %s", sqlite3_errcode (_tmp22_), _tmp24_);
#line 4454 "Database.c"
	}
#line 768 "../src/Services/Database.vala"
	_tmp25_ = stmt;
#line 768 "../src/Services/Database.vala"
	sqlite3_reset (_tmp25_);
#line 750 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 4462 "Database.c"
}

void
services_database_update_section (ServicesDatabase* self,
                                  ObjectsSection* section)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	sqlite3_stmt* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	sqlite3_stmt* _tmp13_;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	sqlite3_stmt* _tmp16_;
	gint64 _tmp17_;
	gint64 _tmp18_;
	sqlite3_stmt* _tmp19_;
	gint _tmp20_;
	gint _tmp21_;
	sqlite3_stmt* _tmp22_;
	gboolean _tmp23_;
	gboolean _tmp24_;
	sqlite3_stmt* _tmp25_;
	gboolean _tmp26_;
	gboolean _tmp27_;
	sqlite3_stmt* _tmp28_;
	gboolean _tmp29_;
	gboolean _tmp30_;
	sqlite3_stmt* _tmp31_;
	gint64 _tmp32_;
	gint64 _tmp33_;
	sqlite3_stmt* _tmp34_;
	sqlite3_stmt* _tmp38_;
#line 771 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 771 "../src/Services/Database.vala"
	g_return_if_fail (section != NULL);
#line 774 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            UPDATE Sections SET name=$name, archived_at=$archived_at, " \
"added_at=$added_at,\n" \
"            project_id=$project_id, section_order=$section_order, coll" \
"apsed=$collapsed,\n" \
"            is_deleted=$is_deleted, is_archived=$is_archived\n" \
"            WHERE id=$id;\n" \
"        ");
#line 774 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 774 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 781 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 781 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 781 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 781 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 781 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 781 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 781 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 781 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 782 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 782 "../src/Services/Database.vala"
	_tmp8_ = objects_section_get_name (section);
#line 782 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 782 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp7_, "$name", _tmp9_);
#line 783 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 783 "../src/Services/Database.vala"
	_tmp11_ = objects_section_get_archived_at (section);
#line 783 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 783 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp10_, "$archived_at", _tmp12_);
#line 784 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 784 "../src/Services/Database.vala"
	_tmp14_ = objects_section_get_added_at (section);
#line 784 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 784 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp13_, "$added_at", _tmp15_);
#line 785 "../src/Services/Database.vala"
	_tmp16_ = stmt;
#line 785 "../src/Services/Database.vala"
	_tmp17_ = objects_section_get_project_id (section);
#line 785 "../src/Services/Database.vala"
	_tmp18_ = _tmp17_;
#line 785 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp16_, "$project_id", _tmp18_);
#line 786 "../src/Services/Database.vala"
	_tmp19_ = stmt;
#line 786 "../src/Services/Database.vala"
	_tmp20_ = objects_section_get_section_order (section);
#line 786 "../src/Services/Database.vala"
	_tmp21_ = _tmp20_;
#line 786 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp19_, "$section_order", _tmp21_);
#line 787 "../src/Services/Database.vala"
	_tmp22_ = stmt;
#line 787 "../src/Services/Database.vala"
	_tmp23_ = objects_section_get_collapsed (section);
#line 787 "../src/Services/Database.vala"
	_tmp24_ = _tmp23_;
#line 787 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp22_, "$collapsed", _tmp24_);
#line 788 "../src/Services/Database.vala"
	_tmp25_ = stmt;
#line 788 "../src/Services/Database.vala"
	_tmp26_ = objects_section_get_is_deleted (section);
#line 788 "../src/Services/Database.vala"
	_tmp27_ = _tmp26_;
#line 788 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp25_, "$is_deleted", _tmp27_);
#line 789 "../src/Services/Database.vala"
	_tmp28_ = stmt;
#line 789 "../src/Services/Database.vala"
	_tmp29_ = objects_section_get_is_archived (section);
#line 789 "../src/Services/Database.vala"
	_tmp30_ = _tmp29_;
#line 789 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp28_, "$is_archived", _tmp30_);
#line 790 "../src/Services/Database.vala"
	_tmp31_ = stmt;
#line 790 "../src/Services/Database.vala"
	_tmp32_ = objects_base_object_get_id ((ObjectsBaseObject*) section);
#line 790 "../src/Services/Database.vala"
	_tmp33_ = _tmp32_;
#line 790 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp31_, "$id", _tmp33_);
#line 792 "../src/Services/Database.vala"
	_tmp34_ = stmt;
#line 792 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp34_) == SQLITE_DONE) {
#line 793 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) section, "updated");
#line 4610 "Database.c"
	} else {
		sqlite3* _tmp35_;
		sqlite3* _tmp36_;
		const gchar* _tmp37_;
#line 795 "../src/Services/Database.vala"
		_tmp35_ = self->priv->db;
#line 795 "../src/Services/Database.vala"
		_tmp36_ = self->priv->db;
#line 795 "../src/Services/Database.vala"
		_tmp37_ = sqlite3_errmsg (_tmp36_);
#line 795 "../src/Services/Database.vala"
		g_warning ("Database.vala:795: Error: %d: %s", sqlite3_errcode (_tmp35_), _tmp37_);
#line 4623 "Database.c"
	}
#line 797 "../src/Services/Database.vala"
	_tmp38_ = stmt;
#line 797 "../src/Services/Database.vala"
	sqlite3_reset (_tmp38_);
#line 771 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 4631 "Database.c"
}

gboolean
services_database_insert_item (ServicesDatabase* self,
                               ObjectsItem* item,
                               gboolean insert)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	sqlite3_stmt* _tmp13_;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	sqlite3_stmt* _tmp16_;
	ObjectsDueDate* _tmp17_;
	ObjectsDueDate* _tmp18_;
	gchar* _tmp19_;
	gchar* _tmp20_;
	sqlite3_stmt* _tmp21_;
	const gchar* _tmp22_;
	const gchar* _tmp23_;
	sqlite3_stmt* _tmp24_;
	const gchar* _tmp25_;
	const gchar* _tmp26_;
	sqlite3_stmt* _tmp27_;
	const gchar* _tmp28_;
	const gchar* _tmp29_;
	sqlite3_stmt* _tmp30_;
	gint64 _tmp31_;
	gint64 _tmp32_;
	sqlite3_stmt* _tmp33_;
	gint64 _tmp34_;
	gint64 _tmp35_;
	sqlite3_stmt* _tmp36_;
	gint64 _tmp37_;
	gint64 _tmp38_;
	sqlite3_stmt* _tmp39_;
	gint _tmp40_;
	gint _tmp41_;
	sqlite3_stmt* _tmp42_;
	gint _tmp43_;
	gint _tmp44_;
	sqlite3_stmt* _tmp45_;
	gboolean _tmp46_;
	gboolean _tmp47_;
	sqlite3_stmt* _tmp48_;
	gboolean _tmp49_;
	gboolean _tmp50_;
	sqlite3_stmt* _tmp51_;
	gint _tmp52_;
	gint _tmp53_;
	sqlite3_stmt* _tmp54_;
	gboolean _tmp55_;
	gboolean _tmp56_;
	sqlite3_stmt* _tmp57_;
	gboolean _tmp58_;
	gboolean _tmp59_;
	sqlite3_stmt* _tmp60_;
	sqlite3_stmt* _tmp77_;
	sqlite3_stmt* _tmp78_;
	gboolean result = FALSE;
#line 804 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 804 "../src/Services/Database.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 807 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            INSERT OR IGNORE INTO Items (id, content, description, due" \
", added_at, completed_at,\n" \
"                updated_at, section_id, project_id, parent_id, priorit" \
"y, child_order,\n" \
"                checked, is_deleted, day_order, collapsed, pinned)\n" \
"            VALUES ($id, $content, $description, $due, $added_at, $com" \
"pleted_at,\n" \
"                $updated_at, $section_id, $project_id, $parent_id, $pr" \
"iority, $child_order,\n" \
"                $checked, $is_deleted, $day_order, $collapsed, $pinned" \
");\n" \
"        ");
#line 807 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 807 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 816 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 816 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 816 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 816 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 816 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 816 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 816 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 816 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 817 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 817 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) item);
#line 817 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 817 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 818 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 818 "../src/Services/Database.vala"
	_tmp11_ = objects_item_get_content (item);
#line 818 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 818 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp10_, "$content", _tmp12_);
#line 819 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 819 "../src/Services/Database.vala"
	_tmp14_ = objects_item_get_description (item);
#line 819 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 819 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp13_, "$description", _tmp15_);
#line 820 "../src/Services/Database.vala"
	_tmp16_ = stmt;
#line 820 "../src/Services/Database.vala"
	_tmp17_ = objects_item_get_due (item);
#line 820 "../src/Services/Database.vala"
	_tmp18_ = _tmp17_;
#line 820 "../src/Services/Database.vala"
	_tmp19_ = objects_due_date_to_string (_tmp18_);
#line 820 "../src/Services/Database.vala"
	_tmp20_ = _tmp19_;
#line 820 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp16_, "$due", _tmp20_);
#line 820 "../src/Services/Database.vala"
	_g_free0 (_tmp20_);
#line 821 "../src/Services/Database.vala"
	_tmp21_ = stmt;
#line 821 "../src/Services/Database.vala"
	_tmp22_ = objects_item_get_added_at (item);
#line 821 "../src/Services/Database.vala"
	_tmp23_ = _tmp22_;
#line 821 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp21_, "$added_at", _tmp23_);
#line 822 "../src/Services/Database.vala"
	_tmp24_ = stmt;
#line 822 "../src/Services/Database.vala"
	_tmp25_ = objects_item_get_completed_at (item);
#line 822 "../src/Services/Database.vala"
	_tmp26_ = _tmp25_;
#line 822 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp24_, "$completed_at", _tmp26_);
#line 823 "../src/Services/Database.vala"
	_tmp27_ = stmt;
#line 823 "../src/Services/Database.vala"
	_tmp28_ = objects_item_get_updated_at (item);
#line 823 "../src/Services/Database.vala"
	_tmp29_ = _tmp28_;
#line 823 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp27_, "$updated_at", _tmp29_);
#line 824 "../src/Services/Database.vala"
	_tmp30_ = stmt;
#line 824 "../src/Services/Database.vala"
	_tmp31_ = objects_item_get_section_id (item);
#line 824 "../src/Services/Database.vala"
	_tmp32_ = _tmp31_;
#line 824 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp30_, "$section_id", _tmp32_);
#line 825 "../src/Services/Database.vala"
	_tmp33_ = stmt;
#line 825 "../src/Services/Database.vala"
	_tmp34_ = objects_item_get_project_id (item);
#line 825 "../src/Services/Database.vala"
	_tmp35_ = _tmp34_;
#line 825 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp33_, "$project_id", _tmp35_);
#line 826 "../src/Services/Database.vala"
	_tmp36_ = stmt;
#line 826 "../src/Services/Database.vala"
	_tmp37_ = objects_item_get_parent_id (item);
#line 826 "../src/Services/Database.vala"
	_tmp38_ = _tmp37_;
#line 826 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp36_, "$parent_id", _tmp38_);
#line 827 "../src/Services/Database.vala"
	_tmp39_ = stmt;
#line 827 "../src/Services/Database.vala"
	_tmp40_ = objects_item_get_priority (item);
#line 827 "../src/Services/Database.vala"
	_tmp41_ = _tmp40_;
#line 827 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp39_, "$priority", _tmp41_);
#line 828 "../src/Services/Database.vala"
	_tmp42_ = stmt;
#line 828 "../src/Services/Database.vala"
	_tmp43_ = objects_item_get_child_order (item);
#line 828 "../src/Services/Database.vala"
	_tmp44_ = _tmp43_;
#line 828 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp42_, "$child_order", _tmp44_);
#line 829 "../src/Services/Database.vala"
	_tmp45_ = stmt;
#line 829 "../src/Services/Database.vala"
	_tmp46_ = objects_item_get_checked (item);
#line 829 "../src/Services/Database.vala"
	_tmp47_ = _tmp46_;
#line 829 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp45_, "$checked", _tmp47_);
#line 830 "../src/Services/Database.vala"
	_tmp48_ = stmt;
#line 830 "../src/Services/Database.vala"
	_tmp49_ = objects_item_get_is_deleted (item);
#line 830 "../src/Services/Database.vala"
	_tmp50_ = _tmp49_;
#line 830 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp48_, "$is_deleted", _tmp50_);
#line 831 "../src/Services/Database.vala"
	_tmp51_ = stmt;
#line 831 "../src/Services/Database.vala"
	_tmp52_ = objects_item_get_day_order (item);
#line 831 "../src/Services/Database.vala"
	_tmp53_ = _tmp52_;
#line 831 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp51_, "$day_order", _tmp53_);
#line 832 "../src/Services/Database.vala"
	_tmp54_ = stmt;
#line 832 "../src/Services/Database.vala"
	_tmp55_ = objects_item_get_collapsed (item);
#line 832 "../src/Services/Database.vala"
	_tmp56_ = _tmp55_;
#line 832 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp54_, "$collapsed", _tmp56_);
#line 833 "../src/Services/Database.vala"
	_tmp57_ = stmt;
#line 833 "../src/Services/Database.vala"
	_tmp58_ = objects_item_get_pinned (item);
#line 833 "../src/Services/Database.vala"
	_tmp59_ = _tmp58_;
#line 833 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp57_, "$pinned", _tmp59_);
#line 835 "../src/Services/Database.vala"
	_tmp60_ = stmt;
#line 835 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp60_) == SQLITE_DONE) {
#line 4876 "Database.c"
		GeeArrayList* _tmp61_;
		GeeArrayList* _tmp62_;
		ServicesEventBus* _tmp69_;
		gint64 _tmp70_;
		gint64 _tmp71_;
		gint64 _tmp72_;
		gint64 _tmp73_;
#line 836 "../src/Services/Database.vala"
		_tmp61_ = services_database_get_items (self);
#line 836 "../src/Services/Database.vala"
		_tmp62_ = _tmp61_;
#line 836 "../src/Services/Database.vala"
		gee_abstract_collection_add ((GeeAbstractCollection*) _tmp62_, item);
#line 837 "../src/Services/Database.vala"
		g_signal_emit (self, services_database_signals[SERVICES_DATABASE_ITEM_ADDED_SIGNAL], 0, item, insert);
#line 839 "../src/Services/Database.vala"
		if (insert) {
#line 4894 "Database.c"
			gint64 _tmp63_;
			gint64 _tmp64_;
#line 840 "../src/Services/Database.vala"
			_tmp63_ = objects_item_get_section_id (item);
#line 840 "../src/Services/Database.vala"
			_tmp64_ = _tmp63_;
#line 840 "../src/Services/Database.vala"
			if (_tmp64_ == ((gint64) CONSTANTS_INACTIVE)) {
#line 4903 "Database.c"
				ObjectsProject* _tmp65_;
				ObjectsProject* _tmp66_;
#line 841 "../src/Services/Database.vala"
				_tmp65_ = objects_item_get_project (item);
#line 841 "../src/Services/Database.vala"
				_tmp66_ = _tmp65_;
#line 841 "../src/Services/Database.vala"
				g_signal_emit_by_name (_tmp66_, "item-added", item);
#line 4912 "Database.c"
			} else {
				ObjectsSection* _tmp67_;
				ObjectsSection* _tmp68_;
#line 843 "../src/Services/Database.vala"
				_tmp67_ = objects_item_get_section (item);
#line 843 "../src/Services/Database.vala"
				_tmp68_ = _tmp67_;
#line 843 "../src/Services/Database.vala"
				g_signal_emit_by_name (_tmp68_, "item-added", item);
#line 4922 "Database.c"
			}
		}
#line 847 "../src/Services/Database.vala"
		objects_item_insert_local_labels (item);
#line 848 "../src/Services/Database.vala"
		_tmp69_ = planner_event_bus;
#line 848 "../src/Services/Database.vala"
		_tmp70_ = objects_item_get_project_id (item);
#line 848 "../src/Services/Database.vala"
		_tmp71_ = _tmp70_;
#line 848 "../src/Services/Database.vala"
		_tmp72_ = objects_item_get_section_id (item);
#line 848 "../src/Services/Database.vala"
		_tmp73_ = _tmp72_;
#line 848 "../src/Services/Database.vala"
		g_signal_emit_by_name (_tmp69_, "update-items-position", _tmp71_, _tmp73_);
#line 4939 "Database.c"
	} else {
		sqlite3* _tmp74_;
		sqlite3* _tmp75_;
		const gchar* _tmp76_;
#line 850 "../src/Services/Database.vala"
		_tmp74_ = self->priv->db;
#line 850 "../src/Services/Database.vala"
		_tmp75_ = self->priv->db;
#line 850 "../src/Services/Database.vala"
		_tmp76_ = sqlite3_errmsg (_tmp75_);
#line 850 "../src/Services/Database.vala"
		g_warning ("Database.vala:850: Error: %d: %s", sqlite3_errcode (_tmp74_), _tmp76_);
#line 4952 "Database.c"
	}
#line 853 "../src/Services/Database.vala"
	_tmp77_ = stmt;
#line 853 "../src/Services/Database.vala"
	sqlite3_reset (_tmp77_);
#line 854 "../src/Services/Database.vala"
	_tmp78_ = stmt;
#line 854 "../src/Services/Database.vala"
	result = sqlite3_step (_tmp78_) == SQLITE_DONE;
#line 854 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 854 "../src/Services/Database.vala"
	return result;
#line 4966 "Database.c"
}

GeeArrayList*
services_database_get_items_collection (ServicesDatabase* self)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp1_;
	sqlite3* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	gint _tmp5_;
	gint _tmp6_;
	sqlite3_stmt* _tmp7_ = NULL;
	sqlite3_stmt* _tmp13_;
	GeeArrayList* result = NULL;
#line 857 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 858 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 858 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 861 "../src/Services/Database.vala"
	_tmp1_ = g_strdup ("SELECT * FROM Items;");
#line 861 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 861 "../src/Services/Database.vala"
	self->priv->sql = _tmp1_;
#line 863 "../src/Services/Database.vala"
	_tmp2_ = self->priv->db;
#line 863 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 863 "../src/Services/Database.vala"
	_tmp4_ = self->priv->sql;
#line 863 "../src/Services/Database.vala"
	_tmp5_ = strlen (_tmp4_);
#line 863 "../src/Services/Database.vala"
	_tmp6_ = _tmp5_;
#line 863 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp2_, _tmp3_, _tmp6_, &_tmp7_, NULL);
#line 863 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 863 "../src/Services/Database.vala"
	stmt = _tmp7_;
#line 865 "../src/Services/Database.vala"
	while (TRUE) {
#line 5014 "Database.c"
		sqlite3_stmt* _tmp8_;
		GeeArrayList* _tmp9_;
		sqlite3_stmt* _tmp10_;
		ObjectsItem* _tmp11_;
		ObjectsItem* _tmp12_;
#line 865 "../src/Services/Database.vala"
		_tmp8_ = stmt;
#line 865 "../src/Services/Database.vala"
		if (!(sqlite3_step (_tmp8_) == SQLITE_ROW)) {
#line 865 "../src/Services/Database.vala"
			break;
#line 5026 "Database.c"
		}
#line 866 "../src/Services/Database.vala"
		_tmp9_ = return_value;
#line 866 "../src/Services/Database.vala"
		_tmp10_ = stmt;
#line 866 "../src/Services/Database.vala"
		_tmp11_ = _services_database_fill_item (self, _tmp10_);
#line 866 "../src/Services/Database.vala"
		_tmp12_ = _tmp11_;
#line 866 "../src/Services/Database.vala"
		gee_abstract_collection_add ((GeeAbstractCollection*) _tmp9_, _tmp12_);
#line 866 "../src/Services/Database.vala"
		_g_object_unref0 (_tmp12_);
#line 5040 "Database.c"
	}
#line 868 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 868 "../src/Services/Database.vala"
	sqlite3_reset (_tmp13_);
#line 869 "../src/Services/Database.vala"
	result = return_value;
#line 869 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 869 "../src/Services/Database.vala"
	return result;
#line 5052 "Database.c"
}

ObjectsItem*
services_database_get_item (ServicesDatabase* self,
                            gint64 id)
{
	ObjectsItem* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsItem* result = NULL;
#line 872 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 873 "../src/Services/Database.vala"
	return_value = NULL;
#line 5066 "Database.c"
	{
		GeeArrayList* _tmp0_;
#line 874 "../src/Services/Database.vala"
		_tmp0_ = self->priv->_items;
#line 874 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 5073 "Database.c"
		{
			ObjectsItem* _tmp16_;
			ObjectsItem* _tmp17_;
			{
				GeeArrayList* _item_list = NULL;
				GeeArrayList* _tmp1_;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				gint _item_size = 0;
				GeeArrayList* _tmp4_;
				gint _tmp5_;
				gint _tmp6_;
				gint _item_index = 0;
#line 875 "../src/Services/Database.vala"
				_tmp1_ = services_database_get_items (self);
#line 875 "../src/Services/Database.vala"
				_tmp2_ = _tmp1_;
#line 875 "../src/Services/Database.vala"
				_tmp3_ = _g_object_ref0 (_tmp2_);
#line 875 "../src/Services/Database.vala"
				_item_list = _tmp3_;
#line 875 "../src/Services/Database.vala"
				_tmp4_ = _item_list;
#line 875 "../src/Services/Database.vala"
				_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 875 "../src/Services/Database.vala"
				_tmp6_ = _tmp5_;
#line 875 "../src/Services/Database.vala"
				_item_size = _tmp6_;
#line 875 "../src/Services/Database.vala"
				_item_index = -1;
#line 875 "../src/Services/Database.vala"
				while (TRUE) {
#line 5107 "Database.c"
					gint _tmp7_;
					gint _tmp8_;
					ObjectsItem* item = NULL;
					GeeArrayList* _tmp9_;
					gpointer _tmp10_;
					ObjectsItem* _tmp11_;
					gint64 _tmp12_;
					gint64 _tmp13_;
#line 875 "../src/Services/Database.vala"
					_item_index = _item_index + 1;
#line 875 "../src/Services/Database.vala"
					_tmp7_ = _item_index;
#line 875 "../src/Services/Database.vala"
					_tmp8_ = _item_size;
#line 875 "../src/Services/Database.vala"
					if (!(_tmp7_ < _tmp8_)) {
#line 875 "../src/Services/Database.vala"
						break;
#line 5126 "Database.c"
					}
#line 875 "../src/Services/Database.vala"
					_tmp9_ = _item_list;
#line 875 "../src/Services/Database.vala"
					_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _item_index);
#line 875 "../src/Services/Database.vala"
					item = (ObjectsItem*) _tmp10_;
#line 876 "../src/Services/Database.vala"
					_tmp11_ = item;
#line 876 "../src/Services/Database.vala"
					_tmp12_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp11_);
#line 876 "../src/Services/Database.vala"
					_tmp13_ = _tmp12_;
#line 876 "../src/Services/Database.vala"
					if (_tmp13_ == id) {
#line 5142 "Database.c"
						ObjectsItem* _tmp14_;
						ObjectsItem* _tmp15_;
#line 877 "../src/Services/Database.vala"
						_tmp14_ = item;
#line 877 "../src/Services/Database.vala"
						_tmp15_ = _g_object_ref0 (_tmp14_);
#line 877 "../src/Services/Database.vala"
						_g_object_unref0 (return_value);
#line 877 "../src/Services/Database.vala"
						return_value = _tmp15_;
#line 878 "../src/Services/Database.vala"
						_g_object_unref0 (item);
#line 878 "../src/Services/Database.vala"
						break;
#line 5157 "Database.c"
					}
#line 875 "../src/Services/Database.vala"
					_g_object_unref0 (item);
#line 5161 "Database.c"
				}
#line 875 "../src/Services/Database.vala"
				_g_object_unref0 (_item_list);
#line 5165 "Database.c"
			}
#line 882 "../src/Services/Database.vala"
			_tmp16_ = return_value;
#line 882 "../src/Services/Database.vala"
			_tmp17_ = _g_object_ref0 (_tmp16_);
#line 882 "../src/Services/Database.vala"
			result = _tmp17_;
#line 5173 "Database.c"
			{
				GeeArrayList* _tmp18_;
#line 874 "../src/Services/Database.vala"
				_tmp18_ = self->priv->_items;
#line 874 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__items);
#line 5180 "Database.c"
			}
#line 882 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 882 "../src/Services/Database.vala"
			return result;
#line 5186 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp19_;
#line 874 "../src/Services/Database.vala"
			_tmp19_ = self->priv->_items;
#line 874 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 5195 "Database.c"
		}
#line 874 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 874 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 874 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 874 "../src/Services/Database.vala"
		return NULL;
#line 5205 "Database.c"
	}
#line 872 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 5209 "Database.c"
}

GeeArrayList*
services_database_get_item_by_baseobject (ServicesDatabase* self,
                                          ObjectsBaseObject* object)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	GError* _inner_error0_ = NULL;
	GeeArrayList* result = NULL;
#line 886 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 886 "../src/Services/Database.vala"
	g_return_val_if_fail (object != NULL, NULL);
#line 887 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 887 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 5228 "Database.c"
	{
		GeeArrayList* _tmp1_;
#line 888 "../src/Services/Database.vala"
		_tmp1_ = self->priv->_items;
#line 888 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 5235 "Database.c"
		{
			GeeArrayList* _tmp38_;
			GeeArrayList* _tmp39_;
			{
				GeeArrayList* _item_list = NULL;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				GeeArrayList* _tmp4_;
				gint _item_size = 0;
				GeeArrayList* _tmp5_;
				gint _tmp6_;
				gint _tmp7_;
				gint _item_index = 0;
#line 889 "../src/Services/Database.vala"
				_tmp2_ = services_database_get_items (self);
#line 889 "../src/Services/Database.vala"
				_tmp3_ = _tmp2_;
#line 889 "../src/Services/Database.vala"
				_tmp4_ = _g_object_ref0 (_tmp3_);
#line 889 "../src/Services/Database.vala"
				_item_list = _tmp4_;
#line 889 "../src/Services/Database.vala"
				_tmp5_ = _item_list;
#line 889 "../src/Services/Database.vala"
				_tmp6_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp5_);
#line 889 "../src/Services/Database.vala"
				_tmp7_ = _tmp6_;
#line 889 "../src/Services/Database.vala"
				_item_size = _tmp7_;
#line 889 "../src/Services/Database.vala"
				_item_index = -1;
#line 889 "../src/Services/Database.vala"
				while (TRUE) {
#line 5269 "Database.c"
					gint _tmp8_;
					gint _tmp9_;
					ObjectsItem* item = NULL;
					GeeArrayList* _tmp10_;
					gpointer _tmp11_;
#line 889 "../src/Services/Database.vala"
					_item_index = _item_index + 1;
#line 889 "../src/Services/Database.vala"
					_tmp8_ = _item_index;
#line 889 "../src/Services/Database.vala"
					_tmp9_ = _item_size;
#line 889 "../src/Services/Database.vala"
					if (!(_tmp8_ < _tmp9_)) {
#line 889 "../src/Services/Database.vala"
						break;
#line 5285 "Database.c"
					}
#line 889 "../src/Services/Database.vala"
					_tmp10_ = _item_list;
#line 889 "../src/Services/Database.vala"
					_tmp11_ = gee_abstract_list_get ((GeeAbstractList*) _tmp10_, _item_index);
#line 889 "../src/Services/Database.vala"
					item = (ObjectsItem*) _tmp11_;
#line 890 "../src/Services/Database.vala"
					if (OBJECTS_IS_PROJECT (object)) {
#line 5295 "Database.c"
						gboolean _tmp12_ = FALSE;
						gboolean _tmp13_ = FALSE;
						ObjectsItem* _tmp14_;
						gint64 _tmp15_;
						gint64 _tmp16_;
						gint64 _tmp17_;
						gint64 _tmp18_;
#line 891 "../src/Services/Database.vala"
						_tmp14_ = item;
#line 891 "../src/Services/Database.vala"
						_tmp15_ = objects_item_get_project_id (_tmp14_);
#line 891 "../src/Services/Database.vala"
						_tmp16_ = _tmp15_;
#line 891 "../src/Services/Database.vala"
						_tmp17_ = objects_base_object_get_id (object);
#line 891 "../src/Services/Database.vala"
						_tmp18_ = _tmp17_;
#line 891 "../src/Services/Database.vala"
						if (_tmp16_ == _tmp18_) {
#line 5315 "Database.c"
							ObjectsItem* _tmp19_;
							gint64 _tmp20_;
							gint64 _tmp21_;
#line 891 "../src/Services/Database.vala"
							_tmp19_ = item;
#line 891 "../src/Services/Database.vala"
							_tmp20_ = objects_item_get_section_id (_tmp19_);
#line 891 "../src/Services/Database.vala"
							_tmp21_ = _tmp20_;
#line 891 "../src/Services/Database.vala"
							_tmp13_ = _tmp21_ == ((gint64) CONSTANTS_INACTIVE);
#line 5327 "Database.c"
						} else {
#line 891 "../src/Services/Database.vala"
							_tmp13_ = FALSE;
#line 5331 "Database.c"
						}
#line 891 "../src/Services/Database.vala"
						if (_tmp13_) {
#line 5335 "Database.c"
							ObjectsItem* _tmp22_;
							gint64 _tmp23_;
							gint64 _tmp24_;
#line 891 "../src/Services/Database.vala"
							_tmp22_ = item;
#line 891 "../src/Services/Database.vala"
							_tmp23_ = objects_item_get_parent_id (_tmp22_);
#line 891 "../src/Services/Database.vala"
							_tmp24_ = _tmp23_;
#line 891 "../src/Services/Database.vala"
							_tmp12_ = _tmp24_ == ((gint64) CONSTANTS_INACTIVE);
#line 5347 "Database.c"
						} else {
#line 891 "../src/Services/Database.vala"
							_tmp12_ = FALSE;
#line 5351 "Database.c"
						}
#line 891 "../src/Services/Database.vala"
						if (_tmp12_) {
#line 5355 "Database.c"
							GeeArrayList* _tmp25_;
							ObjectsItem* _tmp26_;
#line 892 "../src/Services/Database.vala"
							_tmp25_ = return_value;
#line 892 "../src/Services/Database.vala"
							_tmp26_ = item;
#line 892 "../src/Services/Database.vala"
							gee_abstract_collection_add ((GeeAbstractCollection*) _tmp25_, _tmp26_);
#line 5364 "Database.c"
						}
					}
#line 896 "../src/Services/Database.vala"
					if (OBJECTS_IS_SECTION (object)) {
#line 5369 "Database.c"
						gboolean _tmp27_ = FALSE;
						ObjectsItem* _tmp28_;
						gint64 _tmp29_;
						gint64 _tmp30_;
						gint64 _tmp31_;
						gint64 _tmp32_;
#line 897 "../src/Services/Database.vala"
						_tmp28_ = item;
#line 897 "../src/Services/Database.vala"
						_tmp29_ = objects_item_get_section_id (_tmp28_);
#line 897 "../src/Services/Database.vala"
						_tmp30_ = _tmp29_;
#line 897 "../src/Services/Database.vala"
						_tmp31_ = objects_base_object_get_id (object);
#line 897 "../src/Services/Database.vala"
						_tmp32_ = _tmp31_;
#line 897 "../src/Services/Database.vala"
						if (_tmp30_ == _tmp32_) {
#line 5388 "Database.c"
							ObjectsItem* _tmp33_;
							gint64 _tmp34_;
							gint64 _tmp35_;
#line 897 "../src/Services/Database.vala"
							_tmp33_ = item;
#line 897 "../src/Services/Database.vala"
							_tmp34_ = objects_item_get_parent_id (_tmp33_);
#line 897 "../src/Services/Database.vala"
							_tmp35_ = _tmp34_;
#line 897 "../src/Services/Database.vala"
							_tmp27_ = _tmp35_ == ((gint64) CONSTANTS_INACTIVE);
#line 5400 "Database.c"
						} else {
#line 897 "../src/Services/Database.vala"
							_tmp27_ = FALSE;
#line 5404 "Database.c"
						}
#line 897 "../src/Services/Database.vala"
						if (_tmp27_) {
#line 5408 "Database.c"
							GeeArrayList* _tmp36_;
							ObjectsItem* _tmp37_;
#line 898 "../src/Services/Database.vala"
							_tmp36_ = return_value;
#line 898 "../src/Services/Database.vala"
							_tmp37_ = item;
#line 898 "../src/Services/Database.vala"
							gee_abstract_collection_add ((GeeAbstractCollection*) _tmp36_, _tmp37_);
#line 5417 "Database.c"
						}
					}
#line 889 "../src/Services/Database.vala"
					_g_object_unref0 (item);
#line 5422 "Database.c"
				}
#line 889 "../src/Services/Database.vala"
				_g_object_unref0 (_item_list);
#line 5426 "Database.c"
			}
#line 903 "../src/Services/Database.vala"
			_tmp38_ = return_value;
#line 903 "../src/Services/Database.vala"
			_tmp39_ = _g_object_ref0 (_tmp38_);
#line 903 "../src/Services/Database.vala"
			result = _tmp39_;
#line 5434 "Database.c"
			{
				GeeArrayList* _tmp40_;
#line 888 "../src/Services/Database.vala"
				_tmp40_ = self->priv->_items;
#line 888 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__items);
#line 5441 "Database.c"
			}
#line 903 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 903 "../src/Services/Database.vala"
			return result;
#line 5447 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp41_;
#line 888 "../src/Services/Database.vala"
			_tmp41_ = self->priv->_items;
#line 888 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 5456 "Database.c"
		}
#line 888 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 888 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 888 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 888 "../src/Services/Database.vala"
		return NULL;
#line 5466 "Database.c"
	}
#line 886 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 5470 "Database.c"
}

GeeArrayList*
services_database_get_items_by_project (ServicesDatabase* self,
                                        ObjectsProject* project)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	GError* _inner_error0_ = NULL;
	GeeArrayList* result = NULL;
#line 907 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 907 "../src/Services/Database.vala"
	g_return_val_if_fail (project != NULL, NULL);
#line 908 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 908 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 5489 "Database.c"
	{
		GeeArrayList* _tmp1_;
#line 909 "../src/Services/Database.vala"
		_tmp1_ = self->priv->_items;
#line 909 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 5496 "Database.c"
		{
			GeeArrayList* _tmp19_;
			GeeArrayList* _tmp20_;
			{
				GeeArrayList* _item_list = NULL;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				GeeArrayList* _tmp4_;
				gint _item_size = 0;
				GeeArrayList* _tmp5_;
				gint _tmp6_;
				gint _tmp7_;
				gint _item_index = 0;
#line 910 "../src/Services/Database.vala"
				_tmp2_ = services_database_get_items (self);
#line 910 "../src/Services/Database.vala"
				_tmp3_ = _tmp2_;
#line 910 "../src/Services/Database.vala"
				_tmp4_ = _g_object_ref0 (_tmp3_);
#line 910 "../src/Services/Database.vala"
				_item_list = _tmp4_;
#line 910 "../src/Services/Database.vala"
				_tmp5_ = _item_list;
#line 910 "../src/Services/Database.vala"
				_tmp6_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp5_);
#line 910 "../src/Services/Database.vala"
				_tmp7_ = _tmp6_;
#line 910 "../src/Services/Database.vala"
				_item_size = _tmp7_;
#line 910 "../src/Services/Database.vala"
				_item_index = -1;
#line 910 "../src/Services/Database.vala"
				while (TRUE) {
#line 5530 "Database.c"
					gint _tmp8_;
					gint _tmp9_;
					ObjectsItem* item = NULL;
					GeeArrayList* _tmp10_;
					gpointer _tmp11_;
					ObjectsItem* _tmp12_;
					gint64 _tmp13_;
					gint64 _tmp14_;
					gint64 _tmp15_;
					gint64 _tmp16_;
#line 910 "../src/Services/Database.vala"
					_item_index = _item_index + 1;
#line 910 "../src/Services/Database.vala"
					_tmp8_ = _item_index;
#line 910 "../src/Services/Database.vala"
					_tmp9_ = _item_size;
#line 910 "../src/Services/Database.vala"
					if (!(_tmp8_ < _tmp9_)) {
#line 910 "../src/Services/Database.vala"
						break;
#line 5551 "Database.c"
					}
#line 910 "../src/Services/Database.vala"
					_tmp10_ = _item_list;
#line 910 "../src/Services/Database.vala"
					_tmp11_ = gee_abstract_list_get ((GeeAbstractList*) _tmp10_, _item_index);
#line 910 "../src/Services/Database.vala"
					item = (ObjectsItem*) _tmp11_;
#line 911 "../src/Services/Database.vala"
					_tmp12_ = item;
#line 911 "../src/Services/Database.vala"
					_tmp13_ = objects_item_get_project_id (_tmp12_);
#line 911 "../src/Services/Database.vala"
					_tmp14_ = _tmp13_;
#line 911 "../src/Services/Database.vala"
					_tmp15_ = objects_base_object_get_id ((ObjectsBaseObject*) project);
#line 911 "../src/Services/Database.vala"
					_tmp16_ = _tmp15_;
#line 911 "../src/Services/Database.vala"
					if (_tmp14_ == _tmp16_) {
#line 5571 "Database.c"
						GeeArrayList* _tmp17_;
						ObjectsItem* _tmp18_;
#line 912 "../src/Services/Database.vala"
						_tmp17_ = return_value;
#line 912 "../src/Services/Database.vala"
						_tmp18_ = item;
#line 912 "../src/Services/Database.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp17_, _tmp18_);
#line 5580 "Database.c"
					}
#line 910 "../src/Services/Database.vala"
					_g_object_unref0 (item);
#line 5584 "Database.c"
				}
#line 910 "../src/Services/Database.vala"
				_g_object_unref0 (_item_list);
#line 5588 "Database.c"
			}
#line 916 "../src/Services/Database.vala"
			_tmp19_ = return_value;
#line 916 "../src/Services/Database.vala"
			_tmp20_ = _g_object_ref0 (_tmp19_);
#line 916 "../src/Services/Database.vala"
			result = _tmp20_;
#line 5596 "Database.c"
			{
				GeeArrayList* _tmp21_;
#line 909 "../src/Services/Database.vala"
				_tmp21_ = self->priv->_items;
#line 909 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__items);
#line 5603 "Database.c"
			}
#line 916 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 916 "../src/Services/Database.vala"
			return result;
#line 5609 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp22_;
#line 909 "../src/Services/Database.vala"
			_tmp22_ = self->priv->_items;
#line 909 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 5618 "Database.c"
		}
#line 909 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 909 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 909 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 909 "../src/Services/Database.vala"
		return NULL;
#line 5628 "Database.c"
	}
#line 907 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 5632 "Database.c"
}

ObjectsItem*
_services_database_fill_item (ServicesDatabase* self,
                              sqlite3_stmt* stmt)
{
	ObjectsItem* return_value = NULL;
	ObjectsItem* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
	ObjectsItem* result = NULL;
#line 920 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 920 "../src/Services/Database.vala"
	g_return_val_if_fail (stmt != NULL, NULL);
#line 921 "../src/Services/Database.vala"
	_tmp0_ = objects_item_new ();
#line 921 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 922 "../src/Services/Database.vala"
	objects_base_object_set_id ((ObjectsBaseObject*) return_value, sqlite3_column_int64 (stmt, 0));
#line 923 "../src/Services/Database.vala"
	_tmp1_ = (const gchar*) sqlite3_column_text (stmt, 1);
#line 923 "../src/Services/Database.vala"
	objects_item_set_content (return_value, _tmp1_);
#line 924 "../src/Services/Database.vala"
	_tmp2_ = (const gchar*) sqlite3_column_text (stmt, 2);
#line 924 "../src/Services/Database.vala"
	objects_item_set_description (return_value, _tmp2_);
#line 925 "../src/Services/Database.vala"
	services_database_get_due_parameter (self, return_value, stmt, 3);
#line 926 "../src/Services/Database.vala"
	_tmp3_ = (const gchar*) sqlite3_column_text (stmt, 4);
#line 926 "../src/Services/Database.vala"
	objects_item_set_added_at (return_value, _tmp3_);
#line 927 "../src/Services/Database.vala"
	_tmp4_ = (const gchar*) sqlite3_column_text (stmt, 5);
#line 927 "../src/Services/Database.vala"
	objects_item_set_completed_at (return_value, _tmp4_);
#line 928 "../src/Services/Database.vala"
	_tmp5_ = (const gchar*) sqlite3_column_text (stmt, 6);
#line 928 "../src/Services/Database.vala"
	objects_item_set_updated_at (return_value, _tmp5_);
#line 929 "../src/Services/Database.vala"
	objects_item_set_section_id (return_value, sqlite3_column_int64 (stmt, 7));
#line 930 "../src/Services/Database.vala"
	objects_item_set_project_id (return_value, sqlite3_column_int64 (stmt, 8));
#line 931 "../src/Services/Database.vala"
	objects_item_set_parent_id (return_value, sqlite3_column_int64 (stmt, 9));
#line 932 "../src/Services/Database.vala"
	objects_item_set_priority (return_value, sqlite3_column_int (stmt, 10));
#line 933 "../src/Services/Database.vala"
	objects_item_set_child_order (return_value, sqlite3_column_int (stmt, 11));
#line 934 "../src/Services/Database.vala"
	objects_item_set_checked (return_value, services_database_get_parameter_bool (self, stmt, 12));
#line 935 "../src/Services/Database.vala"
	objects_item_set_is_deleted (return_value, services_database_get_parameter_bool (self, stmt, 13));
#line 936 "../src/Services/Database.vala"
	objects_item_set_day_order (return_value, sqlite3_column_int (stmt, 14));
#line 937 "../src/Services/Database.vala"
	objects_item_set_collapsed (return_value, services_database_get_parameter_bool (self, stmt, 15));
#line 938 "../src/Services/Database.vala"
	objects_item_set_pinned (return_value, services_database_get_parameter_bool (self, stmt, 16));
#line 940 "../src/Services/Database.vala"
	result = return_value;
#line 940 "../src/Services/Database.vala"
	return result;
#line 5703 "Database.c"
}

GeeArrayList*
services_database_get_items_by_date (ServicesDatabase* self,
                                     GDateTime* date,
                                     gboolean checked)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	GError* _inner_error0_ = NULL;
	GeeArrayList* result = NULL;
#line 943 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 943 "../src/Services/Database.vala"
	g_return_val_if_fail (date != NULL, NULL);
#line 944 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 944 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 5723 "Database.c"
	{
		GeeArrayList* _tmp1_;
#line 945 "../src/Services/Database.vala"
		_tmp1_ = self->priv->_items;
#line 945 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 5730 "Database.c"
		{
			GeeArrayList* _tmp15_;
			GeeArrayList* _tmp16_;
			{
				GeeArrayList* _item_list = NULL;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				GeeArrayList* _tmp4_;
				gint _item_size = 0;
				GeeArrayList* _tmp5_;
				gint _tmp6_;
				gint _tmp7_;
				gint _item_index = 0;
#line 946 "../src/Services/Database.vala"
				_tmp2_ = services_database_get_items (self);
#line 946 "../src/Services/Database.vala"
				_tmp3_ = _tmp2_;
#line 946 "../src/Services/Database.vala"
				_tmp4_ = _g_object_ref0 (_tmp3_);
#line 946 "../src/Services/Database.vala"
				_item_list = _tmp4_;
#line 946 "../src/Services/Database.vala"
				_tmp5_ = _item_list;
#line 946 "../src/Services/Database.vala"
				_tmp6_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp5_);
#line 946 "../src/Services/Database.vala"
				_tmp7_ = _tmp6_;
#line 946 "../src/Services/Database.vala"
				_item_size = _tmp7_;
#line 946 "../src/Services/Database.vala"
				_item_index = -1;
#line 946 "../src/Services/Database.vala"
				while (TRUE) {
#line 5764 "Database.c"
					gint _tmp8_;
					gint _tmp9_;
					ObjectsItem* item = NULL;
					GeeArrayList* _tmp10_;
					gpointer _tmp11_;
					ObjectsItem* _tmp12_;
#line 946 "../src/Services/Database.vala"
					_item_index = _item_index + 1;
#line 946 "../src/Services/Database.vala"
					_tmp8_ = _item_index;
#line 946 "../src/Services/Database.vala"
					_tmp9_ = _item_size;
#line 946 "../src/Services/Database.vala"
					if (!(_tmp8_ < _tmp9_)) {
#line 946 "../src/Services/Database.vala"
						break;
#line 5781 "Database.c"
					}
#line 946 "../src/Services/Database.vala"
					_tmp10_ = _item_list;
#line 946 "../src/Services/Database.vala"
					_tmp11_ = gee_abstract_list_get ((GeeAbstractList*) _tmp10_, _item_index);
#line 946 "../src/Services/Database.vala"
					item = (ObjectsItem*) _tmp11_;
#line 947 "../src/Services/Database.vala"
					_tmp12_ = item;
#line 947 "../src/Services/Database.vala"
					if (services_database_valid_item_by_date (self, _tmp12_, date, checked)) {
#line 5793 "Database.c"
						GeeArrayList* _tmp13_;
						ObjectsItem* _tmp14_;
#line 948 "../src/Services/Database.vala"
						_tmp13_ = return_value;
#line 948 "../src/Services/Database.vala"
						_tmp14_ = item;
#line 948 "../src/Services/Database.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp13_, _tmp14_);
#line 5802 "Database.c"
					}
#line 946 "../src/Services/Database.vala"
					_g_object_unref0 (item);
#line 5806 "Database.c"
				}
#line 946 "../src/Services/Database.vala"
				_g_object_unref0 (_item_list);
#line 5810 "Database.c"
			}
#line 952 "../src/Services/Database.vala"
			_tmp15_ = return_value;
#line 952 "../src/Services/Database.vala"
			_tmp16_ = _g_object_ref0 (_tmp15_);
#line 952 "../src/Services/Database.vala"
			result = _tmp16_;
#line 5818 "Database.c"
			{
				GeeArrayList* _tmp17_;
#line 945 "../src/Services/Database.vala"
				_tmp17_ = self->priv->_items;
#line 945 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__items);
#line 5825 "Database.c"
			}
#line 952 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 952 "../src/Services/Database.vala"
			return result;
#line 5831 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp18_;
#line 945 "../src/Services/Database.vala"
			_tmp18_ = self->priv->_items;
#line 945 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 5840 "Database.c"
		}
#line 945 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 945 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 945 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 945 "../src/Services/Database.vala"
		return NULL;
#line 5850 "Database.c"
	}
#line 943 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 5854 "Database.c"
}

GeeArrayList*
services_database_get_items_pinned (ServicesDatabase* self,
                                    gboolean checked)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	GError* _inner_error0_ = NULL;
	GeeArrayList* result = NULL;
#line 956 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 957 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 957 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 5871 "Database.c"
	{
		GeeArrayList* _tmp1_;
#line 958 "../src/Services/Database.vala"
		_tmp1_ = self->priv->_items;
#line 958 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 5878 "Database.c"
		{
			GeeArrayList* _tmp21_;
			GeeArrayList* _tmp22_;
			{
				GeeArrayList* _item_list = NULL;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				GeeArrayList* _tmp4_;
				gint _item_size = 0;
				GeeArrayList* _tmp5_;
				gint _tmp6_;
				gint _tmp7_;
				gint _item_index = 0;
#line 959 "../src/Services/Database.vala"
				_tmp2_ = services_database_get_items (self);
#line 959 "../src/Services/Database.vala"
				_tmp3_ = _tmp2_;
#line 959 "../src/Services/Database.vala"
				_tmp4_ = _g_object_ref0 (_tmp3_);
#line 959 "../src/Services/Database.vala"
				_item_list = _tmp4_;
#line 959 "../src/Services/Database.vala"
				_tmp5_ = _item_list;
#line 959 "../src/Services/Database.vala"
				_tmp6_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp5_);
#line 959 "../src/Services/Database.vala"
				_tmp7_ = _tmp6_;
#line 959 "../src/Services/Database.vala"
				_item_size = _tmp7_;
#line 959 "../src/Services/Database.vala"
				_item_index = -1;
#line 959 "../src/Services/Database.vala"
				while (TRUE) {
#line 5912 "Database.c"
					gint _tmp8_;
					gint _tmp9_;
					ObjectsItem* item = NULL;
					GeeArrayList* _tmp10_;
					gpointer _tmp11_;
					gboolean _tmp12_ = FALSE;
					ObjectsItem* _tmp13_;
					gboolean _tmp14_;
					gboolean _tmp15_;
#line 959 "../src/Services/Database.vala"
					_item_index = _item_index + 1;
#line 959 "../src/Services/Database.vala"
					_tmp8_ = _item_index;
#line 959 "../src/Services/Database.vala"
					_tmp9_ = _item_size;
#line 959 "../src/Services/Database.vala"
					if (!(_tmp8_ < _tmp9_)) {
#line 959 "../src/Services/Database.vala"
						break;
#line 5932 "Database.c"
					}
#line 959 "../src/Services/Database.vala"
					_tmp10_ = _item_list;
#line 959 "../src/Services/Database.vala"
					_tmp11_ = gee_abstract_list_get ((GeeAbstractList*) _tmp10_, _item_index);
#line 959 "../src/Services/Database.vala"
					item = (ObjectsItem*) _tmp11_;
#line 960 "../src/Services/Database.vala"
					_tmp13_ = item;
#line 960 "../src/Services/Database.vala"
					_tmp14_ = objects_item_get_pinned (_tmp13_);
#line 960 "../src/Services/Database.vala"
					_tmp15_ = _tmp14_;
#line 960 "../src/Services/Database.vala"
					if (_tmp15_) {
#line 5948 "Database.c"
						ObjectsItem* _tmp16_;
						gboolean _tmp17_;
						gboolean _tmp18_;
#line 960 "../src/Services/Database.vala"
						_tmp16_ = item;
#line 960 "../src/Services/Database.vala"
						_tmp17_ = objects_item_get_checked (_tmp16_);
#line 960 "../src/Services/Database.vala"
						_tmp18_ = _tmp17_;
#line 960 "../src/Services/Database.vala"
						_tmp12_ = _tmp18_ == checked;
#line 5960 "Database.c"
					} else {
#line 960 "../src/Services/Database.vala"
						_tmp12_ = FALSE;
#line 5964 "Database.c"
					}
#line 960 "../src/Services/Database.vala"
					if (_tmp12_) {
#line 5968 "Database.c"
						GeeArrayList* _tmp19_;
						ObjectsItem* _tmp20_;
#line 961 "../src/Services/Database.vala"
						_tmp19_ = return_value;
#line 961 "../src/Services/Database.vala"
						_tmp20_ = item;
#line 961 "../src/Services/Database.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp19_, _tmp20_);
#line 5977 "Database.c"
					}
#line 959 "../src/Services/Database.vala"
					_g_object_unref0 (item);
#line 5981 "Database.c"
				}
#line 959 "../src/Services/Database.vala"
				_g_object_unref0 (_item_list);
#line 5985 "Database.c"
			}
#line 965 "../src/Services/Database.vala"
			_tmp21_ = return_value;
#line 965 "../src/Services/Database.vala"
			_tmp22_ = _g_object_ref0 (_tmp21_);
#line 965 "../src/Services/Database.vala"
			result = _tmp22_;
#line 5993 "Database.c"
			{
				GeeArrayList* _tmp23_;
#line 958 "../src/Services/Database.vala"
				_tmp23_ = self->priv->_items;
#line 958 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__items);
#line 6000 "Database.c"
			}
#line 965 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 965 "../src/Services/Database.vala"
			return result;
#line 6006 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp24_;
#line 958 "../src/Services/Database.vala"
			_tmp24_ = self->priv->_items;
#line 958 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 6015 "Database.c"
		}
#line 958 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 958 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 958 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 958 "../src/Services/Database.vala"
		return NULL;
#line 6025 "Database.c"
	}
#line 956 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 6029 "Database.c"
}

GeeArrayList*
services_database_get_items_by_label (ServicesDatabase* self,
                                      ObjectsLabel* label,
                                      gboolean checked)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	GError* _inner_error0_ = NULL;
	GeeArrayList* result = NULL;
#line 969 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 969 "../src/Services/Database.vala"
	g_return_val_if_fail (label != NULL, NULL);
#line 970 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 970 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 6049 "Database.c"
	{
		GeeArrayList* _tmp1_;
#line 971 "../src/Services/Database.vala"
		_tmp1_ = self->priv->_items;
#line 971 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 6056 "Database.c"
		{
			GeeArrayList* _tmp23_;
			GeeArrayList* _tmp24_;
			{
				GeeArrayList* _item_list = NULL;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				GeeArrayList* _tmp4_;
				gint _item_size = 0;
				GeeArrayList* _tmp5_;
				gint _tmp6_;
				gint _tmp7_;
				gint _item_index = 0;
#line 972 "../src/Services/Database.vala"
				_tmp2_ = services_database_get_items (self);
#line 972 "../src/Services/Database.vala"
				_tmp3_ = _tmp2_;
#line 972 "../src/Services/Database.vala"
				_tmp4_ = _g_object_ref0 (_tmp3_);
#line 972 "../src/Services/Database.vala"
				_item_list = _tmp4_;
#line 972 "../src/Services/Database.vala"
				_tmp5_ = _item_list;
#line 972 "../src/Services/Database.vala"
				_tmp6_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp5_);
#line 972 "../src/Services/Database.vala"
				_tmp7_ = _tmp6_;
#line 972 "../src/Services/Database.vala"
				_item_size = _tmp7_;
#line 972 "../src/Services/Database.vala"
				_item_index = -1;
#line 972 "../src/Services/Database.vala"
				while (TRUE) {
#line 6090 "Database.c"
					gint _tmp8_;
					gint _tmp9_;
					ObjectsItem* item = NULL;
					GeeArrayList* _tmp10_;
					gpointer _tmp11_;
					gboolean _tmp12_ = FALSE;
					ObjectsItem* _tmp13_;
					GeeHashMap* _tmp14_;
					GeeHashMap* _tmp15_;
					const gchar* _tmp16_;
					const gchar* _tmp17_;
#line 972 "../src/Services/Database.vala"
					_item_index = _item_index + 1;
#line 972 "../src/Services/Database.vala"
					_tmp8_ = _item_index;
#line 972 "../src/Services/Database.vala"
					_tmp9_ = _item_size;
#line 972 "../src/Services/Database.vala"
					if (!(_tmp8_ < _tmp9_)) {
#line 972 "../src/Services/Database.vala"
						break;
#line 6112 "Database.c"
					}
#line 972 "../src/Services/Database.vala"
					_tmp10_ = _item_list;
#line 972 "../src/Services/Database.vala"
					_tmp11_ = gee_abstract_list_get ((GeeAbstractList*) _tmp10_, _item_index);
#line 972 "../src/Services/Database.vala"
					item = (ObjectsItem*) _tmp11_;
#line 973 "../src/Services/Database.vala"
					_tmp13_ = item;
#line 973 "../src/Services/Database.vala"
					_tmp14_ = objects_item_get_labels (_tmp13_);
#line 973 "../src/Services/Database.vala"
					_tmp15_ = _tmp14_;
#line 973 "../src/Services/Database.vala"
					_tmp16_ = objects_base_object_get_id_string ((ObjectsBaseObject*) label);
#line 973 "../src/Services/Database.vala"
					_tmp17_ = _tmp16_;
#line 973 "../src/Services/Database.vala"
					if (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp15_, _tmp17_)) {
#line 6132 "Database.c"
						ObjectsItem* _tmp18_;
						gboolean _tmp19_;
						gboolean _tmp20_;
#line 973 "../src/Services/Database.vala"
						_tmp18_ = item;
#line 973 "../src/Services/Database.vala"
						_tmp19_ = objects_item_get_checked (_tmp18_);
#line 973 "../src/Services/Database.vala"
						_tmp20_ = _tmp19_;
#line 973 "../src/Services/Database.vala"
						_tmp12_ = _tmp20_ == checked;
#line 6144 "Database.c"
					} else {
#line 973 "../src/Services/Database.vala"
						_tmp12_ = FALSE;
#line 6148 "Database.c"
					}
#line 973 "../src/Services/Database.vala"
					if (_tmp12_) {
#line 6152 "Database.c"
						GeeArrayList* _tmp21_;
						ObjectsItem* _tmp22_;
#line 974 "../src/Services/Database.vala"
						_tmp21_ = return_value;
#line 974 "../src/Services/Database.vala"
						_tmp22_ = item;
#line 974 "../src/Services/Database.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp21_, _tmp22_);
#line 6161 "Database.c"
					}
#line 972 "../src/Services/Database.vala"
					_g_object_unref0 (item);
#line 6165 "Database.c"
				}
#line 972 "../src/Services/Database.vala"
				_g_object_unref0 (_item_list);
#line 6169 "Database.c"
			}
#line 978 "../src/Services/Database.vala"
			_tmp23_ = return_value;
#line 978 "../src/Services/Database.vala"
			_tmp24_ = _g_object_ref0 (_tmp23_);
#line 978 "../src/Services/Database.vala"
			result = _tmp24_;
#line 6177 "Database.c"
			{
				GeeArrayList* _tmp25_;
#line 971 "../src/Services/Database.vala"
				_tmp25_ = self->priv->_items;
#line 971 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__items);
#line 6184 "Database.c"
			}
#line 978 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 978 "../src/Services/Database.vala"
			return result;
#line 6190 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp26_;
#line 971 "../src/Services/Database.vala"
			_tmp26_ = self->priv->_items;
#line 971 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 6199 "Database.c"
		}
#line 971 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 971 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 971 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 971 "../src/Services/Database.vala"
		return NULL;
#line 6209 "Database.c"
	}
#line 969 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 6213 "Database.c"
}

GeeArrayList*
services_database_get_items_by_scheduled (ServicesDatabase* self,
                                          gboolean checked)
{
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp0_;
	GError* _inner_error0_ = NULL;
	GeeArrayList* result = NULL;
#line 982 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 983 "../src/Services/Database.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 983 "../src/Services/Database.vala"
	return_value = _tmp0_;
#line 6230 "Database.c"
	{
		GeeArrayList* _tmp1_;
#line 984 "../src/Services/Database.vala"
		_tmp1_ = self->priv->_items;
#line 984 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 6237 "Database.c"
		{
			GeeArrayList* _tmp29_;
			GeeArrayList* _tmp30_;
			{
				GeeArrayList* _item_list = NULL;
				GeeArrayList* _tmp2_;
				GeeArrayList* _tmp3_;
				GeeArrayList* _tmp4_;
				gint _item_size = 0;
				GeeArrayList* _tmp5_;
				gint _tmp6_;
				gint _tmp7_;
				gint _item_index = 0;
#line 985 "../src/Services/Database.vala"
				_tmp2_ = services_database_get_items (self);
#line 985 "../src/Services/Database.vala"
				_tmp3_ = _tmp2_;
#line 985 "../src/Services/Database.vala"
				_tmp4_ = _g_object_ref0 (_tmp3_);
#line 985 "../src/Services/Database.vala"
				_item_list = _tmp4_;
#line 985 "../src/Services/Database.vala"
				_tmp5_ = _item_list;
#line 985 "../src/Services/Database.vala"
				_tmp6_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp5_);
#line 985 "../src/Services/Database.vala"
				_tmp7_ = _tmp6_;
#line 985 "../src/Services/Database.vala"
				_item_size = _tmp7_;
#line 985 "../src/Services/Database.vala"
				_item_index = -1;
#line 985 "../src/Services/Database.vala"
				while (TRUE) {
#line 6271 "Database.c"
					gint _tmp8_;
					gint _tmp9_;
					ObjectsItem* item = NULL;
					GeeArrayList* _tmp10_;
					gpointer _tmp11_;
					gboolean _tmp12_ = FALSE;
					gboolean _tmp13_ = FALSE;
					ObjectsItem* _tmp14_;
					gboolean _tmp15_;
					gboolean _tmp16_;
#line 985 "../src/Services/Database.vala"
					_item_index = _item_index + 1;
#line 985 "../src/Services/Database.vala"
					_tmp8_ = _item_index;
#line 985 "../src/Services/Database.vala"
					_tmp9_ = _item_size;
#line 985 "../src/Services/Database.vala"
					if (!(_tmp8_ < _tmp9_)) {
#line 985 "../src/Services/Database.vala"
						break;
#line 6292 "Database.c"
					}
#line 985 "../src/Services/Database.vala"
					_tmp10_ = _item_list;
#line 985 "../src/Services/Database.vala"
					_tmp11_ = gee_abstract_list_get ((GeeAbstractList*) _tmp10_, _item_index);
#line 985 "../src/Services/Database.vala"
					item = (ObjectsItem*) _tmp11_;
#line 986 "../src/Services/Database.vala"
					_tmp14_ = item;
#line 986 "../src/Services/Database.vala"
					_tmp15_ = objects_item_get_has_due (_tmp14_);
#line 986 "../src/Services/Database.vala"
					_tmp16_ = _tmp15_;
#line 986 "../src/Services/Database.vala"
					if (_tmp16_) {
#line 6308 "Database.c"
						ObjectsItem* _tmp17_;
						gboolean _tmp18_;
						gboolean _tmp19_;
#line 987 "../src/Services/Database.vala"
						_tmp17_ = item;
#line 987 "../src/Services/Database.vala"
						_tmp18_ = objects_item_get_checked (_tmp17_);
#line 987 "../src/Services/Database.vala"
						_tmp19_ = _tmp18_;
#line 987 "../src/Services/Database.vala"
						_tmp13_ = _tmp19_ == checked;
#line 6320 "Database.c"
					} else {
#line 986 "../src/Services/Database.vala"
						_tmp13_ = FALSE;
#line 6324 "Database.c"
					}
#line 986 "../src/Services/Database.vala"
					if (_tmp13_) {
#line 6328 "Database.c"
						ObjectsItem* _tmp20_;
						ObjectsDueDate* _tmp21_;
						ObjectsDueDate* _tmp22_;
						GDateTime* _tmp23_;
						GDateTime* _tmp24_;
						GDateTime* _tmp25_;
						GDateTime* _tmp26_;
#line 988 "../src/Services/Database.vala"
						_tmp20_ = item;
#line 988 "../src/Services/Database.vala"
						_tmp21_ = objects_item_get_due (_tmp20_);
#line 988 "../src/Services/Database.vala"
						_tmp22_ = _tmp21_;
#line 988 "../src/Services/Database.vala"
						_tmp23_ = objects_due_date_get_datetime (_tmp22_);
#line 988 "../src/Services/Database.vala"
						_tmp24_ = _tmp23_;
#line 988 "../src/Services/Database.vala"
						_tmp25_ = g_date_time_new_now_local ();
#line 988 "../src/Services/Database.vala"
						_tmp26_ = _tmp25_;
#line 988 "../src/Services/Database.vala"
						_tmp12_ = g_date_time_compare (_tmp24_, _tmp26_) > 0;
#line 988 "../src/Services/Database.vala"
						_g_date_time_unref0 (_tmp26_);
#line 6354 "Database.c"
					} else {
#line 986 "../src/Services/Database.vala"
						_tmp12_ = FALSE;
#line 6358 "Database.c"
					}
#line 986 "../src/Services/Database.vala"
					if (_tmp12_) {
#line 6362 "Database.c"
						GeeArrayList* _tmp27_;
						ObjectsItem* _tmp28_;
#line 989 "../src/Services/Database.vala"
						_tmp27_ = return_value;
#line 989 "../src/Services/Database.vala"
						_tmp28_ = item;
#line 989 "../src/Services/Database.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp27_, _tmp28_);
#line 6371 "Database.c"
					}
#line 985 "../src/Services/Database.vala"
					_g_object_unref0 (item);
#line 6375 "Database.c"
				}
#line 985 "../src/Services/Database.vala"
				_g_object_unref0 (_item_list);
#line 6379 "Database.c"
			}
#line 993 "../src/Services/Database.vala"
			_tmp29_ = return_value;
#line 993 "../src/Services/Database.vala"
			_tmp30_ = _g_object_ref0 (_tmp29_);
#line 993 "../src/Services/Database.vala"
			result = _tmp30_;
#line 6387 "Database.c"
			{
				GeeArrayList* _tmp31_;
#line 984 "../src/Services/Database.vala"
				_tmp31_ = self->priv->_items;
#line 984 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__items);
#line 6394 "Database.c"
			}
#line 993 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 993 "../src/Services/Database.vala"
			return result;
#line 6400 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp32_;
#line 984 "../src/Services/Database.vala"
			_tmp32_ = self->priv->_items;
#line 984 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 6409 "Database.c"
		}
#line 984 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 984 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 984 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 984 "../src/Services/Database.vala"
		return NULL;
#line 6419 "Database.c"
	}
#line 982 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 6423 "Database.c"
}

gboolean
services_database_valid_item_by_date (ServicesDatabase* self,
                                      ObjectsItem* item,
                                      GDateTime* date,
                                      gboolean checked)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp2_;
	gboolean _tmp3_;
	gboolean result = FALSE;
#line 998 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 998 "../src/Services/Database.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 998 "../src/Services/Database.vala"
	g_return_val_if_fail (date != NULL, FALSE);
#line 999 "../src/Services/Database.vala"
	_tmp2_ = objects_item_get_has_due (item);
#line 999 "../src/Services/Database.vala"
	_tmp3_ = _tmp2_;
#line 999 "../src/Services/Database.vala"
	if (_tmp3_) {
#line 6449 "Database.c"
		gboolean _tmp4_;
		gboolean _tmp5_;
#line 1000 "../src/Services/Database.vala"
		_tmp4_ = objects_item_get_checked (item);
#line 1000 "../src/Services/Database.vala"
		_tmp5_ = _tmp4_;
#line 1000 "../src/Services/Database.vala"
		_tmp1_ = _tmp5_ == checked;
#line 6458 "Database.c"
	} else {
#line 999 "../src/Services/Database.vala"
		_tmp1_ = FALSE;
#line 6462 "Database.c"
	}
#line 999 "../src/Services/Database.vala"
	if (_tmp1_) {
#line 6466 "Database.c"
		ObjectsDueDate* _tmp6_;
		ObjectsDueDate* _tmp7_;
		GDateTime* _tmp8_;
		GDateTime* _tmp9_;
#line 1001 "../src/Services/Database.vala"
		_tmp6_ = objects_item_get_due (item);
#line 1001 "../src/Services/Database.vala"
		_tmp7_ = _tmp6_;
#line 1001 "../src/Services/Database.vala"
		_tmp8_ = objects_due_date_get_datetime (_tmp7_);
#line 1001 "../src/Services/Database.vala"
		_tmp9_ = _tmp8_;
#line 1001 "../src/Services/Database.vala"
		_tmp0_ = granite_date_time_is_same_day (_tmp9_, date);
#line 6481 "Database.c"
	} else {
#line 999 "../src/Services/Database.vala"
		_tmp0_ = FALSE;
#line 6485 "Database.c"
	}
#line 999 "../src/Services/Database.vala"
	result = _tmp0_;
#line 999 "../src/Services/Database.vala"
	return result;
#line 6491 "Database.c"
}

GeeArrayList*
services_database_get_items_by_overdeue_view (ServicesDatabase* self,
                                              gboolean checked)
{
	GDateTime* date_now = NULL;
	GDateTime* _tmp0_;
	GeeArrayList* return_value = NULL;
	GeeArrayList* _tmp1_;
	GError* _inner_error0_ = NULL;
	GeeArrayList* result = NULL;
#line 1004 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1005 "../src/Services/Database.vala"
	_tmp0_ = g_date_time_new_now_local ();
#line 1005 "../src/Services/Database.vala"
	date_now = _tmp0_;
#line 1006 "../src/Services/Database.vala"
	_tmp1_ = gee_array_list_new (OBJECTS_TYPE_ITEM, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 1006 "../src/Services/Database.vala"
	return_value = _tmp1_;
#line 6514 "Database.c"
	{
		GeeArrayList* _tmp2_;
#line 1007 "../src/Services/Database.vala"
		_tmp2_ = self->priv->_items;
#line 1007 "../src/Services/Database.vala"
		g_rec_mutex_lock (&self->priv->__lock__items);
#line 6521 "Database.c"
		{
			GeeArrayList* _tmp36_;
			GeeArrayList* _tmp37_;
			{
				GeeArrayList* _item_list = NULL;
				GeeArrayList* _tmp3_;
				GeeArrayList* _tmp4_;
				GeeArrayList* _tmp5_;
				gint _item_size = 0;
				GeeArrayList* _tmp6_;
				gint _tmp7_;
				gint _tmp8_;
				gint _item_index = 0;
#line 1008 "../src/Services/Database.vala"
				_tmp3_ = services_database_get_items (self);
#line 1008 "../src/Services/Database.vala"
				_tmp4_ = _tmp3_;
#line 1008 "../src/Services/Database.vala"
				_tmp5_ = _g_object_ref0 (_tmp4_);
#line 1008 "../src/Services/Database.vala"
				_item_list = _tmp5_;
#line 1008 "../src/Services/Database.vala"
				_tmp6_ = _item_list;
#line 1008 "../src/Services/Database.vala"
				_tmp7_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp6_);
#line 1008 "../src/Services/Database.vala"
				_tmp8_ = _tmp7_;
#line 1008 "../src/Services/Database.vala"
				_item_size = _tmp8_;
#line 1008 "../src/Services/Database.vala"
				_item_index = -1;
#line 1008 "../src/Services/Database.vala"
				while (TRUE) {
#line 6555 "Database.c"
					gint _tmp9_;
					gint _tmp10_;
					ObjectsItem* item = NULL;
					GeeArrayList* _tmp11_;
					gpointer _tmp12_;
					gboolean _tmp13_ = FALSE;
					gboolean _tmp14_ = FALSE;
					gboolean _tmp15_ = FALSE;
					ObjectsItem* _tmp16_;
					gboolean _tmp17_;
					gboolean _tmp18_;
#line 1008 "../src/Services/Database.vala"
					_item_index = _item_index + 1;
#line 1008 "../src/Services/Database.vala"
					_tmp9_ = _item_index;
#line 1008 "../src/Services/Database.vala"
					_tmp10_ = _item_size;
#line 1008 "../src/Services/Database.vala"
					if (!(_tmp9_ < _tmp10_)) {
#line 1008 "../src/Services/Database.vala"
						break;
#line 6577 "Database.c"
					}
#line 1008 "../src/Services/Database.vala"
					_tmp11_ = _item_list;
#line 1008 "../src/Services/Database.vala"
					_tmp12_ = gee_abstract_list_get ((GeeAbstractList*) _tmp11_, _item_index);
#line 1008 "../src/Services/Database.vala"
					item = (ObjectsItem*) _tmp12_;
#line 1009 "../src/Services/Database.vala"
					_tmp16_ = item;
#line 1009 "../src/Services/Database.vala"
					_tmp17_ = objects_item_get_has_due (_tmp16_);
#line 1009 "../src/Services/Database.vala"
					_tmp18_ = _tmp17_;
#line 1009 "../src/Services/Database.vala"
					if (_tmp18_) {
#line 6593 "Database.c"
						ObjectsItem* _tmp19_;
						gboolean _tmp20_;
						gboolean _tmp21_;
#line 1010 "../src/Services/Database.vala"
						_tmp19_ = item;
#line 1010 "../src/Services/Database.vala"
						_tmp20_ = objects_item_get_checked (_tmp19_);
#line 1010 "../src/Services/Database.vala"
						_tmp21_ = _tmp20_;
#line 1010 "../src/Services/Database.vala"
						_tmp15_ = _tmp21_ == checked;
#line 6605 "Database.c"
					} else {
#line 1009 "../src/Services/Database.vala"
						_tmp15_ = FALSE;
#line 6609 "Database.c"
					}
#line 1009 "../src/Services/Database.vala"
					if (_tmp15_) {
#line 6613 "Database.c"
						ObjectsItem* _tmp22_;
						ObjectsDueDate* _tmp23_;
						ObjectsDueDate* _tmp24_;
						GDateTime* _tmp25_;
						GDateTime* _tmp26_;
						GDateTime* _tmp27_;
#line 1011 "../src/Services/Database.vala"
						_tmp22_ = item;
#line 1011 "../src/Services/Database.vala"
						_tmp23_ = objects_item_get_due (_tmp22_);
#line 1011 "../src/Services/Database.vala"
						_tmp24_ = _tmp23_;
#line 1011 "../src/Services/Database.vala"
						_tmp25_ = objects_due_date_get_datetime (_tmp24_);
#line 1011 "../src/Services/Database.vala"
						_tmp26_ = _tmp25_;
#line 1011 "../src/Services/Database.vala"
						_tmp27_ = date_now;
#line 1011 "../src/Services/Database.vala"
						_tmp14_ = g_date_time_compare (_tmp26_, _tmp27_) < 0;
#line 6634 "Database.c"
					} else {
#line 1009 "../src/Services/Database.vala"
						_tmp14_ = FALSE;
#line 6638 "Database.c"
					}
#line 1009 "../src/Services/Database.vala"
					if (_tmp14_) {
#line 6642 "Database.c"
						ObjectsItem* _tmp28_;
						ObjectsDueDate* _tmp29_;
						ObjectsDueDate* _tmp30_;
						GDateTime* _tmp31_;
						GDateTime* _tmp32_;
						GDateTime* _tmp33_;
#line 1012 "../src/Services/Database.vala"
						_tmp28_ = item;
#line 1012 "../src/Services/Database.vala"
						_tmp29_ = objects_item_get_due (_tmp28_);
#line 1012 "../src/Services/Database.vala"
						_tmp30_ = _tmp29_;
#line 1012 "../src/Services/Database.vala"
						_tmp31_ = objects_due_date_get_datetime (_tmp30_);
#line 1012 "../src/Services/Database.vala"
						_tmp32_ = _tmp31_;
#line 1012 "../src/Services/Database.vala"
						_tmp33_ = date_now;
#line 1012 "../src/Services/Database.vala"
						_tmp13_ = !granite_date_time_is_same_day (_tmp32_, _tmp33_);
#line 6663 "Database.c"
					} else {
#line 1009 "../src/Services/Database.vala"
						_tmp13_ = FALSE;
#line 6667 "Database.c"
					}
#line 1009 "../src/Services/Database.vala"
					if (_tmp13_) {
#line 6671 "Database.c"
						GeeArrayList* _tmp34_;
						ObjectsItem* _tmp35_;
#line 1013 "../src/Services/Database.vala"
						_tmp34_ = return_value;
#line 1013 "../src/Services/Database.vala"
						_tmp35_ = item;
#line 1013 "../src/Services/Database.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp34_, _tmp35_);
#line 6680 "Database.c"
					}
#line 1008 "../src/Services/Database.vala"
					_g_object_unref0 (item);
#line 6684 "Database.c"
				}
#line 1008 "../src/Services/Database.vala"
				_g_object_unref0 (_item_list);
#line 6688 "Database.c"
			}
#line 1017 "../src/Services/Database.vala"
			_tmp36_ = return_value;
#line 1017 "../src/Services/Database.vala"
			_tmp37_ = _g_object_ref0 (_tmp36_);
#line 1017 "../src/Services/Database.vala"
			result = _tmp37_;
#line 6696 "Database.c"
			{
				GeeArrayList* _tmp38_;
#line 1007 "../src/Services/Database.vala"
				_tmp38_ = self->priv->_items;
#line 1007 "../src/Services/Database.vala"
				g_rec_mutex_unlock (&self->priv->__lock__items);
#line 6703 "Database.c"
			}
#line 1017 "../src/Services/Database.vala"
			_g_object_unref0 (return_value);
#line 1017 "../src/Services/Database.vala"
			_g_date_time_unref0 (date_now);
#line 1017 "../src/Services/Database.vala"
			return result;
#line 6711 "Database.c"
		}
		__finally0:
		{
			GeeArrayList* _tmp39_;
#line 1007 "../src/Services/Database.vala"
			_tmp39_ = self->priv->_items;
#line 1007 "../src/Services/Database.vala"
			g_rec_mutex_unlock (&self->priv->__lock__items);
#line 6720 "Database.c"
		}
#line 1007 "../src/Services/Database.vala"
		_g_object_unref0 (return_value);
#line 1007 "../src/Services/Database.vala"
		_g_date_time_unref0 (date_now);
#line 1007 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1007 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 1007 "../src/Services/Database.vala"
		return NULL;
#line 6732 "Database.c"
	}
#line 1004 "../src/Services/Database.vala"
	_g_object_unref0 (return_value);
#line 1004 "../src/Services/Database.vala"
	_g_date_time_unref0 (date_now);
#line 6738 "Database.c"
}

gboolean
services_database_valid_item_by_overdue (ServicesDatabase* self,
                                         ObjectsItem* item,
                                         GDateTime* date,
                                         gboolean checked)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_;
	gboolean _tmp4_;
	gboolean result = FALSE;
#line 1021 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1021 "../src/Services/Database.vala"
	g_return_val_if_fail (item != NULL, FALSE);
#line 1021 "../src/Services/Database.vala"
	g_return_val_if_fail (date != NULL, FALSE);
#line 1022 "../src/Services/Database.vala"
	_tmp3_ = objects_item_get_has_due (item);
#line 1022 "../src/Services/Database.vala"
	_tmp4_ = _tmp3_;
#line 1022 "../src/Services/Database.vala"
	if (_tmp4_) {
#line 6765 "Database.c"
		gboolean _tmp5_;
		gboolean _tmp6_;
#line 1023 "../src/Services/Database.vala"
		_tmp5_ = objects_item_get_checked (item);
#line 1023 "../src/Services/Database.vala"
		_tmp6_ = _tmp5_;
#line 1023 "../src/Services/Database.vala"
		_tmp2_ = _tmp6_ == checked;
#line 6774 "Database.c"
	} else {
#line 1022 "../src/Services/Database.vala"
		_tmp2_ = FALSE;
#line 6778 "Database.c"
	}
#line 1022 "../src/Services/Database.vala"
	if (_tmp2_) {
#line 6782 "Database.c"
		ObjectsDueDate* _tmp7_;
		ObjectsDueDate* _tmp8_;
		GDateTime* _tmp9_;
		GDateTime* _tmp10_;
		GDateTime* _tmp11_;
		GDateTime* _tmp12_;
#line 1024 "../src/Services/Database.vala"
		_tmp7_ = objects_item_get_due (item);
#line 1024 "../src/Services/Database.vala"
		_tmp8_ = _tmp7_;
#line 1024 "../src/Services/Database.vala"
		_tmp9_ = objects_due_date_get_datetime (_tmp8_);
#line 1024 "../src/Services/Database.vala"
		_tmp10_ = _tmp9_;
#line 1024 "../src/Services/Database.vala"
		_tmp11_ = g_date_time_new_now_local ();
#line 1024 "../src/Services/Database.vala"
		_tmp12_ = _tmp11_;
#line 1024 "../src/Services/Database.vala"
		_tmp1_ = g_date_time_compare (_tmp10_, _tmp12_) < 0;
#line 1024 "../src/Services/Database.vala"
		_g_date_time_unref0 (_tmp12_);
#line 6805 "Database.c"
	} else {
#line 1022 "../src/Services/Database.vala"
		_tmp1_ = FALSE;
#line 6809 "Database.c"
	}
#line 1022 "../src/Services/Database.vala"
	if (_tmp1_) {
#line 6813 "Database.c"
		ObjectsDueDate* _tmp13_;
		ObjectsDueDate* _tmp14_;
		GDateTime* _tmp15_;
		GDateTime* _tmp16_;
		GDateTime* _tmp17_;
		GDateTime* _tmp18_;
#line 1025 "../src/Services/Database.vala"
		_tmp13_ = objects_item_get_due (item);
#line 1025 "../src/Services/Database.vala"
		_tmp14_ = _tmp13_;
#line 1025 "../src/Services/Database.vala"
		_tmp15_ = objects_due_date_get_datetime (_tmp14_);
#line 1025 "../src/Services/Database.vala"
		_tmp16_ = _tmp15_;
#line 1025 "../src/Services/Database.vala"
		_tmp17_ = g_date_time_new_now_local ();
#line 1025 "../src/Services/Database.vala"
		_tmp18_ = _tmp17_;
#line 1025 "../src/Services/Database.vala"
		_tmp0_ = !granite_date_time_is_same_day (_tmp16_, _tmp18_);
#line 1025 "../src/Services/Database.vala"
		_g_date_time_unref0 (_tmp18_);
#line 6836 "Database.c"
	} else {
#line 1022 "../src/Services/Database.vala"
		_tmp0_ = FALSE;
#line 6840 "Database.c"
	}
#line 1022 "../src/Services/Database.vala"
	result = _tmp0_;
#line 1022 "../src/Services/Database.vala"
	return result;
#line 6846 "Database.c"
}

void
services_database_delete_item (ServicesDatabase* self,
                               ObjectsItem* item)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint64 _tmp8_;
	gint64 _tmp9_;
	sqlite3_stmt* _tmp10_;
	sqlite3_stmt* _tmp14_;
#line 1028 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1028 "../src/Services/Database.vala"
	g_return_if_fail (item != NULL);
#line 1031 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n            DELETE FROM Items WHERE id=$id;\n        ");
#line 1031 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 1031 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 1035 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 1035 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 1035 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 1035 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 1035 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 1035 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 1035 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 1035 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 1036 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 1036 "../src/Services/Database.vala"
	_tmp8_ = objects_base_object_get_id ((ObjectsBaseObject*) item);
#line 1036 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 1036 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp7_, "$id", _tmp9_);
#line 1038 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 1038 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp10_) == SQLITE_DONE) {
#line 1039 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) item, "deleted");
#line 6906 "Database.c"
	} else {
		sqlite3* _tmp11_;
		sqlite3* _tmp12_;
		const gchar* _tmp13_;
#line 1041 "../src/Services/Database.vala"
		_tmp11_ = self->priv->db;
#line 1041 "../src/Services/Database.vala"
		_tmp12_ = self->priv->db;
#line 1041 "../src/Services/Database.vala"
		_tmp13_ = sqlite3_errmsg (_tmp12_);
#line 1041 "../src/Services/Database.vala"
		g_warning ("Database.vala:1041: Error: %d: %s", sqlite3_errcode (_tmp11_), _tmp13_);
#line 6919 "Database.c"
	}
#line 1043 "../src/Services/Database.vala"
	_tmp14_ = stmt;
#line 1043 "../src/Services/Database.vala"
	sqlite3_reset (_tmp14_);
#line 1028 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 6927 "Database.c"
}

void
services_database_update_item (ServicesDatabase* self,
                               ObjectsItem* item,
                               gint64 update_id)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	sqlite3_stmt* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	sqlite3_stmt* _tmp13_;
	ObjectsDueDate* _tmp14_;
	ObjectsDueDate* _tmp15_;
	gchar* _tmp16_;
	gchar* _tmp17_;
	sqlite3_stmt* _tmp18_;
	const gchar* _tmp19_;
	const gchar* _tmp20_;
	sqlite3_stmt* _tmp21_;
	const gchar* _tmp22_;
	const gchar* _tmp23_;
	sqlite3_stmt* _tmp24_;
	const gchar* _tmp25_;
	const gchar* _tmp26_;
	sqlite3_stmt* _tmp27_;
	gint64 _tmp28_;
	gint64 _tmp29_;
	sqlite3_stmt* _tmp30_;
	gint64 _tmp31_;
	gint64 _tmp32_;
	sqlite3_stmt* _tmp33_;
	gint64 _tmp34_;
	gint64 _tmp35_;
	sqlite3_stmt* _tmp36_;
	gint _tmp37_;
	gint _tmp38_;
	sqlite3_stmt* _tmp39_;
	gint _tmp40_;
	gint _tmp41_;
	sqlite3_stmt* _tmp42_;
	gboolean _tmp43_;
	gboolean _tmp44_;
	sqlite3_stmt* _tmp45_;
	gboolean _tmp46_;
	gboolean _tmp47_;
	sqlite3_stmt* _tmp48_;
	gint _tmp49_;
	gint _tmp50_;
	sqlite3_stmt* _tmp51_;
	gboolean _tmp52_;
	gboolean _tmp53_;
	sqlite3_stmt* _tmp54_;
	gboolean _tmp55_;
	gboolean _tmp56_;
	sqlite3_stmt* _tmp57_;
	gint64 _tmp58_;
	gint64 _tmp59_;
	sqlite3_stmt* _tmp60_;
	sqlite3_stmt* _tmp64_;
#line 1046 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1046 "../src/Services/Database.vala"
	g_return_if_fail (item != NULL);
#line 1049 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            UPDATE Items SET content=$content, description=$descriptio" \
"n, due=$due,\n" \
"                added_at=$added_at, completed_at=$completed_at, update" \
"d_at=$updated_at,\n" \
"                section_id=$section_id, project_id=$project_id, parent" \
"_id=$parent_id,\n" \
"                priority=$priority, child_order=$child_order, checked=" \
"$checked,\n" \
"                is_deleted=$is_deleted, day_order=$day_order, collapse" \
"d=$collapsed,\n" \
"                pinned=$pinned\n" \
"            WHERE id=$id;\n" \
"        ");
#line 1049 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 1049 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 1059 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 1059 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 1059 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 1059 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 1059 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 1059 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 1059 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 1059 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 1060 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 1060 "../src/Services/Database.vala"
	_tmp8_ = objects_item_get_content (item);
#line 1060 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 1060 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp7_, "$content", _tmp9_);
#line 1061 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 1061 "../src/Services/Database.vala"
	_tmp11_ = objects_item_get_description (item);
#line 1061 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 1061 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp10_, "$description", _tmp12_);
#line 1062 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 1062 "../src/Services/Database.vala"
	_tmp14_ = objects_item_get_due (item);
#line 1062 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 1062 "../src/Services/Database.vala"
	_tmp16_ = objects_due_date_to_string (_tmp15_);
#line 1062 "../src/Services/Database.vala"
	_tmp17_ = _tmp16_;
#line 1062 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp13_, "$due", _tmp17_);
#line 1062 "../src/Services/Database.vala"
	_g_free0 (_tmp17_);
#line 1063 "../src/Services/Database.vala"
	_tmp18_ = stmt;
#line 1063 "../src/Services/Database.vala"
	_tmp19_ = objects_item_get_added_at (item);
#line 1063 "../src/Services/Database.vala"
	_tmp20_ = _tmp19_;
#line 1063 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp18_, "$added_at", _tmp20_);
#line 1064 "../src/Services/Database.vala"
	_tmp21_ = stmt;
#line 1064 "../src/Services/Database.vala"
	_tmp22_ = objects_item_get_completed_at (item);
#line 1064 "../src/Services/Database.vala"
	_tmp23_ = _tmp22_;
#line 1064 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp21_, "$completed_at", _tmp23_);
#line 1065 "../src/Services/Database.vala"
	_tmp24_ = stmt;
#line 1065 "../src/Services/Database.vala"
	_tmp25_ = objects_item_get_updated_at (item);
#line 1065 "../src/Services/Database.vala"
	_tmp26_ = _tmp25_;
#line 1065 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp24_, "$updated_at", _tmp26_);
#line 1066 "../src/Services/Database.vala"
	_tmp27_ = stmt;
#line 1066 "../src/Services/Database.vala"
	_tmp28_ = objects_item_get_section_id (item);
#line 1066 "../src/Services/Database.vala"
	_tmp29_ = _tmp28_;
#line 1066 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp27_, "$section_id", _tmp29_);
#line 1067 "../src/Services/Database.vala"
	_tmp30_ = stmt;
#line 1067 "../src/Services/Database.vala"
	_tmp31_ = objects_item_get_project_id (item);
#line 1067 "../src/Services/Database.vala"
	_tmp32_ = _tmp31_;
#line 1067 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp30_, "$project_id", _tmp32_);
#line 1068 "../src/Services/Database.vala"
	_tmp33_ = stmt;
#line 1068 "../src/Services/Database.vala"
	_tmp34_ = objects_item_get_parent_id (item);
#line 1068 "../src/Services/Database.vala"
	_tmp35_ = _tmp34_;
#line 1068 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp33_, "$parent_id", _tmp35_);
#line 1069 "../src/Services/Database.vala"
	_tmp36_ = stmt;
#line 1069 "../src/Services/Database.vala"
	_tmp37_ = objects_item_get_priority (item);
#line 1069 "../src/Services/Database.vala"
	_tmp38_ = _tmp37_;
#line 1069 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp36_, "$priority", _tmp38_);
#line 1070 "../src/Services/Database.vala"
	_tmp39_ = stmt;
#line 1070 "../src/Services/Database.vala"
	_tmp40_ = objects_item_get_child_order (item);
#line 1070 "../src/Services/Database.vala"
	_tmp41_ = _tmp40_;
#line 1070 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp39_, "$child_order", _tmp41_);
#line 1071 "../src/Services/Database.vala"
	_tmp42_ = stmt;
#line 1071 "../src/Services/Database.vala"
	_tmp43_ = objects_item_get_checked (item);
#line 1071 "../src/Services/Database.vala"
	_tmp44_ = _tmp43_;
#line 1071 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp42_, "$checked", _tmp44_);
#line 1072 "../src/Services/Database.vala"
	_tmp45_ = stmt;
#line 1072 "../src/Services/Database.vala"
	_tmp46_ = objects_item_get_is_deleted (item);
#line 1072 "../src/Services/Database.vala"
	_tmp47_ = _tmp46_;
#line 1072 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp45_, "$is_deleted", _tmp47_);
#line 1073 "../src/Services/Database.vala"
	_tmp48_ = stmt;
#line 1073 "../src/Services/Database.vala"
	_tmp49_ = objects_item_get_day_order (item);
#line 1073 "../src/Services/Database.vala"
	_tmp50_ = _tmp49_;
#line 1073 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp48_, "$day_order", _tmp50_);
#line 1074 "../src/Services/Database.vala"
	_tmp51_ = stmt;
#line 1074 "../src/Services/Database.vala"
	_tmp52_ = objects_item_get_collapsed (item);
#line 1074 "../src/Services/Database.vala"
	_tmp53_ = _tmp52_;
#line 1074 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp51_, "$collapsed", _tmp53_);
#line 1075 "../src/Services/Database.vala"
	_tmp54_ = stmt;
#line 1075 "../src/Services/Database.vala"
	_tmp55_ = objects_item_get_pinned (item);
#line 1075 "../src/Services/Database.vala"
	_tmp56_ = _tmp55_;
#line 1075 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp54_, "$pinned", _tmp56_);
#line 1076 "../src/Services/Database.vala"
	_tmp57_ = stmt;
#line 1076 "../src/Services/Database.vala"
	_tmp58_ = objects_base_object_get_id ((ObjectsBaseObject*) item);
#line 1076 "../src/Services/Database.vala"
	_tmp59_ = _tmp58_;
#line 1076 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp57_, "$id", _tmp59_);
#line 1078 "../src/Services/Database.vala"
	_tmp60_ = stmt;
#line 1078 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp60_) == SQLITE_DONE) {
#line 1079 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) item, "updated");
#line 1080 "../src/Services/Database.vala"
		g_signal_emit (self, services_database_signals[SERVICES_DATABASE_ITEM_UPDATED_SIGNAL], 0, item, update_id);
#line 7174 "Database.c"
	} else {
		sqlite3* _tmp61_;
		sqlite3* _tmp62_;
		const gchar* _tmp63_;
#line 1082 "../src/Services/Database.vala"
		_tmp61_ = self->priv->db;
#line 1082 "../src/Services/Database.vala"
		_tmp62_ = self->priv->db;
#line 1082 "../src/Services/Database.vala"
		_tmp63_ = sqlite3_errmsg (_tmp62_);
#line 1082 "../src/Services/Database.vala"
		g_warning ("Database.vala:1082: Error: %d: %s", sqlite3_errcode (_tmp61_), _tmp63_);
#line 7187 "Database.c"
	}
#line 1084 "../src/Services/Database.vala"
	_tmp64_ = stmt;
#line 1084 "../src/Services/Database.vala"
	sqlite3_reset (_tmp64_);
#line 1046 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 7195 "Database.c"
}

static void
____lambda22_ (ServicesDatabase* self,
               GObject* obj,
               GAsyncResult* res)
{
	ServicesTodoist* _tmp0_;
#line 1108 "../src/Services/Database.vala"
	g_return_if_fail (res != NULL);
#line 1109 "../src/Services/Database.vala"
	_tmp0_ = planner_todoist;
#line 1109 "../src/Services/Database.vala"
	services_todoist_complete_item_finish (_tmp0_, res);
#line 7210 "Database.c"
}

static void
_____lambda22__gasync_ready_callback (GObject* source_object,
                                      GAsyncResult* res,
                                      gpointer self)
{
#line 1108 "../src/Services/Database.vala"
	____lambda22_ ((ServicesDatabase*) self, source_object, res);
#line 1108 "../src/Services/Database.vala"
	g_object_unref (self);
#line 7222 "Database.c"
}

void
services_database_checked_toggled (ServicesDatabase* self,
                                   ObjectsItem* item,
                                   gboolean old_checked)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gboolean _tmp8_;
	gboolean _tmp9_;
	sqlite3_stmt* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	sqlite3_stmt* _tmp13_;
	gint64 _tmp14_;
	gint64 _tmp15_;
	sqlite3_stmt* _tmp16_;
	gint64 _tmp17_;
	gint64 _tmp18_;
	sqlite3_stmt* _tmp19_;
	sqlite3_stmt* _tmp29_;
#line 1087 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1087 "../src/Services/Database.vala"
	g_return_if_fail (item != NULL);
#line 1090 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            UPDATE Items SET checked=$checked, completed_at=$completed" \
"_at\n" \
"            WHERE id=$id OR parent_id=$parent_id;\n" \
"        ");
#line 1090 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 1090 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 1095 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 1095 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 1095 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 1095 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 1095 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 1095 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 1095 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 1095 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 1096 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 1096 "../src/Services/Database.vala"
	_tmp8_ = objects_item_get_checked (item);
#line 1096 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 1096 "../src/Services/Database.vala"
	services_database_set_parameter_bool (self, _tmp7_, "$checked", _tmp9_);
#line 1097 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 1097 "../src/Services/Database.vala"
	_tmp11_ = objects_item_get_completed_at (item);
#line 1097 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 1097 "../src/Services/Database.vala"
	services_database_set_parameter_str (self, _tmp10_, "$completed_at", _tmp12_);
#line 1098 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 1098 "../src/Services/Database.vala"
	_tmp14_ = objects_base_object_get_id ((ObjectsBaseObject*) item);
#line 1098 "../src/Services/Database.vala"
	_tmp15_ = _tmp14_;
#line 1098 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp13_, "$id", _tmp15_);
#line 1099 "../src/Services/Database.vala"
	_tmp16_ = stmt;
#line 1099 "../src/Services/Database.vala"
	_tmp17_ = objects_base_object_get_id ((ObjectsBaseObject*) item);
#line 1099 "../src/Services/Database.vala"
	_tmp18_ = _tmp17_;
#line 1099 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp16_, "$parent_id", _tmp18_);
#line 1101 "../src/Services/Database.vala"
	_tmp19_ = stmt;
#line 1101 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp19_) != SQLITE_DONE) {
#line 7314 "Database.c"
		sqlite3* _tmp20_;
		sqlite3* _tmp21_;
		const gchar* _tmp22_;
#line 1102 "../src/Services/Database.vala"
		_tmp20_ = self->priv->db;
#line 1102 "../src/Services/Database.vala"
		_tmp21_ = self->priv->db;
#line 1102 "../src/Services/Database.vala"
		_tmp22_ = sqlite3_errmsg (_tmp21_);
#line 1102 "../src/Services/Database.vala"
		g_warning ("Database.vala:1102: Error: %d: %s", sqlite3_errcode (_tmp20_), _tmp22_);
#line 7326 "Database.c"
	} else {
		ServicesEventBus* _tmp23_;
		ObjectsProject* _tmp24_;
		ObjectsProject* _tmp25_;
		gboolean _tmp26_;
		gboolean _tmp27_;
#line 1104 "../src/Services/Database.vala"
		g_signal_emit_by_name ((ObjectsBaseObject*) item, "updated");
#line 1105 "../src/Services/Database.vala"
		g_signal_emit (self, services_database_signals[SERVICES_DATABASE_ITEM_UPDATED_SIGNAL], 0, item, (gint64) CONSTANTS_INACTIVE);
#line 1106 "../src/Services/Database.vala"
		_tmp23_ = planner_event_bus;
#line 1106 "../src/Services/Database.vala"
		g_signal_emit_by_name (_tmp23_, "checked-toggled", item, old_checked);
#line 1107 "../src/Services/Database.vala"
		_tmp24_ = objects_item_get_project (item);
#line 1107 "../src/Services/Database.vala"
		_tmp25_ = _tmp24_;
#line 1107 "../src/Services/Database.vala"
		_tmp26_ = objects_project_get_todoist (_tmp25_);
#line 1107 "../src/Services/Database.vala"
		_tmp27_ = _tmp26_;
#line 1107 "../src/Services/Database.vala"
		if (_tmp27_) {
#line 7351 "Database.c"
			ServicesTodoist* _tmp28_;
#line 1108 "../src/Services/Database.vala"
			_tmp28_ = planner_todoist;
#line 1108 "../src/Services/Database.vala"
			services_todoist_complete_item (_tmp28_, item, _____lambda22__gasync_ready_callback, g_object_ref (self));
#line 7357 "Database.c"
		}
	}
#line 1114 "../src/Services/Database.vala"
	_tmp29_ = stmt;
#line 1114 "../src/Services/Database.vala"
	sqlite3_reset (_tmp29_);
#line 1087 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 7366 "Database.c"
}

void
services_database_update_item_position (ServicesDatabase* self,
                                        ObjectsItem* item)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gint _tmp8_;
	gint _tmp9_;
	sqlite3_stmt* _tmp10_;
	gint64 _tmp11_;
	gint64 _tmp12_;
	sqlite3_stmt* _tmp13_;
	sqlite3_stmt* _tmp17_;
#line 1117 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1117 "../src/Services/Database.vala"
	g_return_if_fail (item != NULL);
#line 1120 "../src/Services/Database.vala"
	_tmp0_ = g_strdup ("\n" \
"            UPDATE Items SET child_order=$child_order WHERE id=$id;\n" \
"        ");
#line 1120 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 1120 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 1124 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 1124 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 1124 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 1124 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 1124 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 1124 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 1124 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 1124 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 1125 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 1125 "../src/Services/Database.vala"
	_tmp8_ = objects_item_get_child_order (item);
#line 1125 "../src/Services/Database.vala"
	_tmp9_ = _tmp8_;
#line 1125 "../src/Services/Database.vala"
	services_database_set_parameter_int (self, _tmp7_, "$child_order", _tmp9_);
#line 1126 "../src/Services/Database.vala"
	_tmp10_ = stmt;
#line 1126 "../src/Services/Database.vala"
	_tmp11_ = objects_base_object_get_id ((ObjectsBaseObject*) item);
#line 1126 "../src/Services/Database.vala"
	_tmp12_ = _tmp11_;
#line 1126 "../src/Services/Database.vala"
	services_database_set_parameter_int64 (self, _tmp10_, "$id", _tmp12_);
#line 1128 "../src/Services/Database.vala"
	_tmp13_ = stmt;
#line 1128 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp13_) != SQLITE_DONE) {
#line 7435 "Database.c"
		sqlite3* _tmp14_;
		sqlite3* _tmp15_;
		const gchar* _tmp16_;
#line 1129 "../src/Services/Database.vala"
		_tmp14_ = self->priv->db;
#line 1129 "../src/Services/Database.vala"
		_tmp15_ = self->priv->db;
#line 1129 "../src/Services/Database.vala"
		_tmp16_ = sqlite3_errmsg (_tmp15_);
#line 1129 "../src/Services/Database.vala"
		g_warning ("Database.vala:1129: Error: %d: %s", sqlite3_errcode (_tmp14_), _tmp16_);
#line 7447 "Database.c"
	}
#line 1132 "../src/Services/Database.vala"
	_tmp17_ = stmt;
#line 1132 "../src/Services/Database.vala"
	sqlite3_reset (_tmp17_);
#line 1117 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 7455 "Database.c"
}

static void
services_database_set_parameter_int (ServicesDatabase* self,
                                     sqlite3_stmt* stmt,
                                     const gchar* par,
                                     gint val)
{
	gint par_position = 0;
#line 1136 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1136 "../src/Services/Database.vala"
	g_return_if_fail (par != NULL);
#line 1137 "../src/Services/Database.vala"
	par_position = sqlite3_bind_parameter_index (stmt, par);
#line 1138 "../src/Services/Database.vala"
	sqlite3_bind_int (stmt, par_position, val);
#line 7473 "Database.c"
}

static void
services_database_set_parameter_int64 (ServicesDatabase* self,
                                       sqlite3_stmt* stmt,
                                       const gchar* par,
                                       gint64 val)
{
	gint par_position = 0;
#line 1141 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1141 "../src/Services/Database.vala"
	g_return_if_fail (par != NULL);
#line 1142 "../src/Services/Database.vala"
	par_position = sqlite3_bind_parameter_index (stmt, par);
#line 1143 "../src/Services/Database.vala"
	sqlite3_bind_int64 (stmt, par_position, val);
#line 7491 "Database.c"
}

static void
services_database_set_parameter_str (ServicesDatabase* self,
                                     sqlite3_stmt* stmt,
                                     const gchar* par,
                                     const gchar* val)
{
	gint par_position = 0;
	gchar* _tmp0_;
	GDestroyNotify _tmp1_;
#line 1145 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1145 "../src/Services/Database.vala"
	g_return_if_fail (par != NULL);
#line 1145 "../src/Services/Database.vala"
	g_return_if_fail (val != NULL);
#line 1146 "../src/Services/Database.vala"
	par_position = sqlite3_bind_parameter_index (stmt, par);
#line 1147 "../src/Services/Database.vala"
	_tmp0_ = g_strdup (val);
#line 1147 "../src/Services/Database.vala"
	_tmp1_ = g_free;
#line 1147 "../src/Services/Database.vala"
	sqlite3_bind_text (stmt, par_position, _tmp0_, -1, _tmp1_);
#line 7517 "Database.c"
}

static void
services_database_set_parameter_bool (ServicesDatabase* self,
                                      sqlite3_stmt* stmt,
                                      const gchar* par,
                                      gboolean val)
{
	gint par_position = 0;
	gint _tmp0_ = 0;
#line 1150 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1150 "../src/Services/Database.vala"
	g_return_if_fail (par != NULL);
#line 1151 "../src/Services/Database.vala"
	par_position = sqlite3_bind_parameter_index (stmt, par);
#line 1152 "../src/Services/Database.vala"
	if (val) {
#line 1152 "../src/Services/Database.vala"
		_tmp0_ = CONSTANTS_ACTIVE;
#line 7538 "Database.c"
	} else {
#line 1152 "../src/Services/Database.vala"
		_tmp0_ = CONSTANTS_INACTIVE;
#line 7542 "Database.c"
	}
#line 1152 "../src/Services/Database.vala"
	sqlite3_bind_int (stmt, par_position, _tmp0_);
#line 7546 "Database.c"
}

static gboolean
services_database_get_parameter_bool (ServicesDatabase* self,
                                      sqlite3_stmt* stmt,
                                      gint col)
{
	gboolean result = FALSE;
#line 1155 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1155 "../src/Services/Database.vala"
	g_return_val_if_fail (stmt != NULL, FALSE);
#line 1156 "../src/Services/Database.vala"
	result = sqlite3_column_int (stmt, col) == CONSTANTS_ACTIVE;
#line 1156 "../src/Services/Database.vala"
	return result;
#line 7563 "Database.c"
}

static void
services_database_get_due_parameter (ServicesDatabase* self,
                                     ObjectsItem* item,
                                     sqlite3_stmt* stmt,
                                     gint col)
{
	JsonParser* _tmp0_;
	ObjectsDueDate* _tmp6_;
	ObjectsDueDate* _tmp7_;
	JsonParser* _tmp8_;
	JsonNode* _tmp9_;
	JsonObject* _tmp10_;
	GError* _inner_error0_ = NULL;
#line 1160 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1160 "../src/Services/Database.vala"
	g_return_if_fail (item != NULL);
#line 1160 "../src/Services/Database.vala"
	g_return_if_fail (stmt != NULL);
#line 1161 "../src/Services/Database.vala"
	_tmp0_ = self->priv->parser;
#line 1161 "../src/Services/Database.vala"
	if (_tmp0_ == NULL) {
#line 7589 "Database.c"
		JsonParser* _tmp1_;
#line 1162 "../src/Services/Database.vala"
		_tmp1_ = json_parser_new ();
#line 1162 "../src/Services/Database.vala"
		_g_object_unref0 (self->priv->parser);
#line 1162 "../src/Services/Database.vala"
		self->priv->parser = _tmp1_;
#line 7597 "Database.c"
	}
	{
		JsonParser* _tmp2_;
		const gchar* _tmp3_;
#line 1166 "../src/Services/Database.vala"
		_tmp2_ = self->priv->parser;
#line 1166 "../src/Services/Database.vala"
		_tmp3_ = (const gchar*) sqlite3_column_text (stmt, col);
#line 1166 "../src/Services/Database.vala"
		json_parser_load_from_data (_tmp2_, _tmp3_, (gssize) -1, &_inner_error0_);
#line 1166 "../src/Services/Database.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 7610 "Database.c"
			goto __catch0_g_error;
		}
	}
	goto __finally0;
	__catch0_g_error:
	{
		GError* e = NULL;
		GError* _tmp4_;
		const gchar* _tmp5_;
#line 1165 "../src/Services/Database.vala"
		e = _inner_error0_;
#line 1165 "../src/Services/Database.vala"
		_inner_error0_ = NULL;
#line 1168 "../src/Services/Database.vala"
		_tmp4_ = e;
#line 1168 "../src/Services/Database.vala"
		_tmp5_ = _tmp4_->message;
#line 1168 "../src/Services/Database.vala"
		g_debug ("Database.vala:1168: %s", _tmp5_);
#line 1165 "../src/Services/Database.vala"
		_g_error_free0 (e);
#line 7632 "Database.c"
	}
	__finally0:
#line 1165 "../src/Services/Database.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 1165 "../src/Services/Database.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 1165 "../src/Services/Database.vala"
		g_clear_error (&_inner_error0_);
#line 1165 "../src/Services/Database.vala"
		return;
#line 7643 "Database.c"
	}
#line 1171 "../src/Services/Database.vala"
	_tmp6_ = objects_item_get_due (item);
#line 1171 "../src/Services/Database.vala"
	_tmp7_ = _tmp6_;
#line 1171 "../src/Services/Database.vala"
	_tmp8_ = self->priv->parser;
#line 1171 "../src/Services/Database.vala"
	_tmp9_ = json_parser_get_root (_tmp8_);
#line 1171 "../src/Services/Database.vala"
	_tmp10_ = json_node_get_object (_tmp9_);
#line 1171 "../src/Services/Database.vala"
	objects_due_date_update_from_json (_tmp7_, _tmp10_);
#line 7657 "Database.c"
}

gboolean
services_database_column_exists (ServicesDatabase* self,
                                 const gchar* table,
                                 const gchar* column)
{
	sqlite3_stmt* stmt = NULL;
	gboolean returned = FALSE;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	gboolean result = FALSE;
#line 1174 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1174 "../src/Services/Database.vala"
	g_return_val_if_fail (table != NULL, FALSE);
#line 1174 "../src/Services/Database.vala"
	g_return_val_if_fail (column != NULL, FALSE);
#line 1176 "../src/Services/Database.vala"
	returned = FALSE;
#line 1178 "../src/Services/Database.vala"
	_tmp0_ = g_strdup_printf ("\n            SELECT * FROM %s LIMIT 1;\n        ", table);
#line 1178 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 1178 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 1182 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 1182 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 1182 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 1182 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 1182 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 1182 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 1182 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 1182 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 1184 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 1184 "../src/Services/Database.vala"
	sqlite3_step (_tmp7_);
#line 7710 "Database.c"
	{
		gint i = 0;
#line 1186 "../src/Services/Database.vala"
		i = 0;
#line 7715 "Database.c"
		{
			gboolean _tmp8_ = FALSE;
#line 1186 "../src/Services/Database.vala"
			_tmp8_ = TRUE;
#line 1186 "../src/Services/Database.vala"
			while (TRUE) {
#line 7722 "Database.c"
				sqlite3_stmt* _tmp10_;
				sqlite3_stmt* _tmp11_;
				const gchar* _tmp12_;
#line 1186 "../src/Services/Database.vala"
				if (!_tmp8_) {
#line 7728 "Database.c"
					gint _tmp9_;
#line 1186 "../src/Services/Database.vala"
					_tmp9_ = i;
#line 1186 "../src/Services/Database.vala"
					i = _tmp9_ + 1;
#line 7734 "Database.c"
				}
#line 1186 "../src/Services/Database.vala"
				_tmp8_ = FALSE;
#line 1186 "../src/Services/Database.vala"
				_tmp10_ = stmt;
#line 1186 "../src/Services/Database.vala"
				if (!(i < sqlite3_column_count (_tmp10_))) {
#line 1186 "../src/Services/Database.vala"
					break;
#line 7744 "Database.c"
				}
#line 1187 "../src/Services/Database.vala"
				_tmp11_ = stmt;
#line 1187 "../src/Services/Database.vala"
				_tmp12_ = sqlite3_column_name (_tmp11_, i);
#line 1187 "../src/Services/Database.vala"
				if (g_strcmp0 (_tmp12_, column) == 0) {
#line 1188 "../src/Services/Database.vala"
					returned = TRUE;
#line 7754 "Database.c"
				}
			}
		}
	}
#line 1192 "../src/Services/Database.vala"
	result = returned;
#line 1192 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 1192 "../src/Services/Database.vala"
	return result;
#line 7765 "Database.c"
}

void
services_database_add_text_column (ServicesDatabase* self,
                                   const gchar* table,
                                   const gchar* column,
                                   const gchar* default_value)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	sqlite3_stmt* _tmp11_;
#line 1195 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1195 "../src/Services/Database.vala"
	g_return_if_fail (table != NULL);
#line 1195 "../src/Services/Database.vala"
	g_return_if_fail (column != NULL);
#line 1195 "../src/Services/Database.vala"
	g_return_if_fail (default_value != NULL);
#line 1198 "../src/Services/Database.vala"
	_tmp0_ = g_strdup_printf ("\n" \
"            ALTER TABLE %s ADD COLUMN %s TEXT DEFAULT '%s';\n" \
"        ", table, column, default_value);
#line 1198 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 1198 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 1202 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 1202 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 1202 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 1202 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 1202 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 1202 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 1202 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 1202 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 1204 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 1204 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp7_) != SQLITE_DONE) {
#line 7818 "Database.c"
		sqlite3* _tmp8_;
		sqlite3* _tmp9_;
		const gchar* _tmp10_;
#line 1205 "../src/Services/Database.vala"
		_tmp8_ = self->priv->db;
#line 1205 "../src/Services/Database.vala"
		_tmp9_ = self->priv->db;
#line 1205 "../src/Services/Database.vala"
		_tmp10_ = sqlite3_errmsg (_tmp9_);
#line 1205 "../src/Services/Database.vala"
		g_warning ("Database.vala:1205: Error: %d: %s", sqlite3_errcode (_tmp8_), _tmp10_);
#line 7830 "Database.c"
	}
#line 1208 "../src/Services/Database.vala"
	_tmp11_ = stmt;
#line 1208 "../src/Services/Database.vala"
	sqlite3_reset (_tmp11_);
#line 1195 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 7838 "Database.c"
}

void
services_database_add_int_column (ServicesDatabase* self,
                                  const gchar* table,
                                  const gchar* column,
                                  gint default_value)
{
	sqlite3_stmt* stmt = NULL;
	gchar* _tmp0_;
	sqlite3* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	sqlite3_stmt* _tmp6_ = NULL;
	sqlite3_stmt* _tmp7_;
	sqlite3_stmt* _tmp11_;
#line 1211 "../src/Services/Database.vala"
	g_return_if_fail (self != NULL);
#line 1211 "../src/Services/Database.vala"
	g_return_if_fail (table != NULL);
#line 1211 "../src/Services/Database.vala"
	g_return_if_fail (column != NULL);
#line 1212 "../src/Services/Database.vala"
	if (services_database_column_exists (self, table, column)) {
#line 1213 "../src/Services/Database.vala"
		return;
#line 7867 "Database.c"
	}
#line 1218 "../src/Services/Database.vala"
	_tmp0_ = g_strdup_printf ("\n" \
"            ALTER TABLE %s ADD COLUMN %s INTEGER DEFAULT %i;\n" \
"        ", table, column, default_value);
#line 1218 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 1218 "../src/Services/Database.vala"
	self->priv->sql = _tmp0_;
#line 1222 "../src/Services/Database.vala"
	_tmp1_ = self->priv->db;
#line 1222 "../src/Services/Database.vala"
	_tmp2_ = self->priv->sql;
#line 1222 "../src/Services/Database.vala"
	_tmp3_ = self->priv->sql;
#line 1222 "../src/Services/Database.vala"
	_tmp4_ = strlen (_tmp3_);
#line 1222 "../src/Services/Database.vala"
	_tmp5_ = _tmp4_;
#line 1222 "../src/Services/Database.vala"
	sqlite3_prepare_v2 (_tmp1_, _tmp2_, _tmp5_, &_tmp6_, NULL);
#line 1222 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 1222 "../src/Services/Database.vala"
	stmt = _tmp6_;
#line 1224 "../src/Services/Database.vala"
	_tmp7_ = stmt;
#line 1224 "../src/Services/Database.vala"
	if (sqlite3_step (_tmp7_) != SQLITE_DONE) {
#line 7895 "Database.c"
		sqlite3* _tmp8_;
		sqlite3* _tmp9_;
		const gchar* _tmp10_;
#line 1225 "../src/Services/Database.vala"
		_tmp8_ = self->priv->db;
#line 1225 "../src/Services/Database.vala"
		_tmp9_ = self->priv->db;
#line 1225 "../src/Services/Database.vala"
		_tmp10_ = sqlite3_errmsg (_tmp9_);
#line 1225 "../src/Services/Database.vala"
		g_warning ("Database.vala:1225: Error: %d: %s", sqlite3_errcode (_tmp8_), _tmp10_);
#line 7907 "Database.c"
	}
#line 1228 "../src/Services/Database.vala"
	_tmp11_ = stmt;
#line 1228 "../src/Services/Database.vala"
	sqlite3_reset (_tmp11_);
#line 1211 "../src/Services/Database.vala"
	_sqlite3_finalize0 (stmt);
#line 7915 "Database.c"
}

ServicesDatabase*
services_database_construct (GType object_type)
{
	ServicesDatabase * self = NULL;
#line 1 "../src/Services/Database.vala"
	self = (ServicesDatabase*) g_object_new (object_type, NULL);
#line 1 "../src/Services/Database.vala"
	return self;
#line 7926 "Database.c"
}

ServicesDatabase*
services_database_new (void)
{
#line 1 "../src/Services/Database.vala"
	return services_database_construct (SERVICES_TYPE_DATABASE);
#line 7934 "Database.c"
}

GeeArrayList*
services_database_get_projects (ServicesDatabase* self)
{
	GeeArrayList* result;
	GeeArrayList* _tmp0_;
	GeeArrayList* _tmp2_;
#line 36 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 37 "../src/Services/Database.vala"
	_tmp0_ = self->priv->_projects;
#line 37 "../src/Services/Database.vala"
	if (_tmp0_ == NULL) {
#line 7949 "Database.c"
		GeeArrayList* _tmp1_;
#line 38 "../src/Services/Database.vala"
		_tmp1_ = services_database_get_projects_collection (self);
#line 38 "../src/Services/Database.vala"
		_g_object_unref0 (self->priv->_projects);
#line 38 "../src/Services/Database.vala"
		self->priv->_projects = _tmp1_;
#line 7957 "Database.c"
	}
#line 40 "../src/Services/Database.vala"
	_tmp2_ = self->priv->_projects;
#line 40 "../src/Services/Database.vala"
	result = _tmp2_;
#line 40 "../src/Services/Database.vala"
	return result;
#line 7965 "Database.c"
}

GeeArrayList*
services_database_get_sections (ServicesDatabase* self)
{
	GeeArrayList* result;
	GeeArrayList* _tmp0_;
	GeeArrayList* _tmp2_;
#line 46 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 47 "../src/Services/Database.vala"
	_tmp0_ = self->priv->_sections;
#line 47 "../src/Services/Database.vala"
	if (_tmp0_ == NULL) {
#line 7980 "Database.c"
		GeeArrayList* _tmp1_;
#line 48 "../src/Services/Database.vala"
		_tmp1_ = services_database_get_sections_collection (self);
#line 48 "../src/Services/Database.vala"
		_g_object_unref0 (self->priv->_sections);
#line 48 "../src/Services/Database.vala"
		self->priv->_sections = _tmp1_;
#line 7988 "Database.c"
	}
#line 50 "../src/Services/Database.vala"
	_tmp2_ = self->priv->_sections;
#line 50 "../src/Services/Database.vala"
	result = _tmp2_;
#line 50 "../src/Services/Database.vala"
	return result;
#line 7996 "Database.c"
}

GeeArrayList*
services_database_get_items (ServicesDatabase* self)
{
	GeeArrayList* result;
	GeeArrayList* _tmp0_;
	GeeArrayList* _tmp2_;
#line 56 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 57 "../src/Services/Database.vala"
	_tmp0_ = self->priv->_items;
#line 57 "../src/Services/Database.vala"
	if (_tmp0_ == NULL) {
#line 8011 "Database.c"
		GeeArrayList* _tmp1_;
#line 58 "../src/Services/Database.vala"
		_tmp1_ = services_database_get_items_collection (self);
#line 58 "../src/Services/Database.vala"
		_g_object_unref0 (self->priv->_items);
#line 58 "../src/Services/Database.vala"
		self->priv->_items = _tmp1_;
#line 8019 "Database.c"
	}
#line 60 "../src/Services/Database.vala"
	_tmp2_ = self->priv->_items;
#line 60 "../src/Services/Database.vala"
	result = _tmp2_;
#line 60 "../src/Services/Database.vala"
	return result;
#line 8027 "Database.c"
}

GeeArrayList*
services_database_get_labels (ServicesDatabase* self)
{
	GeeArrayList* result;
	GeeArrayList* _tmp0_;
	GeeArrayList* _tmp2_;
#line 66 "../src/Services/Database.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 67 "../src/Services/Database.vala"
	_tmp0_ = self->priv->_labels;
#line 67 "../src/Services/Database.vala"
	if (_tmp0_ == NULL) {
#line 8042 "Database.c"
		GeeArrayList* _tmp1_;
#line 68 "../src/Services/Database.vala"
		_tmp1_ = services_database_get_labels_collection (self);
#line 68 "../src/Services/Database.vala"
		_g_object_unref0 (self->priv->_labels);
#line 68 "../src/Services/Database.vala"
		self->priv->_labels = _tmp1_;
#line 8050 "Database.c"
	}
#line 70 "../src/Services/Database.vala"
	_tmp2_ = self->priv->_labels;
#line 70 "../src/Services/Database.vala"
	result = _tmp2_;
#line 70 "../src/Services/Database.vala"
	return result;
#line 8058 "Database.c"
}

static void
g_cclosure_user_marshal_VOID__OBJECT_BOOLEAN (GClosure * closure,
                                              GValue * return_value,
                                              guint n_param_values,
                                              const GValue * param_values,
                                              gpointer invocation_hint,
                                              gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__OBJECT_BOOLEAN) (gpointer data1, gpointer arg_1, gboolean arg_2, gpointer data2);
	register GMarshalFunc_VOID__OBJECT_BOOLEAN callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 1 "../src/Services/Database.vala"
	g_return_if_fail (n_param_values == 3);
#line 1 "../src/Services/Database.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 1 "../src/Services/Database.vala"
		data1 = closure->data;
#line 1 "../src/Services/Database.vala"
		data2 = param_values->data[0].v_pointer;
#line 8083 "Database.c"
	} else {
#line 1 "../src/Services/Database.vala"
		data1 = param_values->data[0].v_pointer;
#line 1 "../src/Services/Database.vala"
		data2 = closure->data;
#line 8089 "Database.c"
	}
#line 1 "../src/Services/Database.vala"
	callback = (GMarshalFunc_VOID__OBJECT_BOOLEAN) (marshal_data ? marshal_data : cc->callback);
#line 1 "../src/Services/Database.vala"
	callback (data1, g_value_get_object (param_values + 1), g_value_get_boolean (param_values + 2), data2);
#line 8095 "Database.c"
}

static void
g_cclosure_user_marshal_VOID__OBJECT_INT64 (GClosure * closure,
                                            GValue * return_value,
                                            guint n_param_values,
                                            const GValue * param_values,
                                            gpointer invocation_hint,
                                            gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__OBJECT_INT64) (gpointer data1, gpointer arg_1, gint64 arg_2, gpointer data2);
	register GMarshalFunc_VOID__OBJECT_INT64 callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 1 "../src/Services/Database.vala"
	g_return_if_fail (n_param_values == 3);
#line 1 "../src/Services/Database.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 1 "../src/Services/Database.vala"
		data1 = closure->data;
#line 1 "../src/Services/Database.vala"
		data2 = param_values->data[0].v_pointer;
#line 8120 "Database.c"
	} else {
#line 1 "../src/Services/Database.vala"
		data1 = param_values->data[0].v_pointer;
#line 1 "../src/Services/Database.vala"
		data2 = closure->data;
#line 8126 "Database.c"
	}
#line 1 "../src/Services/Database.vala"
	callback = (GMarshalFunc_VOID__OBJECT_INT64) (marshal_data ? marshal_data : cc->callback);
#line 1 "../src/Services/Database.vala"
	callback (data1, g_value_get_object (param_values + 1), g_value_get_int64 (param_values + 2), data2);
#line 8132 "Database.c"
}

static void
_services_database___lambda23_ (ServicesDatabase* self,
                                ObjectsLabel* label)
{
	GeeArrayList* _tmp0_;
#line 75 "../src/Services/Database.vala"
	g_return_if_fail (label != NULL);
#line 76 "../src/Services/Database.vala"
	_tmp0_ = self->priv->_labels;
#line 76 "../src/Services/Database.vala"
	if (gee_abstract_collection_remove ((GeeAbstractCollection*) _tmp0_, label)) {
#line 8146 "Database.c"
		const gchar* _tmp1_;
		const gchar* _tmp2_;
#line 77 "../src/Services/Database.vala"
		_tmp1_ = objects_label_get_name (label);
#line 77 "../src/Services/Database.vala"
		_tmp2_ = _tmp1_;
#line 77 "../src/Services/Database.vala"
		g_debug ("Database.vala:77: Label Removed: %s", _tmp2_);
#line 8155 "Database.c"
	}
}

static void
__services_database___lambda23__services_database_label_deleted (ServicesDatabase* _sender,
                                                                 ObjectsLabel* label,
                                                                 gpointer self)
{
#line 75 "../src/Services/Database.vala"
	_services_database___lambda23_ ((ServicesDatabase*) self, label);
#line 8166 "Database.c"
}

static void
_services_database___lambda24_ (ServicesDatabase* self,
                                ObjectsProject* project)
{
	GeeArrayList* _tmp0_;
#line 81 "../src/Services/Database.vala"
	g_return_if_fail (project != NULL);
#line 82 "../src/Services/Database.vala"
	_tmp0_ = self->priv->_projects;
#line 82 "../src/Services/Database.vala"
	if (gee_abstract_collection_remove ((GeeAbstractCollection*) _tmp0_, project)) {
#line 8180 "Database.c"
		const gchar* _tmp1_;
		const gchar* _tmp2_;
#line 83 "../src/Services/Database.vala"
		_tmp1_ = objects_project_get_name (project);
#line 83 "../src/Services/Database.vala"
		_tmp2_ = _tmp1_;
#line 83 "../src/Services/Database.vala"
		g_debug ("Database.vala:83: Project Removed: %s", _tmp2_);
#line 8189 "Database.c"
	}
}

static void
__services_database___lambda24__services_database_project_deleted (ServicesDatabase* _sender,
                                                                   ObjectsProject* project,
                                                                   gpointer self)
{
#line 81 "../src/Services/Database.vala"
	_services_database___lambda24_ ((ServicesDatabase*) self, project);
#line 8200 "Database.c"
}

static void
_services_database___lambda25_ (ServicesDatabase* self,
                                ObjectsSection* section)
{
	GeeArrayList* _tmp0_;
#line 87 "../src/Services/Database.vala"
	g_return_if_fail (section != NULL);
#line 88 "../src/Services/Database.vala"
	_tmp0_ = self->priv->_sections;
#line 88 "../src/Services/Database.vala"
	if (gee_abstract_collection_remove ((GeeAbstractCollection*) _tmp0_, section)) {
#line 8214 "Database.c"
		const gchar* _tmp1_;
		const gchar* _tmp2_;
#line 89 "../src/Services/Database.vala"
		_tmp1_ = objects_section_get_name (section);
#line 89 "../src/Services/Database.vala"
		_tmp2_ = _tmp1_;
#line 89 "../src/Services/Database.vala"
		g_debug ("Database.vala:89: Section Removed: %s", _tmp2_);
#line 8223 "Database.c"
	}
}

static void
__services_database___lambda25__services_database_section_deleted (ServicesDatabase* _sender,
                                                                   ObjectsSection* section,
                                                                   gpointer self)
{
#line 87 "../src/Services/Database.vala"
	_services_database___lambda25_ ((ServicesDatabase*) self, section);
#line 8234 "Database.c"
}

static void
_services_database___lambda26_ (ServicesDatabase* self,
                                ObjectsItem* item)
{
	GeeArrayList* _tmp0_;
#line 93 "../src/Services/Database.vala"
	g_return_if_fail (item != NULL);
#line 94 "../src/Services/Database.vala"
	_tmp0_ = self->priv->_items;
#line 94 "../src/Services/Database.vala"
	if (gee_abstract_collection_remove ((GeeAbstractCollection*) _tmp0_, item)) {
#line 8248 "Database.c"
		const gchar* _tmp1_;
		const gchar* _tmp2_;
#line 95 "../src/Services/Database.vala"
		_tmp1_ = objects_item_get_content (item);
#line 95 "../src/Services/Database.vala"
		_tmp2_ = _tmp1_;
#line 95 "../src/Services/Database.vala"
		g_debug ("Database.vala:95: item Removed: %s", _tmp2_);
#line 8257 "Database.c"
	}
}

static void
__services_database___lambda26__services_database_item_deleted (ServicesDatabase* _sender,
                                                                ObjectsItem* item,
                                                                gpointer self)
{
#line 93 "../src/Services/Database.vala"
	_services_database___lambda26_ ((ServicesDatabase*) self, item);
#line 8268 "Database.c"
}

static GObject *
services_database_constructor (GType type,
                               guint n_construct_properties,
                               GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ServicesDatabase * self;
#line 74 "../src/Services/Database.vala"
	parent_class = G_OBJECT_CLASS (services_database_parent_class);
#line 74 "../src/Services/Database.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 74 "../src/Services/Database.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, SERVICES_TYPE_DATABASE, ServicesDatabase);
#line 75 "../src/Services/Database.vala"
	g_signal_connect_object (self, "label-deleted", (GCallback) __services_database___lambda23__services_database_label_deleted, self, 0);
#line 81 "../src/Services/Database.vala"
	g_signal_connect_object (self, "project-deleted", (GCallback) __services_database___lambda24__services_database_project_deleted, self, 0);
#line 87 "../src/Services/Database.vala"
	g_signal_connect_object (self, "section-deleted", (GCallback) __services_database___lambda25__services_database_section_deleted, self, 0);
#line 93 "../src/Services/Database.vala"
	g_signal_connect_object (self, "item-deleted", (GCallback) __services_database___lambda26__services_database_item_deleted, self, 0);
#line 74 "../src/Services/Database.vala"
	return obj;
#line 8295 "Database.c"
}

static void
services_database_class_init (ServicesDatabaseClass * klass,
                              gpointer klass_data)
{
#line 1 "../src/Services/Database.vala"
	services_database_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Services/Database.vala"
	g_type_class_adjust_private_offset (klass, &ServicesDatabase_private_offset);
#line 1 "../src/Services/Database.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_services_database_get_property;
#line 1 "../src/Services/Database.vala"
	G_OBJECT_CLASS (klass)->constructor = services_database_constructor;
#line 1 "../src/Services/Database.vala"
	G_OBJECT_CLASS (klass)->finalize = services_database_finalize;
#line 1 "../src/Services/Database.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), SERVICES_DATABASE_PROJECTS_PROPERTY, services_database_properties[SERVICES_DATABASE_PROJECTS_PROPERTY] = g_param_spec_object ("projects", "projects", "projects", GEE_TYPE_ARRAY_LIST, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Services/Database.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), SERVICES_DATABASE_SECTIONS_PROPERTY, services_database_properties[SERVICES_DATABASE_SECTIONS_PROPERTY] = g_param_spec_object ("sections", "sections", "sections", GEE_TYPE_ARRAY_LIST, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Services/Database.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), SERVICES_DATABASE_ITEMS_PROPERTY, services_database_properties[SERVICES_DATABASE_ITEMS_PROPERTY] = g_param_spec_object ("items", "items", "items", GEE_TYPE_ARRAY_LIST, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Services/Database.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), SERVICES_DATABASE_LABELS_PROPERTY, services_database_properties[SERVICES_DATABASE_LABELS_PROPERTY] = g_param_spec_object ("labels", "labels", "labels", GEE_TYPE_ARRAY_LIST, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_OPENED_SIGNAL] = g_signal_new ("opened", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_RESET_SIGNAL] = g_signal_new ("reset", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_PROJECT_ADDED_SIGNAL] = g_signal_new ("project-added", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_PROJECT);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_PROJECT_DELETED_SIGNAL] = g_signal_new ("project-deleted", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_PROJECT);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_LABEL_ADDED_SIGNAL] = g_signal_new ("label-added", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_LABEL);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_LABEL_DELETED_SIGNAL] = g_signal_new ("label-deleted", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_LABEL);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_SECTION_DELETED_SIGNAL] = g_signal_new ("section-deleted", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_SECTION);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_ITEM_DELETED_SIGNAL] = g_signal_new ("item-deleted", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_ITEM);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_ITEM_ADDED_SIGNAL] = g_signal_new ("item-added", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__OBJECT_BOOLEAN, G_TYPE_NONE, 2, OBJECTS_TYPE_ITEM, G_TYPE_BOOLEAN);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_ITEM_UPDATED_SIGNAL] = g_signal_new ("item-updated", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__OBJECT_INT64, G_TYPE_NONE, 2, OBJECTS_TYPE_ITEM, G_TYPE_INT64);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_ITEM_LABEL_ADDED_SIGNAL] = g_signal_new ("item-label-added", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_ITEM_LABEL);
#line 1 "../src/Services/Database.vala"
	services_database_signals[SERVICES_DATABASE_ITEM_LABEL_DELETED_SIGNAL] = g_signal_new ("item-label-deleted", SERVICES_TYPE_DATABASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_ITEM_LABEL);
#line 8344 "Database.c"
}

static void
services_database_instance_init (ServicesDatabase * self,
                                 gpointer klass)
{
#line 1 "../src/Services/Database.vala"
	self->priv = services_database_get_instance_private (self);
#line 34 "../src/Services/Database.vala"
	g_rec_mutex_init (&self->priv->__lock__projects);
#line 34 "../src/Services/Database.vala"
	self->priv->_projects = NULL;
#line 44 "../src/Services/Database.vala"
	g_rec_mutex_init (&self->priv->__lock__sections);
#line 44 "../src/Services/Database.vala"
	self->priv->_sections = NULL;
#line 54 "../src/Services/Database.vala"
	g_rec_mutex_init (&self->priv->__lock__items);
#line 54 "../src/Services/Database.vala"
	self->priv->_items = NULL;
#line 64 "../src/Services/Database.vala"
	g_rec_mutex_init (&self->priv->__lock__labels);
#line 64 "../src/Services/Database.vala"
	self->priv->_labels = NULL;
#line 8369 "Database.c"
}

static void
services_database_finalize (GObject * obj)
{
	ServicesDatabase * self;
#line 1 "../src/Services/Database.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, SERVICES_TYPE_DATABASE, ServicesDatabase);
#line 2 "../src/Services/Database.vala"
	_sqlite3_close0 (self->priv->db);
#line 3 "../src/Services/Database.vala"
	_g_free0 (self->priv->db_path);
#line 4 "../src/Services/Database.vala"
	_g_free0 (self->priv->errormsg);
#line 5 "../src/Services/Database.vala"
	_g_free0 (self->priv->sql);
#line 34 "../src/Services/Database.vala"
	g_rec_mutex_clear (&self->priv->__lock__projects);
#line 34 "../src/Services/Database.vala"
	_g_object_unref0 (self->priv->_projects);
#line 44 "../src/Services/Database.vala"
	g_rec_mutex_clear (&self->priv->__lock__sections);
#line 44 "../src/Services/Database.vala"
	_g_object_unref0 (self->priv->_sections);
#line 54 "../src/Services/Database.vala"
	g_rec_mutex_clear (&self->priv->__lock__items);
#line 54 "../src/Services/Database.vala"
	_g_object_unref0 (self->priv->_items);
#line 64 "../src/Services/Database.vala"
	g_rec_mutex_clear (&self->priv->__lock__labels);
#line 64 "../src/Services/Database.vala"
	_g_object_unref0 (self->priv->_labels);
#line 1159 "../src/Services/Database.vala"
	_g_object_unref0 (self->priv->parser);
#line 1 "../src/Services/Database.vala"
	G_OBJECT_CLASS (services_database_parent_class)->finalize (obj);
#line 8406 "Database.c"
}

static GType
services_database_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (ServicesDatabaseClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) services_database_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ServicesDatabase), 0, (GInstanceInitFunc) services_database_instance_init, NULL };
	GType services_database_type_id;
	services_database_type_id = g_type_register_static (G_TYPE_OBJECT, "ServicesDatabase", &g_define_type_info, 0);
	ServicesDatabase_private_offset = g_type_add_instance_private (services_database_type_id, sizeof (ServicesDatabasePrivate));
	return services_database_type_id;
}

GType
services_database_get_type (void)
{
	static volatile gsize services_database_type_id__volatile = 0;
	if (g_once_init_enter (&services_database_type_id__volatile)) {
		GType services_database_type_id;
		services_database_type_id = services_database_get_type_once ();
		g_once_init_leave (&services_database_type_id__volatile, services_database_type_id);
	}
	return services_database_type_id__volatile;
}

static void
_vala_services_database_get_property (GObject * object,
                                      guint property_id,
                                      GValue * value,
                                      GParamSpec * pspec)
{
	ServicesDatabase * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, SERVICES_TYPE_DATABASE, ServicesDatabase);
#line 1 "../src/Services/Database.vala"
	switch (property_id) {
#line 1 "../src/Services/Database.vala"
		case SERVICES_DATABASE_PROJECTS_PROPERTY:
#line 1 "../src/Services/Database.vala"
		g_value_set_object (value, services_database_get_projects (self));
#line 1 "../src/Services/Database.vala"
		break;
#line 1 "../src/Services/Database.vala"
		case SERVICES_DATABASE_SECTIONS_PROPERTY:
#line 1 "../src/Services/Database.vala"
		g_value_set_object (value, services_database_get_sections (self));
#line 1 "../src/Services/Database.vala"
		break;
#line 1 "../src/Services/Database.vala"
		case SERVICES_DATABASE_ITEMS_PROPERTY:
#line 1 "../src/Services/Database.vala"
		g_value_set_object (value, services_database_get_items (self));
#line 1 "../src/Services/Database.vala"
		break;
#line 1 "../src/Services/Database.vala"
		case SERVICES_DATABASE_LABELS_PROPERTY:
#line 1 "../src/Services/Database.vala"
		g_value_set_object (value, services_database_get_labels (self));
#line 1 "../src/Services/Database.vala"
		break;
#line 8465 "Database.c"
		default:
#line 1 "../src/Services/Database.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Services/Database.vala"
		break;
#line 8471 "Database.c"
	}
}


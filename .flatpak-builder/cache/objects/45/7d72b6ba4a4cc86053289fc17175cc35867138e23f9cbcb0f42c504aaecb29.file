/* ProjectRow.c generated by valac 0.50.10, the Vala compiler
 * generated from ProjectRow.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 3 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alainmh23@gmail.com>
*/

#include <gtk/gtk.h>
#include <glib-object.h>
#include <gee.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include <gdk/gdk.h>
#include <cairo-gobject.h>
#include <handy.h>
#include <glib/gi18n-lib.h>
#include <pango/pango.h>
#include <granite.h>
#include <gio/gio.h>

#define LAYOUTS_TYPE_PROJECT_ROW (layouts_project_row_get_type ())
#define LAYOUTS_PROJECT_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRow))
#define LAYOUTS_PROJECT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRowClass))
#define LAYOUTS_IS_PROJECT_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), LAYOUTS_TYPE_PROJECT_ROW))
#define LAYOUTS_IS_PROJECT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), LAYOUTS_TYPE_PROJECT_ROW))
#define LAYOUTS_PROJECT_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRowClass))

typedef struct _LayoutsProjectRow LayoutsProjectRow;
typedef struct _LayoutsProjectRowClass LayoutsProjectRowClass;
typedef struct _LayoutsProjectRowPrivate LayoutsProjectRowPrivate;

#define OBJECTS_TYPE_BASE_OBJECT (objects_base_object_get_type ())
#define OBJECTS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObject))
#define OBJECTS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))
#define OBJECTS_IS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_IS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_BASE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))

typedef struct _ObjectsBaseObject ObjectsBaseObject;
typedef struct _ObjectsBaseObjectClass ObjectsBaseObjectClass;

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;

#define WIDGETS_TYPE_PROJECT_PROGRESS (widgets_project_progress_get_type ())
#define WIDGETS_PROJECT_PROGRESS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_PROJECT_PROGRESS, WidgetsProjectProgress))
#define WIDGETS_PROJECT_PROGRESS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_PROJECT_PROGRESS, WidgetsProjectProgressClass))
#define WIDGETS_IS_PROJECT_PROGRESS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_PROJECT_PROGRESS))
#define WIDGETS_IS_PROJECT_PROGRESS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_PROJECT_PROGRESS))
#define WIDGETS_PROJECT_PROGRESS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_PROJECT_PROGRESS, WidgetsProjectProgressClass))

typedef struct _WidgetsProjectProgress WidgetsProjectProgress;
typedef struct _WidgetsProjectProgressClass WidgetsProjectProgressClass;
enum  {
	LAYOUTS_PROJECT_ROW_0_PROPERTY,
	LAYOUTS_PROJECT_ROW_PROJECT_PROPERTY,
	LAYOUTS_PROJECT_ROW_SHOW_SUBPROJECTS_PROPERTY,
	LAYOUTS_PROJECT_ROW_NUM_PROPERTIES
};
static GParamSpec* layouts_project_row_properties[LAYOUTS_PROJECT_ROW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define TYPE_UTIL (util_get_type ())
#define UTIL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTIL, Util))
#define UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTIL, UtilClass))
#define IS_UTIL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTIL))
#define IS_UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTIL))
#define UTIL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTIL, UtilClass))

typedef struct _Util Util;
typedef struct _UtilClass UtilClass;
#define _g_free0(var) (var = (g_free (var), NULL))
typedef enum  {
	PROJECT_ICON_STYLE_PROGRESS,
	PROJECT_ICON_STYLE_EMOJI
} ProjectIconStyle;

#define TYPE_PROJECT_ICON_STYLE (project_icon_style_get_type ())
typedef struct _WidgetsProjectProgressPrivate WidgetsProjectProgressPrivate;
#define _cairo_destroy0(var) ((var == NULL) ? NULL : (var = (cairo_destroy (var), NULL)))
#define _cairo_surface_destroy0(var) ((var == NULL) ? NULL : (var = (cairo_surface_destroy (var), NULL)))

#define DIALOGS_CONTEXT_MENU_TYPE_MENU (dialogs_context_menu_menu_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenu))
#define DIALOGS_CONTEXT_MENU_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_IS_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_MENU_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))

typedef struct _DialogsContextMenuMenu DialogsContextMenuMenu;
typedef struct _DialogsContextMenuMenuClass DialogsContextMenuMenuClass;
typedef struct _Block13Data Block13Data;

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM (dialogs_context_menu_menu_item_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItem))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItemClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItemClass))

typedef struct _DialogsContextMenuMenuItem DialogsContextMenuMenuItem;
typedef struct _DialogsContextMenuMenuItemClass DialogsContextMenuMenuItemClass;

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM_SELECTOR (dialogs_context_menu_menu_item_selector_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_SELECTOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM_SELECTOR, DialogsContextMenuMenuItemSelector))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_SELECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM_SELECTOR, DialogsContextMenuMenuItemSelectorClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM_SELECTOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM_SELECTOR))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM_SELECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM_SELECTOR))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_SELECTOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM_SELECTOR, DialogsContextMenuMenuItemSelectorClass))

typedef struct _DialogsContextMenuMenuItemSelector DialogsContextMenuMenuItemSelector;
typedef struct _DialogsContextMenuMenuItemSelectorClass DialogsContextMenuMenuItemSelectorClass;

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR (dialogs_context_menu_menu_separator_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_SEPARATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR, DialogsContextMenuMenuSeparator))
#define DIALOGS_CONTEXT_MENU_MENU_SEPARATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR, DialogsContextMenuMenuSeparatorClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_SEPARATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR))
#define DIALOGS_CONTEXT_MENU_IS_MENU_SEPARATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR))
#define DIALOGS_CONTEXT_MENU_MENU_SEPARATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR, DialogsContextMenuMenuSeparatorClass))

typedef struct _DialogsContextMenuMenuSeparator DialogsContextMenuMenuSeparator;
typedef struct _DialogsContextMenuMenuSeparatorClass DialogsContextMenuMenuSeparatorClass;

#define SERVICES_TYPE_DATABASE (services_database_get_type ())
#define SERVICES_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_DATABASE, ServicesDatabase))
#define SERVICES_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))
#define SERVICES_IS_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_DATABASE))
#define SERVICES_IS_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_DATABASE))
#define SERVICES_DATABASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))

typedef struct _ServicesDatabase ServicesDatabase;
typedef struct _ServicesDatabaseClass ServicesDatabaseClass;

#define SERVICES_TYPE_EVENT_BUS (services_event_bus_get_type ())
#define SERVICES_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBus))
#define SERVICES_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))
#define SERVICES_IS_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_IS_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_EVENT_BUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))

typedef struct _ServicesEventBus ServicesEventBus;
typedef struct _ServicesEventBusClass ServicesEventBusClass;

#define DIALOGS_TYPE_PROJECT (dialogs_project_get_type ())
#define DIALOGS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_TYPE_PROJECT, DialogsProject))
#define DIALOGS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_TYPE_PROJECT, DialogsProjectClass))
#define DIALOGS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_TYPE_PROJECT))
#define DIALOGS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_TYPE_PROJECT))
#define DIALOGS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_TYPE_PROJECT, DialogsProjectClass))

typedef struct _DialogsProject DialogsProject;
typedef struct _DialogsProjectClass DialogsProjectClass;
typedef struct _Block14Data Block14Data;
typedef enum  {
	PANE_TYPE_FILTER,
	PANE_TYPE_FAVORITE,
	PANE_TYPE_PROJECT,
	PANE_TYPE_LABEL,
	PANE_TYPE_TASKLIST
} PaneType;

#define TYPE_PANE_TYPE (pane_type_get_type ())

struct _LayoutsProjectRow {
	GtkListBoxRow parent_instance;
	LayoutsProjectRowPrivate * priv;
	GeeHashMap* subprojects_hashmap;
};

struct _LayoutsProjectRowClass {
	GtkListBoxRowClass parent_class;
};

struct _LayoutsProjectRowPrivate {
	ObjectsProject* _project;
	gboolean _show_subprojects;
	GtkLabel* name_label;
	GtkLabel* emoji_label;
	GtkRevealer* main_revealer;
	WidgetsProjectProgress* project_progress;
	GtkListBox* listbox;
	GtkRevealer* listbox_revealer;
	GtkGrid* handle_grid;
	GtkEventBox* projectrow_eventbox;
	GtkButton* arrow_button;
	GtkLabel* count_label;
	GtkStack* progress_emoji_stack;
	GtkRevealer* count_revealer;
	GtkRevealer* top_motion_revealer;
	GtkRevealer* bottom_motion_revealer;
};

struct _WidgetsProjectProgress {
	GtkBin parent_instance;
	WidgetsProjectProgressPrivate * priv;
	gint subproject_offset;
	gdouble subproject_line_width;
	gdouble line_width;
	gboolean has_subprojects;
	gboolean enable_subprojects;
};

struct _WidgetsProjectProgressClass {
	GtkBinClass parent_class;
};

struct _Block13Data {
	int _ref_count_;
	LayoutsProjectRow* self;
	DialogsContextMenuMenu* menu;
};

struct _Block14Data {
	int _ref_count_;
	LayoutsProjectRow* self;
	GtkStack* menu_stack;
};

static gint LayoutsProjectRow_private_offset;
static gpointer layouts_project_row_parent_class = NULL;
extern ServicesDatabase* planner_database;
extern ServicesEventBus* planner_event_bus;

GType layouts_project_row_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (LayoutsProjectRow, g_object_unref)
GType objects_base_object_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsBaseObject, g_object_unref)
GType objects_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsProject, g_object_unref)
GType widgets_project_progress_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsProjectProgress, g_object_unref)
LayoutsProjectRow* layouts_project_row_new (ObjectsProject* project,
                                            gboolean show_subprojects);
LayoutsProjectRow* layouts_project_row_construct (GType object_type,
                                                  ObjectsProject* project,
                                                  gboolean show_subprojects);
static void layouts_project_row_update_listbox_revealer (LayoutsProjectRow* self);
ObjectsProject* layouts_project_row_get_project (LayoutsProjectRow* self);
void objects_project_set_collapsed (ObjectsProject* self,
                                    gboolean value);
void layouts_project_row_update_request (LayoutsProjectRow* self);
const gchar* objects_project_get_name (ObjectsProject* self);
GType util_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Util, g_object_unref)
Util* util_get_default (void);
gchar* util_get_color (Util* self,
                       const gchar* key);
const gchar* objects_project_get_color (ObjectsProject* self);
void widgets_project_progress_set_progress_fill_color (WidgetsProjectProgress* self,
                                                       const gchar* value);
const gchar* objects_project_get_emoji (ObjectsProject* self);
GType project_icon_style_get_type (void) G_GNUC_CONST;
ProjectIconStyle objects_project_get_icon_style (ObjectsProject* self);
void layouts_project_row_hide_destroy (LayoutsProjectRow* self);
static gboolean __lambda188_ (LayoutsProjectRow* self);
static gboolean ___lambda188__gsource_func (gpointer self);
static void layouts_project_row_add_subprojects (LayoutsProjectRow* self);
GeeArrayList* objects_project_get_subprojects (ObjectsProject* self);
void layouts_project_row_add_subproject (LayoutsProjectRow* self,
                                         ObjectsProject* project);
const gchar* objects_base_object_get_id_string (ObjectsBaseObject* self);
gboolean layouts_project_row_get_show_subprojects (LayoutsProjectRow* self);
static gboolean layouts_project_row_get_has_subprojects (LayoutsProjectRow* self);
static void layouts_project_row_build_drag_and_drop (LayoutsProjectRow* self);
static void layouts_project_row_on_drag_begin (LayoutsProjectRow* self,
                                        GtkWidget* widget,
                                        GdkDragContext* context);
static void _layouts_project_row_on_drag_begin_gtk_widget_drag_begin (GtkWidget* _sender,
                                                               GdkDragContext* context,
                                                               gpointer self);
static void layouts_project_row_on_drag_data_get (LayoutsProjectRow* self,
                                           GtkWidget* widget,
                                           GdkDragContext* context,
                                           GtkSelectionData* selection_data,
                                           guint target_type,
                                           guint time);
static void _layouts_project_row_on_drag_data_get_gtk_widget_drag_data_get (GtkWidget* _sender,
                                                                     GdkDragContext* context,
                                                                     GtkSelectionData* selection_data,
                                                                     guint info,
                                                                     guint time_,
                                                                     gpointer self);
gboolean layouts_project_row_on_drag_motion (LayoutsProjectRow* self,
                                             GdkDragContext* context,
                                             gint x,
                                             gint y,
                                             guint time);
static gboolean _layouts_project_row_on_drag_motion_gtk_widget_drag_motion (GtkWidget* _sender,
                                                                     GdkDragContext* context,
                                                                     gint x,
                                                                     gint y,
                                                                     guint time_,
                                                                     gpointer self);
void layouts_project_row_on_drag_leave (LayoutsProjectRow* self,
                                        GdkDragContext* context,
                                        guint time);
static void _layouts_project_row_on_drag_leave_gtk_widget_drag_leave (GtkWidget* _sender,
                                                               GdkDragContext* context,
                                                               guint time_,
                                                               gpointer self);
static void layouts_project_row_on_drag_data_received (LayoutsProjectRow* self,
                                                GdkDragContext* context,
                                                gint x,
                                                gint y,
                                                GtkSelectionData* selection_data,
                                                guint target_type,
                                                guint time);
static void _layouts_project_row_on_drag_data_received_gtk_widget_drag_data_received (GtkWidget* _sender,
                                                                               GdkDragContext* context,
                                                                               gint x,
                                                                               gint y,
                                                                               GtkSelectionData* selection_data,
                                                                               guint info,
                                                                               guint time_,
                                                                               gpointer self);
void layouts_project_row_clear_indicator (LayoutsProjectRow* self,
                                          GdkDragContext* context);
static void _layouts_project_row_clear_indicator_gtk_widget_drag_end (GtkWidget* _sender,
                                                               GdkDragContext* context,
                                                               gpointer self);
static void layouts_project_row_build_content_menu (LayoutsProjectRow* self);
GType dialogs_context_menu_menu_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenu, g_object_unref)
static Block13Data* block13_data_ref (Block13Data* _data13_);
static void block13_data_unref (void * _userdata_);
DialogsContextMenuMenu* dialogs_context_menu_menu_new (void);
DialogsContextMenuMenu* dialogs_context_menu_menu_construct (GType object_type);
gboolean objects_project_get_is_favorite (ObjectsProject* self);
GType dialogs_context_menu_menu_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuItem, g_object_unref)
DialogsContextMenuMenuItem* dialogs_context_menu_menu_item_new (const gchar* title,
                                                                const gchar* icon_name);
DialogsContextMenuMenuItem* dialogs_context_menu_menu_item_construct (GType object_type,
                                                                      const gchar* title,
                                                                      const gchar* icon_name);
GType dialogs_context_menu_menu_item_selector_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuItemSelector, g_object_unref)
DialogsContextMenuMenuItemSelector* dialogs_context_menu_menu_item_selector_new (const gchar* title,
                                                                                 gboolean has_scroll);
DialogsContextMenuMenuItemSelector* dialogs_context_menu_menu_item_selector_construct (GType object_type,
                                                                                       const gchar* title,
                                                                                       gboolean has_scroll);
void dialogs_context_menu_menu_item_selector_add_item (DialogsContextMenuMenuItemSelector* self,
                                                       GtkWidget* row,
                                                       gint position);
void dialogs_context_menu_menu_add_item (DialogsContextMenuMenu* self,
                                         GtkWidget* widget);
DialogsContextMenuMenuSeparator* dialogs_context_menu_menu_separator_new (void);
DialogsContextMenuMenuSeparator* dialogs_context_menu_menu_separator_construct (GType object_type);
GType dialogs_context_menu_menu_separator_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuSeparator, g_object_unref)
void dialogs_context_menu_menu_popup (DialogsContextMenuMenu* self);
static void __lambda191_ (Block13Data* _data13_);
void dialogs_context_menu_menu_hide_destroy (DialogsContextMenuMenu* self);
void objects_project_set_is_favorite (ObjectsProject* self,
                                      gboolean value);
GType services_database_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesDatabase, g_object_unref)
void services_database_update_project (ServicesDatabase* self,
                                       ObjectsProject* project);
GType services_event_bus_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesEventBus, g_object_unref)
void objects_project_update (ObjectsProject* self,
                             gboolean cloud);
static void ___lambda191__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                 gpointer self);
static void __lambda192_ (Block13Data* _data13_);
void objects_project_delete (ObjectsProject* self,
                             gboolean confirm);
static void ___lambda192__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                 gpointer self);
static void __lambda193_ (Block13Data* _data13_);
GType dialogs_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsProject, g_object_unref)
DialogsProject* dialogs_project_new (ObjectsProject* project);
DialogsProject* dialogs_project_construct (GType object_type,
                                           ObjectsProject* project);
static void ___lambda193__gtk_button_clicked (GtkButton* _sender,
                                       gpointer self);
static void layouts_project_row_set_project (LayoutsProjectRow* self,
                                      ObjectsProject* value);
static void layouts_project_row_set_show_subprojects (LayoutsProjectRow* self,
                                               gboolean value);
static GObject * layouts_project_row_constructor (GType type,
                                           guint n_construct_properties,
                                           GObjectConstructParam * construct_properties);
static Block14Data* block14_data_ref (Block14Data* _data14_);
static void block14_data_unref (void * _userdata_);
WidgetsProjectProgress* widgets_project_progress_new (gint min_d);
WidgetsProjectProgress* widgets_project_progress_construct (GType object_type,
                                                            gint min_d);
gdouble objects_project_get_percentage (ObjectsProject* self);
void widgets_project_progress_set_percentage (WidgetsProjectProgress* self,
                                              gdouble value);
gint objects_project_get_project_count (ObjectsProject* self);
const gchar* objects_project_get_due_date (ObjectsProject* self);
static gboolean _layouts_project_row___lambda205_ (LayoutsProjectRow* self);
static gboolean __layouts_project_row___lambda205__gsource_func (gpointer self);
static gboolean _layouts_project_row___lambda206_ (LayoutsProjectRow* self);
static gboolean __layouts_project_row___lambda206__gsource_func (gpointer self);
static void _layouts_project_row___lambda207_ (LayoutsProjectRow* self);
static void __layouts_project_row___lambda207__objects_base_object_updated (ObjectsBaseObject* _sender,
                                                                     gpointer self);
static void _layouts_project_row___lambda208_ (LayoutsProjectRow* self);
static void __layouts_project_row___lambda208__objects_base_object_deleted (ObjectsBaseObject* _sender,
                                                                     gpointer self);
static void _layouts_project_row___lambda209_ (LayoutsProjectRow* self,
                                        ObjectsProject* subproject);
static void __layouts_project_row___lambda209__objects_project_subproject_added (ObjectsProject* _sender,
                                                                          ObjectsProject* project,
                                                                          gpointer self);
static void _layouts_project_row___lambda210_ (LayoutsProjectRow* self);
static void __layouts_project_row___lambda210__gtk_container_add (GtkContainer* _sender,
                                                           GtkWidget* widget,
                                                           gpointer self);
static void _layouts_project_row___lambda211_ (LayoutsProjectRow* self);
static void __layouts_project_row___lambda211__gtk_container_remove (GtkContainer* _sender,
                                                              GtkWidget* widget,
                                                              gpointer self);
static gboolean _layouts_project_row___lambda212_ (LayoutsProjectRow* self,
                                            GtkWidget* sender,
                                            GdkEventButton* evt);
#define CONSTANTS_DRAG_TIMEOUT 225
static gboolean ___lambda213_ (LayoutsProjectRow* self);
GType pane_type_get_type (void) G_GNUC_CONST;
static gboolean ____lambda213__gsource_func (gpointer self);
static gboolean __layouts_project_row___lambda212__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                           GdkEventButton* event,
                                                                           gpointer self);
static void _layouts_project_row___lambda214_ (LayoutsProjectRow* self,
                                        PaneType pane_type,
                                        const gchar* id);
static void __layouts_project_row___lambda214__services_event_bus_pane_selected (ServicesEventBus* _sender,
                                                                          PaneType panel_type,
                                                                          const gchar* id,
                                                                          gpointer self);
static gboolean _layouts_project_row___lambda215_ (Block14Data* _data14_,
                                            GdkEventCrossing* event);
static gboolean __layouts_project_row___lambda215__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                                           GdkEventCrossing* event,
                                                                           gpointer self);
static gboolean _layouts_project_row___lambda216_ (Block14Data* _data14_,
                                            GdkEventCrossing* event);
static gboolean __layouts_project_row___lambda216__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                                                           GdkEventCrossing* event,
                                                                           gpointer self);
static void _layouts_project_row___lambda217_ (LayoutsProjectRow* self);
static void __layouts_project_row___lambda217__gtk_button_clicked (GtkButton* _sender,
                                                            gpointer self);
static void _layouts_project_row___lambda218_ (LayoutsProjectRow* self,
                                        ObjectsProject* subproject,
                                        gint64 old_parent_id);
gint64 objects_base_object_get_id (ObjectsBaseObject* self);
gint64 objects_project_get_parent_id (ObjectsProject* self);
static void __layouts_project_row___lambda218__services_event_bus_project_parent_changed (ServicesEventBus* _sender,
                                                                                   ObjectsProject* project,
                                                                                   gint64 old_parent_id,
                                                                                   gpointer self);
static void _layouts_project_row___lambda219_ (LayoutsProjectRow* self);
static void __layouts_project_row___lambda219__objects_project_project_count_updated (ObjectsProject* _sender,
                                                                               gpointer self);
static void layouts_project_row_finalize (GObject * obj);
static GType layouts_project_row_get_type_once (void);
static void _vala_layouts_project_row_get_property (GObject * object,
                                             guint property_id,
                                             GValue * value,
                                             GParamSpec * pspec);
static void _vala_layouts_project_row_set_property (GObject * object,
                                             guint property_id,
                                             const GValue * value,
                                             GParamSpec * pspec);

static const GtkTargetEntry LAYOUTS_PROJECT_ROW_PROJECTROW_TARGET_ENTRY[1] = {{"PROJECTROW", (guint) GTK_TARGET_SAME_APP, (guint) 0}};

static inline gpointer
layouts_project_row_get_instance_private (LayoutsProjectRow* self)
{
	return G_STRUCT_MEMBER_P (self, LayoutsProjectRow_private_offset);
}

LayoutsProjectRow*
layouts_project_row_construct (GType object_type,
                               ObjectsProject* project,
                               gboolean show_subprojects)
{
	LayoutsProjectRow * self = NULL;
#line 53 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (project != NULL, NULL);
#line 54 "../src/Layouts/ProjectRow.vala"
	self = (LayoutsProjectRow*) g_object_new (object_type, "project", project, "show-subprojects", show_subprojects, NULL);
#line 53 "../src/Layouts/ProjectRow.vala"
	return self;
#line 521 "ProjectRow.c"
}

LayoutsProjectRow*
layouts_project_row_new (ObjectsProject* project,
                         gboolean show_subprojects)
{
#line 53 "../src/Layouts/ProjectRow.vala"
	return layouts_project_row_construct (LAYOUTS_TYPE_PROJECT_ROW, project, show_subprojects);
#line 530 "ProjectRow.c"
}

static void
layouts_project_row_update_listbox_revealer (LayoutsProjectRow* self)
{
	GtkRevealer* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 311 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 312 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->listbox_revealer;
#line 312 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = gtk_revealer_get_reveal_child (_tmp0_);
#line 312 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = _tmp1_;
#line 312 "../src/Layouts/ProjectRow.vala"
	if (_tmp2_) {
#line 549 "ProjectRow.c"
		ObjectsProject* _tmp3_;
		GtkButton* _tmp4_;
		GtkStyleContext* _tmp5_;
#line 313 "../src/Layouts/ProjectRow.vala"
		_tmp3_ = self->priv->_project;
#line 313 "../src/Layouts/ProjectRow.vala"
		objects_project_set_collapsed (_tmp3_, TRUE);
#line 314 "../src/Layouts/ProjectRow.vala"
		_tmp4_ = self->priv->arrow_button;
#line 314 "../src/Layouts/ProjectRow.vala"
		_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) _tmp4_);
#line 314 "../src/Layouts/ProjectRow.vala"
		gtk_style_context_remove_class (_tmp5_, "opened");
#line 563 "ProjectRow.c"
	} else {
		GtkButton* _tmp6_;
		GtkStyleContext* _tmp7_;
		ObjectsProject* _tmp8_;
#line 316 "../src/Layouts/ProjectRow.vala"
		_tmp6_ = self->priv->arrow_button;
#line 316 "../src/Layouts/ProjectRow.vala"
		_tmp7_ = gtk_widget_get_style_context ((GtkWidget*) _tmp6_);
#line 316 "../src/Layouts/ProjectRow.vala"
		gtk_style_context_add_class (_tmp7_, "opened");
#line 317 "../src/Layouts/ProjectRow.vala"
		_tmp8_ = self->priv->_project;
#line 317 "../src/Layouts/ProjectRow.vala"
		objects_project_set_collapsed (_tmp8_, FALSE);
#line 578 "ProjectRow.c"
	}
}

void
layouts_project_row_update_request (LayoutsProjectRow* self)
{
	GtkLabel* _tmp0_;
	ObjectsProject* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	WidgetsProjectProgress* _tmp4_;
	Util* _tmp5_;
	Util* _tmp6_;
	ObjectsProject* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	gchar* _tmp10_;
	gchar* _tmp11_;
	GtkLabel* _tmp12_;
	ObjectsProject* _tmp13_;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	ObjectsProject* _tmp16_;
	ProjectIconStyle _tmp17_;
	ProjectIconStyle _tmp18_;
#line 321 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 322 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->name_label;
#line 322 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->priv->_project;
#line 322 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = objects_project_get_name (_tmp1_);
#line 322 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = _tmp2_;
#line 322 "../src/Layouts/ProjectRow.vala"
	gtk_label_set_label (_tmp0_, _tmp3_);
#line 323 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = self->priv->project_progress;
#line 323 "../src/Layouts/ProjectRow.vala"
	_tmp5_ = util_get_default ();
#line 323 "../src/Layouts/ProjectRow.vala"
	_tmp6_ = _tmp5_;
#line 323 "../src/Layouts/ProjectRow.vala"
	_tmp7_ = self->priv->_project;
#line 323 "../src/Layouts/ProjectRow.vala"
	_tmp8_ = objects_project_get_color (_tmp7_);
#line 323 "../src/Layouts/ProjectRow.vala"
	_tmp9_ = _tmp8_;
#line 323 "../src/Layouts/ProjectRow.vala"
	_tmp10_ = util_get_color (_tmp6_, _tmp9_);
#line 323 "../src/Layouts/ProjectRow.vala"
	_tmp11_ = _tmp10_;
#line 323 "../src/Layouts/ProjectRow.vala"
	widgets_project_progress_set_progress_fill_color (_tmp4_, _tmp11_);
#line 323 "../src/Layouts/ProjectRow.vala"
	_g_free0 (_tmp11_);
#line 323 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (_tmp6_);
#line 324 "../src/Layouts/ProjectRow.vala"
	_tmp12_ = self->priv->emoji_label;
#line 324 "../src/Layouts/ProjectRow.vala"
	_tmp13_ = self->priv->_project;
#line 324 "../src/Layouts/ProjectRow.vala"
	_tmp14_ = objects_project_get_emoji (_tmp13_);
#line 324 "../src/Layouts/ProjectRow.vala"
	_tmp15_ = _tmp14_;
#line 324 "../src/Layouts/ProjectRow.vala"
	gtk_label_set_label (_tmp12_, _tmp15_);
#line 326 "../src/Layouts/ProjectRow.vala"
	_tmp16_ = self->priv->_project;
#line 326 "../src/Layouts/ProjectRow.vala"
	_tmp17_ = objects_project_get_icon_style (_tmp16_);
#line 326 "../src/Layouts/ProjectRow.vala"
	_tmp18_ = _tmp17_;
#line 326 "../src/Layouts/ProjectRow.vala"
	if (_tmp18_ == PROJECT_ICON_STYLE_PROGRESS) {
#line 656 "ProjectRow.c"
		GtkStack* _tmp19_;
#line 327 "../src/Layouts/ProjectRow.vala"
		_tmp19_ = self->priv->progress_emoji_stack;
#line 327 "../src/Layouts/ProjectRow.vala"
		gtk_stack_set_visible_child_name (_tmp19_, "progress");
#line 662 "ProjectRow.c"
	} else {
		GtkStack* _tmp20_;
#line 329 "../src/Layouts/ProjectRow.vala"
		_tmp20_ = self->priv->progress_emoji_stack;
#line 329 "../src/Layouts/ProjectRow.vala"
		gtk_stack_set_visible_child_name (_tmp20_, "label");
#line 669 "ProjectRow.c"
	}
}

static gboolean
__lambda188_ (LayoutsProjectRow* self)
{
	gboolean result = FALSE;
#line 336 "../src/Layouts/ProjectRow.vala"
	gtk_widget_destroy ((GtkWidget*) self);
#line 337 "../src/Layouts/ProjectRow.vala"
	result = G_SOURCE_REMOVE;
#line 337 "../src/Layouts/ProjectRow.vala"
	return result;
#line 683 "ProjectRow.c"
}

static gboolean
___lambda188__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda188_ ((LayoutsProjectRow*) self);
#line 335 "../src/Layouts/ProjectRow.vala"
	return result;
#line 693 "ProjectRow.c"
}

void
layouts_project_row_hide_destroy (LayoutsProjectRow* self)
{
	GtkRevealer* _tmp0_;
	GtkRevealer* _tmp1_;
	guint _tmp2_;
	guint _tmp3_;
#line 333 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 334 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->main_revealer;
#line 334 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp0_, FALSE);
#line 335 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->priv->main_revealer;
#line 335 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = gtk_revealer_get_transition_duration (_tmp1_);
#line 335 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = _tmp2_;
#line 335 "../src/Layouts/ProjectRow.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, _tmp3_, ___lambda188__gsource_func, g_object_ref (self), g_object_unref);
#line 717 "ProjectRow.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 342 "../src/Layouts/ProjectRow.vala"
	return self ? g_object_ref (self) : NULL;
#line 725 "ProjectRow.c"
}

static void
layouts_project_row_add_subprojects (LayoutsProjectRow* self)
{
#line 341 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 733 "ProjectRow.c"
	{
		GeeArrayList* _subproject_list = NULL;
		ObjectsProject* _tmp0_;
		GeeArrayList* _tmp1_;
		GeeArrayList* _tmp2_;
		GeeArrayList* _tmp3_;
		gint _subproject_size = 0;
		GeeArrayList* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		gint _subproject_index = 0;
#line 342 "../src/Layouts/ProjectRow.vala"
		_tmp0_ = self->priv->_project;
#line 342 "../src/Layouts/ProjectRow.vala"
		_tmp1_ = objects_project_get_subprojects (_tmp0_);
#line 342 "../src/Layouts/ProjectRow.vala"
		_tmp2_ = _tmp1_;
#line 342 "../src/Layouts/ProjectRow.vala"
		_tmp3_ = _g_object_ref0 (_tmp2_);
#line 342 "../src/Layouts/ProjectRow.vala"
		_subproject_list = _tmp3_;
#line 342 "../src/Layouts/ProjectRow.vala"
		_tmp4_ = _subproject_list;
#line 342 "../src/Layouts/ProjectRow.vala"
		_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 342 "../src/Layouts/ProjectRow.vala"
		_tmp6_ = _tmp5_;
#line 342 "../src/Layouts/ProjectRow.vala"
		_subproject_size = _tmp6_;
#line 342 "../src/Layouts/ProjectRow.vala"
		_subproject_index = -1;
#line 342 "../src/Layouts/ProjectRow.vala"
		while (TRUE) {
#line 767 "ProjectRow.c"
			gint _tmp7_;
			gint _tmp8_;
			ObjectsProject* subproject = NULL;
			GeeArrayList* _tmp9_;
			gpointer _tmp10_;
			ObjectsProject* _tmp11_;
#line 342 "../src/Layouts/ProjectRow.vala"
			_subproject_index = _subproject_index + 1;
#line 342 "../src/Layouts/ProjectRow.vala"
			_tmp7_ = _subproject_index;
#line 342 "../src/Layouts/ProjectRow.vala"
			_tmp8_ = _subproject_size;
#line 342 "../src/Layouts/ProjectRow.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 342 "../src/Layouts/ProjectRow.vala"
				break;
#line 784 "ProjectRow.c"
			}
#line 342 "../src/Layouts/ProjectRow.vala"
			_tmp9_ = _subproject_list;
#line 342 "../src/Layouts/ProjectRow.vala"
			_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _subproject_index);
#line 342 "../src/Layouts/ProjectRow.vala"
			subproject = (ObjectsProject*) _tmp10_;
#line 343 "../src/Layouts/ProjectRow.vala"
			_tmp11_ = subproject;
#line 343 "../src/Layouts/ProjectRow.vala"
			layouts_project_row_add_subproject (self, _tmp11_);
#line 342 "../src/Layouts/ProjectRow.vala"
			_g_object_unref0 (subproject);
#line 798 "ProjectRow.c"
		}
#line 342 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (_subproject_list);
#line 802 "ProjectRow.c"
	}
}

void
layouts_project_row_add_subproject (LayoutsProjectRow* self,
                                    ObjectsProject* project)
{
	gboolean _tmp0_ = FALSE;
	GeeHashMap* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
#line 347 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 347 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (project != NULL);
#line 348 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->subprojects_hashmap;
#line 348 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 348 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = _tmp2_;
#line 348 "../src/Layouts/ProjectRow.vala"
	if (!gee_abstract_map_has_key ((GeeAbstractMap*) _tmp1_, _tmp3_)) {
#line 826 "ProjectRow.c"
		gboolean _tmp4_;
#line 348 "../src/Layouts/ProjectRow.vala"
		_tmp4_ = self->priv->_show_subprojects;
#line 348 "../src/Layouts/ProjectRow.vala"
		_tmp0_ = _tmp4_;
#line 832 "ProjectRow.c"
	} else {
#line 348 "../src/Layouts/ProjectRow.vala"
		_tmp0_ = FALSE;
#line 836 "ProjectRow.c"
	}
#line 348 "../src/Layouts/ProjectRow.vala"
	if (_tmp0_) {
#line 840 "ProjectRow.c"
		GeeHashMap* _tmp5_;
		const gchar* _tmp6_;
		const gchar* _tmp7_;
		LayoutsProjectRow* _tmp8_;
		LayoutsProjectRow* _tmp9_;
		GtkListBox* _tmp10_;
		GeeHashMap* _tmp11_;
		const gchar* _tmp12_;
		const gchar* _tmp13_;
		gpointer _tmp14_;
		LayoutsProjectRow* _tmp15_;
		GtkListBox* _tmp16_;
		WidgetsProjectProgress* _tmp17_;
		gboolean _tmp18_;
		gboolean _tmp19_;
#line 349 "../src/Layouts/ProjectRow.vala"
		_tmp5_ = self->subprojects_hashmap;
#line 349 "../src/Layouts/ProjectRow.vala"
		_tmp6_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 349 "../src/Layouts/ProjectRow.vala"
		_tmp7_ = _tmp6_;
#line 349 "../src/Layouts/ProjectRow.vala"
		_tmp8_ = layouts_project_row_new (project, TRUE);
#line 349 "../src/Layouts/ProjectRow.vala"
		g_object_ref_sink (_tmp8_);
#line 349 "../src/Layouts/ProjectRow.vala"
		_tmp9_ = _tmp8_;
#line 349 "../src/Layouts/ProjectRow.vala"
		gee_abstract_map_set ((GeeAbstractMap*) _tmp5_, _tmp7_, _tmp9_);
#line 349 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (_tmp9_);
#line 350 "../src/Layouts/ProjectRow.vala"
		_tmp10_ = self->priv->listbox;
#line 350 "../src/Layouts/ProjectRow.vala"
		_tmp11_ = self->subprojects_hashmap;
#line 350 "../src/Layouts/ProjectRow.vala"
		_tmp12_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 350 "../src/Layouts/ProjectRow.vala"
		_tmp13_ = _tmp12_;
#line 350 "../src/Layouts/ProjectRow.vala"
		_tmp14_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp11_, _tmp13_);
#line 350 "../src/Layouts/ProjectRow.vala"
		_tmp15_ = (LayoutsProjectRow*) _tmp14_;
#line 350 "../src/Layouts/ProjectRow.vala"
		gtk_container_add ((GtkContainer*) _tmp10_, (GtkWidget*) _tmp15_);
#line 350 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (_tmp15_);
#line 351 "../src/Layouts/ProjectRow.vala"
		_tmp16_ = self->priv->listbox;
#line 351 "../src/Layouts/ProjectRow.vala"
		gtk_widget_show_all ((GtkWidget*) _tmp16_);
#line 352 "../src/Layouts/ProjectRow.vala"
		_tmp17_ = self->priv->project_progress;
#line 352 "../src/Layouts/ProjectRow.vala"
		_tmp18_ = layouts_project_row_get_has_subprojects (self);
#line 352 "../src/Layouts/ProjectRow.vala"
		_tmp19_ = _tmp18_;
#line 352 "../src/Layouts/ProjectRow.vala"
		_tmp17_->has_subprojects = _tmp19_;
#line 900 "ProjectRow.c"
	}
}

static void
_layouts_project_row_on_drag_begin_gtk_widget_drag_begin (GtkWidget* _sender,
                                                          GdkDragContext* context,
                                                          gpointer self)
{
#line 358 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_on_drag_begin ((LayoutsProjectRow*) self, _sender, context);
#line 911 "ProjectRow.c"
}

static void
_layouts_project_row_on_drag_data_get_gtk_widget_drag_data_get (GtkWidget* _sender,
                                                                GdkDragContext* context,
                                                                GtkSelectionData* selection_data,
                                                                guint info,
                                                                guint time_,
                                                                gpointer self)
{
#line 359 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_on_drag_data_get ((LayoutsProjectRow*) self, _sender, context, selection_data, info, time_);
#line 924 "ProjectRow.c"
}

static gboolean
_layouts_project_row_on_drag_motion_gtk_widget_drag_motion (GtkWidget* _sender,
                                                            GdkDragContext* context,
                                                            gint x,
                                                            gint y,
                                                            guint time_,
                                                            gpointer self)
{
	gboolean result;
	result = layouts_project_row_on_drag_motion ((LayoutsProjectRow*) self, context, x, y, time_);
#line 362 "../src/Layouts/ProjectRow.vala"
	return result;
#line 939 "ProjectRow.c"
}

static void
_layouts_project_row_on_drag_leave_gtk_widget_drag_leave (GtkWidget* _sender,
                                                          GdkDragContext* context,
                                                          guint time_,
                                                          gpointer self)
{
#line 363 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_on_drag_leave ((LayoutsProjectRow*) self, context, time_);
#line 950 "ProjectRow.c"
}

static void
_layouts_project_row_on_drag_data_received_gtk_widget_drag_data_received (GtkWidget* _sender,
                                                                          GdkDragContext* context,
                                                                          gint x,
                                                                          gint y,
                                                                          GtkSelectionData* selection_data,
                                                                          guint info,
                                                                          guint time_,
                                                                          gpointer self)
{
#line 364 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_on_drag_data_received ((LayoutsProjectRow*) self, context, x, y, selection_data, info, time_);
#line 965 "ProjectRow.c"
}

static void
_layouts_project_row_clear_indicator_gtk_widget_drag_end (GtkWidget* _sender,
                                                          GdkDragContext* context,
                                                          gpointer self)
{
#line 365 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_clear_indicator ((LayoutsProjectRow*) self, context);
#line 975 "ProjectRow.c"
}

static void
layouts_project_row_build_drag_and_drop (LayoutsProjectRow* self)
{
#line 356 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 357 "../src/Layouts/ProjectRow.vala"
	gtk_drag_source_set ((GtkWidget*) self, GDK_BUTTON1_MASK, LAYOUTS_PROJECT_ROW_PROJECTROW_TARGET_ENTRY, (gint) G_N_ELEMENTS (LAYOUTS_PROJECT_ROW_PROJECTROW_TARGET_ENTRY), GDK_ACTION_MOVE);
#line 358 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((GtkWidget*) self, "drag-begin", (GCallback) _layouts_project_row_on_drag_begin_gtk_widget_drag_begin, self, 0);
#line 359 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((GtkWidget*) self, "drag-data-get", (GCallback) _layouts_project_row_on_drag_data_get_gtk_widget_drag_data_get, self, 0);
#line 361 "../src/Layouts/ProjectRow.vala"
	gtk_drag_dest_set ((GtkWidget*) self, GTK_DEST_DEFAULT_ALL, LAYOUTS_PROJECT_ROW_PROJECTROW_TARGET_ENTRY, (gint) G_N_ELEMENTS (LAYOUTS_PROJECT_ROW_PROJECTROW_TARGET_ENTRY), GDK_ACTION_MOVE);
#line 362 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((GtkWidget*) self, "drag-motion", (GCallback) _layouts_project_row_on_drag_motion_gtk_widget_drag_motion, self, 0);
#line 363 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((GtkWidget*) self, "drag-leave", (GCallback) _layouts_project_row_on_drag_leave_gtk_widget_drag_leave, self, 0);
#line 364 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((GtkWidget*) self, "drag-data-received", (GCallback) _layouts_project_row_on_drag_data_received_gtk_widget_drag_data_received, self, 0);
#line 365 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((GtkWidget*) self, "drag-end", (GCallback) _layouts_project_row_clear_indicator_gtk_widget_drag_end, self, 0);
#line 999 "ProjectRow.c"
}

static void
layouts_project_row_on_drag_begin (LayoutsProjectRow* self,
                                   GtkWidget* widget,
                                   GdkDragContext* context)
{
	GtkGrid* row = NULL;
	GtkGrid* _tmp0_;
	GtkGrid* _tmp1_;
	GtkAllocation row_alloc = {0};
	GtkAllocation _tmp2_ = {0};
	cairo_surface_t* surface = NULL;
	GtkAllocation _tmp3_;
	GtkAllocation _tmp4_;
	cairo_surface_t* _tmp5_;
	cairo_t* cairo_context = NULL;
	cairo_t* _tmp6_;
	GtkStyleContext* style_context = NULL;
	GtkStyleContext* _tmp7_;
	GtkStyleContext* _tmp8_;
	gint drag_icon_x = 0;
	gint drag_icon_y = 0;
	gint _tmp9_ = 0;
	gint _tmp10_ = 0;
	GtkRevealer* _tmp11_;
#line 368 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 368 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (widget != NULL);
#line 368 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (context != NULL);
#line 369 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = G_TYPE_CHECK_INSTANCE_CAST (widget, LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRow)->priv->handle_grid;
#line 369 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = _g_object_ref0 (_tmp0_);
#line 369 "../src/Layouts/ProjectRow.vala"
	row = _tmp1_;
#line 372 "../src/Layouts/ProjectRow.vala"
	gtk_widget_get_allocation ((GtkWidget*) row, &_tmp2_);
#line 372 "../src/Layouts/ProjectRow.vala"
	row_alloc = _tmp2_;
#line 374 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = row_alloc;
#line 374 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = row_alloc;
#line 374 "../src/Layouts/ProjectRow.vala"
	_tmp5_ = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, _tmp3_.width, _tmp4_.height);
#line 374 "../src/Layouts/ProjectRow.vala"
	surface = _tmp5_;
#line 375 "../src/Layouts/ProjectRow.vala"
	_tmp6_ = cairo_create (surface);
#line 375 "../src/Layouts/ProjectRow.vala"
	cairo_context = _tmp6_;
#line 377 "../src/Layouts/ProjectRow.vala"
	_tmp7_ = gtk_widget_get_style_context ((GtkWidget*) row);
#line 377 "../src/Layouts/ProjectRow.vala"
	_tmp8_ = _g_object_ref0 (_tmp7_);
#line 377 "../src/Layouts/ProjectRow.vala"
	style_context = _tmp8_;
#line 378 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (style_context, "drag-begin");
#line 379 "../src/Layouts/ProjectRow.vala"
	gtk_widget_draw ((GtkWidget*) row, cairo_context);
#line 380 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_remove_class (style_context, "drag-begin");
#line 383 "../src/Layouts/ProjectRow.vala"
	gtk_widget_translate_coordinates (widget, (GtkWidget*) row, 0, 0, &_tmp9_, &_tmp10_);
#line 383 "../src/Layouts/ProjectRow.vala"
	drag_icon_x = _tmp9_;
#line 383 "../src/Layouts/ProjectRow.vala"
	drag_icon_y = _tmp10_;
#line 384 "../src/Layouts/ProjectRow.vala"
	cairo_surface_set_device_offset (surface, (gdouble) (-drag_icon_x), (gdouble) (-drag_icon_y));
#line 386 "../src/Layouts/ProjectRow.vala"
	gtk_drag_set_icon_surface (context, surface);
#line 387 "../src/Layouts/ProjectRow.vala"
	_tmp11_ = self->priv->main_revealer;
#line 387 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp11_, FALSE);
#line 368 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (style_context);
#line 368 "../src/Layouts/ProjectRow.vala"
	_cairo_destroy0 (cairo_context);
#line 368 "../src/Layouts/ProjectRow.vala"
	_cairo_surface_destroy0 (surface);
#line 368 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (row);
#line 1088 "ProjectRow.c"
}

static void
layouts_project_row_on_drag_data_get (LayoutsProjectRow* self,
                                      GtkWidget* widget,
                                      GdkDragContext* context,
                                      GtkSelectionData* selection_data,
                                      guint target_type,
                                      guint time)
{
	guchar* data = NULL;
	guchar* _tmp0_;
	gint data_length1;
	gint _data_size_;
	GtkWidget* _tmp1_;
#line 390 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 390 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (widget != NULL);
#line 390 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (context != NULL);
#line 390 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (selection_data != NULL);
#line 392 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = g_new0 (guchar, sizeof (LayoutsProjectRow*));
#line 392 "../src/Layouts/ProjectRow.vala"
	data = _tmp0_;
#line 392 "../src/Layouts/ProjectRow.vala"
	data_length1 = sizeof (LayoutsProjectRow*);
#line 392 "../src/Layouts/ProjectRow.vala"
	_data_size_ = data_length1;
#line 393 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = _g_object_ref0 (widget);
#line 393 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (((GtkWidget**) data)[0]);
#line 393 "../src/Layouts/ProjectRow.vala"
	((GtkWidget**) data)[0] = _tmp1_;
#line 395 "../src/Layouts/ProjectRow.vala"
	gtk_selection_data_set (selection_data, gdk_atom_intern_static_string ("PROJECTROW"), 32, data, (gint) data_length1);
#line 390 "../src/Layouts/ProjectRow.vala"
	data = (g_free (data), NULL);
#line 1130 "ProjectRow.c"
}

void
layouts_project_row_clear_indicator (LayoutsProjectRow* self,
                                     GdkDragContext* context)
{
	GtkRevealer* _tmp0_;
#line 400 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 400 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (context != NULL);
#line 401 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->main_revealer;
#line 401 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp0_, TRUE);
#line 1146 "ProjectRow.c"
}

static void
layouts_project_row_on_drag_data_received (LayoutsProjectRow* self,
                                           GdkDragContext* context,
                                           gint x,
                                           gint y,
                                           GtkSelectionData* selection_data,
                                           guint target_type,
                                           guint time)
{
	GtkWidget* data = NULL;
	guint8* _tmp0_;
	GtkWidget* _tmp1_;
	GtkWidget* _tmp2_;
	LayoutsProjectRow* source_row = NULL;
	GtkWidget* _tmp3_;
	LayoutsProjectRow* _tmp4_;
	LayoutsProjectRow* target_row = NULL;
	LayoutsProjectRow* _tmp5_;
	GtkAllocation alloc = {0};
	LayoutsProjectRow* _tmp6_;
	GtkAllocation _tmp7_ = {0};
	gboolean _tmp8_ = FALSE;
	LayoutsProjectRow* _tmp9_;
	LayoutsProjectRow* _tmp10_;
	GtkListBox* source_list = NULL;
	LayoutsProjectRow* _tmp12_;
	GtkContainer* _tmp13_;
	GtkContainer* _tmp14_;
	GtkListBox* _tmp15_;
	GtkListBox* target_list = NULL;
	LayoutsProjectRow* _tmp16_;
	GtkContainer* _tmp17_;
	GtkContainer* _tmp18_;
	GtkListBox* _tmp19_;
	GtkListBox* _tmp20_;
	LayoutsProjectRow* _tmp21_;
	LayoutsProjectRow* _tmp22_;
#line 404 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 404 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (context != NULL);
#line 404 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (selection_data != NULL);
#line 407 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = gtk_selection_data_get_data (selection_data);
#line 407 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = ((GtkWidget**) _tmp0_)[0];
#line 407 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = _g_object_ref0 (_tmp1_);
#line 407 "../src/Layouts/ProjectRow.vala"
	data = _tmp2_;
#line 408 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = data;
#line 408 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRow));
#line 408 "../src/Layouts/ProjectRow.vala"
	source_row = _tmp4_;
#line 409 "../src/Layouts/ProjectRow.vala"
	_tmp5_ = _g_object_ref0 (self);
#line 409 "../src/Layouts/ProjectRow.vala"
	target_row = _tmp5_;
#line 411 "../src/Layouts/ProjectRow.vala"
	_tmp6_ = target_row;
#line 411 "../src/Layouts/ProjectRow.vala"
	gtk_widget_get_allocation ((GtkWidget*) _tmp6_, &_tmp7_);
#line 411 "../src/Layouts/ProjectRow.vala"
	alloc = _tmp7_;
#line 413 "../src/Layouts/ProjectRow.vala"
	_tmp9_ = source_row;
#line 413 "../src/Layouts/ProjectRow.vala"
	_tmp10_ = target_row;
#line 413 "../src/Layouts/ProjectRow.vala"
	if (_tmp9_ == _tmp10_) {
#line 413 "../src/Layouts/ProjectRow.vala"
		_tmp8_ = TRUE;
#line 1224 "ProjectRow.c"
	} else {
		LayoutsProjectRow* _tmp11_;
#line 413 "../src/Layouts/ProjectRow.vala"
		_tmp11_ = target_row;
#line 413 "../src/Layouts/ProjectRow.vala"
		_tmp8_ = _tmp11_ == NULL;
#line 1231 "ProjectRow.c"
	}
#line 413 "../src/Layouts/ProjectRow.vala"
	if (_tmp8_) {
#line 414 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (target_row);
#line 414 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (source_row);
#line 414 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (data);
#line 414 "../src/Layouts/ProjectRow.vala"
		return;
#line 1243 "ProjectRow.c"
	}
#line 417 "../src/Layouts/ProjectRow.vala"
	_tmp12_ = source_row;
#line 417 "../src/Layouts/ProjectRow.vala"
	_tmp13_ = gtk_widget_get_parent ((GtkWidget*) _tmp12_);
#line 417 "../src/Layouts/ProjectRow.vala"
	_tmp14_ = _tmp13_;
#line 417 "../src/Layouts/ProjectRow.vala"
	_tmp15_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp14_, gtk_list_box_get_type (), GtkListBox));
#line 417 "../src/Layouts/ProjectRow.vala"
	source_list = _tmp15_;
#line 418 "../src/Layouts/ProjectRow.vala"
	_tmp16_ = target_row;
#line 418 "../src/Layouts/ProjectRow.vala"
	_tmp17_ = gtk_widget_get_parent ((GtkWidget*) _tmp16_);
#line 418 "../src/Layouts/ProjectRow.vala"
	_tmp18_ = _tmp17_;
#line 418 "../src/Layouts/ProjectRow.vala"
	_tmp19_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp18_, gtk_list_box_get_type (), GtkListBox));
#line 418 "../src/Layouts/ProjectRow.vala"
	target_list = _tmp19_;
#line 420 "../src/Layouts/ProjectRow.vala"
	_tmp20_ = source_list;
#line 420 "../src/Layouts/ProjectRow.vala"
	_tmp21_ = source_row;
#line 420 "../src/Layouts/ProjectRow.vala"
	gtk_container_remove ((GtkContainer*) _tmp20_, (GtkWidget*) _tmp21_);
#line 422 "../src/Layouts/ProjectRow.vala"
	_tmp22_ = target_row;
#line 422 "../src/Layouts/ProjectRow.vala"
	if (gtk_list_box_row_get_index ((GtkListBoxRow*) _tmp22_) == 0) {
#line 1275 "ProjectRow.c"
		GtkAllocation _tmp23_;
#line 423 "../src/Layouts/ProjectRow.vala"
		_tmp23_ = alloc;
#line 423 "../src/Layouts/ProjectRow.vala"
		if (y < (_tmp23_.height / 2)) {
#line 1281 "ProjectRow.c"
			GtkListBox* _tmp24_;
			LayoutsProjectRow* _tmp25_;
#line 424 "../src/Layouts/ProjectRow.vala"
			_tmp24_ = target_list;
#line 424 "../src/Layouts/ProjectRow.vala"
			_tmp25_ = source_row;
#line 424 "../src/Layouts/ProjectRow.vala"
			gtk_list_box_insert (_tmp24_, (GtkWidget*) _tmp25_, 0);
#line 1290 "ProjectRow.c"
		} else {
			GtkListBox* _tmp26_;
			LayoutsProjectRow* _tmp27_;
			LayoutsProjectRow* _tmp28_;
#line 426 "../src/Layouts/ProjectRow.vala"
			_tmp26_ = target_list;
#line 426 "../src/Layouts/ProjectRow.vala"
			_tmp27_ = source_row;
#line 426 "../src/Layouts/ProjectRow.vala"
			_tmp28_ = target_row;
#line 426 "../src/Layouts/ProjectRow.vala"
			gtk_list_box_insert (_tmp26_, (GtkWidget*) _tmp27_, gtk_list_box_row_get_index ((GtkListBoxRow*) _tmp28_) + 1);
#line 1303 "ProjectRow.c"
		}
	} else {
		GtkListBox* _tmp29_;
		LayoutsProjectRow* _tmp30_;
		LayoutsProjectRow* _tmp31_;
#line 429 "../src/Layouts/ProjectRow.vala"
		_tmp29_ = target_list;
#line 429 "../src/Layouts/ProjectRow.vala"
		_tmp30_ = source_row;
#line 429 "../src/Layouts/ProjectRow.vala"
		_tmp31_ = target_row;
#line 429 "../src/Layouts/ProjectRow.vala"
		gtk_list_box_insert (_tmp29_, (GtkWidget*) _tmp30_, gtk_list_box_row_get_index ((GtkListBoxRow*) _tmp31_) + 1);
#line 1317 "ProjectRow.c"
	}
#line 404 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (target_list);
#line 404 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (source_list);
#line 404 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (target_row);
#line 404 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (source_row);
#line 404 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (data);
#line 1329 "ProjectRow.c"
}

gboolean
layouts_project_row_on_drag_motion (LayoutsProjectRow* self,
                                    GdkDragContext* context,
                                    gint x,
                                    gint y,
                                    guint time)
{
	GtkAllocation alloc = {0};
	GtkEventBox* _tmp0_;
	GtkAllocation _tmp1_ = {0};
	gboolean result = FALSE;
#line 433 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 433 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (context != NULL, FALSE);
#line 435 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->projectrow_eventbox;
#line 435 "../src/Layouts/ProjectRow.vala"
	gtk_widget_get_allocation ((GtkWidget*) _tmp0_, &_tmp1_);
#line 435 "../src/Layouts/ProjectRow.vala"
	alloc = _tmp1_;
#line 437 "../src/Layouts/ProjectRow.vala"
	if (gtk_list_box_row_get_index ((GtkListBoxRow*) self) == 0) {
#line 1355 "ProjectRow.c"
		GtkAllocation _tmp2_;
#line 438 "../src/Layouts/ProjectRow.vala"
		_tmp2_ = alloc;
#line 438 "../src/Layouts/ProjectRow.vala"
		if (y > (_tmp2_.height / 2)) {
#line 1361 "ProjectRow.c"
			GtkRevealer* _tmp3_;
			GtkRevealer* _tmp4_;
#line 439 "../src/Layouts/ProjectRow.vala"
			_tmp3_ = self->priv->bottom_motion_revealer;
#line 439 "../src/Layouts/ProjectRow.vala"
			gtk_revealer_set_reveal_child (_tmp3_, TRUE);
#line 440 "../src/Layouts/ProjectRow.vala"
			_tmp4_ = self->priv->top_motion_revealer;
#line 440 "../src/Layouts/ProjectRow.vala"
			gtk_revealer_set_reveal_child (_tmp4_, FALSE);
#line 1372 "ProjectRow.c"
		} else {
			GtkRevealer* _tmp5_;
			GtkRevealer* _tmp6_;
#line 442 "../src/Layouts/ProjectRow.vala"
			_tmp5_ = self->priv->bottom_motion_revealer;
#line 442 "../src/Layouts/ProjectRow.vala"
			gtk_revealer_set_reveal_child (_tmp5_, FALSE);
#line 443 "../src/Layouts/ProjectRow.vala"
			_tmp6_ = self->priv->top_motion_revealer;
#line 443 "../src/Layouts/ProjectRow.vala"
			gtk_revealer_set_reveal_child (_tmp6_, TRUE);
#line 1384 "ProjectRow.c"
		}
	} else {
		GtkRevealer* _tmp7_;
#line 446 "../src/Layouts/ProjectRow.vala"
		_tmp7_ = self->priv->bottom_motion_revealer;
#line 446 "../src/Layouts/ProjectRow.vala"
		gtk_revealer_set_reveal_child (_tmp7_, TRUE);
#line 1392 "ProjectRow.c"
	}
#line 449 "../src/Layouts/ProjectRow.vala"
	result = TRUE;
#line 449 "../src/Layouts/ProjectRow.vala"
	return result;
#line 1398 "ProjectRow.c"
}

void
layouts_project_row_on_drag_leave (LayoutsProjectRow* self,
                                   GdkDragContext* context,
                                   guint time)
{
	GtkRevealer* _tmp0_;
	GtkRevealer* _tmp1_;
#line 452 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 452 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (context != NULL);
#line 453 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->bottom_motion_revealer;
#line 453 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp0_, FALSE);
#line 454 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->priv->top_motion_revealer;
#line 454 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp1_, FALSE);
#line 1420 "ProjectRow.c"
}

static Block13Data*
block13_data_ref (Block13Data* _data13_)
{
#line 457 "../src/Layouts/ProjectRow.vala"
	g_atomic_int_inc (&_data13_->_ref_count_);
#line 457 "../src/Layouts/ProjectRow.vala"
	return _data13_;
#line 1430 "ProjectRow.c"
}

static void
block13_data_unref (void * _userdata_)
{
	Block13Data* _data13_;
	_data13_ = (Block13Data*) _userdata_;
#line 457 "../src/Layouts/ProjectRow.vala"
	if (g_atomic_int_dec_and_test (&_data13_->_ref_count_)) {
#line 1440 "ProjectRow.c"
		LayoutsProjectRow* self;
#line 457 "../src/Layouts/ProjectRow.vala"
		self = _data13_->self;
#line 457 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (_data13_->menu);
#line 457 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (self);
#line 457 "../src/Layouts/ProjectRow.vala"
		g_slice_free (Block13Data, _data13_);
#line 1450 "ProjectRow.c"
	}
}

static void
__lambda191_ (Block13Data* _data13_)
{
	LayoutsProjectRow* self;
	DialogsContextMenuMenu* _tmp0_;
	ObjectsProject* _tmp1_;
	ObjectsProject* _tmp2_;
	gboolean _tmp3_;
	gboolean _tmp4_;
	ServicesDatabase* _tmp5_;
	ObjectsProject* _tmp6_;
	ServicesEventBus* _tmp7_;
	ObjectsProject* _tmp8_;
	ObjectsProject* _tmp9_;
#line 500 "../src/Layouts/ProjectRow.vala"
	self = _data13_->self;
#line 501 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = _data13_->menu;
#line 501 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_hide_destroy (_tmp0_);
#line 502 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->priv->_project;
#line 502 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = self->priv->_project;
#line 502 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = objects_project_get_is_favorite (_tmp2_);
#line 502 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = _tmp3_;
#line 502 "../src/Layouts/ProjectRow.vala"
	objects_project_set_is_favorite (_tmp1_, !_tmp4_);
#line 503 "../src/Layouts/ProjectRow.vala"
	_tmp5_ = planner_database;
#line 503 "../src/Layouts/ProjectRow.vala"
	_tmp6_ = self->priv->_project;
#line 503 "../src/Layouts/ProjectRow.vala"
	services_database_update_project (_tmp5_, _tmp6_);
#line 504 "../src/Layouts/ProjectRow.vala"
	_tmp7_ = planner_event_bus;
#line 504 "../src/Layouts/ProjectRow.vala"
	_tmp8_ = self->priv->_project;
#line 504 "../src/Layouts/ProjectRow.vala"
	g_signal_emit_by_name (_tmp7_, "favorite-toggled", _tmp8_);
#line 505 "../src/Layouts/ProjectRow.vala"
	_tmp9_ = self->priv->_project;
#line 505 "../src/Layouts/ProjectRow.vala"
	objects_project_update (_tmp9_, TRUE);
#line 1500 "ProjectRow.c"
}

static void
___lambda191__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                            gpointer self)
{
#line 500 "../src/Layouts/ProjectRow.vala"
	__lambda191_ (self);
#line 1509 "ProjectRow.c"
}

static void
__lambda192_ (Block13Data* _data13_)
{
	LayoutsProjectRow* self;
	DialogsContextMenuMenu* _tmp0_;
	ObjectsProject* _tmp1_;
#line 508 "../src/Layouts/ProjectRow.vala"
	self = _data13_->self;
#line 509 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = _data13_->menu;
#line 509 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_hide_destroy (_tmp0_);
#line 510 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->priv->_project;
#line 510 "../src/Layouts/ProjectRow.vala"
	objects_project_delete (_tmp1_, TRUE);
#line 1528 "ProjectRow.c"
}

static void
___lambda192__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                            gpointer self)
{
#line 508 "../src/Layouts/ProjectRow.vala"
	__lambda192_ (self);
#line 1537 "ProjectRow.c"
}

static void
__lambda193_ (Block13Data* _data13_)
{
	LayoutsProjectRow* self;
	DialogsContextMenuMenu* _tmp0_;
	DialogsProject* dialog = NULL;
	ObjectsProject* _tmp1_;
	DialogsProject* _tmp2_;
#line 513 "../src/Layouts/ProjectRow.vala"
	self = _data13_->self;
#line 514 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = _data13_->menu;
#line 514 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_hide_destroy (_tmp0_);
#line 515 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->priv->_project;
#line 515 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = dialogs_project_new (_tmp1_);
#line 515 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp2_);
#line 515 "../src/Layouts/ProjectRow.vala"
	dialog = _tmp2_;
#line 516 "../src/Layouts/ProjectRow.vala"
	gtk_widget_show_all ((GtkWidget*) dialog);
#line 513 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (dialog);
#line 1566 "ProjectRow.c"
}

static void
___lambda193__gtk_button_clicked (GtkButton* _sender,
                                  gpointer self)
{
#line 513 "../src/Layouts/ProjectRow.vala"
	__lambda193_ (self);
#line 1575 "ProjectRow.c"
}

static void
layouts_project_row_build_content_menu (LayoutsProjectRow* self)
{
	Block13Data* _data13_;
	DialogsContextMenuMenu* _tmp0_;
	const gchar* _tmp1_ = NULL;
	ObjectsProject* _tmp2_;
	gboolean _tmp3_;
	gboolean _tmp4_;
	DialogsContextMenuMenuItem* favorite_item = NULL;
	DialogsContextMenuMenuItem* _tmp5_;
	DialogsContextMenuMenuItem* edit_item = NULL;
	DialogsContextMenuMenuItem* _tmp6_;
	DialogsContextMenuMenuItemSelector* share_item = NULL;
	DialogsContextMenuMenuItemSelector* _tmp7_;
	DialogsContextMenuMenuItem* delete_item = NULL;
	DialogsContextMenuMenuItem* _tmp8_;
	GtkStyleContext* delete_item_context = NULL;
	GtkStyleContext* _tmp9_;
	GtkStyleContext* _tmp10_;
	DialogsContextMenuMenuItem* share_markdown = NULL;
	DialogsContextMenuMenuItem* _tmp11_;
	DialogsContextMenuMenuItem* email_markdown = NULL;
	DialogsContextMenuMenuItem* _tmp12_;
	DialogsContextMenuMenu* _tmp13_;
	DialogsContextMenuMenu* _tmp14_;
	DialogsContextMenuMenu* _tmp15_;
	DialogsContextMenuMenuSeparator* _tmp16_;
	DialogsContextMenuMenuSeparator* _tmp17_;
	DialogsContextMenuMenu* _tmp18_;
	DialogsContextMenuMenu* _tmp19_;
	DialogsContextMenuMenuSeparator* _tmp20_;
	DialogsContextMenuMenuSeparator* _tmp21_;
	DialogsContextMenuMenu* _tmp22_;
	DialogsContextMenuMenu* _tmp23_;
#line 457 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 457 "../src/Layouts/ProjectRow.vala"
	_data13_ = g_slice_new0 (Block13Data);
#line 457 "../src/Layouts/ProjectRow.vala"
	_data13_->_ref_count_ = 1;
#line 457 "../src/Layouts/ProjectRow.vala"
	_data13_->self = g_object_ref (self);
#line 458 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = dialogs_context_menu_menu_new ();
#line 458 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp0_);
#line 458 "../src/Layouts/ProjectRow.vala"
	_data13_->menu = _tmp0_;
#line 460 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = self->priv->_project;
#line 460 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = objects_project_get_is_favorite (_tmp2_);
#line 460 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = _tmp3_;
#line 460 "../src/Layouts/ProjectRow.vala"
	if (_tmp4_) {
#line 460 "../src/Layouts/ProjectRow.vala"
		_tmp1_ = "Remove from favorites";
#line 1637 "ProjectRow.c"
	} else {
#line 460 "../src/Layouts/ProjectRow.vala"
		_tmp1_ = "Add to favorites";
#line 1641 "ProjectRow.c"
	}
#line 460 "../src/Layouts/ProjectRow.vala"
	_tmp5_ = dialogs_context_menu_menu_item_new (_tmp1_, "planner-star");
#line 460 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp5_);
#line 460 "../src/Layouts/ProjectRow.vala"
	favorite_item = _tmp5_;
#line 461 "../src/Layouts/ProjectRow.vala"
	_tmp6_ = dialogs_context_menu_menu_item_new ("Edit project", "planner-edit");
#line 461 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp6_);
#line 461 "../src/Layouts/ProjectRow.vala"
	edit_item = _tmp6_;
#line 464 "../src/Layouts/ProjectRow.vala"
	_tmp7_ = dialogs_context_menu_menu_item_selector_new (_ ("Share"), FALSE);
#line 464 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp7_);
#line 464 "../src/Layouts/ProjectRow.vala"
	share_item = _tmp7_;
#line 465 "../src/Layouts/ProjectRow.vala"
	_tmp8_ = dialogs_context_menu_menu_item_new (_ ("Delete project"), "planner-trash");
#line 465 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp8_);
#line 465 "../src/Layouts/ProjectRow.vala"
	delete_item = _tmp8_;
#line 467 "../src/Layouts/ProjectRow.vala"
	_tmp9_ = gtk_widget_get_style_context ((GtkWidget*) delete_item);
#line 467 "../src/Layouts/ProjectRow.vala"
	_tmp10_ = _g_object_ref0 (_tmp9_);
#line 467 "../src/Layouts/ProjectRow.vala"
	delete_item_context = _tmp10_;
#line 468 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (delete_item_context, "menu-item-danger");
#line 470 "../src/Layouts/ProjectRow.vala"
	_tmp11_ = dialogs_context_menu_menu_item_new (_ ("Markdown"), "planner-trash");
#line 470 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp11_);
#line 470 "../src/Layouts/ProjectRow.vala"
	share_markdown = _tmp11_;
#line 471 "../src/Layouts/ProjectRow.vala"
	_tmp12_ = dialogs_context_menu_menu_item_new (_ ("Email"), "planner-trash");
#line 471 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp12_);
#line 471 "../src/Layouts/ProjectRow.vala"
	email_markdown = _tmp12_;
#line 487 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_item_selector_add_item (share_item, (GtkWidget*) share_markdown, -1);
#line 488 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_item_selector_add_item (share_item, (GtkWidget*) email_markdown, -1);
#line 490 "../src/Layouts/ProjectRow.vala"
	_tmp13_ = _data13_->menu;
#line 490 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_add_item (_tmp13_, (GtkWidget*) favorite_item);
#line 491 "../src/Layouts/ProjectRow.vala"
	_tmp14_ = _data13_->menu;
#line 491 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_add_item (_tmp14_, (GtkWidget*) edit_item);
#line 492 "../src/Layouts/ProjectRow.vala"
	_tmp15_ = _data13_->menu;
#line 492 "../src/Layouts/ProjectRow.vala"
	_tmp16_ = dialogs_context_menu_menu_separator_new ();
#line 492 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp16_);
#line 492 "../src/Layouts/ProjectRow.vala"
	_tmp17_ = _tmp16_;
#line 492 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_add_item (_tmp15_, (GtkWidget*) _tmp17_);
#line 492 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (_tmp17_);
#line 494 "../src/Layouts/ProjectRow.vala"
	_tmp18_ = _data13_->menu;
#line 494 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_add_item (_tmp18_, (GtkWidget*) share_item);
#line 495 "../src/Layouts/ProjectRow.vala"
	_tmp19_ = _data13_->menu;
#line 495 "../src/Layouts/ProjectRow.vala"
	_tmp20_ = dialogs_context_menu_menu_separator_new ();
#line 495 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp20_);
#line 495 "../src/Layouts/ProjectRow.vala"
	_tmp21_ = _tmp20_;
#line 495 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_add_item (_tmp19_, (GtkWidget*) _tmp21_);
#line 495 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (_tmp21_);
#line 496 "../src/Layouts/ProjectRow.vala"
	_tmp22_ = _data13_->menu;
#line 496 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_add_item (_tmp22_, (GtkWidget*) delete_item);
#line 498 "../src/Layouts/ProjectRow.vala"
	_tmp23_ = _data13_->menu;
#line 498 "../src/Layouts/ProjectRow.vala"
	dialogs_context_menu_menu_popup (_tmp23_);
#line 500 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_data (favorite_item, "activate-item", (GCallback) ___lambda191__dialogs_context_menu_menu_item_activate_item, block13_data_ref (_data13_), (GClosureNotify) block13_data_unref, 0);
#line 508 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_data (delete_item, "activate-item", (GCallback) ___lambda192__dialogs_context_menu_menu_item_activate_item, block13_data_ref (_data13_), (GClosureNotify) block13_data_unref, 0);
#line 513 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_data ((GtkButton*) edit_item, "clicked", (GCallback) ___lambda193__gtk_button_clicked, block13_data_ref (_data13_), (GClosureNotify) block13_data_unref, 0);
#line 457 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (email_markdown);
#line 457 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (share_markdown);
#line 457 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (delete_item_context);
#line 457 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (delete_item);
#line 457 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (share_item);
#line 457 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (edit_item);
#line 457 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (favorite_item);
#line 457 "../src/Layouts/ProjectRow.vala"
	block13_data_unref (_data13_);
#line 457 "../src/Layouts/ProjectRow.vala"
	_data13_ = NULL;
#line 1759 "ProjectRow.c"
}

ObjectsProject*
layouts_project_row_get_project (LayoutsProjectRow* self)
{
	ObjectsProject* result;
	ObjectsProject* _tmp0_;
#line 23 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 23 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->_project;
#line 23 "../src/Layouts/ProjectRow.vala"
	result = _tmp0_;
#line 23 "../src/Layouts/ProjectRow.vala"
	return result;
#line 1775 "ProjectRow.c"
}

static void
layouts_project_row_set_project (LayoutsProjectRow* self,
                                 ObjectsProject* value)
{
	ObjectsProject* old_value;
#line 23 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 23 "../src/Layouts/ProjectRow.vala"
	old_value = layouts_project_row_get_project (self);
#line 23 "../src/Layouts/ProjectRow.vala"
	if (old_value != value) {
#line 1789 "ProjectRow.c"
		ObjectsProject* _tmp0_;
#line 23 "../src/Layouts/ProjectRow.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 23 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (self->priv->_project);
#line 23 "../src/Layouts/ProjectRow.vala"
		self->priv->_project = _tmp0_;
#line 23 "../src/Layouts/ProjectRow.vala"
		g_object_notify_by_pspec ((GObject *) self, layouts_project_row_properties[LAYOUTS_PROJECT_ROW_PROJECT_PROPERTY]);
#line 1799 "ProjectRow.c"
	}
}

gboolean
layouts_project_row_get_show_subprojects (LayoutsProjectRow* self)
{
	gboolean result;
#line 24 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 24 "../src/Layouts/ProjectRow.vala"
	result = self->priv->_show_subprojects;
#line 24 "../src/Layouts/ProjectRow.vala"
	return result;
#line 1813 "ProjectRow.c"
}

static void
layouts_project_row_set_show_subprojects (LayoutsProjectRow* self,
                                          gboolean value)
{
	gboolean old_value;
#line 24 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (self != NULL);
#line 24 "../src/Layouts/ProjectRow.vala"
	old_value = layouts_project_row_get_show_subprojects (self);
#line 24 "../src/Layouts/ProjectRow.vala"
	if (old_value != value) {
#line 24 "../src/Layouts/ProjectRow.vala"
		self->priv->_show_subprojects = value;
#line 24 "../src/Layouts/ProjectRow.vala"
		g_object_notify_by_pspec ((GObject *) self, layouts_project_row_properties[LAYOUTS_PROJECT_ROW_SHOW_SUBPROJECTS_PROPERTY]);
#line 1831 "ProjectRow.c"
	}
}

static gboolean
layouts_project_row_get_has_subprojects (LayoutsProjectRow* self)
{
	gboolean result;
	GtkListBox* _tmp0_;
	GList* _tmp1_;
	GList* _tmp2_;
	gboolean _tmp3_;
#line 42 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 43 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->listbox;
#line 43 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = gtk_container_get_children ((GtkContainer*) _tmp0_);
#line 43 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = _tmp1_;
#line 43 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = g_list_length (_tmp2_) > ((guint) 0);
#line 43 "../src/Layouts/ProjectRow.vala"
	(_tmp2_ == NULL) ? NULL : (_tmp2_ = (g_list_free (_tmp2_), NULL));
#line 43 "../src/Layouts/ProjectRow.vala"
	result = _tmp3_;
#line 43 "../src/Layouts/ProjectRow.vala"
	return result;
#line 1859 "ProjectRow.c"
}

static Block14Data*
block14_data_ref (Block14Data* _data14_)
{
#line 60 "../src/Layouts/ProjectRow.vala"
	g_atomic_int_inc (&_data14_->_ref_count_);
#line 60 "../src/Layouts/ProjectRow.vala"
	return _data14_;
#line 1869 "ProjectRow.c"
}

static void
block14_data_unref (void * _userdata_)
{
	Block14Data* _data14_;
	_data14_ = (Block14Data*) _userdata_;
#line 60 "../src/Layouts/ProjectRow.vala"
	if (g_atomic_int_dec_and_test (&_data14_->_ref_count_)) {
#line 1879 "ProjectRow.c"
		LayoutsProjectRow* self;
#line 60 "../src/Layouts/ProjectRow.vala"
		self = _data14_->self;
#line 60 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (_data14_->menu_stack);
#line 60 "../src/Layouts/ProjectRow.vala"
		_g_object_unref0 (self);
#line 60 "../src/Layouts/ProjectRow.vala"
		g_slice_free (Block14Data, _data14_);
#line 1889 "ProjectRow.c"
	}
}

static gboolean
_layouts_project_row___lambda205_ (LayoutsProjectRow* self)
{
	ObjectsProject* _tmp0_;
	ProjectIconStyle _tmp1_;
	ProjectIconStyle _tmp2_;
	gboolean result = FALSE;
#line 199 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->_project;
#line 199 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = objects_project_get_icon_style (_tmp0_);
#line 199 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = _tmp1_;
#line 199 "../src/Layouts/ProjectRow.vala"
	if (_tmp2_ == PROJECT_ICON_STYLE_PROGRESS) {
#line 1908 "ProjectRow.c"
		GtkStack* _tmp3_;
#line 200 "../src/Layouts/ProjectRow.vala"
		_tmp3_ = self->priv->progress_emoji_stack;
#line 200 "../src/Layouts/ProjectRow.vala"
		gtk_stack_set_visible_child_name (_tmp3_, "progress");
#line 1914 "ProjectRow.c"
	} else {
		GtkStack* _tmp4_;
#line 202 "../src/Layouts/ProjectRow.vala"
		_tmp4_ = self->priv->progress_emoji_stack;
#line 202 "../src/Layouts/ProjectRow.vala"
		gtk_stack_set_visible_child_name (_tmp4_, "label");
#line 1921 "ProjectRow.c"
	}
#line 205 "../src/Layouts/ProjectRow.vala"
	result = G_SOURCE_REMOVE;
#line 205 "../src/Layouts/ProjectRow.vala"
	return result;
#line 1927 "ProjectRow.c"
}

static gboolean
__layouts_project_row___lambda205__gsource_func (gpointer self)
{
	gboolean result;
	result = _layouts_project_row___lambda205_ ((LayoutsProjectRow*) self);
#line 198 "../src/Layouts/ProjectRow.vala"
	return result;
#line 1937 "ProjectRow.c"
}

static gboolean
_layouts_project_row___lambda206_ (LayoutsProjectRow* self)
{
	GtkRevealer* _tmp0_;
	gboolean result = FALSE;
#line 215 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->main_revealer;
#line 215 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp0_, TRUE);
#line 216 "../src/Layouts/ProjectRow.vala"
	result = G_SOURCE_REMOVE;
#line 216 "../src/Layouts/ProjectRow.vala"
	return result;
#line 1953 "ProjectRow.c"
}

static gboolean
__layouts_project_row___lambda206__gsource_func (gpointer self)
{
	gboolean result;
	result = _layouts_project_row___lambda206_ ((LayoutsProjectRow*) self);
#line 214 "../src/Layouts/ProjectRow.vala"
	return result;
#line 1963 "ProjectRow.c"
}

static void
_layouts_project_row___lambda207_ (LayoutsProjectRow* self)
{
#line 220 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_update_request (self);
#line 1971 "ProjectRow.c"
}

static void
__layouts_project_row___lambda207__objects_base_object_updated (ObjectsBaseObject* _sender,
                                                                gpointer self)
{
#line 219 "../src/Layouts/ProjectRow.vala"
	_layouts_project_row___lambda207_ ((LayoutsProjectRow*) self);
#line 1980 "ProjectRow.c"
}

static void
_layouts_project_row___lambda208_ (LayoutsProjectRow* self)
{
#line 224 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_hide_destroy (self);
#line 1988 "ProjectRow.c"
}

static void
__layouts_project_row___lambda208__objects_base_object_deleted (ObjectsBaseObject* _sender,
                                                                gpointer self)
{
#line 223 "../src/Layouts/ProjectRow.vala"
	_layouts_project_row___lambda208_ ((LayoutsProjectRow*) self);
#line 1997 "ProjectRow.c"
}

static void
_layouts_project_row___lambda209_ (LayoutsProjectRow* self,
                                   ObjectsProject* subproject)
{
#line 227 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (subproject != NULL);
#line 228 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_add_subproject (self, subproject);
#line 2008 "ProjectRow.c"
}

static void
__layouts_project_row___lambda209__objects_project_subproject_added (ObjectsProject* _sender,
                                                                     ObjectsProject* project,
                                                                     gpointer self)
{
#line 227 "../src/Layouts/ProjectRow.vala"
	_layouts_project_row___lambda209_ ((LayoutsProjectRow*) self, project);
#line 2018 "ProjectRow.c"
}

static void
_layouts_project_row___lambda210_ (LayoutsProjectRow* self)
{
	WidgetsProjectProgress* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
	GtkRevealer* _tmp3_;
	gboolean _tmp4_;
	gboolean _tmp5_;
#line 232 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->project_progress;
#line 232 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = layouts_project_row_get_has_subprojects (self);
#line 232 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = _tmp1_;
#line 232 "../src/Layouts/ProjectRow.vala"
	_tmp0_->has_subprojects = _tmp2_;
#line 233 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = self->priv->listbox_revealer;
#line 233 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = layouts_project_row_get_has_subprojects (self);
#line 233 "../src/Layouts/ProjectRow.vala"
	_tmp5_ = _tmp4_;
#line 233 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp3_, _tmp5_);
#line 2046 "ProjectRow.c"
}

static void
__layouts_project_row___lambda210__gtk_container_add (GtkContainer* _sender,
                                                      GtkWidget* widget,
                                                      gpointer self)
{
#line 231 "../src/Layouts/ProjectRow.vala"
	_layouts_project_row___lambda210_ ((LayoutsProjectRow*) self);
#line 2056 "ProjectRow.c"
}

static void
_layouts_project_row___lambda211_ (LayoutsProjectRow* self)
{
	WidgetsProjectProgress* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
	GtkRevealer* _tmp3_;
	gboolean _tmp4_;
	gboolean _tmp5_;
#line 237 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->project_progress;
#line 237 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = layouts_project_row_get_has_subprojects (self);
#line 237 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = _tmp1_;
#line 237 "../src/Layouts/ProjectRow.vala"
	_tmp0_->has_subprojects = _tmp2_;
#line 238 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = self->priv->listbox_revealer;
#line 238 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = layouts_project_row_get_has_subprojects (self);
#line 238 "../src/Layouts/ProjectRow.vala"
	_tmp5_ = _tmp4_;
#line 238 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp3_, _tmp5_);
#line 2084 "ProjectRow.c"
}

static void
__layouts_project_row___lambda211__gtk_container_remove (GtkContainer* _sender,
                                                         GtkWidget* widget,
                                                         gpointer self)
{
#line 236 "../src/Layouts/ProjectRow.vala"
	_layouts_project_row___lambda211_ ((LayoutsProjectRow*) self);
#line 2094 "ProjectRow.c"
}

static gboolean
___lambda213_ (LayoutsProjectRow* self)
{
	GtkRevealer* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
	gboolean result = FALSE;
#line 244 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->main_revealer;
#line 244 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = gtk_revealer_get_reveal_child (_tmp0_);
#line 244 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = _tmp1_;
#line 244 "../src/Layouts/ProjectRow.vala"
	if (_tmp2_) {
#line 2112 "ProjectRow.c"
		ServicesEventBus* _tmp3_;
		ObjectsProject* _tmp4_;
		const gchar* _tmp5_;
		const gchar* _tmp6_;
#line 245 "../src/Layouts/ProjectRow.vala"
		_tmp3_ = planner_event_bus;
#line 245 "../src/Layouts/ProjectRow.vala"
		_tmp4_ = self->priv->_project;
#line 245 "../src/Layouts/ProjectRow.vala"
		_tmp5_ = objects_base_object_get_id_string ((ObjectsBaseObject*) _tmp4_);
#line 245 "../src/Layouts/ProjectRow.vala"
		_tmp6_ = _tmp5_;
#line 245 "../src/Layouts/ProjectRow.vala"
		g_signal_emit_by_name (_tmp3_, "pane-selected", PANE_TYPE_PROJECT, _tmp6_);
#line 2127 "ProjectRow.c"
	}
#line 247 "../src/Layouts/ProjectRow.vala"
	result = G_SOURCE_REMOVE;
#line 247 "../src/Layouts/ProjectRow.vala"
	return result;
#line 2133 "ProjectRow.c"
}

static gboolean
____lambda213__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda213_ ((LayoutsProjectRow*) self);
#line 243 "../src/Layouts/ProjectRow.vala"
	return result;
#line 2143 "ProjectRow.c"
}

static gboolean
_layouts_project_row___lambda212_ (LayoutsProjectRow* self,
                                   GtkWidget* sender,
                                   GdkEventButton* evt)
{
	gboolean _tmp0_ = FALSE;
	GdkEventType _tmp1_;
	gboolean result = FALSE;
#line 241 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (sender != NULL, FALSE);
#line 241 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (evt != NULL, FALSE);
#line 242 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = evt->type;
#line 242 "../src/Layouts/ProjectRow.vala"
	if (_tmp1_ == GDK_BUTTON_PRESS) {
#line 242 "../src/Layouts/ProjectRow.vala"
		_tmp0_ = evt->button == ((guint) 1);
#line 2164 "ProjectRow.c"
	} else {
#line 242 "../src/Layouts/ProjectRow.vala"
		_tmp0_ = FALSE;
#line 2168 "ProjectRow.c"
	}
#line 242 "../src/Layouts/ProjectRow.vala"
	if (_tmp0_) {
#line 243 "../src/Layouts/ProjectRow.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) CONSTANTS_DRAG_TIMEOUT, ____lambda213__gsource_func, g_object_ref (self), g_object_unref);
#line 2174 "ProjectRow.c"
	} else {
		gboolean _tmp2_ = FALSE;
		GdkEventType _tmp3_;
#line 249 "../src/Layouts/ProjectRow.vala"
		_tmp3_ = evt->type;
#line 249 "../src/Layouts/ProjectRow.vala"
		if (_tmp3_ == GDK_BUTTON_PRESS) {
#line 249 "../src/Layouts/ProjectRow.vala"
			_tmp2_ = evt->button == ((guint) 3);
#line 2184 "ProjectRow.c"
		} else {
#line 249 "../src/Layouts/ProjectRow.vala"
			_tmp2_ = FALSE;
#line 2188 "ProjectRow.c"
		}
#line 249 "../src/Layouts/ProjectRow.vala"
		if (_tmp2_) {
#line 250 "../src/Layouts/ProjectRow.vala"
			layouts_project_row_build_content_menu (self);
#line 2194 "ProjectRow.c"
		}
	}
#line 253 "../src/Layouts/ProjectRow.vala"
	result = GDK_EVENT_PROPAGATE;
#line 253 "../src/Layouts/ProjectRow.vala"
	return result;
#line 2201 "ProjectRow.c"
}

static gboolean
__layouts_project_row___lambda212__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                  GdkEventButton* event,
                                                                  gpointer self)
{
	gboolean result;
	result = _layouts_project_row___lambda212_ ((LayoutsProjectRow*) self, _sender, event);
#line 241 "../src/Layouts/ProjectRow.vala"
	return result;
#line 2213 "ProjectRow.c"
}

static void
_layouts_project_row___lambda214_ (LayoutsProjectRow* self,
                                   PaneType pane_type,
                                   const gchar* id)
{
	gboolean _tmp0_ = FALSE;
#line 256 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (id != NULL);
#line 257 "../src/Layouts/ProjectRow.vala"
	if (pane_type == PANE_TYPE_PROJECT) {
#line 2226 "ProjectRow.c"
		ObjectsProject* _tmp1_;
		const gchar* _tmp2_;
		const gchar* _tmp3_;
#line 257 "../src/Layouts/ProjectRow.vala"
		_tmp1_ = self->priv->_project;
#line 257 "../src/Layouts/ProjectRow.vala"
		_tmp2_ = objects_base_object_get_id_string ((ObjectsBaseObject*) _tmp1_);
#line 257 "../src/Layouts/ProjectRow.vala"
		_tmp3_ = _tmp2_;
#line 257 "../src/Layouts/ProjectRow.vala"
		_tmp0_ = g_strcmp0 (_tmp3_, id) == 0;
#line 2238 "ProjectRow.c"
	} else {
#line 257 "../src/Layouts/ProjectRow.vala"
		_tmp0_ = FALSE;
#line 2242 "ProjectRow.c"
	}
#line 257 "../src/Layouts/ProjectRow.vala"
	if (_tmp0_) {
#line 2246 "ProjectRow.c"
		GtkEventBox* _tmp4_;
		GtkStyleContext* _tmp5_;
#line 258 "../src/Layouts/ProjectRow.vala"
		_tmp4_ = self->priv->projectrow_eventbox;
#line 258 "../src/Layouts/ProjectRow.vala"
		_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) _tmp4_);
#line 258 "../src/Layouts/ProjectRow.vala"
		gtk_style_context_add_class (_tmp5_, "selectable-item-selected");
#line 2255 "ProjectRow.c"
	} else {
		GtkEventBox* _tmp6_;
		GtkStyleContext* _tmp7_;
#line 260 "../src/Layouts/ProjectRow.vala"
		_tmp6_ = self->priv->projectrow_eventbox;
#line 260 "../src/Layouts/ProjectRow.vala"
		_tmp7_ = gtk_widget_get_style_context ((GtkWidget*) _tmp6_);
#line 260 "../src/Layouts/ProjectRow.vala"
		gtk_style_context_remove_class (_tmp7_, "selectable-item-selected");
#line 2265 "ProjectRow.c"
	}
}

static void
__layouts_project_row___lambda214__services_event_bus_pane_selected (ServicesEventBus* _sender,
                                                                     PaneType panel_type,
                                                                     const gchar* id,
                                                                     gpointer self)
{
#line 256 "../src/Layouts/ProjectRow.vala"
	_layouts_project_row___lambda214_ ((LayoutsProjectRow*) self, panel_type, id);
#line 2277 "ProjectRow.c"
}

static gboolean
_layouts_project_row___lambda215_ (Block14Data* _data14_,
                                   GdkEventCrossing* event)
{
	LayoutsProjectRow* self;
	gboolean _tmp0_;
	gboolean _tmp1_;
	gboolean result = FALSE;
#line 264 "../src/Layouts/ProjectRow.vala"
	self = _data14_->self;
#line 264 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 265 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = layouts_project_row_get_has_subprojects (self);
#line 265 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = _tmp0_;
#line 265 "../src/Layouts/ProjectRow.vala"
	if (_tmp1_) {
#line 2298 "ProjectRow.c"
		GtkStack* _tmp2_;
#line 266 "../src/Layouts/ProjectRow.vala"
		_tmp2_ = _data14_->menu_stack;
#line 266 "../src/Layouts/ProjectRow.vala"
		gtk_stack_set_visible_child_name (_tmp2_, "arrow_button");
#line 267 "../src/Layouts/ProjectRow.vala"
		result = TRUE;
#line 267 "../src/Layouts/ProjectRow.vala"
		return result;
#line 2308 "ProjectRow.c"
	}
}

static gboolean
__layouts_project_row___lambda215__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                                  GdkEventCrossing* event,
                                                                  gpointer self)
{
	gboolean result;
	result = _layouts_project_row___lambda215_ (self, event);
#line 264 "../src/Layouts/ProjectRow.vala"
	return result;
#line 2321 "ProjectRow.c"
}

static gboolean
_layouts_project_row___lambda216_ (Block14Data* _data14_,
                                   GdkEventCrossing* event)
{
	LayoutsProjectRow* self;
	GdkNotifyType _tmp0_;
	ObjectsProject* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gboolean result = FALSE;
#line 271 "../src/Layouts/ProjectRow.vala"
	self = _data14_->self;
#line 271 "../src/Layouts/ProjectRow.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 272 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = event->detail;
#line 272 "../src/Layouts/ProjectRow.vala"
	if (_tmp0_ == GDK_NOTIFY_INFERIOR) {
#line 273 "../src/Layouts/ProjectRow.vala"
		result = FALSE;
#line 273 "../src/Layouts/ProjectRow.vala"
		return result;
#line 2346 "ProjectRow.c"
	}
#line 276 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->priv->_project;
#line 276 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = objects_project_get_due_date (_tmp1_);
#line 276 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = _tmp2_;
#line 276 "../src/Layouts/ProjectRow.vala"
	if (g_strcmp0 (_tmp3_, "") == 0) {
#line 2356 "ProjectRow.c"
		GtkStack* _tmp4_;
#line 277 "../src/Layouts/ProjectRow.vala"
		_tmp4_ = _data14_->menu_stack;
#line 277 "../src/Layouts/ProjectRow.vala"
		gtk_stack_set_visible_child_name (_tmp4_, "count_revealer");
#line 2362 "ProjectRow.c"
	} else {
		GtkStack* _tmp5_;
#line 279 "../src/Layouts/ProjectRow.vala"
		_tmp5_ = _data14_->menu_stack;
#line 279 "../src/Layouts/ProjectRow.vala"
		gtk_stack_set_visible_child_name (_tmp5_, "due_label");
#line 2369 "ProjectRow.c"
	}
#line 282 "../src/Layouts/ProjectRow.vala"
	result = TRUE;
#line 282 "../src/Layouts/ProjectRow.vala"
	return result;
#line 2375 "ProjectRow.c"
}

static gboolean
__layouts_project_row___lambda216__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                                                  GdkEventCrossing* event,
                                                                  gpointer self)
{
	gboolean result;
	result = _layouts_project_row___lambda216_ (self, event);
#line 271 "../src/Layouts/ProjectRow.vala"
	return result;
#line 2387 "ProjectRow.c"
}

static void
_layouts_project_row___lambda217_ (LayoutsProjectRow* self)
{
	GtkRevealer* _tmp0_;
	GtkRevealer* _tmp1_;
	gboolean _tmp2_;
	gboolean _tmp3_;
	ObjectsProject* _tmp4_;
#line 286 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->listbox_revealer;
#line 286 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->priv->listbox_revealer;
#line 286 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = gtk_revealer_get_reveal_child (_tmp1_);
#line 286 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = _tmp2_;
#line 286 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp0_, !_tmp3_);
#line 287 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_update_listbox_revealer (self);
#line 288 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = self->priv->_project;
#line 288 "../src/Layouts/ProjectRow.vala"
	objects_project_update (_tmp4_, TRUE);
#line 2414 "ProjectRow.c"
}

static void
__layouts_project_row___lambda217__gtk_button_clicked (GtkButton* _sender,
                                                       gpointer self)
{
#line 285 "../src/Layouts/ProjectRow.vala"
	_layouts_project_row___lambda217_ ((LayoutsProjectRow*) self);
#line 2423 "ProjectRow.c"
}

static void
_layouts_project_row___lambda218_ (LayoutsProjectRow* self,
                                   ObjectsProject* subproject,
                                   gint64 old_parent_id)
{
	ObjectsProject* _tmp0_;
	gint64 _tmp1_;
	gint64 _tmp2_;
	gint64 _tmp14_;
	gint64 _tmp15_;
	ObjectsProject* _tmp16_;
	gint64 _tmp17_;
	gint64 _tmp18_;
#line 291 "../src/Layouts/ProjectRow.vala"
	g_return_if_fail (subproject != NULL);
#line 292 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->_project;
#line 292 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp0_);
#line 292 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = _tmp1_;
#line 292 "../src/Layouts/ProjectRow.vala"
	if (old_parent_id == _tmp2_) {
#line 2449 "ProjectRow.c"
		GeeHashMap* _tmp3_;
		const gchar* _tmp4_;
		const gchar* _tmp5_;
#line 293 "../src/Layouts/ProjectRow.vala"
		_tmp3_ = self->subprojects_hashmap;
#line 293 "../src/Layouts/ProjectRow.vala"
		_tmp4_ = objects_base_object_get_id_string ((ObjectsBaseObject*) subproject);
#line 293 "../src/Layouts/ProjectRow.vala"
		_tmp5_ = _tmp4_;
#line 293 "../src/Layouts/ProjectRow.vala"
		if (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp3_, _tmp5_)) {
#line 2461 "ProjectRow.c"
			GeeHashMap* _tmp6_;
			const gchar* _tmp7_;
			const gchar* _tmp8_;
			gpointer _tmp9_;
			LayoutsProjectRow* _tmp10_;
			GeeHashMap* _tmp11_;
			const gchar* _tmp12_;
			const gchar* _tmp13_;
#line 294 "../src/Layouts/ProjectRow.vala"
			_tmp6_ = self->subprojects_hashmap;
#line 294 "../src/Layouts/ProjectRow.vala"
			_tmp7_ = objects_base_object_get_id_string ((ObjectsBaseObject*) subproject);
#line 294 "../src/Layouts/ProjectRow.vala"
			_tmp8_ = _tmp7_;
#line 294 "../src/Layouts/ProjectRow.vala"
			_tmp9_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp6_, _tmp8_);
#line 294 "../src/Layouts/ProjectRow.vala"
			_tmp10_ = (LayoutsProjectRow*) _tmp9_;
#line 294 "../src/Layouts/ProjectRow.vala"
			layouts_project_row_hide_destroy (_tmp10_);
#line 294 "../src/Layouts/ProjectRow.vala"
			_g_object_unref0 (_tmp10_);
#line 295 "../src/Layouts/ProjectRow.vala"
			_tmp11_ = self->subprojects_hashmap;
#line 295 "../src/Layouts/ProjectRow.vala"
			_tmp12_ = objects_base_object_get_id_string ((ObjectsBaseObject*) subproject);
#line 295 "../src/Layouts/ProjectRow.vala"
			_tmp13_ = _tmp12_;
#line 295 "../src/Layouts/ProjectRow.vala"
			gee_abstract_map_unset ((GeeAbstractMap*) _tmp11_, _tmp13_, NULL);
#line 2492 "ProjectRow.c"
		}
	}
#line 299 "../src/Layouts/ProjectRow.vala"
	_tmp14_ = objects_project_get_parent_id (subproject);
#line 299 "../src/Layouts/ProjectRow.vala"
	_tmp15_ = _tmp14_;
#line 299 "../src/Layouts/ProjectRow.vala"
	_tmp16_ = self->priv->_project;
#line 299 "../src/Layouts/ProjectRow.vala"
	_tmp17_ = objects_base_object_get_id ((ObjectsBaseObject*) _tmp16_);
#line 299 "../src/Layouts/ProjectRow.vala"
	_tmp18_ = _tmp17_;
#line 299 "../src/Layouts/ProjectRow.vala"
	if (_tmp15_ == _tmp18_) {
#line 300 "../src/Layouts/ProjectRow.vala"
		layouts_project_row_add_subproject (self, subproject);
#line 2509 "ProjectRow.c"
	}
}

static void
__layouts_project_row___lambda218__services_event_bus_project_parent_changed (ServicesEventBus* _sender,
                                                                              ObjectsProject* project,
                                                                              gint64 old_parent_id,
                                                                              gpointer self)
{
#line 291 "../src/Layouts/ProjectRow.vala"
	_layouts_project_row___lambda218_ ((LayoutsProjectRow*) self, project, old_parent_id);
#line 2521 "ProjectRow.c"
}

static void
_layouts_project_row___lambda219_ (LayoutsProjectRow* self)
{
	GtkLabel* _tmp0_;
	ObjectsProject* _tmp1_;
	gint _tmp2_;
	gint _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	WidgetsProjectProgress* _tmp6_;
	ObjectsProject* _tmp7_;
	gdouble _tmp8_;
	gdouble _tmp9_;
	GtkRevealer* _tmp10_;
	GtkLabel* _tmp11_;
	const gchar* _tmp12_;
	const gchar* _tmp13_;
#line 305 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = self->priv->count_label;
#line 305 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = self->priv->_project;
#line 305 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = objects_project_get_project_count (_tmp1_);
#line 305 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = _tmp2_;
#line 305 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = g_strdup_printf ("%i", _tmp3_);
#line 305 "../src/Layouts/ProjectRow.vala"
	_tmp5_ = _tmp4_;
#line 305 "../src/Layouts/ProjectRow.vala"
	gtk_label_set_label (_tmp0_, _tmp5_);
#line 305 "../src/Layouts/ProjectRow.vala"
	_g_free0 (_tmp5_);
#line 306 "../src/Layouts/ProjectRow.vala"
	_tmp6_ = self->priv->project_progress;
#line 306 "../src/Layouts/ProjectRow.vala"
	_tmp7_ = self->priv->_project;
#line 306 "../src/Layouts/ProjectRow.vala"
	_tmp8_ = objects_project_get_percentage (_tmp7_);
#line 306 "../src/Layouts/ProjectRow.vala"
	_tmp9_ = _tmp8_;
#line 306 "../src/Layouts/ProjectRow.vala"
	widgets_project_progress_set_percentage (_tmp6_, _tmp9_);
#line 307 "../src/Layouts/ProjectRow.vala"
	_tmp10_ = self->priv->count_revealer;
#line 307 "../src/Layouts/ProjectRow.vala"
	_tmp11_ = self->priv->count_label;
#line 307 "../src/Layouts/ProjectRow.vala"
	_tmp12_ = gtk_label_get_label (_tmp11_);
#line 307 "../src/Layouts/ProjectRow.vala"
	_tmp13_ = _tmp12_;
#line 307 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp10_, atoi (_tmp13_) > 0);
#line 2577 "ProjectRow.c"
}

static void
__layouts_project_row___lambda219__objects_project_project_count_updated (ObjectsProject* _sender,
                                                                          gpointer self)
{
#line 304 "../src/Layouts/ProjectRow.vala"
	_layouts_project_row___lambda219_ ((LayoutsProjectRow*) self);
#line 2586 "ProjectRow.c"
}

static GObject *
layouts_project_row_constructor (GType type,
                                 guint n_construct_properties,
                                 GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	LayoutsProjectRow * self;
	Block14Data* _data14_;
	GtkStyleContext* _tmp0_;
	GeeHashMap* _tmp1_;
	WidgetsProjectProgress* _tmp2_;
	WidgetsProjectProgress* _tmp3_;
	WidgetsProjectProgress* _tmp4_;
	WidgetsProjectProgress* _tmp5_;
	WidgetsProjectProgress* _tmp6_;
	Util* _tmp7_;
	Util* _tmp8_;
	ObjectsProject* _tmp9_;
	const gchar* _tmp10_;
	const gchar* _tmp11_;
	gchar* _tmp12_;
	gchar* _tmp13_;
	WidgetsProjectProgress* _tmp14_;
	ObjectsProject* _tmp15_;
	gdouble _tmp16_;
	gdouble _tmp17_;
	ObjectsProject* _tmp18_;
	const gchar* _tmp19_;
	const gchar* _tmp20_;
	GtkLabel* _tmp21_ = NULL;
	GtkStack* _tmp22_;
	GtkStack* _tmp23_;
	WidgetsProjectProgress* _tmp24_;
	GtkStack* _tmp25_;
	GtkLabel* _tmp26_;
	ObjectsProject* _tmp27_;
	const gchar* _tmp28_;
	const gchar* _tmp29_;
	GtkLabel* _tmp30_;
	GtkLabel* _tmp31_;
	GtkLabel* _tmp32_;
	ObjectsProject* _tmp33_;
	gint _tmp34_;
	gint _tmp35_;
	gchar* _tmp36_;
	gchar* _tmp37_;
	GtkLabel* _tmp38_ = NULL;
	GtkLabel* _tmp39_;
	GtkStyleContext* _tmp40_;
	GtkLabel* _tmp41_;
	GtkStyleContext* _tmp42_;
	GtkLabel* _tmp43_;
	const gchar* _tmp44_;
	const gchar* _tmp45_;
	GtkRevealer* _tmp46_ = NULL;
	GtkRevealer* _tmp47_;
	GtkRevealer* _tmp48_;
	GtkLabel* _tmp49_;
	GtkImage* arrow_icon = NULL;
	GtkImage* _tmp50_;
	GtkImage* _tmp51_;
	GThemedIcon* _tmp52_;
	GThemedIcon* _tmp53_;
	GtkImage* _tmp54_;
	GtkButton* _tmp55_;
	GtkButton* _tmp56_;
	GtkButton* _tmp57_;
	GtkButton* _tmp58_;
	GtkButton* _tmp59_;
	GtkImage* _tmp60_;
	GtkButton* _tmp61_;
	GtkStyleContext* _tmp62_;
	GtkButton* _tmp63_;
	GtkStyleContext* _tmp64_;
	GtkButton* _tmp65_;
	GtkStyleContext* _tmp66_;
	GtkButton* _tmp67_;
	GtkStyleContext* _tmp68_;
	GtkButton* _tmp69_;
	GtkStyleContext* _tmp70_;
	GtkStack* _tmp71_;
	GtkStack* _tmp72_;
	GtkStack* _tmp73_;
	GtkLabel* due_label = NULL;
	GtkLabel* _tmp74_;
	GtkLabel* _tmp75_;
	GtkLabel* _tmp76_;
	GtkLabel* _tmp77_;
	GtkStyleContext* _tmp78_;
	ObjectsProject* _tmp79_;
	const gchar* _tmp80_;
	const gchar* _tmp81_;
	GtkGrid* projectrow_grid = NULL;
	GtkGrid* _tmp94_ = NULL;
	GtkGrid* _tmp95_;
	GtkStack* _tmp96_;
	GtkGrid* _tmp97_;
	GtkLabel* _tmp98_;
	GtkGrid* _tmp99_;
	GtkStack* _tmp100_;
	GtkGrid* _tmp101_;
	GtkGrid* _tmp102_;
	GtkGrid* _tmp103_;
	GtkEventBox* _tmp104_;
	GtkEventBox* _tmp105_;
	GtkStyleContext* _tmp106_;
	GtkEventBox* _tmp107_;
	GtkGrid* _tmp108_;
	GtkListBox* _tmp109_ = NULL;
	GtkStyleContext* listbox_context = NULL;
	GtkListBox* _tmp110_;
	GtkStyleContext* _tmp111_;
	GtkStyleContext* _tmp112_;
	GtkGrid* listbox_grid = NULL;
	GtkGrid* _tmp113_ = NULL;
	GtkGrid* _tmp114_;
	GtkListBox* _tmp115_;
	GtkRevealer* _tmp116_ = NULL;
	GtkRevealer* _tmp117_;
	GtkGrid* _tmp118_;
	GtkGrid* top_motion_grid = NULL;
	GtkGrid* _tmp119_;
	GtkGrid* _tmp120_;
	GtkStyleContext* _tmp121_;
	GtkGrid* _tmp122_;
	GtkRevealer* _tmp123_ = NULL;
	GtkRevealer* _tmp124_;
	GtkGrid* _tmp125_;
	GtkGrid* bottom_motion_grid = NULL;
	GtkGrid* _tmp126_;
	GtkGrid* _tmp127_;
	GtkStyleContext* _tmp128_;
	GtkGrid* _tmp129_;
	GtkRevealer* _tmp130_ = NULL;
	GtkRevealer* _tmp131_;
	GtkGrid* _tmp132_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp133_ = NULL;
	GtkGrid* _tmp134_;
	GtkRevealer* _tmp135_;
	GtkGrid* _tmp136_;
	GtkEventBox* _tmp137_;
	GtkGrid* _tmp138_;
	GtkRevealer* _tmp139_;
	GtkGrid* _tmp140_;
	GtkRevealer* _tmp141_;
	GtkRevealer* _tmp142_ = NULL;
	GtkRevealer* _tmp143_;
	GtkGrid* _tmp144_;
	GtkRevealer* _tmp145_;
	GtkStack* _tmp146_;
	guint _tmp147_;
	guint _tmp148_;
	gboolean _tmp149_;
	GtkRevealer* _tmp150_;
	guint _tmp151_;
	guint _tmp152_;
	ObjectsProject* _tmp153_;
	ObjectsProject* _tmp154_;
	ObjectsProject* _tmp155_;
	GtkListBox* _tmp156_;
	GtkListBox* _tmp157_;
	GtkEventBox* _tmp158_;
	ServicesEventBus* _tmp159_;
	GtkEventBox* _tmp160_;
	GtkEventBox* _tmp161_;
	GtkButton* _tmp162_;
	ServicesEventBus* _tmp163_;
	ObjectsProject* _tmp164_;
#line 60 "../src/Layouts/ProjectRow.vala"
	parent_class = G_OBJECT_CLASS (layouts_project_row_parent_class);
#line 60 "../src/Layouts/ProjectRow.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 60 "../src/Layouts/ProjectRow.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRow);
#line 60 "../src/Layouts/ProjectRow.vala"
	_data14_ = g_slice_new0 (Block14Data);
#line 60 "../src/Layouts/ProjectRow.vala"
	_data14_->_ref_count_ = 1;
#line 60 "../src/Layouts/ProjectRow.vala"
	_data14_->self = g_object_ref (self);
#line 61 "../src/Layouts/ProjectRow.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 61 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp0_, "selectable-item");
#line 63 "../src/Layouts/ProjectRow.vala"
	_tmp1_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, LAYOUTS_TYPE_PROJECT_ROW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 63 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->subprojects_hashmap);
#line 63 "../src/Layouts/ProjectRow.vala"
	self->subprojects_hashmap = _tmp1_;
#line 65 "../src/Layouts/ProjectRow.vala"
	_tmp2_ = widgets_project_progress_new (18);
#line 65 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp2_);
#line 65 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->project_progress);
#line 65 "../src/Layouts/ProjectRow.vala"
	self->priv->project_progress = _tmp2_;
#line 66 "../src/Layouts/ProjectRow.vala"
	_tmp3_ = self->priv->project_progress;
#line 66 "../src/Layouts/ProjectRow.vala"
	_tmp3_->enable_subprojects = TRUE;
#line 67 "../src/Layouts/ProjectRow.vala"
	_tmp4_ = self->priv->project_progress;
#line 67 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp4_, GTK_ALIGN_CENTER);
#line 68 "../src/Layouts/ProjectRow.vala"
	_tmp5_ = self->priv->project_progress;
#line 68 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp5_, GTK_ALIGN_CENTER);
#line 69 "../src/Layouts/ProjectRow.vala"
	_tmp6_ = self->priv->project_progress;
#line 69 "../src/Layouts/ProjectRow.vala"
	_tmp7_ = util_get_default ();
#line 69 "../src/Layouts/ProjectRow.vala"
	_tmp8_ = _tmp7_;
#line 69 "../src/Layouts/ProjectRow.vala"
	_tmp9_ = self->priv->_project;
#line 69 "../src/Layouts/ProjectRow.vala"
	_tmp10_ = objects_project_get_color (_tmp9_);
#line 69 "../src/Layouts/ProjectRow.vala"
	_tmp11_ = _tmp10_;
#line 69 "../src/Layouts/ProjectRow.vala"
	_tmp12_ = util_get_color (_tmp8_, _tmp11_);
#line 69 "../src/Layouts/ProjectRow.vala"
	_tmp13_ = _tmp12_;
#line 69 "../src/Layouts/ProjectRow.vala"
	widgets_project_progress_set_progress_fill_color (_tmp6_, _tmp13_);
#line 69 "../src/Layouts/ProjectRow.vala"
	_g_free0 (_tmp13_);
#line 69 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (_tmp8_);
#line 70 "../src/Layouts/ProjectRow.vala"
	_tmp14_ = self->priv->project_progress;
#line 70 "../src/Layouts/ProjectRow.vala"
	_tmp15_ = self->priv->_project;
#line 70 "../src/Layouts/ProjectRow.vala"
	_tmp16_ = objects_project_get_percentage (_tmp15_);
#line 70 "../src/Layouts/ProjectRow.vala"
	_tmp17_ = _tmp16_;
#line 70 "../src/Layouts/ProjectRow.vala"
	widgets_project_progress_set_percentage (_tmp14_, _tmp17_);
#line 72 "../src/Layouts/ProjectRow.vala"
	_tmp18_ = self->priv->_project;
#line 72 "../src/Layouts/ProjectRow.vala"
	_tmp19_ = objects_project_get_emoji (_tmp18_);
#line 72 "../src/Layouts/ProjectRow.vala"
	_tmp20_ = _tmp19_;
#line 72 "../src/Layouts/ProjectRow.vala"
	_tmp21_ = (GtkLabel*) gtk_label_new (_tmp20_);
#line 72 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp21_, GTK_ALIGN_CENTER);
#line 72 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp21_);
#line 72 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->emoji_label);
#line 72 "../src/Layouts/ProjectRow.vala"
	self->priv->emoji_label = _tmp21_;
#line 76 "../src/Layouts/ProjectRow.vala"
	_tmp22_ = (GtkStack*) gtk_stack_new ();
#line 76 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp22_);
#line 76 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->progress_emoji_stack);
#line 76 "../src/Layouts/ProjectRow.vala"
	self->priv->progress_emoji_stack = _tmp22_;
#line 77 "../src/Layouts/ProjectRow.vala"
	_tmp23_ = self->priv->progress_emoji_stack;
#line 77 "../src/Layouts/ProjectRow.vala"
	_tmp24_ = self->priv->project_progress;
#line 77 "../src/Layouts/ProjectRow.vala"
	gtk_stack_add_named (_tmp23_, (GtkWidget*) _tmp24_, "progress");
#line 78 "../src/Layouts/ProjectRow.vala"
	_tmp25_ = self->priv->progress_emoji_stack;
#line 78 "../src/Layouts/ProjectRow.vala"
	_tmp26_ = self->priv->emoji_label;
#line 78 "../src/Layouts/ProjectRow.vala"
	gtk_stack_add_named (_tmp25_, (GtkWidget*) _tmp26_, "label");
#line 80 "../src/Layouts/ProjectRow.vala"
	_tmp27_ = self->priv->_project;
#line 80 "../src/Layouts/ProjectRow.vala"
	_tmp28_ = objects_project_get_name (_tmp27_);
#line 80 "../src/Layouts/ProjectRow.vala"
	_tmp29_ = _tmp28_;
#line 80 "../src/Layouts/ProjectRow.vala"
	_tmp30_ = (GtkLabel*) gtk_label_new (_tmp29_);
#line 80 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp30_);
#line 80 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->name_label);
#line 80 "../src/Layouts/ProjectRow.vala"
	self->priv->name_label = _tmp30_;
#line 81 "../src/Layouts/ProjectRow.vala"
	_tmp31_ = self->priv->name_label;
#line 81 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp31_, GTK_ALIGN_CENTER);
#line 82 "../src/Layouts/ProjectRow.vala"
	_tmp32_ = self->priv->name_label;
#line 82 "../src/Layouts/ProjectRow.vala"
	gtk_label_set_ellipsize (_tmp32_, PANGO_ELLIPSIZE_END);
#line 84 "../src/Layouts/ProjectRow.vala"
	_tmp33_ = self->priv->_project;
#line 84 "../src/Layouts/ProjectRow.vala"
	_tmp34_ = objects_project_get_project_count (_tmp33_);
#line 84 "../src/Layouts/ProjectRow.vala"
	_tmp35_ = _tmp34_;
#line 84 "../src/Layouts/ProjectRow.vala"
	_tmp36_ = g_strdup_printf ("%i", _tmp35_);
#line 84 "../src/Layouts/ProjectRow.vala"
	_tmp37_ = _tmp36_;
#line 84 "../src/Layouts/ProjectRow.vala"
	_tmp38_ = (GtkLabel*) gtk_label_new (_tmp37_);
#line 84 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp38_, TRUE);
#line 84 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp38_, GTK_ALIGN_END);
#line 84 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp38_, 3);
#line 84 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp38_);
#line 84 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->count_label);
#line 84 "../src/Layouts/ProjectRow.vala"
	self->priv->count_label = _tmp38_;
#line 84 "../src/Layouts/ProjectRow.vala"
	_g_free0 (_tmp37_);
#line 89 "../src/Layouts/ProjectRow.vala"
	_tmp39_ = self->priv->count_label;
#line 89 "../src/Layouts/ProjectRow.vala"
	_tmp40_ = gtk_widget_get_style_context ((GtkWidget*) _tmp39_);
#line 89 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp40_, "dim-label");
#line 90 "../src/Layouts/ProjectRow.vala"
	_tmp41_ = self->priv->count_label;
#line 90 "../src/Layouts/ProjectRow.vala"
	_tmp42_ = gtk_widget_get_style_context ((GtkWidget*) _tmp41_);
#line 90 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp42_, GRANITE_STYLE_CLASS_SMALL_LABEL);
#line 92 "../src/Layouts/ProjectRow.vala"
	_tmp43_ = self->priv->count_label;
#line 92 "../src/Layouts/ProjectRow.vala"
	_tmp44_ = gtk_label_get_label (_tmp43_);
#line 92 "../src/Layouts/ProjectRow.vala"
	_tmp45_ = _tmp44_;
#line 92 "../src/Layouts/ProjectRow.vala"
	_tmp46_ = (GtkRevealer*) gtk_revealer_new ();
#line 92 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_reveal_child (_tmp46_, atoi (_tmp45_) > 0);
#line 92 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp46_);
#line 92 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->count_revealer);
#line 92 "../src/Layouts/ProjectRow.vala"
	self->priv->count_revealer = _tmp46_;
#line 95 "../src/Layouts/ProjectRow.vala"
	_tmp47_ = self->priv->count_revealer;
#line 95 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_transition_type (_tmp47_, GTK_REVEALER_TRANSITION_TYPE_CROSSFADE);
#line 96 "../src/Layouts/ProjectRow.vala"
	_tmp48_ = self->priv->count_revealer;
#line 96 "../src/Layouts/ProjectRow.vala"
	_tmp49_ = self->priv->count_label;
#line 96 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp48_, (GtkWidget*) _tmp49_);
#line 98 "../src/Layouts/ProjectRow.vala"
	_tmp50_ = (GtkImage*) gtk_image_new ();
#line 98 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp50_);
#line 98 "../src/Layouts/ProjectRow.vala"
	arrow_icon = _tmp50_;
#line 99 "../src/Layouts/ProjectRow.vala"
	_tmp51_ = arrow_icon;
#line 99 "../src/Layouts/ProjectRow.vala"
	_tmp52_ = (GThemedIcon*) g_themed_icon_new ("pan-end-symbolic");
#line 99 "../src/Layouts/ProjectRow.vala"
	_tmp53_ = _tmp52_;
#line 99 "../src/Layouts/ProjectRow.vala"
	g_object_set (_tmp51_, "gicon", (GIcon*) _tmp53_, NULL);
#line 99 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (_tmp53_);
#line 100 "../src/Layouts/ProjectRow.vala"
	_tmp54_ = arrow_icon;
#line 100 "../src/Layouts/ProjectRow.vala"
	gtk_image_set_pixel_size (_tmp54_, 14);
#line 102 "../src/Layouts/ProjectRow.vala"
	_tmp55_ = (GtkButton*) gtk_button_new ();
#line 102 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp55_);
#line 102 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->arrow_button);
#line 102 "../src/Layouts/ProjectRow.vala"
	self->priv->arrow_button = _tmp55_;
#line 103 "../src/Layouts/ProjectRow.vala"
	_tmp56_ = self->priv->arrow_button;
#line 103 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp56_, GTK_ALIGN_CENTER);
#line 104 "../src/Layouts/ProjectRow.vala"
	_tmp57_ = self->priv->arrow_button;
#line 104 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp57_, GTK_ALIGN_END);
#line 105 "../src/Layouts/ProjectRow.vala"
	_tmp58_ = self->priv->arrow_button;
#line 105 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp58_, FALSE);
#line 106 "../src/Layouts/ProjectRow.vala"
	_tmp59_ = self->priv->arrow_button;
#line 106 "../src/Layouts/ProjectRow.vala"
	_tmp60_ = arrow_icon;
#line 106 "../src/Layouts/ProjectRow.vala"
	gtk_button_set_image (_tmp59_, (GtkWidget*) _tmp60_);
#line 107 "../src/Layouts/ProjectRow.vala"
	_tmp61_ = self->priv->arrow_button;
#line 107 "../src/Layouts/ProjectRow.vala"
	_tmp62_ = gtk_widget_get_style_context ((GtkWidget*) _tmp61_);
#line 107 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp62_, GTK_STYLE_CLASS_FLAT);
#line 108 "../src/Layouts/ProjectRow.vala"
	_tmp63_ = self->priv->arrow_button;
#line 108 "../src/Layouts/ProjectRow.vala"
	_tmp64_ = gtk_widget_get_style_context ((GtkWidget*) _tmp63_);
#line 108 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp64_, "dim-label");
#line 109 "../src/Layouts/ProjectRow.vala"
	_tmp65_ = self->priv->arrow_button;
#line 109 "../src/Layouts/ProjectRow.vala"
	_tmp66_ = gtk_widget_get_style_context ((GtkWidget*) _tmp65_);
#line 109 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp66_, "transparent");
#line 110 "../src/Layouts/ProjectRow.vala"
	_tmp67_ = self->priv->arrow_button;
#line 110 "../src/Layouts/ProjectRow.vala"
	_tmp68_ = gtk_widget_get_style_context ((GtkWidget*) _tmp67_);
#line 110 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp68_, "hidden-button");
#line 111 "../src/Layouts/ProjectRow.vala"
	_tmp69_ = self->priv->arrow_button;
#line 111 "../src/Layouts/ProjectRow.vala"
	_tmp70_ = gtk_widget_get_style_context ((GtkWidget*) _tmp69_);
#line 111 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp70_, "no-padding");
#line 113 "../src/Layouts/ProjectRow.vala"
	_tmp71_ = (GtkStack*) gtk_stack_new ();
#line 113 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp71_);
#line 113 "../src/Layouts/ProjectRow.vala"
	_data14_->menu_stack = _tmp71_;
#line 114 "../src/Layouts/ProjectRow.vala"
	_tmp72_ = _data14_->menu_stack;
#line 114 "../src/Layouts/ProjectRow.vala"
	gtk_stack_set_transition_type (_tmp72_, GTK_STACK_TRANSITION_TYPE_CROSSFADE);
#line 115 "../src/Layouts/ProjectRow.vala"
	_tmp73_ = _data14_->menu_stack;
#line 115 "../src/Layouts/ProjectRow.vala"
	gtk_stack_set_homogeneous (_tmp73_, TRUE);
#line 117 "../src/Layouts/ProjectRow.vala"
	_tmp74_ = (GtkLabel*) gtk_label_new (NULL);
#line 117 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp74_);
#line 117 "../src/Layouts/ProjectRow.vala"
	due_label = _tmp74_;
#line 118 "../src/Layouts/ProjectRow.vala"
	_tmp75_ = due_label;
#line 118 "../src/Layouts/ProjectRow.vala"
	gtk_label_set_use_markup (_tmp75_, TRUE);
#line 119 "../src/Layouts/ProjectRow.vala"
	_tmp76_ = due_label;
#line 119 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp76_, GTK_ALIGN_CENTER);
#line 120 "../src/Layouts/ProjectRow.vala"
	_tmp77_ = due_label;
#line 120 "../src/Layouts/ProjectRow.vala"
	_tmp78_ = gtk_widget_get_style_context ((GtkWidget*) _tmp77_);
#line 120 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp78_, "pane-due-button");
#line 122 "../src/Layouts/ProjectRow.vala"
	_tmp79_ = self->priv->_project;
#line 122 "../src/Layouts/ProjectRow.vala"
	_tmp80_ = objects_project_get_due_date (_tmp79_);
#line 122 "../src/Layouts/ProjectRow.vala"
	_tmp81_ = _tmp80_;
#line 122 "../src/Layouts/ProjectRow.vala"
	if (g_strcmp0 (_tmp81_, "") != 0) {
#line 3073 "ProjectRow.c"
		GtkStack* _tmp82_;
		GtkLabel* _tmp83_;
		GtkStack* _tmp84_;
		GtkRevealer* _tmp85_;
		GtkStack* _tmp86_;
		GtkButton* _tmp87_;
#line 123 "../src/Layouts/ProjectRow.vala"
		_tmp82_ = _data14_->menu_stack;
#line 123 "../src/Layouts/ProjectRow.vala"
		_tmp83_ = due_label;
#line 123 "../src/Layouts/ProjectRow.vala"
		gtk_stack_add_named (_tmp82_, (GtkWidget*) _tmp83_, "due_label");
#line 124 "../src/Layouts/ProjectRow.vala"
		_tmp84_ = _data14_->menu_stack;
#line 124 "../src/Layouts/ProjectRow.vala"
		_tmp85_ = self->priv->count_revealer;
#line 124 "../src/Layouts/ProjectRow.vala"
		gtk_stack_add_named (_tmp84_, (GtkWidget*) _tmp85_, "count_revealer");
#line 125 "../src/Layouts/ProjectRow.vala"
		_tmp86_ = _data14_->menu_stack;
#line 125 "../src/Layouts/ProjectRow.vala"
		_tmp87_ = self->priv->arrow_button;
#line 125 "../src/Layouts/ProjectRow.vala"
		gtk_stack_add_named (_tmp86_, (GtkWidget*) _tmp87_, "arrow_button");
#line 3098 "ProjectRow.c"
	} else {
		GtkStack* _tmp88_;
		GtkRevealer* _tmp89_;
		GtkStack* _tmp90_;
		GtkButton* _tmp91_;
		GtkStack* _tmp92_;
		GtkLabel* _tmp93_;
#line 127 "../src/Layouts/ProjectRow.vala"
		_tmp88_ = _data14_->menu_stack;
#line 127 "../src/Layouts/ProjectRow.vala"
		_tmp89_ = self->priv->count_revealer;
#line 127 "../src/Layouts/ProjectRow.vala"
		gtk_stack_add_named (_tmp88_, (GtkWidget*) _tmp89_, "count_revealer");
#line 128 "../src/Layouts/ProjectRow.vala"
		_tmp90_ = _data14_->menu_stack;
#line 128 "../src/Layouts/ProjectRow.vala"
		_tmp91_ = self->priv->arrow_button;
#line 128 "../src/Layouts/ProjectRow.vala"
		gtk_stack_add_named (_tmp90_, (GtkWidget*) _tmp91_, "arrow_button");
#line 129 "../src/Layouts/ProjectRow.vala"
		_tmp92_ = _data14_->menu_stack;
#line 129 "../src/Layouts/ProjectRow.vala"
		_tmp93_ = due_label;
#line 129 "../src/Layouts/ProjectRow.vala"
		gtk_stack_add_named (_tmp92_, (GtkWidget*) _tmp93_, "due_label");
#line 3124 "ProjectRow.c"
	}
#line 132 "../src/Layouts/ProjectRow.vala"
	_tmp94_ = (GtkGrid*) gtk_grid_new ();
#line 132 "../src/Layouts/ProjectRow.vala"
	gtk_grid_set_column_spacing (_tmp94_, 6);
#line 132 "../src/Layouts/ProjectRow.vala"
	g_object_set ((GtkWidget*) _tmp94_, "margin", 3, NULL);
#line 132 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp94_);
#line 132 "../src/Layouts/ProjectRow.vala"
	projectrow_grid = _tmp94_;
#line 136 "../src/Layouts/ProjectRow.vala"
	_tmp95_ = projectrow_grid;
#line 136 "../src/Layouts/ProjectRow.vala"
	_tmp96_ = self->priv->progress_emoji_stack;
#line 136 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp95_, (GtkWidget*) _tmp96_);
#line 137 "../src/Layouts/ProjectRow.vala"
	_tmp97_ = projectrow_grid;
#line 137 "../src/Layouts/ProjectRow.vala"
	_tmp98_ = self->priv->name_label;
#line 137 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp97_, (GtkWidget*) _tmp98_);
#line 138 "../src/Layouts/ProjectRow.vala"
	_tmp99_ = projectrow_grid;
#line 138 "../src/Layouts/ProjectRow.vala"
	_tmp100_ = _data14_->menu_stack;
#line 138 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp99_, (GtkWidget*) _tmp100_);
#line 140 "../src/Layouts/ProjectRow.vala"
	_tmp101_ = (GtkGrid*) gtk_grid_new ();
#line 140 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp101_);
#line 140 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->handle_grid);
#line 140 "../src/Layouts/ProjectRow.vala"
	self->priv->handle_grid = _tmp101_;
#line 141 "../src/Layouts/ProjectRow.vala"
	_tmp102_ = self->priv->handle_grid;
#line 141 "../src/Layouts/ProjectRow.vala"
	_tmp103_ = projectrow_grid;
#line 141 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp102_, (GtkWidget*) _tmp103_);
#line 143 "../src/Layouts/ProjectRow.vala"
	_tmp104_ = (GtkEventBox*) gtk_event_box_new ();
#line 143 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp104_);
#line 143 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->projectrow_eventbox);
#line 143 "../src/Layouts/ProjectRow.vala"
	self->priv->projectrow_eventbox = _tmp104_;
#line 144 "../src/Layouts/ProjectRow.vala"
	_tmp105_ = self->priv->projectrow_eventbox;
#line 144 "../src/Layouts/ProjectRow.vala"
	_tmp106_ = gtk_widget_get_style_context ((GtkWidget*) _tmp105_);
#line 144 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp106_, "transition");
#line 145 "../src/Layouts/ProjectRow.vala"
	_tmp107_ = self->priv->projectrow_eventbox;
#line 145 "../src/Layouts/ProjectRow.vala"
	_tmp108_ = self->priv->handle_grid;
#line 145 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp107_, (GtkWidget*) _tmp108_);
#line 147 "../src/Layouts/ProjectRow.vala"
	_tmp109_ = (GtkListBox*) gtk_list_box_new ();
#line 147 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp109_, TRUE);
#line 147 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp109_);
#line 147 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->listbox);
#line 147 "../src/Layouts/ProjectRow.vala"
	self->priv->listbox = _tmp109_;
#line 151 "../src/Layouts/ProjectRow.vala"
	_tmp110_ = self->priv->listbox;
#line 151 "../src/Layouts/ProjectRow.vala"
	_tmp111_ = gtk_widget_get_style_context ((GtkWidget*) _tmp110_);
#line 151 "../src/Layouts/ProjectRow.vala"
	listbox_context = _tmp111_;
#line 152 "../src/Layouts/ProjectRow.vala"
	_tmp112_ = listbox_context;
#line 152 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp112_, "pane-listbox-background");
#line 154 "../src/Layouts/ProjectRow.vala"
	_tmp113_ = (GtkGrid*) gtk_grid_new ();
#line 154 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp113_, 12);
#line 154 "../src/Layouts/ProjectRow.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp113_, 6);
#line 154 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp113_);
#line 154 "../src/Layouts/ProjectRow.vala"
	listbox_grid = _tmp113_;
#line 158 "../src/Layouts/ProjectRow.vala"
	_tmp114_ = listbox_grid;
#line 158 "../src/Layouts/ProjectRow.vala"
	_tmp115_ = self->priv->listbox;
#line 158 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp114_, (GtkWidget*) _tmp115_);
#line 160 "../src/Layouts/ProjectRow.vala"
	_tmp116_ = (GtkRevealer*) gtk_revealer_new ();
#line 160 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_transition_type (_tmp116_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 160 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp116_);
#line 160 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->listbox_revealer);
#line 160 "../src/Layouts/ProjectRow.vala"
	self->priv->listbox_revealer = _tmp116_;
#line 163 "../src/Layouts/ProjectRow.vala"
	_tmp117_ = self->priv->listbox_revealer;
#line 163 "../src/Layouts/ProjectRow.vala"
	_tmp118_ = listbox_grid;
#line 163 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp117_, (GtkWidget*) _tmp118_);
#line 165 "../src/Layouts/ProjectRow.vala"
	_tmp119_ = (GtkGrid*) gtk_grid_new ();
#line 165 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp119_);
#line 165 "../src/Layouts/ProjectRow.vala"
	top_motion_grid = _tmp119_;
#line 166 "../src/Layouts/ProjectRow.vala"
	_tmp120_ = top_motion_grid;
#line 166 "../src/Layouts/ProjectRow.vala"
	_tmp121_ = gtk_widget_get_style_context ((GtkWidget*) _tmp120_);
#line 166 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp121_, "grid-motion");
#line 167 "../src/Layouts/ProjectRow.vala"
	_tmp122_ = top_motion_grid;
#line 167 "../src/Layouts/ProjectRow.vala"
	g_object_set ((GtkWidget*) _tmp122_, "height-request", 16, NULL);
#line 169 "../src/Layouts/ProjectRow.vala"
	_tmp123_ = (GtkRevealer*) gtk_revealer_new ();
#line 169 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_transition_type (_tmp123_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 169 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp123_);
#line 169 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->top_motion_revealer);
#line 169 "../src/Layouts/ProjectRow.vala"
	self->priv->top_motion_revealer = _tmp123_;
#line 172 "../src/Layouts/ProjectRow.vala"
	_tmp124_ = self->priv->top_motion_revealer;
#line 172 "../src/Layouts/ProjectRow.vala"
	_tmp125_ = top_motion_grid;
#line 172 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp124_, (GtkWidget*) _tmp125_);
#line 174 "../src/Layouts/ProjectRow.vala"
	_tmp126_ = (GtkGrid*) gtk_grid_new ();
#line 174 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp126_);
#line 174 "../src/Layouts/ProjectRow.vala"
	bottom_motion_grid = _tmp126_;
#line 175 "../src/Layouts/ProjectRow.vala"
	_tmp127_ = bottom_motion_grid;
#line 175 "../src/Layouts/ProjectRow.vala"
	_tmp128_ = gtk_widget_get_style_context ((GtkWidget*) _tmp127_);
#line 175 "../src/Layouts/ProjectRow.vala"
	gtk_style_context_add_class (_tmp128_, "grid-motion");
#line 176 "../src/Layouts/ProjectRow.vala"
	_tmp129_ = bottom_motion_grid;
#line 176 "../src/Layouts/ProjectRow.vala"
	g_object_set ((GtkWidget*) _tmp129_, "height-request", 16, NULL);
#line 178 "../src/Layouts/ProjectRow.vala"
	_tmp130_ = (GtkRevealer*) gtk_revealer_new ();
#line 178 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_transition_type (_tmp130_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 178 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp130_);
#line 178 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->bottom_motion_revealer);
#line 178 "../src/Layouts/ProjectRow.vala"
	self->priv->bottom_motion_revealer = _tmp130_;
#line 181 "../src/Layouts/ProjectRow.vala"
	_tmp131_ = self->priv->bottom_motion_revealer;
#line 181 "../src/Layouts/ProjectRow.vala"
	_tmp132_ = bottom_motion_grid;
#line 181 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp131_, (GtkWidget*) _tmp132_);
#line 183 "../src/Layouts/ProjectRow.vala"
	_tmp133_ = (GtkGrid*) gtk_grid_new ();
#line 183 "../src/Layouts/ProjectRow.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp133_, GTK_ORIENTATION_VERTICAL);
#line 183 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp133_);
#line 183 "../src/Layouts/ProjectRow.vala"
	main_grid = _tmp133_;
#line 186 "../src/Layouts/ProjectRow.vala"
	_tmp134_ = main_grid;
#line 186 "../src/Layouts/ProjectRow.vala"
	_tmp135_ = self->priv->top_motion_revealer;
#line 186 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp134_, (GtkWidget*) _tmp135_);
#line 187 "../src/Layouts/ProjectRow.vala"
	_tmp136_ = main_grid;
#line 187 "../src/Layouts/ProjectRow.vala"
	_tmp137_ = self->priv->projectrow_eventbox;
#line 187 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp136_, (GtkWidget*) _tmp137_);
#line 188 "../src/Layouts/ProjectRow.vala"
	_tmp138_ = main_grid;
#line 188 "../src/Layouts/ProjectRow.vala"
	_tmp139_ = self->priv->bottom_motion_revealer;
#line 188 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp138_, (GtkWidget*) _tmp139_);
#line 189 "../src/Layouts/ProjectRow.vala"
	_tmp140_ = main_grid;
#line 189 "../src/Layouts/ProjectRow.vala"
	_tmp141_ = self->priv->listbox_revealer;
#line 189 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp140_, (GtkWidget*) _tmp141_);
#line 191 "../src/Layouts/ProjectRow.vala"
	_tmp142_ = (GtkRevealer*) gtk_revealer_new ();
#line 191 "../src/Layouts/ProjectRow.vala"
	gtk_revealer_set_transition_type (_tmp142_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 191 "../src/Layouts/ProjectRow.vala"
	g_object_ref_sink (_tmp142_);
#line 191 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->main_revealer);
#line 191 "../src/Layouts/ProjectRow.vala"
	self->priv->main_revealer = _tmp142_;
#line 194 "../src/Layouts/ProjectRow.vala"
	_tmp143_ = self->priv->main_revealer;
#line 194 "../src/Layouts/ProjectRow.vala"
	_tmp144_ = main_grid;
#line 194 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) _tmp143_, (GtkWidget*) _tmp144_);
#line 196 "../src/Layouts/ProjectRow.vala"
	_tmp145_ = self->priv->main_revealer;
#line 196 "../src/Layouts/ProjectRow.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp145_);
#line 198 "../src/Layouts/ProjectRow.vala"
	_tmp146_ = self->priv->progress_emoji_stack;
#line 198 "../src/Layouts/ProjectRow.vala"
	_tmp147_ = gtk_stack_get_transition_duration (_tmp146_);
#line 198 "../src/Layouts/ProjectRow.vala"
	_tmp148_ = _tmp147_;
#line 198 "../src/Layouts/ProjectRow.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, _tmp148_, __layouts_project_row___lambda205__gsource_func, g_object_ref (self), g_object_unref);
#line 208 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_update_request (self);
#line 209 "../src/Layouts/ProjectRow.vala"
	_tmp149_ = self->priv->_show_subprojects;
#line 209 "../src/Layouts/ProjectRow.vala"
	if (_tmp149_) {
#line 210 "../src/Layouts/ProjectRow.vala"
		layouts_project_row_add_subprojects (self);
#line 3372 "ProjectRow.c"
	}
#line 212 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_build_drag_and_drop (self);
#line 214 "../src/Layouts/ProjectRow.vala"
	_tmp150_ = self->priv->main_revealer;
#line 214 "../src/Layouts/ProjectRow.vala"
	_tmp151_ = gtk_revealer_get_transition_duration (_tmp150_);
#line 214 "../src/Layouts/ProjectRow.vala"
	_tmp152_ = _tmp151_;
#line 214 "../src/Layouts/ProjectRow.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, _tmp152_, __layouts_project_row___lambda206__gsource_func, g_object_ref (self), g_object_unref);
#line 219 "../src/Layouts/ProjectRow.vala"
	_tmp153_ = self->priv->_project;
#line 219 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((ObjectsBaseObject*) _tmp153_, "updated", (GCallback) __layouts_project_row___lambda207__objects_base_object_updated, self, 0);
#line 223 "../src/Layouts/ProjectRow.vala"
	_tmp154_ = self->priv->_project;
#line 223 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((ObjectsBaseObject*) _tmp154_, "deleted", (GCallback) __layouts_project_row___lambda208__objects_base_object_deleted, self, 0);
#line 227 "../src/Layouts/ProjectRow.vala"
	_tmp155_ = self->priv->_project;
#line 227 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object (_tmp155_, "subproject-added", (GCallback) __layouts_project_row___lambda209__objects_project_subproject_added, self, 0);
#line 231 "../src/Layouts/ProjectRow.vala"
	_tmp156_ = self->priv->listbox;
#line 231 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((GtkContainer*) _tmp156_, "add", (GCallback) __layouts_project_row___lambda210__gtk_container_add, self, 0);
#line 236 "../src/Layouts/ProjectRow.vala"
	_tmp157_ = self->priv->listbox;
#line 236 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((GtkContainer*) _tmp157_, "remove", (GCallback) __layouts_project_row___lambda211__gtk_container_remove, self, 0);
#line 241 "../src/Layouts/ProjectRow.vala"
	_tmp158_ = self->priv->projectrow_eventbox;
#line 241 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object ((GtkWidget*) _tmp158_, "button-press-event", (GCallback) __layouts_project_row___lambda212__gtk_widget_button_press_event, self, 0);
#line 256 "../src/Layouts/ProjectRow.vala"
	_tmp159_ = planner_event_bus;
#line 256 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object (_tmp159_, "pane-selected", (GCallback) __layouts_project_row___lambda214__services_event_bus_pane_selected, self, 0);
#line 264 "../src/Layouts/ProjectRow.vala"
	_tmp160_ = self->priv->projectrow_eventbox;
#line 264 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_data ((GtkWidget*) _tmp160_, "enter-notify-event", (GCallback) __layouts_project_row___lambda215__gtk_widget_enter_notify_event, block14_data_ref (_data14_), (GClosureNotify) block14_data_unref, 0);
#line 271 "../src/Layouts/ProjectRow.vala"
	_tmp161_ = self->priv->projectrow_eventbox;
#line 271 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_data ((GtkWidget*) _tmp161_, "leave-notify-event", (GCallback) __layouts_project_row___lambda216__gtk_widget_leave_notify_event, block14_data_ref (_data14_), (GClosureNotify) block14_data_unref, 0);
#line 285 "../src/Layouts/ProjectRow.vala"
	_tmp162_ = self->priv->arrow_button;
#line 285 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object (_tmp162_, "clicked", (GCallback) __layouts_project_row___lambda217__gtk_button_clicked, self, 0);
#line 291 "../src/Layouts/ProjectRow.vala"
	_tmp163_ = planner_event_bus;
#line 291 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object (_tmp163_, "project-parent-changed", (GCallback) __layouts_project_row___lambda218__services_event_bus_project_parent_changed, self, 0);
#line 304 "../src/Layouts/ProjectRow.vala"
	_tmp164_ = self->priv->_project;
#line 304 "../src/Layouts/ProjectRow.vala"
	g_signal_connect_object (_tmp164_, "project-count-updated", (GCallback) __layouts_project_row___lambda219__objects_project_project_count_updated, self, 0);
#line 60 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (main_grid);
#line 60 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (bottom_motion_grid);
#line 60 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (top_motion_grid);
#line 60 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (listbox_grid);
#line 60 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (projectrow_grid);
#line 60 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (due_label);
#line 60 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (arrow_icon);
#line 60 "../src/Layouts/ProjectRow.vala"
	block14_data_unref (_data14_);
#line 60 "../src/Layouts/ProjectRow.vala"
	_data14_ = NULL;
#line 60 "../src/Layouts/ProjectRow.vala"
	return obj;
#line 3452 "ProjectRow.c"
}

static void
layouts_project_row_class_init (LayoutsProjectRowClass * klass,
                                gpointer klass_data)
{
#line 22 "../src/Layouts/ProjectRow.vala"
	layouts_project_row_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Layouts/ProjectRow.vala"
	g_type_class_adjust_private_offset (klass, &LayoutsProjectRow_private_offset);
#line 22 "../src/Layouts/ProjectRow.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_layouts_project_row_get_property;
#line 22 "../src/Layouts/ProjectRow.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_layouts_project_row_set_property;
#line 22 "../src/Layouts/ProjectRow.vala"
	G_OBJECT_CLASS (klass)->constructor = layouts_project_row_constructor;
#line 22 "../src/Layouts/ProjectRow.vala"
	G_OBJECT_CLASS (klass)->finalize = layouts_project_row_finalize;
#line 22 "../src/Layouts/ProjectRow.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), LAYOUTS_PROJECT_ROW_PROJECT_PROPERTY, layouts_project_row_properties[LAYOUTS_PROJECT_ROW_PROJECT_PROPERTY] = g_param_spec_object ("project", "project", "project", OBJECTS_TYPE_PROJECT, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 22 "../src/Layouts/ProjectRow.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), LAYOUTS_PROJECT_ROW_SHOW_SUBPROJECTS_PROPERTY, layouts_project_row_properties[LAYOUTS_PROJECT_ROW_SHOW_SUBPROJECTS_PROPERTY] = g_param_spec_boolean ("show-subprojects", "show-subprojects", "show-subprojects", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 3475 "ProjectRow.c"
}

static void
layouts_project_row_instance_init (LayoutsProjectRow * self,
                                   gpointer klass)
{
#line 22 "../src/Layouts/ProjectRow.vala"
	self->priv = layouts_project_row_get_instance_private (self);
#line 3484 "ProjectRow.c"
}

static void
layouts_project_row_finalize (GObject * obj)
{
	LayoutsProjectRow * self;
#line 22 "../src/Layouts/ProjectRow.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRow);
#line 23 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->_project);
#line 26 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->name_label);
#line 27 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->emoji_label);
#line 28 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->main_revealer);
#line 29 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->project_progress);
#line 30 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->listbox);
#line 31 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->listbox_revealer);
#line 32 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->handle_grid);
#line 33 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->projectrow_eventbox);
#line 34 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->arrow_button);
#line 35 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->count_label);
#line 36 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->progress_emoji_stack);
#line 37 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->count_revealer);
#line 38 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->top_motion_revealer);
#line 39 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->priv->bottom_motion_revealer);
#line 47 "../src/Layouts/ProjectRow.vala"
	_g_object_unref0 (self->subprojects_hashmap);
#line 22 "../src/Layouts/ProjectRow.vala"
	G_OBJECT_CLASS (layouts_project_row_parent_class)->finalize (obj);
#line 3527 "ProjectRow.c"
}

static GType
layouts_project_row_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (LayoutsProjectRowClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) layouts_project_row_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (LayoutsProjectRow), 0, (GInstanceInitFunc) layouts_project_row_instance_init, NULL };
	GType layouts_project_row_type_id;
	layouts_project_row_type_id = g_type_register_static (gtk_list_box_row_get_type (), "LayoutsProjectRow", &g_define_type_info, 0);
	LayoutsProjectRow_private_offset = g_type_add_instance_private (layouts_project_row_type_id, sizeof (LayoutsProjectRowPrivate));
	return layouts_project_row_type_id;
}

GType
layouts_project_row_get_type (void)
{
	static volatile gsize layouts_project_row_type_id__volatile = 0;
	if (g_once_init_enter (&layouts_project_row_type_id__volatile)) {
		GType layouts_project_row_type_id;
		layouts_project_row_type_id = layouts_project_row_get_type_once ();
		g_once_init_leave (&layouts_project_row_type_id__volatile, layouts_project_row_type_id);
	}
	return layouts_project_row_type_id__volatile;
}

static void
_vala_layouts_project_row_get_property (GObject * object,
                                        guint property_id,
                                        GValue * value,
                                        GParamSpec * pspec)
{
	LayoutsProjectRow * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRow);
#line 22 "../src/Layouts/ProjectRow.vala"
	switch (property_id) {
#line 22 "../src/Layouts/ProjectRow.vala"
		case LAYOUTS_PROJECT_ROW_PROJECT_PROPERTY:
#line 22 "../src/Layouts/ProjectRow.vala"
		g_value_set_object (value, layouts_project_row_get_project (self));
#line 22 "../src/Layouts/ProjectRow.vala"
		break;
#line 22 "../src/Layouts/ProjectRow.vala"
		case LAYOUTS_PROJECT_ROW_SHOW_SUBPROJECTS_PROPERTY:
#line 22 "../src/Layouts/ProjectRow.vala"
		g_value_set_boolean (value, layouts_project_row_get_show_subprojects (self));
#line 22 "../src/Layouts/ProjectRow.vala"
		break;
#line 3574 "ProjectRow.c"
		default:
#line 22 "../src/Layouts/ProjectRow.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Layouts/ProjectRow.vala"
		break;
#line 3580 "ProjectRow.c"
	}
}

static void
_vala_layouts_project_row_set_property (GObject * object,
                                        guint property_id,
                                        const GValue * value,
                                        GParamSpec * pspec)
{
	LayoutsProjectRow * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRow);
#line 22 "../src/Layouts/ProjectRow.vala"
	switch (property_id) {
#line 22 "../src/Layouts/ProjectRow.vala"
		case LAYOUTS_PROJECT_ROW_PROJECT_PROPERTY:
#line 22 "../src/Layouts/ProjectRow.vala"
		layouts_project_row_set_project (self, g_value_get_object (value));
#line 22 "../src/Layouts/ProjectRow.vala"
		break;
#line 22 "../src/Layouts/ProjectRow.vala"
		case LAYOUTS_PROJECT_ROW_SHOW_SUBPROJECTS_PROPERTY:
#line 22 "../src/Layouts/ProjectRow.vala"
		layouts_project_row_set_show_subprojects (self, g_value_get_boolean (value));
#line 22 "../src/Layouts/ProjectRow.vala"
		break;
#line 3606 "ProjectRow.c"
		default:
#line 22 "../src/Layouts/ProjectRow.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Layouts/ProjectRow.vala"
		break;
#line 3612 "ProjectRow.c"
	}
}


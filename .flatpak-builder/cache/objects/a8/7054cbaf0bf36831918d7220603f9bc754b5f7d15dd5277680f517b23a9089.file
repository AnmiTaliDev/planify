/* Item.c generated by valac 0.50.10, the Vala compiler
 * generated from Item.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 3 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alainmh23@gmail.com>
*/

#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <json-glib/json-glib.h>
#include <gee.h>
#include <gtk/gtk.h>
#include <gio/gio.h>

#define OBJECTS_TYPE_BASE_OBJECT (objects_base_object_get_type ())
#define OBJECTS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObject))
#define OBJECTS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))
#define OBJECTS_IS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_IS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_BASE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))

typedef struct _ObjectsBaseObject ObjectsBaseObject;
typedef struct _ObjectsBaseObjectClass ObjectsBaseObjectClass;
typedef struct _ObjectsBaseObjectPrivate ObjectsBaseObjectPrivate;

#define OBJECTS_TYPE_ITEM (objects_item_get_type ())
#define OBJECTS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_ITEM, ObjectsItem))
#define OBJECTS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_ITEM, ObjectsItemClass))
#define OBJECTS_IS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_ITEM))
#define OBJECTS_IS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_ITEM))
#define OBJECTS_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_ITEM, ObjectsItemClass))

typedef struct _ObjectsItem ObjectsItem;
typedef struct _ObjectsItemClass ObjectsItemClass;
typedef struct _ObjectsItemPrivate ObjectsItemPrivate;

#define OBJECTS_TYPE_DUE_DATE (objects_due_date_get_type ())
#define OBJECTS_DUE_DATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_DUE_DATE, ObjectsDueDate))
#define OBJECTS_DUE_DATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_DUE_DATE, ObjectsDueDateClass))
#define OBJECTS_IS_DUE_DATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_DUE_DATE))
#define OBJECTS_IS_DUE_DATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_DUE_DATE))
#define OBJECTS_DUE_DATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_DUE_DATE, ObjectsDueDateClass))

typedef struct _ObjectsDueDate ObjectsDueDate;
typedef struct _ObjectsDueDateClass ObjectsDueDateClass;

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;

#define OBJECTS_TYPE_SECTION (objects_section_get_type ())
#define OBJECTS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_SECTION, ObjectsSection))
#define OBJECTS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_SECTION, ObjectsSectionClass))
#define OBJECTS_IS_SECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_SECTION))
#define OBJECTS_IS_SECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_SECTION))
#define OBJECTS_SECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_SECTION, ObjectsSectionClass))

typedef struct _ObjectsSection ObjectsSection;
typedef struct _ObjectsSectionClass ObjectsSectionClass;

#define OBJECTS_TYPE_ITEM_LABEL (objects_item_label_get_type ())
#define OBJECTS_ITEM_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_ITEM_LABEL, ObjectsItemLabel))
#define OBJECTS_ITEM_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_ITEM_LABEL, ObjectsItemLabelClass))
#define OBJECTS_IS_ITEM_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_ITEM_LABEL))
#define OBJECTS_IS_ITEM_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_ITEM_LABEL))
#define OBJECTS_ITEM_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_ITEM_LABEL, ObjectsItemLabelClass))

typedef struct _ObjectsItemLabel ObjectsItemLabel;
typedef struct _ObjectsItemLabelClass ObjectsItemLabelClass;
enum  {
	OBJECTS_ITEM_0_PROPERTY,
	OBJECTS_ITEM_CONTENT_PROPERTY,
	OBJECTS_ITEM_DESCRIPTION_PROPERTY,
	OBJECTS_ITEM_DUE_PROPERTY,
	OBJECTS_ITEM_ADDED_AT_PROPERTY,
	OBJECTS_ITEM_COMPLETED_AT_PROPERTY,
	OBJECTS_ITEM_UPDATED_AT_PROPERTY,
	OBJECTS_ITEM_SECTION_ID_PROPERTY,
	OBJECTS_ITEM_PROJECT_ID_PROPERTY,
	OBJECTS_ITEM_PARENT_ID_PROPERTY,
	OBJECTS_ITEM_PRIORITY_PROPERTY,
	OBJECTS_ITEM_PRIORITY_ICON_PROPERTY,
	OBJECTS_ITEM_CHILD_ORDER_PROPERTY,
	OBJECTS_ITEM_DAY_ORDER_PROPERTY,
	OBJECTS_ITEM_DUE_IS_RECURRING_PROPERTY,
	OBJECTS_ITEM_CHECKED_PROPERTY,
	OBJECTS_ITEM_IS_DELETED_PROPERTY,
	OBJECTS_ITEM_COLLAPSED_PROPERTY,
	OBJECTS_ITEM_PINNED_PROPERTY,
	OBJECTS_ITEM_PINNED_ICON_PROPERTY,
	OBJECTS_ITEM_COMPLETED_PROPERTY,
	OBJECTS_ITEM_HAS_DUE_PROPERTY,
	OBJECTS_ITEM_HAS_SECTION_PROPERTY,
	OBJECTS_ITEM_BUILDER_PROPERTY,
	OBJECTS_ITEM_PROJECT_PROPERTY,
	OBJECTS_ITEM_SECTION_PROPERTY,
	OBJECTS_ITEM_LABELS_PROPERTY,
	OBJECTS_ITEM_NUM_PROPERTIES
};
static GParamSpec* objects_item_properties[OBJECTS_ITEM_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define OBJECTS_TYPE_LABEL (objects_label_get_type ())
#define OBJECTS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_LABEL, ObjectsLabel))
#define OBJECTS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_LABEL, ObjectsLabelClass))
#define OBJECTS_IS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_LABEL))
#define OBJECTS_IS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_LABEL))
#define OBJECTS_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_LABEL, ObjectsLabelClass))

typedef struct _ObjectsLabel ObjectsLabel;
typedef struct _ObjectsLabelClass ObjectsLabelClass;

#define WIDGETS_TYPE_LOADING_BUTTON (widgets_loading_button_get_type ())
#define WIDGETS_LOADING_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButton))
#define WIDGETS_LOADING_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButtonClass))
#define WIDGETS_IS_LOADING_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_LOADING_BUTTON))
#define WIDGETS_IS_LOADING_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_LOADING_BUTTON))
#define WIDGETS_LOADING_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButtonClass))

typedef struct _WidgetsLoadingButton WidgetsLoadingButton;
typedef struct _WidgetsLoadingButtonClass WidgetsLoadingButtonClass;

#define SERVICES_TYPE_DATABASE (services_database_get_type ())
#define SERVICES_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_DATABASE, ServicesDatabase))
#define SERVICES_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))
#define SERVICES_IS_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_DATABASE))
#define SERVICES_IS_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_DATABASE))
#define SERVICES_DATABASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))

typedef struct _ServicesDatabase ServicesDatabase;
typedef struct _ServicesDatabaseClass ServicesDatabaseClass;
#define __vala_JsonNode_free0(var) ((var == NULL) ? NULL : (var = (_vala_JsonNode_free (var), NULL)))
typedef struct _Block48Data Block48Data;

#define SERVICES_TYPE_TODOIST (services_todoist_get_type ())
#define SERVICES_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_TODOIST, ServicesTodoist))
#define SERVICES_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_TODOIST, ServicesTodoistClass))
#define SERVICES_IS_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_TODOIST))
#define SERVICES_IS_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_TODOIST))
#define SERVICES_TODOIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_TODOIST, ServicesTodoistClass))

typedef struct _ServicesTodoist ServicesTodoist;
typedef struct _ServicesTodoistClass ServicesTodoistClass;
typedef struct _Block49Data Block49Data;
typedef struct _Block50Data Block50Data;

#define TYPE_UTIL (util_get_type ())
#define UTIL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTIL, Util))
#define UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTIL, UtilClass))
#define IS_UTIL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTIL))
#define IS_UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTIL))
#define UTIL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTIL, UtilClass))

typedef struct _Util Util;
typedef struct _UtilClass UtilClass;

#define LAYOUTS_TYPE_ITEM_ROW (layouts_item_row_get_type ())
#define LAYOUTS_ITEM_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), LAYOUTS_TYPE_ITEM_ROW, LayoutsItemRow))
#define LAYOUTS_ITEM_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), LAYOUTS_TYPE_ITEM_ROW, LayoutsItemRowClass))
#define LAYOUTS_IS_ITEM_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), LAYOUTS_TYPE_ITEM_ROW))
#define LAYOUTS_IS_ITEM_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), LAYOUTS_TYPE_ITEM_ROW))
#define LAYOUTS_ITEM_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), LAYOUTS_TYPE_ITEM_ROW, LayoutsItemRowClass))

typedef struct _LayoutsItemRow LayoutsItemRow;
typedef struct _LayoutsItemRowClass LayoutsItemRowClass;
typedef struct _Block51Data Block51Data;
enum  {
	OBJECTS_ITEM_ITEM_LABEL_ADDED_SIGNAL,
	OBJECTS_ITEM_NUM_SIGNALS
};
static guint objects_item_signals[OBJECTS_ITEM_NUM_SIGNALS] = {0};

struct _ObjectsBaseObject {
	GObject parent_instance;
	ObjectsBaseObjectPrivate * priv;
};

struct _ObjectsBaseObjectClass {
	GObjectClass parent_class;
	gchar* (*get_update_json) (ObjectsBaseObject* self, const gchar* uuid, const gchar* temp_id);
	gchar* (*get_add_json) (ObjectsBaseObject* self, const gchar* temp_id, const gchar* uuid);
};

struct _ObjectsItem {
	ObjectsBaseObject parent_instance;
	ObjectsItemPrivate * priv;
};

struct _ObjectsItemClass {
	ObjectsBaseObjectClass parent_class;
};

struct _ObjectsItemPrivate {
	gchar* _content;
	gchar* _description;
	ObjectsDueDate* _due;
	gchar* _added_at;
	gchar* _completed_at;
	gchar* _updated_at;
	gint64 _section_id;
	gint64 _project_id;
	gint64 _parent_id;
	gint _priority;
	gint _child_order;
	gint _day_order;
	gint _due_is_recurring;
	gboolean _checked;
	gboolean _is_deleted;
	gboolean _collapsed;
	gboolean _pinned;
	JsonBuilder* _builder;
	ObjectsProject* _project;
	ObjectsSection* _section;
	GeeHashMap* _labels;
	GRecMutex __lock__labels;
};

struct _Block48Data {
	int _ref_count_;
	ObjectsItem* self;
	gint64 update_id;
};

struct _Block49Data {
	int _ref_count_;
	ObjectsItem* self;
	gint64 update_id;
	WidgetsLoadingButton* loading_button;
};

struct _Block50Data {
	int _ref_count_;
	ObjectsItem* self;
	WidgetsLoadingButton* loading_button;
};

struct _Block51Data {
	int _ref_count_;
	ObjectsItem* self;
	LayoutsItemRow* itemrow;
};

static gint ObjectsItem_private_offset;
static gpointer objects_item_parent_class = NULL;
extern ServicesDatabase* planner_database;
extern ServicesTodoist* planner_todoist;

GType objects_base_object_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsBaseObject, g_object_unref)
GType objects_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsItem, g_object_unref)
GType objects_due_date_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsDueDate, g_object_unref)
GType objects_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsProject, g_object_unref)
GType objects_section_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsSection, g_object_unref)
GType objects_item_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsItemLabel, g_object_unref)
gchar* objects_base_object_get_add_json (ObjectsBaseObject* self,
                                         const gchar* temp_id,
                                         const gchar* uuid);
gchar* objects_base_object_get_update_json (ObjectsBaseObject* self,
                                            const gchar* uuid,
                                            const gchar* temp_id);
#define CONSTANTS_INACTIVE 0
ObjectsDueDate* objects_due_date_new (void);
ObjectsDueDate* objects_due_date_construct (GType object_type);
ObjectsItem* objects_item_new_from_json (JsonNode* node);
ObjectsItem* objects_item_construct_from_json (GType object_type,
                                               JsonNode* node);
ObjectsBaseObject* objects_base_object_new (void);
ObjectsBaseObject* objects_base_object_construct (GType object_type);
void objects_base_object_set_id (ObjectsBaseObject* self,
                                 gint64 value);
void objects_item_update_from_json (ObjectsItem* self,
                                    JsonNode* node);
GType objects_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsLabel, g_object_unref)
void objects_item_update_local_labels (ObjectsItem* self,
                                       GeeHashMap* new_labels);
GeeHashMap* objects_item_get_labels_from_json (ObjectsItem* self,
                                               JsonNode* node);
void objects_item_update_labels_from_json (ObjectsItem* self,
                                           JsonNode* node);
GType widgets_loading_button_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsLoadingButton, g_object_unref)
void objects_item_update_labels_async (ObjectsItem* self,
                                       GeeHashMap* new_labels,
                                       WidgetsLoadingButton* loading_button);
GType services_database_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesDatabase, g_object_unref)
ObjectsLabel* services_database_get_label_by_name (ServicesDatabase* self,
                                                   const gchar* name);
const gchar* objects_base_object_get_id_string (ObjectsBaseObject* self);
void objects_item_set_project_id (ObjectsItem* self,
                                  gint64 value);
void objects_item_set_content (ObjectsItem* self,
                               const gchar* value);
void objects_item_set_description (ObjectsItem* self,
                                   const gchar* value);
void objects_item_set_checked (ObjectsItem* self,
                               gboolean value);
void objects_item_set_priority (ObjectsItem* self,
                                gint value);
void objects_item_set_is_deleted (ObjectsItem* self,
                                  gboolean value);
void objects_item_set_added_at (ObjectsItem* self,
                                const gchar* value);
void objects_item_set_section_id (ObjectsItem* self,
                                  gint64 value);
void objects_item_set_parent_id (ObjectsItem* self,
                                 gint64 value);
void objects_item_set_completed_at (ObjectsItem* self,
                                    const gchar* value);
ObjectsDueDate* objects_item_get_due (ObjectsItem* self);
void objects_due_date_update_from_json (ObjectsDueDate* self,
                                        JsonObject* object);
void objects_due_date_reset (ObjectsDueDate* self);
void objects_item_set_section (ObjectsItem* self,
                               ObjectsSection* section);
void objects_item_set_project (ObjectsItem* self,
                               ObjectsProject* project);
static gchar* objects_item_real_get_add_json (ObjectsBaseObject* base,
                                       const gchar* temp_id,
                                       const gchar* uuid);
gchar* objects_item_get_check_json (ObjectsItem* self,
                                    const gchar* uuid,
                                    const gchar* type);
JsonBuilder* objects_item_get_builder (ObjectsItem* self);
gint64 objects_base_object_get_id (ObjectsBaseObject* self);
static void _vala_JsonNode_free (JsonNode* self);
void objects_item_update_local (ObjectsItem* self);
void services_database_update_item (ServicesDatabase* self,
                                    ObjectsItem* item,
                                    gint64 update_id);
void objects_item_update (ObjectsItem* self,
                          gint64 update_id);
static Block48Data* block48_data_ref (Block48Data* _data48_);
static void block48_data_unref (void * _userdata_);
guint objects_base_object_get_update_timeout_id (ObjectsBaseObject* self);
#define CONSTANTS_UPDATE_TIMEOUT 1500
static gboolean __lambda32_ (Block48Data* _data48_);
void objects_base_object_set_update_timeout_id (ObjectsBaseObject* self,
                                                guint value);
ObjectsProject* objects_item_get_project (ObjectsItem* self);
gboolean objects_project_get_todoist (ObjectsProject* self);
GType services_todoist_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesTodoist, g_object_unref)
void services_todoist_update (ServicesTodoist* self,
                              ObjectsBaseObject* object,
                              GAsyncReadyCallback _callback_,
                              gpointer _user_data_);
gboolean services_todoist_update_finish (ServicesTodoist* self,
                                         GAsyncResult* _res_);
static void ___lambda33_ (ObjectsItem* self,
                   GObject* obj,
                   GAsyncResult* res);
static void ____lambda33__gasync_ready_callback (GObject* source_object,
                                          GAsyncResult* res,
                                          gpointer self);
static gboolean ___lambda32__gsource_func (gpointer self);
void objects_item_update_async_timeout (ObjectsItem* self,
                                        gint64 update_id,
                                        WidgetsLoadingButton* loading_button);
static Block49Data* block49_data_ref (Block49Data* _data49_);
static void block49_data_unref (void * _userdata_);
static gboolean __lambda34_ (Block49Data* _data49_);
void widgets_loading_button_set_is_loading (WidgetsLoadingButton* self,
                                            gboolean value);
static void ___lambda35_ (Block49Data* _data49_,
                   GObject* obj,
                   GAsyncResult* res);
static void ____lambda35__gasync_ready_callback (GObject* source_object,
                                          GAsyncResult* res,
                                          gpointer self);
static gboolean ___lambda34__gsource_func (gpointer self);
void objects_item_update_async (ObjectsItem* self,
                                gint64 update_id,
                                WidgetsLoadingButton* loading_button);
static Block50Data* block50_data_ref (Block50Data* _data50_);
static void block50_data_unref (void * _userdata_);
static void ___lambda20_ (Block50Data* _data50_,
                   GObject* obj,
                   GAsyncResult* res);
static void ____lambda20__gasync_ready_callback (GObject* source_object,
                                          GAsyncResult* res,
                                          gpointer self);
GeeHashMap* objects_item_get_labels (ObjectsItem* self);
ObjectsItemLabel* objects_item_label_new (void);
ObjectsItemLabel* objects_item_label_construct (GType object_type);
GType util_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Util, g_object_unref)
Util* util_get_default (void);
gint64 util_generate_id (Util* self,
                         gint len);
void objects_item_label_set_label_id (ObjectsItemLabel* self,
                                      gint64 value);
void objects_item_label_set_item_id (ObjectsItemLabel* self,
                                     gint64 value);
gint64 objects_item_label_get_label_id (ObjectsItemLabel* self);
void objects_item_insert_local_labels (ObjectsItem* self);
void services_database_insert_item_label (ServicesDatabase* self,
                                          ObjectsItemLabel* item_label);
ObjectsItemLabel* objects_item_add_label_if_not_exists (ObjectsItem* self,
                                                        ObjectsLabel* label);
void objects_item_delete_item_label (ObjectsItem* self,
                                     ObjectsItemLabel* item_label);
ObjectsItemLabel* objects_item_get_label (ObjectsItem* self,
                                          gint64 id);
void objects_item_add_item_label (ObjectsItem* self,
                                  ObjectsItemLabel* item_label);
void services_database_delete_item_label (ServicesDatabase* self,
                                          ObjectsItemLabel* item_label);
gchar* objects_item_get_move_item (ObjectsItem* self,
                                   const gchar* uuid,
                                   const gchar* type,
                                   gint64 move_id);
static gchar* objects_item_real_get_update_json (ObjectsBaseObject* base,
                                          const gchar* uuid,
                                          const gchar* temp_id);
gchar* util_get_encode_text (Util* self,
                             const gchar* text);
const gchar* objects_item_get_content (ObjectsItem* self);
const gchar* objects_item_get_description (ObjectsItem* self);
gint objects_item_get_priority (ObjectsItem* self);
#define CONSTANTS_PRIORITY_4 1
gboolean objects_item_get_has_due (ObjectsItem* self);
const gchar* objects_due_date_get_date (ObjectsDueDate* self);
gboolean objects_due_date_get_is_recurring (ObjectsDueDate* self);
const gchar* objects_due_date_get_text (ObjectsDueDate* self);
const gchar* objects_due_date_get_lang (ObjectsDueDate* self);
ObjectsLabel* objects_item_label_get_label (ObjectsItemLabel* self);
const gchar* objects_label_get_name (ObjectsLabel* self);
gchar* objects_item_to_string (ObjectsItem* self);
GType layouts_item_row_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (LayoutsItemRow, g_object_unref)
void objects_item_delete (ObjectsItem* self,
                          LayoutsItemRow* itemrow);
static Block51Data* block51_data_ref (Block51Data* _data51_);
static void block51_data_unref (void * _userdata_);
void layouts_item_row_set_is_loading (LayoutsItemRow* self,
                                      gboolean value);
void services_todoist_delete (ServicesTodoist* self,
                              ObjectsBaseObject* object,
                              GAsyncReadyCallback _callback_,
                              gpointer _user_data_);
gboolean services_todoist_delete_finish (ServicesTodoist* self,
                                         GAsyncResult* _res_);
static void ___lambda156_ (Block51Data* _data51_,
                    GObject* obj,
                    GAsyncResult* res);
void services_database_delete_item (ServicesDatabase* self,
                                    ObjectsItem* item);
static void ____lambda156__gasync_ready_callback (GObject* source_object,
                                           GAsyncResult* res,
                                           gpointer self);
ObjectsItem* objects_item_new (void);
ObjectsItem* objects_item_construct (GType object_type);
void objects_item_set_due (ObjectsItem* self,
                           ObjectsDueDate* value);
const gchar* objects_item_get_added_at (ObjectsItem* self);
const gchar* objects_item_get_completed_at (ObjectsItem* self);
const gchar* objects_item_get_updated_at (ObjectsItem* self);
void objects_item_set_updated_at (ObjectsItem* self,
                                  const gchar* value);
gint64 objects_item_get_section_id (ObjectsItem* self);
gint64 objects_item_get_project_id (ObjectsItem* self);
gint64 objects_item_get_parent_id (ObjectsItem* self);
const gchar* objects_item_get_priority_icon (ObjectsItem* self);
#define CONSTANTS_PRIORITY_1 4
#define CONSTANTS_PRIORITY_2 3
#define CONSTANTS_PRIORITY_3 2
gint objects_item_get_child_order (ObjectsItem* self);
void objects_item_set_child_order (ObjectsItem* self,
                                   gint value);
gint objects_item_get_day_order (ObjectsItem* self);
void objects_item_set_day_order (ObjectsItem* self,
                                 gint value);
gint objects_item_get_due_is_recurring (ObjectsItem* self);
void objects_item_set_due_is_recurring (ObjectsItem* self,
                                        gint value);
gboolean objects_item_get_checked (ObjectsItem* self);
gboolean objects_item_get_is_deleted (ObjectsItem* self);
gboolean objects_item_get_collapsed (ObjectsItem* self);
void objects_item_set_collapsed (ObjectsItem* self,
                                 gboolean value);
gboolean objects_item_get_pinned (ObjectsItem* self);
void objects_item_set_pinned (ObjectsItem* self,
                              gboolean value);
const gchar* objects_item_get_pinned_icon (ObjectsItem* self);
gboolean objects_item_get_completed (ObjectsItem* self);
GDateTime* objects_due_date_get_datetime (ObjectsDueDate* self);
gboolean objects_item_get_has_section (ObjectsItem* self);
ObjectsProject* services_database_get_project (ServicesDatabase* self,
                                               gint64 id);
ObjectsSection* objects_item_get_section (ObjectsItem* self);
ObjectsSection* services_database_get_section (ServicesDatabase* self,
                                               gint64 id);
GeeHashMap* services_database_get_labels_by_item (ServicesDatabase* self,
                                                  ObjectsItem* item);
void objects_item_set_labels (ObjectsItem* self,
                              GeeHashMap* value);
static GObject * objects_item_constructor (GType type,
                                    guint n_construct_properties,
                                    GObjectConstructParam * construct_properties);
static void _objects_item___lambda157_ (ObjectsItem* self);
static void __objects_item___lambda157__objects_base_object_deleted (ObjectsBaseObject* _sender,
                                                              gpointer self);
static void objects_item_finalize (GObject * obj);
static GType objects_item_get_type_once (void);
static void _vala_objects_item_get_property (GObject * object,
                                      guint property_id,
                                      GValue * value,
                                      GParamSpec * pspec);
static void _vala_objects_item_set_property (GObject * object,
                                      guint property_id,
                                      const GValue * value,
                                      GParamSpec * pspec);

static inline gpointer
objects_item_get_instance_private (ObjectsItem* self)
{
	return G_STRUCT_MEMBER_P (self, ObjectsItem_private_offset);
}

ObjectsItem*
objects_item_construct_from_json (GType object_type,
                                  JsonNode* node)
{
	ObjectsItem * self = NULL;
	JsonObject* _tmp0_;
	GeeHashMap* _tmp1_;
	GeeHashMap* _tmp2_;
#line 127 "../src/Objects/Item.vala"
	g_return_val_if_fail (node != NULL, NULL);
#line 127 "../src/Objects/Item.vala"
	self = (ObjectsItem*) objects_base_object_construct (object_type);
#line 128 "../src/Objects/Item.vala"
	_tmp0_ = json_node_get_object (node);
#line 128 "../src/Objects/Item.vala"
	objects_base_object_set_id ((ObjectsBaseObject*) self, json_object_get_int_member (_tmp0_, "id"));
#line 129 "../src/Objects/Item.vala"
	objects_item_update_from_json (self, node);
#line 130 "../src/Objects/Item.vala"
	_tmp1_ = objects_item_get_labels_from_json (self, node);
#line 130 "../src/Objects/Item.vala"
	_tmp2_ = _tmp1_;
#line 130 "../src/Objects/Item.vala"
	objects_item_update_local_labels (self, _tmp2_);
#line 130 "../src/Objects/Item.vala"
	_g_object_unref0 (_tmp2_);
#line 127 "../src/Objects/Item.vala"
	return self;
#line 582 "Item.c"
}

ObjectsItem*
objects_item_new_from_json (JsonNode* node)
{
#line 127 "../src/Objects/Item.vala"
	return objects_item_construct_from_json (OBJECTS_TYPE_ITEM, node);
#line 590 "Item.c"
}

void
objects_item_update_labels_from_json (ObjectsItem* self,
                                      JsonNode* node)
{
	GeeHashMap* _tmp0_;
	GeeHashMap* _tmp1_;
#line 133 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 133 "../src/Objects/Item.vala"
	g_return_if_fail (node != NULL);
#line 134 "../src/Objects/Item.vala"
	_tmp0_ = objects_item_get_labels_from_json (self, node);
#line 134 "../src/Objects/Item.vala"
	_tmp1_ = _tmp0_;
#line 134 "../src/Objects/Item.vala"
	objects_item_update_labels_async (self, _tmp1_, NULL);
#line 134 "../src/Objects/Item.vala"
	_g_object_unref0 (_tmp1_);
#line 611 "Item.c"
}

GeeHashMap*
objects_item_get_labels_from_json (ObjectsItem* self,
                                   JsonNode* node)
{
	GeeHashMap* return_value = NULL;
	GeeHashMap* _tmp0_;
	JsonObject* _tmp1_;
	JsonArray* _tmp2_;
	GList* _tmp3_;
	GeeHashMap* result = NULL;
#line 137 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 137 "../src/Objects/Item.vala"
	g_return_val_if_fail (node != NULL, NULL);
#line 138 "../src/Objects/Item.vala"
	_tmp0_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, OBJECTS_TYPE_LABEL, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 138 "../src/Objects/Item.vala"
	return_value = _tmp0_;
#line 139 "../src/Objects/Item.vala"
	_tmp1_ = json_node_get_object (node);
#line 139 "../src/Objects/Item.vala"
	_tmp2_ = json_object_get_array_member (_tmp1_, "labels");
#line 139 "../src/Objects/Item.vala"
	_tmp3_ = json_array_get_elements (_tmp2_);
#line 638 "Item.c"
	{
		GList* element_collection = NULL;
		GList* element_it = NULL;
#line 139 "../src/Objects/Item.vala"
		element_collection = _tmp3_;
#line 139 "../src/Objects/Item.vala"
		for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 646 "Item.c"
			JsonNode* element = NULL;
#line 139 "../src/Objects/Item.vala"
			element = (JsonNode*) element_it->data;
#line 650 "Item.c"
			{
				ObjectsLabel* label = NULL;
				ServicesDatabase* _tmp4_;
				JsonNode* _tmp5_;
				const gchar* _tmp6_;
				ObjectsLabel* _tmp7_;
				GeeHashMap* _tmp8_;
				ObjectsLabel* _tmp9_;
				const gchar* _tmp10_;
				const gchar* _tmp11_;
				ObjectsLabel* _tmp12_;
#line 140 "../src/Objects/Item.vala"
				_tmp4_ = planner_database;
#line 140 "../src/Objects/Item.vala"
				_tmp5_ = element;
#line 140 "../src/Objects/Item.vala"
				_tmp6_ = json_node_get_string (_tmp5_);
#line 140 "../src/Objects/Item.vala"
				_tmp7_ = services_database_get_label_by_name (_tmp4_, _tmp6_);
#line 140 "../src/Objects/Item.vala"
				label = _tmp7_;
#line 141 "../src/Objects/Item.vala"
				_tmp8_ = return_value;
#line 141 "../src/Objects/Item.vala"
				_tmp9_ = label;
#line 141 "../src/Objects/Item.vala"
				_tmp10_ = objects_base_object_get_id_string ((ObjectsBaseObject*) _tmp9_);
#line 141 "../src/Objects/Item.vala"
				_tmp11_ = _tmp10_;
#line 141 "../src/Objects/Item.vala"
				_tmp12_ = label;
#line 141 "../src/Objects/Item.vala"
				gee_abstract_map_set ((GeeAbstractMap*) _tmp8_, _tmp11_, _tmp12_);
#line 139 "../src/Objects/Item.vala"
				_g_object_unref0 (label);
#line 686 "Item.c"
			}
		}
#line 139 "../src/Objects/Item.vala"
		(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 691 "Item.c"
	}
#line 143 "../src/Objects/Item.vala"
	result = return_value;
#line 143 "../src/Objects/Item.vala"
	return result;
#line 697 "Item.c"
}

void
objects_item_update_from_json (ObjectsItem* self,
                               JsonNode* node)
{
	JsonObject* _tmp0_;
	JsonObject* _tmp1_;
	const gchar* _tmp2_;
	JsonObject* _tmp3_;
	const gchar* _tmp4_;
	JsonObject* _tmp5_;
	JsonObject* _tmp6_;
	JsonObject* _tmp7_;
	JsonObject* _tmp8_;
	const gchar* _tmp9_;
	JsonObject* _tmp10_;
	JsonObject* _tmp12_;
	JsonObject* _tmp14_;
	JsonObject* _tmp17_;
#line 146 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 146 "../src/Objects/Item.vala"
	g_return_if_fail (node != NULL);
#line 147 "../src/Objects/Item.vala"
	_tmp0_ = json_node_get_object (node);
#line 147 "../src/Objects/Item.vala"
	objects_item_set_project_id (self, json_object_get_int_member (_tmp0_, "project_id"));
#line 148 "../src/Objects/Item.vala"
	_tmp1_ = json_node_get_object (node);
#line 148 "../src/Objects/Item.vala"
	_tmp2_ = json_object_get_string_member (_tmp1_, "content");
#line 148 "../src/Objects/Item.vala"
	objects_item_set_content (self, _tmp2_);
#line 149 "../src/Objects/Item.vala"
	_tmp3_ = json_node_get_object (node);
#line 149 "../src/Objects/Item.vala"
	_tmp4_ = json_object_get_string_member (_tmp3_, "description");
#line 149 "../src/Objects/Item.vala"
	objects_item_set_description (self, _tmp4_);
#line 150 "../src/Objects/Item.vala"
	_tmp5_ = json_node_get_object (node);
#line 150 "../src/Objects/Item.vala"
	objects_item_set_checked (self, json_object_get_boolean_member (_tmp5_, "checked"));
#line 151 "../src/Objects/Item.vala"
	_tmp6_ = json_node_get_object (node);
#line 151 "../src/Objects/Item.vala"
	objects_item_set_priority (self, (gint) ((gint32) json_object_get_int_member (_tmp6_, "priority")));
#line 152 "../src/Objects/Item.vala"
	_tmp7_ = json_node_get_object (node);
#line 152 "../src/Objects/Item.vala"
	objects_item_set_is_deleted (self, json_object_get_boolean_member (_tmp7_, "is_deleted"));
#line 153 "../src/Objects/Item.vala"
	_tmp8_ = json_node_get_object (node);
#line 153 "../src/Objects/Item.vala"
	_tmp9_ = json_object_get_string_member (_tmp8_, "added_at");
#line 153 "../src/Objects/Item.vala"
	objects_item_set_added_at (self, _tmp9_);
#line 155 "../src/Objects/Item.vala"
	_tmp10_ = json_node_get_object (node);
#line 155 "../src/Objects/Item.vala"
	if (!json_object_get_null_member (_tmp10_, "section_id")) {
#line 760 "Item.c"
		JsonObject* _tmp11_;
#line 156 "../src/Objects/Item.vala"
		_tmp11_ = json_node_get_object (node);
#line 156 "../src/Objects/Item.vala"
		objects_item_set_section_id (self, json_object_get_int_member (_tmp11_, "section_id"));
#line 766 "Item.c"
	} else {
#line 158 "../src/Objects/Item.vala"
		objects_item_set_section_id (self, (gint64) CONSTANTS_INACTIVE);
#line 770 "Item.c"
	}
#line 161 "../src/Objects/Item.vala"
	_tmp12_ = json_node_get_object (node);
#line 161 "../src/Objects/Item.vala"
	if (!json_object_get_null_member (_tmp12_, "parent_id")) {
#line 776 "Item.c"
		JsonObject* _tmp13_;
#line 162 "../src/Objects/Item.vala"
		_tmp13_ = json_node_get_object (node);
#line 162 "../src/Objects/Item.vala"
		objects_item_set_parent_id (self, json_object_get_int_member (_tmp13_, "parent_id"));
#line 782 "Item.c"
	} else {
#line 164 "../src/Objects/Item.vala"
		objects_item_set_parent_id (self, (gint64) CONSTANTS_INACTIVE);
#line 786 "Item.c"
	}
#line 167 "../src/Objects/Item.vala"
	_tmp14_ = json_node_get_object (node);
#line 167 "../src/Objects/Item.vala"
	if (!json_object_get_null_member (_tmp14_, "completed_at")) {
#line 792 "Item.c"
		JsonObject* _tmp15_;
		const gchar* _tmp16_;
#line 168 "../src/Objects/Item.vala"
		_tmp15_ = json_node_get_object (node);
#line 168 "../src/Objects/Item.vala"
		_tmp16_ = json_object_get_string_member (_tmp15_, "completed_at");
#line 168 "../src/Objects/Item.vala"
		objects_item_set_completed_at (self, _tmp16_);
#line 801 "Item.c"
	} else {
#line 170 "../src/Objects/Item.vala"
		objects_item_set_completed_at (self, "");
#line 805 "Item.c"
	}
#line 173 "../src/Objects/Item.vala"
	_tmp17_ = json_node_get_object (node);
#line 173 "../src/Objects/Item.vala"
	if (!json_object_get_null_member (_tmp17_, "due")) {
#line 811 "Item.c"
		ObjectsDueDate* _tmp18_;
		JsonObject* _tmp19_;
		JsonObject* _tmp20_;
#line 174 "../src/Objects/Item.vala"
		_tmp18_ = self->priv->_due;
#line 174 "../src/Objects/Item.vala"
		_tmp19_ = json_node_get_object (node);
#line 174 "../src/Objects/Item.vala"
		_tmp20_ = json_object_get_object_member (_tmp19_, "due");
#line 174 "../src/Objects/Item.vala"
		objects_due_date_update_from_json (_tmp18_, _tmp20_);
#line 823 "Item.c"
	} else {
		ObjectsDueDate* _tmp21_;
#line 176 "../src/Objects/Item.vala"
		_tmp21_ = self->priv->_due;
#line 176 "../src/Objects/Item.vala"
		objects_due_date_reset (_tmp21_);
#line 830 "Item.c"
	}
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 181 "../src/Objects/Item.vala"
	return self ? g_object_ref (self) : NULL;
#line 839 "Item.c"
}

void
objects_item_set_section (ObjectsItem* self,
                          ObjectsSection* section)
{
	ObjectsSection* _tmp0_;
#line 180 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 180 "../src/Objects/Item.vala"
	g_return_if_fail (section != NULL);
#line 181 "../src/Objects/Item.vala"
	_tmp0_ = _g_object_ref0 (section);
#line 181 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_section);
#line 181 "../src/Objects/Item.vala"
	self->priv->_section = _tmp0_;
#line 857 "Item.c"
}

void
objects_item_set_project (ObjectsItem* self,
                          ObjectsProject* project)
{
	ObjectsProject* _tmp0_;
#line 184 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 184 "../src/Objects/Item.vala"
	g_return_if_fail (project != NULL);
#line 185 "../src/Objects/Item.vala"
	_tmp0_ = _g_object_ref0 (project);
#line 185 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_project);
#line 185 "../src/Objects/Item.vala"
	self->priv->_project = _tmp0_;
#line 875 "Item.c"
}

static gchar*
objects_item_real_get_add_json (ObjectsBaseObject* base,
                                const gchar* temp_id,
                                const gchar* uuid)
{
	ObjectsItem * self;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 188 "../src/Objects/Item.vala"
	self = (ObjectsItem*) base;
#line 188 "../src/Objects/Item.vala"
	g_return_val_if_fail (temp_id != NULL, NULL);
#line 188 "../src/Objects/Item.vala"
	g_return_val_if_fail (uuid != NULL, NULL);
#line 189 "../src/Objects/Item.vala"
	_tmp0_ = objects_base_object_get_update_json ((ObjectsBaseObject*) self, uuid, temp_id);
#line 189 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 189 "../src/Objects/Item.vala"
	return result;
#line 898 "Item.c"
}

static void
_vala_JsonNode_free (JsonNode* self)
{
#line 219 "../src/Objects/Item.vala"
	g_boxed_free (json_node_get_type (), self);
#line 906 "Item.c"
}

gchar*
objects_item_get_check_json (ObjectsItem* self,
                             const gchar* uuid,
                             const gchar* type)
{
	JsonBuilder* _tmp0_;
	JsonBuilder* _tmp1_;
	JsonBuilder* _tmp2_;
	JsonBuilder* _tmp3_;
	JsonBuilder* _tmp4_;
	JsonBuilder* _tmp5_;
	JsonBuilder* _tmp6_;
	JsonBuilder* _tmp7_;
	JsonBuilder* _tmp8_;
	JsonBuilder* _tmp9_;
	JsonBuilder* _tmp10_;
	JsonBuilder* _tmp11_;
	JsonBuilder* _tmp12_;
	JsonBuilder* _tmp13_;
	JsonBuilder* _tmp14_;
	JsonBuilder* _tmp15_;
	JsonBuilder* _tmp16_;
	JsonBuilder* _tmp17_;
	JsonBuilder* _tmp18_;
	JsonBuilder* _tmp19_;
	JsonBuilder* _tmp20_;
	JsonBuilder* _tmp21_;
	gint64 _tmp22_;
	gint64 _tmp23_;
	JsonBuilder* _tmp24_;
	JsonBuilder* _tmp25_;
	JsonBuilder* _tmp26_;
	JsonBuilder* _tmp27_;
	JsonBuilder* _tmp28_;
	JsonBuilder* _tmp29_;
	JsonGenerator* generator = NULL;
	JsonGenerator* _tmp30_;
	JsonNode* root = NULL;
	JsonBuilder* _tmp31_;
	JsonBuilder* _tmp32_;
	JsonNode* _tmp33_;
	gchar* _tmp34_;
	gchar* result = NULL;
#line 192 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 192 "../src/Objects/Item.vala"
	g_return_val_if_fail (uuid != NULL, NULL);
#line 192 "../src/Objects/Item.vala"
	g_return_val_if_fail (type != NULL, NULL);
#line 193 "../src/Objects/Item.vala"
	_tmp0_ = objects_item_get_builder (self);
#line 193 "../src/Objects/Item.vala"
	_tmp1_ = _tmp0_;
#line 193 "../src/Objects/Item.vala"
	json_builder_reset (_tmp1_);
#line 195 "../src/Objects/Item.vala"
	_tmp2_ = objects_item_get_builder (self);
#line 195 "../src/Objects/Item.vala"
	_tmp3_ = _tmp2_;
#line 195 "../src/Objects/Item.vala"
	json_builder_begin_array (_tmp3_);
#line 196 "../src/Objects/Item.vala"
	_tmp4_ = objects_item_get_builder (self);
#line 196 "../src/Objects/Item.vala"
	_tmp5_ = _tmp4_;
#line 196 "../src/Objects/Item.vala"
	json_builder_begin_object (_tmp5_);
#line 199 "../src/Objects/Item.vala"
	_tmp6_ = objects_item_get_builder (self);
#line 199 "../src/Objects/Item.vala"
	_tmp7_ = _tmp6_;
#line 199 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp7_, "type");
#line 200 "../src/Objects/Item.vala"
	_tmp8_ = objects_item_get_builder (self);
#line 200 "../src/Objects/Item.vala"
	_tmp9_ = _tmp8_;
#line 200 "../src/Objects/Item.vala"
	json_builder_add_string_value (_tmp9_, type);
#line 202 "../src/Objects/Item.vala"
	_tmp10_ = objects_item_get_builder (self);
#line 202 "../src/Objects/Item.vala"
	_tmp11_ = _tmp10_;
#line 202 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp11_, "uuid");
#line 203 "../src/Objects/Item.vala"
	_tmp12_ = objects_item_get_builder (self);
#line 203 "../src/Objects/Item.vala"
	_tmp13_ = _tmp12_;
#line 203 "../src/Objects/Item.vala"
	json_builder_add_string_value (_tmp13_, uuid);
#line 205 "../src/Objects/Item.vala"
	_tmp14_ = objects_item_get_builder (self);
#line 205 "../src/Objects/Item.vala"
	_tmp15_ = _tmp14_;
#line 205 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp15_, "args");
#line 206 "../src/Objects/Item.vala"
	_tmp16_ = objects_item_get_builder (self);
#line 206 "../src/Objects/Item.vala"
	_tmp17_ = _tmp16_;
#line 206 "../src/Objects/Item.vala"
	json_builder_begin_object (_tmp17_);
#line 208 "../src/Objects/Item.vala"
	_tmp18_ = objects_item_get_builder (self);
#line 208 "../src/Objects/Item.vala"
	_tmp19_ = _tmp18_;
#line 208 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp19_, "id");
#line 209 "../src/Objects/Item.vala"
	_tmp20_ = objects_item_get_builder (self);
#line 209 "../src/Objects/Item.vala"
	_tmp21_ = _tmp20_;
#line 209 "../src/Objects/Item.vala"
	_tmp22_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 209 "../src/Objects/Item.vala"
	_tmp23_ = _tmp22_;
#line 209 "../src/Objects/Item.vala"
	json_builder_add_int_value (_tmp21_, _tmp23_);
#line 211 "../src/Objects/Item.vala"
	_tmp24_ = objects_item_get_builder (self);
#line 211 "../src/Objects/Item.vala"
	_tmp25_ = _tmp24_;
#line 211 "../src/Objects/Item.vala"
	json_builder_end_object (_tmp25_);
#line 212 "../src/Objects/Item.vala"
	_tmp26_ = objects_item_get_builder (self);
#line 212 "../src/Objects/Item.vala"
	_tmp27_ = _tmp26_;
#line 212 "../src/Objects/Item.vala"
	json_builder_end_object (_tmp27_);
#line 213 "../src/Objects/Item.vala"
	_tmp28_ = objects_item_get_builder (self);
#line 213 "../src/Objects/Item.vala"
	_tmp29_ = _tmp28_;
#line 213 "../src/Objects/Item.vala"
	json_builder_end_array (_tmp29_);
#line 215 "../src/Objects/Item.vala"
	_tmp30_ = json_generator_new ();
#line 215 "../src/Objects/Item.vala"
	generator = _tmp30_;
#line 216 "../src/Objects/Item.vala"
	_tmp31_ = objects_item_get_builder (self);
#line 216 "../src/Objects/Item.vala"
	_tmp32_ = _tmp31_;
#line 216 "../src/Objects/Item.vala"
	_tmp33_ = json_builder_get_root (_tmp32_);
#line 216 "../src/Objects/Item.vala"
	root = _tmp33_;
#line 217 "../src/Objects/Item.vala"
	json_generator_set_root (generator, root);
#line 219 "../src/Objects/Item.vala"
	_tmp34_ = json_generator_to_data (generator, NULL);
#line 219 "../src/Objects/Item.vala"
	result = _tmp34_;
#line 219 "../src/Objects/Item.vala"
	__vala_JsonNode_free0 (root);
#line 219 "../src/Objects/Item.vala"
	_g_object_unref0 (generator);
#line 219 "../src/Objects/Item.vala"
	return result;
#line 1070 "Item.c"
}

void
objects_item_update_local (ObjectsItem* self)
{
	ServicesDatabase* _tmp0_;
#line 222 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 223 "../src/Objects/Item.vala"
	_tmp0_ = planner_database;
#line 223 "../src/Objects/Item.vala"
	services_database_update_item (_tmp0_, self, (gint64) CONSTANTS_INACTIVE);
#line 1083 "Item.c"
}

static Block48Data*
block48_data_ref (Block48Data* _data48_)
{
#line 226 "../src/Objects/Item.vala"
	g_atomic_int_inc (&_data48_->_ref_count_);
#line 226 "../src/Objects/Item.vala"
	return _data48_;
#line 1093 "Item.c"
}

static void
block48_data_unref (void * _userdata_)
{
	Block48Data* _data48_;
	_data48_ = (Block48Data*) _userdata_;
#line 226 "../src/Objects/Item.vala"
	if (g_atomic_int_dec_and_test (&_data48_->_ref_count_)) {
#line 1103 "Item.c"
		ObjectsItem* self;
#line 226 "../src/Objects/Item.vala"
		self = _data48_->self;
#line 226 "../src/Objects/Item.vala"
		_g_object_unref0 (self);
#line 226 "../src/Objects/Item.vala"
		g_slice_free (Block48Data, _data48_);
#line 1111 "Item.c"
	}
}

static void
___lambda33_ (ObjectsItem* self,
              GObject* obj,
              GAsyncResult* res)
{
	ServicesTodoist* _tmp0_;
#line 236 "../src/Objects/Item.vala"
	g_return_if_fail (res != NULL);
#line 237 "../src/Objects/Item.vala"
	_tmp0_ = planner_todoist;
#line 237 "../src/Objects/Item.vala"
	services_todoist_update_finish (_tmp0_, res);
#line 1127 "Item.c"
}

static void
____lambda33__gasync_ready_callback (GObject* source_object,
                                     GAsyncResult* res,
                                     gpointer self)
{
#line 236 "../src/Objects/Item.vala"
	___lambda33_ ((ObjectsItem*) self, source_object, res);
#line 236 "../src/Objects/Item.vala"
	g_object_unref (self);
#line 1139 "Item.c"
}

static gboolean
__lambda32_ (Block48Data* _data48_)
{
	ObjectsItem* self;
	ServicesDatabase* _tmp0_;
	ObjectsProject* _tmp1_;
	ObjectsProject* _tmp2_;
	gboolean _tmp3_;
	gboolean _tmp4_;
	gboolean result = FALSE;
#line 231 "../src/Objects/Item.vala"
	self = _data48_->self;
#line 232 "../src/Objects/Item.vala"
	objects_base_object_set_update_timeout_id ((ObjectsBaseObject*) self, (guint) 0);
#line 234 "../src/Objects/Item.vala"
	_tmp0_ = planner_database;
#line 234 "../src/Objects/Item.vala"
	services_database_update_item (_tmp0_, self, _data48_->update_id);
#line 235 "../src/Objects/Item.vala"
	_tmp1_ = objects_item_get_project (self);
#line 235 "../src/Objects/Item.vala"
	_tmp2_ = _tmp1_;
#line 235 "../src/Objects/Item.vala"
	_tmp3_ = objects_project_get_todoist (_tmp2_);
#line 235 "../src/Objects/Item.vala"
	_tmp4_ = _tmp3_;
#line 235 "../src/Objects/Item.vala"
	if (_tmp4_) {
#line 1170 "Item.c"
		ServicesTodoist* _tmp5_;
#line 236 "../src/Objects/Item.vala"
		_tmp5_ = planner_todoist;
#line 236 "../src/Objects/Item.vala"
		services_todoist_update (_tmp5_, (ObjectsBaseObject*) self, ____lambda33__gasync_ready_callback, g_object_ref (self));
#line 1176 "Item.c"
	}
#line 241 "../src/Objects/Item.vala"
	result = G_SOURCE_REMOVE;
#line 241 "../src/Objects/Item.vala"
	return result;
#line 1182 "Item.c"
}

static gboolean
___lambda32__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda32_ (self);
#line 231 "../src/Objects/Item.vala"
	return result;
#line 1192 "Item.c"
}

void
objects_item_update (ObjectsItem* self,
                     gint64 update_id)
{
	Block48Data* _data48_;
	guint _tmp0_;
	guint _tmp1_;
#line 226 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 226 "../src/Objects/Item.vala"
	_data48_ = g_slice_new0 (Block48Data);
#line 226 "../src/Objects/Item.vala"
	_data48_->_ref_count_ = 1;
#line 226 "../src/Objects/Item.vala"
	_data48_->self = g_object_ref (self);
#line 226 "../src/Objects/Item.vala"
	_data48_->update_id = update_id;
#line 227 "../src/Objects/Item.vala"
	_tmp0_ = objects_base_object_get_update_timeout_id ((ObjectsBaseObject*) self);
#line 227 "../src/Objects/Item.vala"
	_tmp1_ = _tmp0_;
#line 227 "../src/Objects/Item.vala"
	if (_tmp1_ != ((guint) 0)) {
#line 1218 "Item.c"
		guint _tmp2_;
		guint _tmp3_;
#line 228 "../src/Objects/Item.vala"
		_tmp2_ = objects_base_object_get_update_timeout_id ((ObjectsBaseObject*) self);
#line 228 "../src/Objects/Item.vala"
		_tmp3_ = _tmp2_;
#line 228 "../src/Objects/Item.vala"
		g_source_remove (_tmp3_);
#line 1227 "Item.c"
	}
#line 231 "../src/Objects/Item.vala"
	objects_base_object_set_update_timeout_id ((ObjectsBaseObject*) self, g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) CONSTANTS_UPDATE_TIMEOUT, ___lambda32__gsource_func, block48_data_ref (_data48_), block48_data_unref));
#line 226 "../src/Objects/Item.vala"
	block48_data_unref (_data48_);
#line 226 "../src/Objects/Item.vala"
	_data48_ = NULL;
#line 1235 "Item.c"
}

static Block49Data*
block49_data_ref (Block49Data* _data49_)
{
#line 245 "../src/Objects/Item.vala"
	g_atomic_int_inc (&_data49_->_ref_count_);
#line 245 "../src/Objects/Item.vala"
	return _data49_;
#line 1245 "Item.c"
}

static void
block49_data_unref (void * _userdata_)
{
	Block49Data* _data49_;
	_data49_ = (Block49Data*) _userdata_;
#line 245 "../src/Objects/Item.vala"
	if (g_atomic_int_dec_and_test (&_data49_->_ref_count_)) {
#line 1255 "Item.c"
		ObjectsItem* self;
#line 245 "../src/Objects/Item.vala"
		self = _data49_->self;
#line 245 "../src/Objects/Item.vala"
		_g_object_unref0 (_data49_->loading_button);
#line 245 "../src/Objects/Item.vala"
		_g_object_unref0 (self);
#line 245 "../src/Objects/Item.vala"
		g_slice_free (Block49Data, _data49_);
#line 1265 "Item.c"
	}
}

static void
___lambda35_ (Block49Data* _data49_,
              GObject* obj,
              GAsyncResult* res)
{
	ObjectsItem* self;
	ServicesTodoist* _tmp0_;
#line 259 "../src/Objects/Item.vala"
	self = _data49_->self;
#line 259 "../src/Objects/Item.vala"
	g_return_if_fail (res != NULL);
#line 260 "../src/Objects/Item.vala"
	_tmp0_ = planner_todoist;
#line 260 "../src/Objects/Item.vala"
	services_todoist_update_finish (_tmp0_, res);
#line 261 "../src/Objects/Item.vala"
	if (_data49_->loading_button != NULL) {
#line 262 "../src/Objects/Item.vala"
		widgets_loading_button_set_is_loading (_data49_->loading_button, FALSE);
#line 1288 "Item.c"
	}
}

static void
____lambda35__gasync_ready_callback (GObject* source_object,
                                     GAsyncResult* res,
                                     gpointer self)
{
#line 259 "../src/Objects/Item.vala"
	___lambda35_ (self, source_object, res);
#line 259 "../src/Objects/Item.vala"
	block49_data_unref (self);
#line 1301 "Item.c"
}

static gboolean
__lambda34_ (Block49Data* _data49_)
{
	ObjectsItem* self;
	ServicesDatabase* _tmp0_;
	ObjectsProject* _tmp1_;
	ObjectsProject* _tmp2_;
	gboolean _tmp3_;
	gboolean _tmp4_;
	gboolean result = FALSE;
#line 250 "../src/Objects/Item.vala"
	self = _data49_->self;
#line 251 "../src/Objects/Item.vala"
	objects_base_object_set_update_timeout_id ((ObjectsBaseObject*) self, (guint) 0);
#line 253 "../src/Objects/Item.vala"
	if (_data49_->loading_button != NULL) {
#line 254 "../src/Objects/Item.vala"
		widgets_loading_button_set_is_loading (_data49_->loading_button, TRUE);
#line 1322 "Item.c"
	}
#line 257 "../src/Objects/Item.vala"
	_tmp0_ = planner_database;
#line 257 "../src/Objects/Item.vala"
	services_database_update_item (_tmp0_, self, _data49_->update_id);
#line 258 "../src/Objects/Item.vala"
	_tmp1_ = objects_item_get_project (self);
#line 258 "../src/Objects/Item.vala"
	_tmp2_ = _tmp1_;
#line 258 "../src/Objects/Item.vala"
	_tmp3_ = objects_project_get_todoist (_tmp2_);
#line 258 "../src/Objects/Item.vala"
	_tmp4_ = _tmp3_;
#line 258 "../src/Objects/Item.vala"
	if (_tmp4_) {
#line 1338 "Item.c"
		ServicesTodoist* _tmp5_;
#line 259 "../src/Objects/Item.vala"
		_tmp5_ = planner_todoist;
#line 259 "../src/Objects/Item.vala"
		services_todoist_update (_tmp5_, (ObjectsBaseObject*) self, ____lambda35__gasync_ready_callback, block49_data_ref (_data49_));
#line 1344 "Item.c"
	}
#line 267 "../src/Objects/Item.vala"
	result = G_SOURCE_REMOVE;
#line 267 "../src/Objects/Item.vala"
	return result;
#line 1350 "Item.c"
}

static gboolean
___lambda34__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda34_ (self);
#line 250 "../src/Objects/Item.vala"
	return result;
#line 1360 "Item.c"
}

void
objects_item_update_async_timeout (ObjectsItem* self,
                                   gint64 update_id,
                                   WidgetsLoadingButton* loading_button)
{
	Block49Data* _data49_;
	WidgetsLoadingButton* _tmp0_;
	guint _tmp1_;
	guint _tmp2_;
#line 245 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 245 "../src/Objects/Item.vala"
	_data49_ = g_slice_new0 (Block49Data);
#line 245 "../src/Objects/Item.vala"
	_data49_->_ref_count_ = 1;
#line 245 "../src/Objects/Item.vala"
	_data49_->self = g_object_ref (self);
#line 245 "../src/Objects/Item.vala"
	_data49_->update_id = update_id;
#line 245 "../src/Objects/Item.vala"
	_tmp0_ = _g_object_ref0 (loading_button);
#line 245 "../src/Objects/Item.vala"
	_g_object_unref0 (_data49_->loading_button);
#line 245 "../src/Objects/Item.vala"
	_data49_->loading_button = _tmp0_;
#line 246 "../src/Objects/Item.vala"
	_tmp1_ = objects_base_object_get_update_timeout_id ((ObjectsBaseObject*) self);
#line 246 "../src/Objects/Item.vala"
	_tmp2_ = _tmp1_;
#line 246 "../src/Objects/Item.vala"
	if (_tmp2_ != ((guint) 0)) {
#line 1394 "Item.c"
		guint _tmp3_;
		guint _tmp4_;
#line 247 "../src/Objects/Item.vala"
		_tmp3_ = objects_base_object_get_update_timeout_id ((ObjectsBaseObject*) self);
#line 247 "../src/Objects/Item.vala"
		_tmp4_ = _tmp3_;
#line 247 "../src/Objects/Item.vala"
		g_source_remove (_tmp4_);
#line 1403 "Item.c"
	}
#line 250 "../src/Objects/Item.vala"
	objects_base_object_set_update_timeout_id ((ObjectsBaseObject*) self, g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) CONSTANTS_UPDATE_TIMEOUT, ___lambda34__gsource_func, block49_data_ref (_data49_), block49_data_unref));
#line 245 "../src/Objects/Item.vala"
	block49_data_unref (_data49_);
#line 245 "../src/Objects/Item.vala"
	_data49_ = NULL;
#line 1411 "Item.c"
}

static Block50Data*
block50_data_ref (Block50Data* _data50_)
{
#line 271 "../src/Objects/Item.vala"
	g_atomic_int_inc (&_data50_->_ref_count_);
#line 271 "../src/Objects/Item.vala"
	return _data50_;
#line 1421 "Item.c"
}

static void
block50_data_unref (void * _userdata_)
{
	Block50Data* _data50_;
	_data50_ = (Block50Data*) _userdata_;
#line 271 "../src/Objects/Item.vala"
	if (g_atomic_int_dec_and_test (&_data50_->_ref_count_)) {
#line 1431 "Item.c"
		ObjectsItem* self;
#line 271 "../src/Objects/Item.vala"
		self = _data50_->self;
#line 271 "../src/Objects/Item.vala"
		_g_object_unref0 (_data50_->loading_button);
#line 271 "../src/Objects/Item.vala"
		_g_object_unref0 (self);
#line 271 "../src/Objects/Item.vala"
		g_slice_free (Block50Data, _data50_);
#line 1441 "Item.c"
	}
}

static void
___lambda20_ (Block50Data* _data50_,
              GObject* obj,
              GAsyncResult* res)
{
	ObjectsItem* self;
	ServicesTodoist* _tmp0_;
#line 278 "../src/Objects/Item.vala"
	self = _data50_->self;
#line 278 "../src/Objects/Item.vala"
	g_return_if_fail (res != NULL);
#line 279 "../src/Objects/Item.vala"
	_tmp0_ = planner_todoist;
#line 279 "../src/Objects/Item.vala"
	services_todoist_update_finish (_tmp0_, res);
#line 280 "../src/Objects/Item.vala"
	if (_data50_->loading_button != NULL) {
#line 281 "../src/Objects/Item.vala"
		widgets_loading_button_set_is_loading (_data50_->loading_button, FALSE);
#line 1464 "Item.c"
	}
}

static void
____lambda20__gasync_ready_callback (GObject* source_object,
                                     GAsyncResult* res,
                                     gpointer self)
{
#line 278 "../src/Objects/Item.vala"
	___lambda20_ (self, source_object, res);
#line 278 "../src/Objects/Item.vala"
	block50_data_unref (self);
#line 1477 "Item.c"
}

void
objects_item_update_async (ObjectsItem* self,
                           gint64 update_id,
                           WidgetsLoadingButton* loading_button)
{
	Block50Data* _data50_;
	WidgetsLoadingButton* _tmp0_;
	ServicesDatabase* _tmp1_;
	ObjectsProject* _tmp2_;
	ObjectsProject* _tmp3_;
	gboolean _tmp4_;
	gboolean _tmp5_;
#line 271 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 271 "../src/Objects/Item.vala"
	_data50_ = g_slice_new0 (Block50Data);
#line 271 "../src/Objects/Item.vala"
	_data50_->_ref_count_ = 1;
#line 271 "../src/Objects/Item.vala"
	_data50_->self = g_object_ref (self);
#line 271 "../src/Objects/Item.vala"
	_tmp0_ = _g_object_ref0 (loading_button);
#line 271 "../src/Objects/Item.vala"
	_g_object_unref0 (_data50_->loading_button);
#line 271 "../src/Objects/Item.vala"
	_data50_->loading_button = _tmp0_;
#line 272 "../src/Objects/Item.vala"
	if (_data50_->loading_button != NULL) {
#line 273 "../src/Objects/Item.vala"
		widgets_loading_button_set_is_loading (_data50_->loading_button, TRUE);
#line 1510 "Item.c"
	}
#line 276 "../src/Objects/Item.vala"
	_tmp1_ = planner_database;
#line 276 "../src/Objects/Item.vala"
	services_database_update_item (_tmp1_, self, update_id);
#line 277 "../src/Objects/Item.vala"
	_tmp2_ = objects_item_get_project (self);
#line 277 "../src/Objects/Item.vala"
	_tmp3_ = _tmp2_;
#line 277 "../src/Objects/Item.vala"
	_tmp4_ = objects_project_get_todoist (_tmp3_);
#line 277 "../src/Objects/Item.vala"
	_tmp5_ = _tmp4_;
#line 277 "../src/Objects/Item.vala"
	if (_tmp5_) {
#line 1526 "Item.c"
		ServicesTodoist* _tmp6_;
#line 278 "../src/Objects/Item.vala"
		_tmp6_ = planner_todoist;
#line 278 "../src/Objects/Item.vala"
		services_todoist_update (_tmp6_, (ObjectsBaseObject*) self, ____lambda20__gasync_ready_callback, block50_data_ref (_data50_));
#line 1532 "Item.c"
	}
#line 271 "../src/Objects/Item.vala"
	block50_data_unref (_data50_);
#line 271 "../src/Objects/Item.vala"
	_data50_ = NULL;
#line 1538 "Item.c"
}

void
objects_item_update_local_labels (ObjectsItem* self,
                                  GeeHashMap* new_labels)
{
	GeeHashMap* _tmp0_;
	GeeHashMap* _tmp1_;
#line 287 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 287 "../src/Objects/Item.vala"
	g_return_if_fail (new_labels != NULL);
#line 288 "../src/Objects/Item.vala"
	_tmp0_ = objects_item_get_labels (self);
#line 288 "../src/Objects/Item.vala"
	_tmp1_ = _tmp0_;
#line 288 "../src/Objects/Item.vala"
	gee_abstract_map_clear ((GeeAbstractMap*) _tmp1_);
#line 1557 "Item.c"
	{
		GeeIterator* _entry_it = NULL;
		GeeSet* _tmp2_;
		GeeSet* _tmp3_;
		GeeSet* _tmp4_;
		GeeIterator* _tmp5_;
		GeeIterator* _tmp6_;
#line 290 "../src/Objects/Item.vala"
		_tmp2_ = gee_abstract_map_get_entries ((GeeAbstractMap*) new_labels);
#line 290 "../src/Objects/Item.vala"
		_tmp3_ = _tmp2_;
#line 290 "../src/Objects/Item.vala"
		_tmp4_ = _tmp3_;
#line 290 "../src/Objects/Item.vala"
		_tmp5_ = gee_iterable_iterator ((GeeIterable*) _tmp4_);
#line 290 "../src/Objects/Item.vala"
		_tmp6_ = _tmp5_;
#line 290 "../src/Objects/Item.vala"
		_g_object_unref0 (_tmp4_);
#line 290 "../src/Objects/Item.vala"
		_entry_it = _tmp6_;
#line 290 "../src/Objects/Item.vala"
		while (TRUE) {
#line 1581 "Item.c"
			GeeIterator* _tmp7_;
			GeeMapEntry* entry = NULL;
			GeeIterator* _tmp8_;
			gpointer _tmp9_;
			ObjectsItemLabel* item_label = NULL;
			ObjectsItemLabel* _tmp10_;
			ObjectsItemLabel* _tmp11_;
			Util* _tmp12_;
			Util* _tmp13_;
			ObjectsItemLabel* _tmp14_;
			GeeMapEntry* _tmp15_;
			gconstpointer _tmp16_;
			gconstpointer _tmp17_;
			gint64 _tmp18_;
			gint64 _tmp19_;
			ObjectsItemLabel* _tmp20_;
			gint64 _tmp21_;
			gint64 _tmp22_;
			GeeHashMap* _tmp23_;
			ObjectsItemLabel* _tmp24_;
			gint64 _tmp25_;
			gint64 _tmp26_;
			gchar* _tmp27_;
			gchar* _tmp28_;
			ObjectsItemLabel* _tmp29_;
#line 290 "../src/Objects/Item.vala"
			_tmp7_ = _entry_it;
#line 290 "../src/Objects/Item.vala"
			if (!gee_iterator_next (_tmp7_)) {
#line 290 "../src/Objects/Item.vala"
				break;
#line 1613 "Item.c"
			}
#line 290 "../src/Objects/Item.vala"
			_tmp8_ = _entry_it;
#line 290 "../src/Objects/Item.vala"
			_tmp9_ = gee_iterator_get (_tmp8_);
#line 290 "../src/Objects/Item.vala"
			entry = (GeeMapEntry*) _tmp9_;
#line 291 "../src/Objects/Item.vala"
			_tmp10_ = objects_item_label_new ();
#line 291 "../src/Objects/Item.vala"
			item_label = _tmp10_;
#line 292 "../src/Objects/Item.vala"
			_tmp11_ = item_label;
#line 292 "../src/Objects/Item.vala"
			_tmp12_ = util_get_default ();
#line 292 "../src/Objects/Item.vala"
			_tmp13_ = _tmp12_;
#line 292 "../src/Objects/Item.vala"
			objects_base_object_set_id ((ObjectsBaseObject*) _tmp11_, util_generate_id (_tmp13_, 10));
#line 292 "../src/Objects/Item.vala"
			_g_object_unref0 (_tmp13_);
#line 293 "../src/Objects/Item.vala"
			_tmp14_ = item_label;
#line 293 "../src/Objects/Item.vala"
			_tmp15_ = entry;
#line 293 "../src/Objects/Item.vala"
			_tmp16_ = gee_map_entry_get_value (_tmp15_);
#line 293 "../src/Objects/Item.vala"
			_tmp17_ = _tmp16_;
#line 293 "../src/Objects/Item.vala"
			_tmp18_ = objects_base_object_get_id ((ObjectsBaseObject*) ((ObjectsLabel*) _tmp17_));
#line 293 "../src/Objects/Item.vala"
			_tmp19_ = _tmp18_;
#line 293 "../src/Objects/Item.vala"
			objects_item_label_set_label_id (_tmp14_, _tmp19_);
#line 294 "../src/Objects/Item.vala"
			_tmp20_ = item_label;
#line 294 "../src/Objects/Item.vala"
			_tmp21_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 294 "../src/Objects/Item.vala"
			_tmp22_ = _tmp21_;
#line 294 "../src/Objects/Item.vala"
			objects_item_label_set_item_id (_tmp20_, _tmp22_);
#line 296 "../src/Objects/Item.vala"
			_tmp23_ = self->priv->_labels;
#line 296 "../src/Objects/Item.vala"
			_tmp24_ = item_label;
#line 296 "../src/Objects/Item.vala"
			_tmp25_ = objects_item_label_get_label_id (_tmp24_);
#line 296 "../src/Objects/Item.vala"
			_tmp26_ = _tmp25_;
#line 296 "../src/Objects/Item.vala"
			_tmp27_ = g_strdup_printf ("%" G_GINT64_FORMAT, _tmp26_);
#line 296 "../src/Objects/Item.vala"
			_tmp28_ = _tmp27_;
#line 296 "../src/Objects/Item.vala"
			_tmp29_ = item_label;
#line 296 "../src/Objects/Item.vala"
			gee_abstract_map_set ((GeeAbstractMap*) _tmp23_, _tmp28_, _tmp29_);
#line 296 "../src/Objects/Item.vala"
			_g_free0 (_tmp28_);
#line 290 "../src/Objects/Item.vala"
			_g_object_unref0 (item_label);
#line 290 "../src/Objects/Item.vala"
			_g_object_unref0 (entry);
#line 1679 "Item.c"
		}
#line 290 "../src/Objects/Item.vala"
		_g_object_unref0 (_entry_it);
#line 1683 "Item.c"
	}
}

void
objects_item_insert_local_labels (ObjectsItem* self)
{
#line 300 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 1692 "Item.c"
	{
		GeeIterator* _entry_it = NULL;
		GeeHashMap* _tmp0_;
		GeeHashMap* _tmp1_;
		GeeSet* _tmp2_;
		GeeSet* _tmp3_;
		GeeSet* _tmp4_;
		GeeIterator* _tmp5_;
		GeeIterator* _tmp6_;
#line 301 "../src/Objects/Item.vala"
		_tmp0_ = objects_item_get_labels (self);
#line 301 "../src/Objects/Item.vala"
		_tmp1_ = _tmp0_;
#line 301 "../src/Objects/Item.vala"
		_tmp2_ = gee_abstract_map_get_entries ((GeeAbstractMap*) _tmp1_);
#line 301 "../src/Objects/Item.vala"
		_tmp3_ = _tmp2_;
#line 301 "../src/Objects/Item.vala"
		_tmp4_ = _tmp3_;
#line 301 "../src/Objects/Item.vala"
		_tmp5_ = gee_iterable_iterator ((GeeIterable*) _tmp4_);
#line 301 "../src/Objects/Item.vala"
		_tmp6_ = _tmp5_;
#line 301 "../src/Objects/Item.vala"
		_g_object_unref0 (_tmp4_);
#line 301 "../src/Objects/Item.vala"
		_entry_it = _tmp6_;
#line 301 "../src/Objects/Item.vala"
		while (TRUE) {
#line 1722 "Item.c"
			GeeIterator* _tmp7_;
			GeeMapEntry* entry = NULL;
			GeeIterator* _tmp8_;
			gpointer _tmp9_;
			GeeMapEntry* _tmp10_;
			gconstpointer _tmp11_;
			gconstpointer _tmp12_;
			gint64 _tmp13_;
			gint64 _tmp14_;
			ServicesDatabase* _tmp15_;
			GeeMapEntry* _tmp16_;
			gconstpointer _tmp17_;
			gconstpointer _tmp18_;
#line 301 "../src/Objects/Item.vala"
			_tmp7_ = _entry_it;
#line 301 "../src/Objects/Item.vala"
			if (!gee_iterator_next (_tmp7_)) {
#line 301 "../src/Objects/Item.vala"
				break;
#line 1742 "Item.c"
			}
#line 301 "../src/Objects/Item.vala"
			_tmp8_ = _entry_it;
#line 301 "../src/Objects/Item.vala"
			_tmp9_ = gee_iterator_get (_tmp8_);
#line 301 "../src/Objects/Item.vala"
			entry = (GeeMapEntry*) _tmp9_;
#line 302 "../src/Objects/Item.vala"
			_tmp10_ = entry;
#line 302 "../src/Objects/Item.vala"
			_tmp11_ = gee_map_entry_get_value (_tmp10_);
#line 302 "../src/Objects/Item.vala"
			_tmp12_ = _tmp11_;
#line 302 "../src/Objects/Item.vala"
			_tmp13_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 302 "../src/Objects/Item.vala"
			_tmp14_ = _tmp13_;
#line 302 "../src/Objects/Item.vala"
			objects_item_label_set_item_id ((ObjectsItemLabel*) _tmp12_, _tmp14_);
#line 303 "../src/Objects/Item.vala"
			_tmp15_ = planner_database;
#line 303 "../src/Objects/Item.vala"
			_tmp16_ = entry;
#line 303 "../src/Objects/Item.vala"
			_tmp17_ = gee_map_entry_get_value (_tmp16_);
#line 303 "../src/Objects/Item.vala"
			_tmp18_ = _tmp17_;
#line 303 "../src/Objects/Item.vala"
			services_database_insert_item_label (_tmp15_, (ObjectsItemLabel*) _tmp18_);
#line 301 "../src/Objects/Item.vala"
			_g_object_unref0 (entry);
#line 1774 "Item.c"
		}
#line 301 "../src/Objects/Item.vala"
		_g_object_unref0 (_entry_it);
#line 1778 "Item.c"
	}
}

void
objects_item_update_labels_async (ObjectsItem* self,
                                  GeeHashMap* new_labels,
                                  WidgetsLoadingButton* loading_button)
{
	GeeArrayList* labels_delete = NULL;
	GeeArrayList* _tmp20_;
	ObjectsProject* _tmp48_;
	ObjectsProject* _tmp49_;
	gboolean _tmp50_;
	gboolean _tmp51_;
#line 307 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 307 "../src/Objects/Item.vala"
	g_return_if_fail (new_labels != NULL);
#line 1797 "Item.c"
	{
		GeeIterator* _entry_it = NULL;
		GeeSet* _tmp0_;
		GeeSet* _tmp1_;
		GeeSet* _tmp2_;
		GeeIterator* _tmp3_;
		GeeIterator* _tmp4_;
#line 309 "../src/Objects/Item.vala"
		_tmp0_ = gee_abstract_map_get_entries ((GeeAbstractMap*) new_labels);
#line 309 "../src/Objects/Item.vala"
		_tmp1_ = _tmp0_;
#line 309 "../src/Objects/Item.vala"
		_tmp2_ = _tmp1_;
#line 309 "../src/Objects/Item.vala"
		_tmp3_ = gee_iterable_iterator ((GeeIterable*) _tmp2_);
#line 309 "../src/Objects/Item.vala"
		_tmp4_ = _tmp3_;
#line 309 "../src/Objects/Item.vala"
		_g_object_unref0 (_tmp2_);
#line 309 "../src/Objects/Item.vala"
		_entry_it = _tmp4_;
#line 309 "../src/Objects/Item.vala"
		while (TRUE) {
#line 1821 "Item.c"
			GeeIterator* _tmp5_;
			GeeMapEntry* entry = NULL;
			GeeIterator* _tmp6_;
			gpointer _tmp7_;
			GeeHashMap* _tmp8_;
			GeeHashMap* _tmp9_;
			GeeMapEntry* _tmp10_;
			gconstpointer _tmp11_;
			gconstpointer _tmp12_;
			const gchar* _tmp13_;
			const gchar* _tmp14_;
#line 309 "../src/Objects/Item.vala"
			_tmp5_ = _entry_it;
#line 309 "../src/Objects/Item.vala"
			if (!gee_iterator_next (_tmp5_)) {
#line 309 "../src/Objects/Item.vala"
				break;
#line 1839 "Item.c"
			}
#line 309 "../src/Objects/Item.vala"
			_tmp6_ = _entry_it;
#line 309 "../src/Objects/Item.vala"
			_tmp7_ = gee_iterator_get (_tmp6_);
#line 309 "../src/Objects/Item.vala"
			entry = (GeeMapEntry*) _tmp7_;
#line 310 "../src/Objects/Item.vala"
			_tmp8_ = objects_item_get_labels (self);
#line 310 "../src/Objects/Item.vala"
			_tmp9_ = _tmp8_;
#line 310 "../src/Objects/Item.vala"
			_tmp10_ = entry;
#line 310 "../src/Objects/Item.vala"
			_tmp11_ = gee_map_entry_get_value (_tmp10_);
#line 310 "../src/Objects/Item.vala"
			_tmp12_ = _tmp11_;
#line 310 "../src/Objects/Item.vala"
			_tmp13_ = objects_base_object_get_id_string ((ObjectsBaseObject*) ((ObjectsLabel*) _tmp12_));
#line 310 "../src/Objects/Item.vala"
			_tmp14_ = _tmp13_;
#line 310 "../src/Objects/Item.vala"
			if (!gee_abstract_map_has_key ((GeeAbstractMap*) _tmp9_, _tmp14_)) {
#line 1863 "Item.c"
				GeeMapEntry* _tmp15_;
				gconstpointer _tmp16_;
				gconstpointer _tmp17_;
				ObjectsItemLabel* _tmp18_;
				ObjectsItemLabel* _tmp19_;
#line 311 "../src/Objects/Item.vala"
				_tmp15_ = entry;
#line 311 "../src/Objects/Item.vala"
				_tmp16_ = gee_map_entry_get_value (_tmp15_);
#line 311 "../src/Objects/Item.vala"
				_tmp17_ = _tmp16_;
#line 311 "../src/Objects/Item.vala"
				_tmp18_ = objects_item_add_label_if_not_exists (self, (ObjectsLabel*) _tmp17_);
#line 311 "../src/Objects/Item.vala"
				_tmp19_ = _tmp18_;
#line 311 "../src/Objects/Item.vala"
				_g_object_unref0 (_tmp19_);
#line 1881 "Item.c"
			}
#line 309 "../src/Objects/Item.vala"
			_g_object_unref0 (entry);
#line 1885 "Item.c"
		}
#line 309 "../src/Objects/Item.vala"
		_g_object_unref0 (_entry_it);
#line 1889 "Item.c"
	}
#line 315 "../src/Objects/Item.vala"
	_tmp20_ = gee_array_list_new (OBJECTS_TYPE_ITEM_LABEL, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 315 "../src/Objects/Item.vala"
	labels_delete = _tmp20_;
#line 1895 "Item.c"
	{
		GeeIterator* _entry_it = NULL;
		GeeHashMap* _tmp21_;
		GeeHashMap* _tmp22_;
		GeeSet* _tmp23_;
		GeeSet* _tmp24_;
		GeeSet* _tmp25_;
		GeeIterator* _tmp26_;
		GeeIterator* _tmp27_;
#line 316 "../src/Objects/Item.vala"
		_tmp21_ = objects_item_get_labels (self);
#line 316 "../src/Objects/Item.vala"
		_tmp22_ = _tmp21_;
#line 316 "../src/Objects/Item.vala"
		_tmp23_ = gee_abstract_map_get_entries ((GeeAbstractMap*) _tmp22_);
#line 316 "../src/Objects/Item.vala"
		_tmp24_ = _tmp23_;
#line 316 "../src/Objects/Item.vala"
		_tmp25_ = _tmp24_;
#line 316 "../src/Objects/Item.vala"
		_tmp26_ = gee_iterable_iterator ((GeeIterable*) _tmp25_);
#line 316 "../src/Objects/Item.vala"
		_tmp27_ = _tmp26_;
#line 316 "../src/Objects/Item.vala"
		_g_object_unref0 (_tmp25_);
#line 316 "../src/Objects/Item.vala"
		_entry_it = _tmp27_;
#line 316 "../src/Objects/Item.vala"
		while (TRUE) {
#line 1925 "Item.c"
			GeeIterator* _tmp28_;
			GeeMapEntry* entry = NULL;
			GeeIterator* _tmp29_;
			gpointer _tmp30_;
			GeeMapEntry* _tmp31_;
			gconstpointer _tmp32_;
			gconstpointer _tmp33_;
#line 316 "../src/Objects/Item.vala"
			_tmp28_ = _entry_it;
#line 316 "../src/Objects/Item.vala"
			if (!gee_iterator_next (_tmp28_)) {
#line 316 "../src/Objects/Item.vala"
				break;
#line 1939 "Item.c"
			}
#line 316 "../src/Objects/Item.vala"
			_tmp29_ = _entry_it;
#line 316 "../src/Objects/Item.vala"
			_tmp30_ = gee_iterator_get (_tmp29_);
#line 316 "../src/Objects/Item.vala"
			entry = (GeeMapEntry*) _tmp30_;
#line 317 "../src/Objects/Item.vala"
			_tmp31_ = entry;
#line 317 "../src/Objects/Item.vala"
			_tmp32_ = gee_map_entry_get_key (_tmp31_);
#line 317 "../src/Objects/Item.vala"
			_tmp33_ = _tmp32_;
#line 317 "../src/Objects/Item.vala"
			if (!gee_abstract_map_has_key ((GeeAbstractMap*) new_labels, (const gchar*) _tmp33_)) {
#line 1955 "Item.c"
				GeeArrayList* _tmp34_;
				GeeMapEntry* _tmp35_;
				gconstpointer _tmp36_;
				gconstpointer _tmp37_;
#line 318 "../src/Objects/Item.vala"
				_tmp34_ = labels_delete;
#line 318 "../src/Objects/Item.vala"
				_tmp35_ = entry;
#line 318 "../src/Objects/Item.vala"
				_tmp36_ = gee_map_entry_get_value (_tmp35_);
#line 318 "../src/Objects/Item.vala"
				_tmp37_ = _tmp36_;
#line 318 "../src/Objects/Item.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) _tmp34_, (ObjectsItemLabel*) _tmp37_);
#line 1970 "Item.c"
			}
#line 316 "../src/Objects/Item.vala"
			_g_object_unref0 (entry);
#line 1974 "Item.c"
		}
#line 316 "../src/Objects/Item.vala"
		_g_object_unref0 (_entry_it);
#line 1978 "Item.c"
	}
	{
		GeeArrayList* _item_label_list = NULL;
		GeeArrayList* _tmp38_;
		GeeArrayList* _tmp39_;
		gint _item_label_size = 0;
		GeeArrayList* _tmp40_;
		gint _tmp41_;
		gint _tmp42_;
		gint _item_label_index = 0;
#line 322 "../src/Objects/Item.vala"
		_tmp38_ = labels_delete;
#line 322 "../src/Objects/Item.vala"
		_tmp39_ = _g_object_ref0 (_tmp38_);
#line 322 "../src/Objects/Item.vala"
		_item_label_list = _tmp39_;
#line 322 "../src/Objects/Item.vala"
		_tmp40_ = _item_label_list;
#line 322 "../src/Objects/Item.vala"
		_tmp41_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp40_);
#line 322 "../src/Objects/Item.vala"
		_tmp42_ = _tmp41_;
#line 322 "../src/Objects/Item.vala"
		_item_label_size = _tmp42_;
#line 322 "../src/Objects/Item.vala"
		_item_label_index = -1;
#line 322 "../src/Objects/Item.vala"
		while (TRUE) {
#line 2007 "Item.c"
			gint _tmp43_;
			gint _tmp44_;
			ObjectsItemLabel* item_label = NULL;
			GeeArrayList* _tmp45_;
			gpointer _tmp46_;
			ObjectsItemLabel* _tmp47_;
#line 322 "../src/Objects/Item.vala"
			_item_label_index = _item_label_index + 1;
#line 322 "../src/Objects/Item.vala"
			_tmp43_ = _item_label_index;
#line 322 "../src/Objects/Item.vala"
			_tmp44_ = _item_label_size;
#line 322 "../src/Objects/Item.vala"
			if (!(_tmp43_ < _tmp44_)) {
#line 322 "../src/Objects/Item.vala"
				break;
#line 2024 "Item.c"
			}
#line 322 "../src/Objects/Item.vala"
			_tmp45_ = _item_label_list;
#line 322 "../src/Objects/Item.vala"
			_tmp46_ = gee_abstract_list_get ((GeeAbstractList*) _tmp45_, _item_label_index);
#line 322 "../src/Objects/Item.vala"
			item_label = (ObjectsItemLabel*) _tmp46_;
#line 323 "../src/Objects/Item.vala"
			_tmp47_ = item_label;
#line 323 "../src/Objects/Item.vala"
			objects_item_delete_item_label (self, _tmp47_);
#line 322 "../src/Objects/Item.vala"
			_g_object_unref0 (item_label);
#line 2038 "Item.c"
		}
#line 322 "../src/Objects/Item.vala"
		_g_object_unref0 (_item_label_list);
#line 2042 "Item.c"
	}
#line 326 "../src/Objects/Item.vala"
	_tmp48_ = objects_item_get_project (self);
#line 326 "../src/Objects/Item.vala"
	_tmp49_ = _tmp48_;
#line 326 "../src/Objects/Item.vala"
	_tmp50_ = objects_project_get_todoist (_tmp49_);
#line 326 "../src/Objects/Item.vala"
	_tmp51_ = _tmp50_;
#line 326 "../src/Objects/Item.vala"
	if (_tmp51_) {
#line 327 "../src/Objects/Item.vala"
		objects_item_update_async (self, (gint64) CONSTANTS_INACTIVE, loading_button);
#line 2056 "Item.c"
	}
#line 307 "../src/Objects/Item.vala"
	_g_object_unref0 (labels_delete);
#line 2060 "Item.c"
}

ObjectsItemLabel*
objects_item_add_label_if_not_exists (ObjectsItem* self,
                                      ObjectsLabel* label)
{
	ObjectsItemLabel* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsItemLabel* result = NULL;
#line 331 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 331 "../src/Objects/Item.vala"
	g_return_val_if_fail (label != NULL, NULL);
#line 332 "../src/Objects/Item.vala"
	return_value = NULL;
#line 2076 "Item.c"
	{
		GeeHashMap* _tmp0_;
#line 333 "../src/Objects/Item.vala"
		_tmp0_ = self->priv->_labels;
#line 333 "../src/Objects/Item.vala"
		g_rec_mutex_lock (&self->priv->__lock__labels);
#line 2083 "Item.c"
		{
			gint64 _tmp1_;
			gint64 _tmp2_;
			ObjectsItemLabel* _tmp3_;
			ObjectsItemLabel* _tmp4_;
			ObjectsItemLabel* _tmp18_;
			ObjectsItemLabel* _tmp19_;
#line 334 "../src/Objects/Item.vala"
			_tmp1_ = objects_base_object_get_id ((ObjectsBaseObject*) label);
#line 334 "../src/Objects/Item.vala"
			_tmp2_ = _tmp1_;
#line 334 "../src/Objects/Item.vala"
			_tmp3_ = objects_item_get_label (self, _tmp2_);
#line 334 "../src/Objects/Item.vala"
			_g_object_unref0 (return_value);
#line 334 "../src/Objects/Item.vala"
			return_value = _tmp3_;
#line 335 "../src/Objects/Item.vala"
			_tmp4_ = return_value;
#line 335 "../src/Objects/Item.vala"
			if (_tmp4_ == NULL) {
#line 2105 "Item.c"
				ObjectsItemLabel* _tmp5_;
				ObjectsItemLabel* _tmp6_;
				Util* _tmp7_;
				Util* _tmp8_;
				ObjectsItemLabel* _tmp9_;
				gint64 _tmp10_;
				gint64 _tmp11_;
				ObjectsItemLabel* _tmp12_;
				gint64 _tmp13_;
				gint64 _tmp14_;
				ServicesDatabase* _tmp15_;
				ObjectsItemLabel* _tmp16_;
				ObjectsItemLabel* _tmp17_;
#line 336 "../src/Objects/Item.vala"
				_tmp5_ = objects_item_label_new ();
#line 336 "../src/Objects/Item.vala"
				_g_object_unref0 (return_value);
#line 336 "../src/Objects/Item.vala"
				return_value = _tmp5_;
#line 337 "../src/Objects/Item.vala"
				_tmp6_ = return_value;
#line 337 "../src/Objects/Item.vala"
				_tmp7_ = util_get_default ();
#line 337 "../src/Objects/Item.vala"
				_tmp8_ = _tmp7_;
#line 337 "../src/Objects/Item.vala"
				objects_base_object_set_id ((ObjectsBaseObject*) _tmp6_, util_generate_id (_tmp8_, 10));
#line 337 "../src/Objects/Item.vala"
				_g_object_unref0 (_tmp8_);
#line 338 "../src/Objects/Item.vala"
				_tmp9_ = return_value;
#line 338 "../src/Objects/Item.vala"
				_tmp10_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 338 "../src/Objects/Item.vala"
				_tmp11_ = _tmp10_;
#line 338 "../src/Objects/Item.vala"
				objects_item_label_set_item_id (_tmp9_, _tmp11_);
#line 339 "../src/Objects/Item.vala"
				_tmp12_ = return_value;
#line 339 "../src/Objects/Item.vala"
				_tmp13_ = objects_base_object_get_id ((ObjectsBaseObject*) label);
#line 339 "../src/Objects/Item.vala"
				_tmp14_ = _tmp13_;
#line 339 "../src/Objects/Item.vala"
				objects_item_label_set_label_id (_tmp12_, _tmp14_);
#line 341 "../src/Objects/Item.vala"
				_tmp15_ = planner_database;
#line 341 "../src/Objects/Item.vala"
				_tmp16_ = return_value;
#line 341 "../src/Objects/Item.vala"
				services_database_insert_item_label (_tmp15_, _tmp16_);
#line 342 "../src/Objects/Item.vala"
				_tmp17_ = return_value;
#line 342 "../src/Objects/Item.vala"
				objects_item_add_item_label (self, _tmp17_);
#line 2161 "Item.c"
			}
#line 344 "../src/Objects/Item.vala"
			_tmp18_ = return_value;
#line 344 "../src/Objects/Item.vala"
			_tmp19_ = _g_object_ref0 (_tmp18_);
#line 344 "../src/Objects/Item.vala"
			result = _tmp19_;
#line 2169 "Item.c"
			{
				GeeHashMap* _tmp20_;
#line 333 "../src/Objects/Item.vala"
				_tmp20_ = self->priv->_labels;
#line 333 "../src/Objects/Item.vala"
				g_rec_mutex_unlock (&self->priv->__lock__labels);
#line 2176 "Item.c"
			}
#line 344 "../src/Objects/Item.vala"
			_g_object_unref0 (return_value);
#line 344 "../src/Objects/Item.vala"
			return result;
#line 2182 "Item.c"
		}
		__finally0:
		{
			GeeHashMap* _tmp21_;
#line 333 "../src/Objects/Item.vala"
			_tmp21_ = self->priv->_labels;
#line 333 "../src/Objects/Item.vala"
			g_rec_mutex_unlock (&self->priv->__lock__labels);
#line 2191 "Item.c"
		}
#line 333 "../src/Objects/Item.vala"
		_g_object_unref0 (return_value);
#line 333 "../src/Objects/Item.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 333 "../src/Objects/Item.vala"
		g_clear_error (&_inner_error0_);
#line 333 "../src/Objects/Item.vala"
		return NULL;
#line 2201 "Item.c"
	}
#line 331 "../src/Objects/Item.vala"
	_g_object_unref0 (return_value);
#line 2205 "Item.c"
}

ObjectsItemLabel*
objects_item_get_label (ObjectsItem* self,
                        gint64 id)
{
	ObjectsItemLabel* return_value = NULL;
	GError* _inner_error0_ = NULL;
	ObjectsItemLabel* result = NULL;
#line 348 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 349 "../src/Objects/Item.vala"
	return_value = NULL;
#line 2219 "Item.c"
	{
		GeeHashMap* _tmp0_;
#line 350 "../src/Objects/Item.vala"
		_tmp0_ = self->priv->_labels;
#line 350 "../src/Objects/Item.vala"
		g_rec_mutex_lock (&self->priv->__lock__labels);
#line 2226 "Item.c"
		{
			{
				GeeIterator* _entry_it = NULL;
				GeeHashMap* _tmp1_;
				GeeHashMap* _tmp2_;
				GeeSet* _tmp3_;
				GeeSet* _tmp4_;
				GeeSet* _tmp5_;
				GeeIterator* _tmp6_;
				GeeIterator* _tmp7_;
#line 351 "../src/Objects/Item.vala"
				_tmp1_ = objects_item_get_labels (self);
#line 351 "../src/Objects/Item.vala"
				_tmp2_ = _tmp1_;
#line 351 "../src/Objects/Item.vala"
				_tmp3_ = gee_abstract_map_get_entries ((GeeAbstractMap*) _tmp2_);
#line 351 "../src/Objects/Item.vala"
				_tmp4_ = _tmp3_;
#line 351 "../src/Objects/Item.vala"
				_tmp5_ = _tmp4_;
#line 351 "../src/Objects/Item.vala"
				_tmp6_ = gee_iterable_iterator ((GeeIterable*) _tmp5_);
#line 351 "../src/Objects/Item.vala"
				_tmp7_ = _tmp6_;
#line 351 "../src/Objects/Item.vala"
				_g_object_unref0 (_tmp5_);
#line 351 "../src/Objects/Item.vala"
				_entry_it = _tmp7_;
#line 351 "../src/Objects/Item.vala"
				while (TRUE) {
#line 2257 "Item.c"
					GeeIterator* _tmp8_;
					GeeMapEntry* entry = NULL;
					GeeIterator* _tmp9_;
					gpointer _tmp10_;
					GeeMapEntry* _tmp11_;
					gconstpointer _tmp12_;
					gconstpointer _tmp13_;
					gint64 _tmp14_;
					gint64 _tmp15_;
#line 351 "../src/Objects/Item.vala"
					_tmp8_ = _entry_it;
#line 351 "../src/Objects/Item.vala"
					if (!gee_iterator_next (_tmp8_)) {
#line 351 "../src/Objects/Item.vala"
						break;
#line 2273 "Item.c"
					}
#line 351 "../src/Objects/Item.vala"
					_tmp9_ = _entry_it;
#line 351 "../src/Objects/Item.vala"
					_tmp10_ = gee_iterator_get (_tmp9_);
#line 351 "../src/Objects/Item.vala"
					entry = (GeeMapEntry*) _tmp10_;
#line 352 "../src/Objects/Item.vala"
					_tmp11_ = entry;
#line 352 "../src/Objects/Item.vala"
					_tmp12_ = gee_map_entry_get_value (_tmp11_);
#line 352 "../src/Objects/Item.vala"
					_tmp13_ = _tmp12_;
#line 352 "../src/Objects/Item.vala"
					_tmp14_ = objects_item_label_get_label_id ((ObjectsItemLabel*) _tmp13_);
#line 352 "../src/Objects/Item.vala"
					_tmp15_ = _tmp14_;
#line 352 "../src/Objects/Item.vala"
					if (_tmp15_ == id) {
#line 2293 "Item.c"
						GeeMapEntry* _tmp16_;
						gconstpointer _tmp17_;
						gconstpointer _tmp18_;
						ObjectsItemLabel* _tmp19_;
#line 353 "../src/Objects/Item.vala"
						_tmp16_ = entry;
#line 353 "../src/Objects/Item.vala"
						_tmp17_ = gee_map_entry_get_value (_tmp16_);
#line 353 "../src/Objects/Item.vala"
						_tmp18_ = _tmp17_;
#line 353 "../src/Objects/Item.vala"
						_tmp19_ = _g_object_ref0 ((ObjectsItemLabel*) _tmp18_);
#line 353 "../src/Objects/Item.vala"
						_g_object_unref0 (return_value);
#line 353 "../src/Objects/Item.vala"
						return_value = _tmp19_;
#line 354 "../src/Objects/Item.vala"
						_g_object_unref0 (entry);
#line 354 "../src/Objects/Item.vala"
						break;
#line 2314 "Item.c"
					}
#line 351 "../src/Objects/Item.vala"
					_g_object_unref0 (entry);
#line 2318 "Item.c"
				}
#line 351 "../src/Objects/Item.vala"
				_g_object_unref0 (_entry_it);
#line 2322 "Item.c"
			}
		}
		__finally0:
		{
			GeeHashMap* _tmp20_;
#line 350 "../src/Objects/Item.vala"
			_tmp20_ = self->priv->_labels;
#line 350 "../src/Objects/Item.vala"
			g_rec_mutex_unlock (&self->priv->__lock__labels);
#line 2332 "Item.c"
		}
#line 350 "../src/Objects/Item.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 350 "../src/Objects/Item.vala"
			_g_object_unref0 (return_value);
#line 350 "../src/Objects/Item.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 350 "../src/Objects/Item.vala"
			g_clear_error (&_inner_error0_);
#line 350 "../src/Objects/Item.vala"
			return NULL;
#line 2344 "Item.c"
		}
	}
#line 358 "../src/Objects/Item.vala"
	result = return_value;
#line 358 "../src/Objects/Item.vala"
	return result;
#line 2351 "Item.c"
}

void
objects_item_add_item_label (ObjectsItem* self,
                             ObjectsItemLabel* item_label)
{
	GeeHashMap* _tmp0_;
	gint64 _tmp1_;
	gint64 _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
#line 361 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 361 "../src/Objects/Item.vala"
	g_return_if_fail (item_label != NULL);
#line 362 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_labels;
#line 362 "../src/Objects/Item.vala"
	_tmp1_ = objects_item_label_get_label_id (item_label);
#line 362 "../src/Objects/Item.vala"
	_tmp2_ = _tmp1_;
#line 362 "../src/Objects/Item.vala"
	_tmp3_ = g_strdup_printf ("%" G_GINT64_FORMAT, _tmp2_);
#line 362 "../src/Objects/Item.vala"
	_tmp4_ = _tmp3_;
#line 362 "../src/Objects/Item.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp0_, _tmp4_, item_label);
#line 362 "../src/Objects/Item.vala"
	_g_free0 (_tmp4_);
#line 363 "../src/Objects/Item.vala"
	g_signal_emit (self, objects_item_signals[OBJECTS_ITEM_ITEM_LABEL_ADDED_SIGNAL], 0, item_label);
#line 2383 "Item.c"
}

void
objects_item_delete_item_label (ObjectsItem* self,
                                ObjectsItemLabel* item_label)
{
	GeeHashMap* _tmp0_;
	gint64 _tmp1_;
	gint64 _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	ServicesDatabase* _tmp5_;
#line 366 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 366 "../src/Objects/Item.vala"
	g_return_if_fail (item_label != NULL);
#line 367 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_labels;
#line 367 "../src/Objects/Item.vala"
	_tmp1_ = objects_item_label_get_label_id (item_label);
#line 367 "../src/Objects/Item.vala"
	_tmp2_ = _tmp1_;
#line 367 "../src/Objects/Item.vala"
	_tmp3_ = g_strdup_printf ("%" G_GINT64_FORMAT, _tmp2_);
#line 367 "../src/Objects/Item.vala"
	_tmp4_ = _tmp3_;
#line 367 "../src/Objects/Item.vala"
	gee_abstract_map_unset ((GeeAbstractMap*) _tmp0_, _tmp4_, NULL);
#line 367 "../src/Objects/Item.vala"
	_g_free0 (_tmp4_);
#line 368 "../src/Objects/Item.vala"
	_tmp5_ = planner_database;
#line 368 "../src/Objects/Item.vala"
	services_database_delete_item_label (_tmp5_, item_label);
#line 2418 "Item.c"
}

gchar*
objects_item_get_move_item (ObjectsItem* self,
                            const gchar* uuid,
                            const gchar* type,
                            gint64 move_id)
{
	JsonBuilder* _tmp0_;
	JsonBuilder* _tmp1_;
	JsonBuilder* _tmp2_;
	JsonBuilder* _tmp3_;
	JsonBuilder* _tmp4_;
	JsonBuilder* _tmp5_;
	JsonBuilder* _tmp6_;
	JsonBuilder* _tmp7_;
	JsonBuilder* _tmp8_;
	JsonBuilder* _tmp9_;
	JsonBuilder* _tmp10_;
	JsonBuilder* _tmp11_;
	JsonBuilder* _tmp12_;
	JsonBuilder* _tmp13_;
	JsonBuilder* _tmp14_;
	JsonBuilder* _tmp15_;
	JsonBuilder* _tmp16_;
	JsonBuilder* _tmp17_;
	JsonBuilder* _tmp18_;
	JsonBuilder* _tmp19_;
	JsonBuilder* _tmp20_;
	JsonBuilder* _tmp21_;
	gint64 _tmp22_;
	gint64 _tmp23_;
	JsonBuilder* _tmp24_;
	JsonBuilder* _tmp25_;
	JsonBuilder* _tmp26_;
	JsonBuilder* _tmp27_;
	JsonBuilder* _tmp28_;
	JsonBuilder* _tmp29_;
	JsonBuilder* _tmp30_;
	JsonBuilder* _tmp31_;
	JsonBuilder* _tmp32_;
	JsonBuilder* _tmp33_;
	JsonGenerator* generator = NULL;
	JsonGenerator* _tmp34_;
	JsonNode* root = NULL;
	JsonBuilder* _tmp35_;
	JsonBuilder* _tmp36_;
	JsonNode* _tmp37_;
	gchar* _tmp38_;
	gchar* result = NULL;
#line 371 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 371 "../src/Objects/Item.vala"
	g_return_val_if_fail (uuid != NULL, NULL);
#line 371 "../src/Objects/Item.vala"
	g_return_val_if_fail (type != NULL, NULL);
#line 372 "../src/Objects/Item.vala"
	_tmp0_ = objects_item_get_builder (self);
#line 372 "../src/Objects/Item.vala"
	_tmp1_ = _tmp0_;
#line 372 "../src/Objects/Item.vala"
	json_builder_reset (_tmp1_);
#line 374 "../src/Objects/Item.vala"
	_tmp2_ = objects_item_get_builder (self);
#line 374 "../src/Objects/Item.vala"
	_tmp3_ = _tmp2_;
#line 374 "../src/Objects/Item.vala"
	json_builder_begin_array (_tmp3_);
#line 375 "../src/Objects/Item.vala"
	_tmp4_ = objects_item_get_builder (self);
#line 375 "../src/Objects/Item.vala"
	_tmp5_ = _tmp4_;
#line 375 "../src/Objects/Item.vala"
	json_builder_begin_object (_tmp5_);
#line 377 "../src/Objects/Item.vala"
	_tmp6_ = objects_item_get_builder (self);
#line 377 "../src/Objects/Item.vala"
	_tmp7_ = _tmp6_;
#line 377 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp7_, "type");
#line 378 "../src/Objects/Item.vala"
	_tmp8_ = objects_item_get_builder (self);
#line 378 "../src/Objects/Item.vala"
	_tmp9_ = _tmp8_;
#line 378 "../src/Objects/Item.vala"
	json_builder_add_string_value (_tmp9_, "item_move");
#line 380 "../src/Objects/Item.vala"
	_tmp10_ = objects_item_get_builder (self);
#line 380 "../src/Objects/Item.vala"
	_tmp11_ = _tmp10_;
#line 380 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp11_, "uuid");
#line 381 "../src/Objects/Item.vala"
	_tmp12_ = objects_item_get_builder (self);
#line 381 "../src/Objects/Item.vala"
	_tmp13_ = _tmp12_;
#line 381 "../src/Objects/Item.vala"
	json_builder_add_string_value (_tmp13_, uuid);
#line 383 "../src/Objects/Item.vala"
	_tmp14_ = objects_item_get_builder (self);
#line 383 "../src/Objects/Item.vala"
	_tmp15_ = _tmp14_;
#line 383 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp15_, "args");
#line 384 "../src/Objects/Item.vala"
	_tmp16_ = objects_item_get_builder (self);
#line 384 "../src/Objects/Item.vala"
	_tmp17_ = _tmp16_;
#line 384 "../src/Objects/Item.vala"
	json_builder_begin_object (_tmp17_);
#line 386 "../src/Objects/Item.vala"
	_tmp18_ = objects_item_get_builder (self);
#line 386 "../src/Objects/Item.vala"
	_tmp19_ = _tmp18_;
#line 386 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp19_, "id");
#line 387 "../src/Objects/Item.vala"
	_tmp20_ = objects_item_get_builder (self);
#line 387 "../src/Objects/Item.vala"
	_tmp21_ = _tmp20_;
#line 387 "../src/Objects/Item.vala"
	_tmp22_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 387 "../src/Objects/Item.vala"
	_tmp23_ = _tmp22_;
#line 387 "../src/Objects/Item.vala"
	json_builder_add_int_value (_tmp21_, _tmp23_);
#line 389 "../src/Objects/Item.vala"
	_tmp24_ = objects_item_get_builder (self);
#line 389 "../src/Objects/Item.vala"
	_tmp25_ = _tmp24_;
#line 389 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp25_, type);
#line 390 "../src/Objects/Item.vala"
	_tmp26_ = objects_item_get_builder (self);
#line 390 "../src/Objects/Item.vala"
	_tmp27_ = _tmp26_;
#line 390 "../src/Objects/Item.vala"
	json_builder_add_int_value (_tmp27_, move_id);
#line 392 "../src/Objects/Item.vala"
	_tmp28_ = objects_item_get_builder (self);
#line 392 "../src/Objects/Item.vala"
	_tmp29_ = _tmp28_;
#line 392 "../src/Objects/Item.vala"
	json_builder_end_object (_tmp29_);
#line 393 "../src/Objects/Item.vala"
	_tmp30_ = objects_item_get_builder (self);
#line 393 "../src/Objects/Item.vala"
	_tmp31_ = _tmp30_;
#line 393 "../src/Objects/Item.vala"
	json_builder_end_object (_tmp31_);
#line 394 "../src/Objects/Item.vala"
	_tmp32_ = objects_item_get_builder (self);
#line 394 "../src/Objects/Item.vala"
	_tmp33_ = _tmp32_;
#line 394 "../src/Objects/Item.vala"
	json_builder_end_array (_tmp33_);
#line 396 "../src/Objects/Item.vala"
	_tmp34_ = json_generator_new ();
#line 396 "../src/Objects/Item.vala"
	generator = _tmp34_;
#line 397 "../src/Objects/Item.vala"
	_tmp35_ = objects_item_get_builder (self);
#line 397 "../src/Objects/Item.vala"
	_tmp36_ = _tmp35_;
#line 397 "../src/Objects/Item.vala"
	_tmp37_ = json_builder_get_root (_tmp36_);
#line 397 "../src/Objects/Item.vala"
	root = _tmp37_;
#line 398 "../src/Objects/Item.vala"
	json_generator_set_root (generator, root);
#line 400 "../src/Objects/Item.vala"
	_tmp38_ = json_generator_to_data (generator, NULL);
#line 400 "../src/Objects/Item.vala"
	result = _tmp38_;
#line 400 "../src/Objects/Item.vala"
	__vala_JsonNode_free0 (root);
#line 400 "../src/Objects/Item.vala"
	_g_object_unref0 (generator);
#line 400 "../src/Objects/Item.vala"
	return result;
#line 2599 "Item.c"
}

static gchar*
objects_item_real_get_update_json (ObjectsBaseObject* base,
                                   const gchar* uuid,
                                   const gchar* temp_id)
{
	ObjectsItem * self;
	JsonBuilder* _tmp0_;
	JsonBuilder* _tmp1_;
	JsonBuilder* _tmp2_;
	JsonBuilder* _tmp3_;
	JsonBuilder* _tmp4_;
	JsonBuilder* _tmp5_;
	JsonBuilder* _tmp6_;
	JsonBuilder* _tmp7_;
	const gchar* _tmp8_ = NULL;
	JsonBuilder* _tmp9_;
	JsonBuilder* _tmp10_;
	JsonBuilder* _tmp11_;
	JsonBuilder* _tmp12_;
	JsonBuilder* _tmp13_;
	JsonBuilder* _tmp14_;
	JsonBuilder* _tmp19_;
	JsonBuilder* _tmp20_;
	JsonBuilder* _tmp21_;
	JsonBuilder* _tmp22_;
	JsonBuilder* _tmp29_;
	JsonBuilder* _tmp30_;
	JsonBuilder* _tmp31_;
	JsonBuilder* _tmp32_;
	Util* _tmp33_;
	Util* _tmp34_;
	const gchar* _tmp35_;
	gchar* _tmp36_;
	gchar* _tmp37_;
	JsonBuilder* _tmp38_;
	JsonBuilder* _tmp39_;
	JsonBuilder* _tmp40_;
	JsonBuilder* _tmp41_;
	Util* _tmp42_;
	Util* _tmp43_;
	const gchar* _tmp44_;
	gchar* _tmp45_;
	gchar* _tmp46_;
	JsonBuilder* _tmp47_;
	JsonBuilder* _tmp48_;
	gint _tmp49_;
	gboolean _tmp55_;
	gboolean _tmp56_;
	JsonBuilder* _tmp95_;
	JsonBuilder* _tmp96_;
	JsonBuilder* _tmp97_;
	JsonBuilder* _tmp98_;
	JsonBuilder* _tmp116_;
	JsonBuilder* _tmp117_;
	JsonBuilder* _tmp118_;
	JsonBuilder* _tmp119_;
	JsonBuilder* _tmp120_;
	JsonBuilder* _tmp121_;
	JsonBuilder* _tmp122_;
	JsonBuilder* _tmp123_;
	JsonGenerator* generator = NULL;
	JsonGenerator* _tmp124_;
	JsonNode* root = NULL;
	JsonBuilder* _tmp125_;
	JsonBuilder* _tmp126_;
	JsonNode* _tmp127_;
	gchar* _tmp128_;
	gchar* result = NULL;
#line 403 "../src/Objects/Item.vala"
	self = (ObjectsItem*) base;
#line 403 "../src/Objects/Item.vala"
	g_return_val_if_fail (uuid != NULL, NULL);
#line 404 "../src/Objects/Item.vala"
	_tmp0_ = objects_item_get_builder (self);
#line 404 "../src/Objects/Item.vala"
	_tmp1_ = _tmp0_;
#line 404 "../src/Objects/Item.vala"
	json_builder_reset (_tmp1_);
#line 406 "../src/Objects/Item.vala"
	_tmp2_ = objects_item_get_builder (self);
#line 406 "../src/Objects/Item.vala"
	_tmp3_ = _tmp2_;
#line 406 "../src/Objects/Item.vala"
	json_builder_begin_array (_tmp3_);
#line 407 "../src/Objects/Item.vala"
	_tmp4_ = objects_item_get_builder (self);
#line 407 "../src/Objects/Item.vala"
	_tmp5_ = _tmp4_;
#line 407 "../src/Objects/Item.vala"
	json_builder_begin_object (_tmp5_);
#line 409 "../src/Objects/Item.vala"
	_tmp6_ = objects_item_get_builder (self);
#line 409 "../src/Objects/Item.vala"
	_tmp7_ = _tmp6_;
#line 409 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp7_, "type");
#line 410 "../src/Objects/Item.vala"
	if (temp_id == NULL) {
#line 410 "../src/Objects/Item.vala"
		_tmp8_ = "item_update";
#line 2702 "Item.c"
	} else {
#line 410 "../src/Objects/Item.vala"
		_tmp8_ = "item_add";
#line 2706 "Item.c"
	}
#line 410 "../src/Objects/Item.vala"
	_tmp9_ = objects_item_get_builder (self);
#line 410 "../src/Objects/Item.vala"
	_tmp10_ = _tmp9_;
#line 410 "../src/Objects/Item.vala"
	json_builder_add_string_value (_tmp10_, _tmp8_);
#line 412 "../src/Objects/Item.vala"
	_tmp11_ = objects_item_get_builder (self);
#line 412 "../src/Objects/Item.vala"
	_tmp12_ = _tmp11_;
#line 412 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp12_, "uuid");
#line 413 "../src/Objects/Item.vala"
	_tmp13_ = objects_item_get_builder (self);
#line 413 "../src/Objects/Item.vala"
	_tmp14_ = _tmp13_;
#line 413 "../src/Objects/Item.vala"
	json_builder_add_string_value (_tmp14_, uuid);
#line 415 "../src/Objects/Item.vala"
	if (temp_id != NULL) {
#line 2728 "Item.c"
		JsonBuilder* _tmp15_;
		JsonBuilder* _tmp16_;
		JsonBuilder* _tmp17_;
		JsonBuilder* _tmp18_;
#line 416 "../src/Objects/Item.vala"
		_tmp15_ = objects_item_get_builder (self);
#line 416 "../src/Objects/Item.vala"
		_tmp16_ = _tmp15_;
#line 416 "../src/Objects/Item.vala"
		json_builder_set_member_name (_tmp16_, "temp_id");
#line 417 "../src/Objects/Item.vala"
		_tmp17_ = objects_item_get_builder (self);
#line 417 "../src/Objects/Item.vala"
		_tmp18_ = _tmp17_;
#line 417 "../src/Objects/Item.vala"
		json_builder_add_string_value (_tmp18_, temp_id);
#line 2745 "Item.c"
	}
#line 420 "../src/Objects/Item.vala"
	_tmp19_ = objects_item_get_builder (self);
#line 420 "../src/Objects/Item.vala"
	_tmp20_ = _tmp19_;
#line 420 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp20_, "args");
#line 421 "../src/Objects/Item.vala"
	_tmp21_ = objects_item_get_builder (self);
#line 421 "../src/Objects/Item.vala"
	_tmp22_ = _tmp21_;
#line 421 "../src/Objects/Item.vala"
	json_builder_begin_object (_tmp22_);
#line 423 "../src/Objects/Item.vala"
	if (temp_id == NULL) {
#line 2761 "Item.c"
		JsonBuilder* _tmp23_;
		JsonBuilder* _tmp24_;
		JsonBuilder* _tmp25_;
		JsonBuilder* _tmp26_;
		gint64 _tmp27_;
		gint64 _tmp28_;
#line 424 "../src/Objects/Item.vala"
		_tmp23_ = objects_item_get_builder (self);
#line 424 "../src/Objects/Item.vala"
		_tmp24_ = _tmp23_;
#line 424 "../src/Objects/Item.vala"
		json_builder_set_member_name (_tmp24_, "id");
#line 425 "../src/Objects/Item.vala"
		_tmp25_ = objects_item_get_builder (self);
#line 425 "../src/Objects/Item.vala"
		_tmp26_ = _tmp25_;
#line 425 "../src/Objects/Item.vala"
		_tmp27_ = objects_base_object_get_id ((ObjectsBaseObject*) self);
#line 425 "../src/Objects/Item.vala"
		_tmp28_ = _tmp27_;
#line 425 "../src/Objects/Item.vala"
		json_builder_add_int_value (_tmp26_, _tmp28_);
#line 2784 "Item.c"
	}
#line 428 "../src/Objects/Item.vala"
	_tmp29_ = objects_item_get_builder (self);
#line 428 "../src/Objects/Item.vala"
	_tmp30_ = _tmp29_;
#line 428 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp30_, "content");
#line 429 "../src/Objects/Item.vala"
	_tmp31_ = objects_item_get_builder (self);
#line 429 "../src/Objects/Item.vala"
	_tmp32_ = _tmp31_;
#line 429 "../src/Objects/Item.vala"
	_tmp33_ = util_get_default ();
#line 429 "../src/Objects/Item.vala"
	_tmp34_ = _tmp33_;
#line 429 "../src/Objects/Item.vala"
	_tmp35_ = self->priv->_content;
#line 429 "../src/Objects/Item.vala"
	_tmp36_ = util_get_encode_text (_tmp34_, _tmp35_);
#line 429 "../src/Objects/Item.vala"
	_tmp37_ = _tmp36_;
#line 429 "../src/Objects/Item.vala"
	json_builder_add_string_value (_tmp32_, _tmp37_);
#line 429 "../src/Objects/Item.vala"
	_g_free0 (_tmp37_);
#line 429 "../src/Objects/Item.vala"
	_g_object_unref0 (_tmp34_);
#line 431 "../src/Objects/Item.vala"
	_tmp38_ = objects_item_get_builder (self);
#line 431 "../src/Objects/Item.vala"
	_tmp39_ = _tmp38_;
#line 431 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp39_, "description");
#line 432 "../src/Objects/Item.vala"
	_tmp40_ = objects_item_get_builder (self);
#line 432 "../src/Objects/Item.vala"
	_tmp41_ = _tmp40_;
#line 432 "../src/Objects/Item.vala"
	_tmp42_ = util_get_default ();
#line 432 "../src/Objects/Item.vala"
	_tmp43_ = _tmp42_;
#line 432 "../src/Objects/Item.vala"
	_tmp44_ = self->priv->_description;
#line 432 "../src/Objects/Item.vala"
	_tmp45_ = util_get_encode_text (_tmp43_, _tmp44_);
#line 432 "../src/Objects/Item.vala"
	_tmp46_ = _tmp45_;
#line 432 "../src/Objects/Item.vala"
	json_builder_add_string_value (_tmp41_, _tmp46_);
#line 432 "../src/Objects/Item.vala"
	_g_free0 (_tmp46_);
#line 432 "../src/Objects/Item.vala"
	_g_object_unref0 (_tmp43_);
#line 434 "../src/Objects/Item.vala"
	_tmp47_ = objects_item_get_builder (self);
#line 434 "../src/Objects/Item.vala"
	_tmp48_ = _tmp47_;
#line 434 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp48_, "priority");
#line 435 "../src/Objects/Item.vala"
	_tmp49_ = self->priv->_priority;
#line 435 "../src/Objects/Item.vala"
	if (_tmp49_ == CONSTANTS_INACTIVE) {
#line 2848 "Item.c"
		JsonBuilder* _tmp50_;
		JsonBuilder* _tmp51_;
#line 436 "../src/Objects/Item.vala"
		_tmp50_ = objects_item_get_builder (self);
#line 436 "../src/Objects/Item.vala"
		_tmp51_ = _tmp50_;
#line 436 "../src/Objects/Item.vala"
		json_builder_add_int_value (_tmp51_, (gint64) CONSTANTS_PRIORITY_4);
#line 2857 "Item.c"
	} else {
		JsonBuilder* _tmp52_;
		JsonBuilder* _tmp53_;
		gint _tmp54_;
#line 438 "../src/Objects/Item.vala"
		_tmp52_ = objects_item_get_builder (self);
#line 438 "../src/Objects/Item.vala"
		_tmp53_ = _tmp52_;
#line 438 "../src/Objects/Item.vala"
		_tmp54_ = self->priv->_priority;
#line 438 "../src/Objects/Item.vala"
		json_builder_add_int_value (_tmp53_, (gint64) _tmp54_);
#line 2870 "Item.c"
	}
#line 441 "../src/Objects/Item.vala"
	_tmp55_ = objects_item_get_has_due (self);
#line 441 "../src/Objects/Item.vala"
	_tmp56_ = _tmp55_;
#line 441 "../src/Objects/Item.vala"
	if (_tmp56_) {
#line 2878 "Item.c"
		JsonBuilder* _tmp57_;
		JsonBuilder* _tmp58_;
		JsonBuilder* _tmp59_;
		JsonBuilder* _tmp60_;
		JsonBuilder* _tmp61_;
		JsonBuilder* _tmp62_;
		JsonBuilder* _tmp63_;
		JsonBuilder* _tmp64_;
		ObjectsDueDate* _tmp65_;
		const gchar* _tmp66_;
		const gchar* _tmp67_;
		JsonBuilder* _tmp68_;
		JsonBuilder* _tmp69_;
		JsonBuilder* _tmp70_;
		JsonBuilder* _tmp71_;
		ObjectsDueDate* _tmp72_;
		gboolean _tmp73_;
		gboolean _tmp74_;
		JsonBuilder* _tmp75_;
		JsonBuilder* _tmp76_;
		JsonBuilder* _tmp77_;
		JsonBuilder* _tmp78_;
		ObjectsDueDate* _tmp79_;
		const gchar* _tmp80_;
		const gchar* _tmp81_;
		JsonBuilder* _tmp82_;
		JsonBuilder* _tmp83_;
		JsonBuilder* _tmp84_;
		JsonBuilder* _tmp85_;
		ObjectsDueDate* _tmp86_;
		const gchar* _tmp87_;
		const gchar* _tmp88_;
		JsonBuilder* _tmp89_;
		JsonBuilder* _tmp90_;
#line 442 "../src/Objects/Item.vala"
		_tmp57_ = objects_item_get_builder (self);
#line 442 "../src/Objects/Item.vala"
		_tmp58_ = _tmp57_;
#line 442 "../src/Objects/Item.vala"
		json_builder_set_member_name (_tmp58_, "due");
#line 443 "../src/Objects/Item.vala"
		_tmp59_ = objects_item_get_builder (self);
#line 443 "../src/Objects/Item.vala"
		_tmp60_ = _tmp59_;
#line 443 "../src/Objects/Item.vala"
		json_builder_begin_object (_tmp60_);
#line 445 "../src/Objects/Item.vala"
		_tmp61_ = objects_item_get_builder (self);
#line 445 "../src/Objects/Item.vala"
		_tmp62_ = _tmp61_;
#line 445 "../src/Objects/Item.vala"
		json_builder_set_member_name (_tmp62_, "date");
#line 446 "../src/Objects/Item.vala"
		_tmp63_ = objects_item_get_builder (self);
#line 446 "../src/Objects/Item.vala"
		_tmp64_ = _tmp63_;
#line 446 "../src/Objects/Item.vala"
		_tmp65_ = self->priv->_due;
#line 446 "../src/Objects/Item.vala"
		_tmp66_ = objects_due_date_get_date (_tmp65_);
#line 446 "../src/Objects/Item.vala"
		_tmp67_ = _tmp66_;
#line 446 "../src/Objects/Item.vala"
		json_builder_add_string_value (_tmp64_, _tmp67_);
#line 448 "../src/Objects/Item.vala"
		_tmp68_ = objects_item_get_builder (self);
#line 448 "../src/Objects/Item.vala"
		_tmp69_ = _tmp68_;
#line 448 "../src/Objects/Item.vala"
		json_builder_set_member_name (_tmp69_, "is_recurring");
#line 449 "../src/Objects/Item.vala"
		_tmp70_ = objects_item_get_builder (self);
#line 449 "../src/Objects/Item.vala"
		_tmp71_ = _tmp70_;
#line 449 "../src/Objects/Item.vala"
		_tmp72_ = self->priv->_due;
#line 449 "../src/Objects/Item.vala"
		_tmp73_ = objects_due_date_get_is_recurring (_tmp72_);
#line 449 "../src/Objects/Item.vala"
		_tmp74_ = _tmp73_;
#line 449 "../src/Objects/Item.vala"
		json_builder_add_boolean_value (_tmp71_, _tmp74_);
#line 451 "../src/Objects/Item.vala"
		_tmp75_ = objects_item_get_builder (self);
#line 451 "../src/Objects/Item.vala"
		_tmp76_ = _tmp75_;
#line 451 "../src/Objects/Item.vala"
		json_builder_set_member_name (_tmp76_, "string");
#line 452 "../src/Objects/Item.vala"
		_tmp77_ = objects_item_get_builder (self);
#line 452 "../src/Objects/Item.vala"
		_tmp78_ = _tmp77_;
#line 452 "../src/Objects/Item.vala"
		_tmp79_ = self->priv->_due;
#line 452 "../src/Objects/Item.vala"
		_tmp80_ = objects_due_date_get_text (_tmp79_);
#line 452 "../src/Objects/Item.vala"
		_tmp81_ = _tmp80_;
#line 452 "../src/Objects/Item.vala"
		json_builder_add_string_value (_tmp78_, _tmp81_);
#line 454 "../src/Objects/Item.vala"
		_tmp82_ = objects_item_get_builder (self);
#line 454 "../src/Objects/Item.vala"
		_tmp83_ = _tmp82_;
#line 454 "../src/Objects/Item.vala"
		json_builder_set_member_name (_tmp83_, "lang");
#line 455 "../src/Objects/Item.vala"
		_tmp84_ = objects_item_get_builder (self);
#line 455 "../src/Objects/Item.vala"
		_tmp85_ = _tmp84_;
#line 455 "../src/Objects/Item.vala"
		_tmp86_ = self->priv->_due;
#line 455 "../src/Objects/Item.vala"
		_tmp87_ = objects_due_date_get_lang (_tmp86_);
#line 455 "../src/Objects/Item.vala"
		_tmp88_ = _tmp87_;
#line 455 "../src/Objects/Item.vala"
		json_builder_add_string_value (_tmp85_, _tmp88_);
#line 457 "../src/Objects/Item.vala"
		_tmp89_ = objects_item_get_builder (self);
#line 457 "../src/Objects/Item.vala"
		_tmp90_ = _tmp89_;
#line 457 "../src/Objects/Item.vala"
		json_builder_end_object (_tmp90_);
#line 3003 "Item.c"
	} else {
		JsonBuilder* _tmp91_;
		JsonBuilder* _tmp92_;
		JsonBuilder* _tmp93_;
		JsonBuilder* _tmp94_;
#line 459 "../src/Objects/Item.vala"
		_tmp91_ = objects_item_get_builder (self);
#line 459 "../src/Objects/Item.vala"
		_tmp92_ = _tmp91_;
#line 459 "../src/Objects/Item.vala"
		json_builder_set_member_name (_tmp92_, "due");
#line 460 "../src/Objects/Item.vala"
		_tmp93_ = objects_item_get_builder (self);
#line 460 "../src/Objects/Item.vala"
		_tmp94_ = _tmp93_;
#line 460 "../src/Objects/Item.vala"
		json_builder_add_null_value (_tmp94_);
#line 3021 "Item.c"
	}
#line 463 "../src/Objects/Item.vala"
	_tmp95_ = objects_item_get_builder (self);
#line 463 "../src/Objects/Item.vala"
	_tmp96_ = _tmp95_;
#line 463 "../src/Objects/Item.vala"
	json_builder_set_member_name (_tmp96_, "labels");
#line 464 "../src/Objects/Item.vala"
	_tmp97_ = objects_item_get_builder (self);
#line 464 "../src/Objects/Item.vala"
	_tmp98_ = _tmp97_;
#line 464 "../src/Objects/Item.vala"
	json_builder_begin_array (_tmp98_);
#line 3035 "Item.c"
	{
		GeeIterator* _item_label_it = NULL;
		GeeHashMap* _tmp99_;
		GeeHashMap* _tmp100_;
		GeeCollection* _tmp101_;
		GeeCollection* _tmp102_;
		GeeCollection* _tmp103_;
		GeeIterator* _tmp104_;
		GeeIterator* _tmp105_;
#line 465 "../src/Objects/Item.vala"
		_tmp99_ = objects_item_get_labels (self);
#line 465 "../src/Objects/Item.vala"
		_tmp100_ = _tmp99_;
#line 465 "../src/Objects/Item.vala"
		_tmp101_ = gee_abstract_map_get_values ((GeeAbstractMap*) _tmp100_);
#line 465 "../src/Objects/Item.vala"
		_tmp102_ = _tmp101_;
#line 465 "../src/Objects/Item.vala"
		_tmp103_ = _tmp102_;
#line 465 "../src/Objects/Item.vala"
		_tmp104_ = gee_iterable_iterator ((GeeIterable*) _tmp103_);
#line 465 "../src/Objects/Item.vala"
		_tmp105_ = _tmp104_;
#line 465 "../src/Objects/Item.vala"
		_g_object_unref0 (_tmp103_);
#line 465 "../src/Objects/Item.vala"
		_item_label_it = _tmp105_;
#line 465 "../src/Objects/Item.vala"
		while (TRUE) {
#line 3065 "Item.c"
			GeeIterator* _tmp106_;
			ObjectsItemLabel* item_label = NULL;
			GeeIterator* _tmp107_;
			gpointer _tmp108_;
			JsonBuilder* _tmp109_;
			JsonBuilder* _tmp110_;
			ObjectsItemLabel* _tmp111_;
			ObjectsLabel* _tmp112_;
			ObjectsLabel* _tmp113_;
			const gchar* _tmp114_;
			const gchar* _tmp115_;
#line 465 "../src/Objects/Item.vala"
			_tmp106_ = _item_label_it;
#line 465 "../src/Objects/Item.vala"
			if (!gee_iterator_next (_tmp106_)) {
#line 465 "../src/Objects/Item.vala"
				break;
#line 3083 "Item.c"
			}
#line 465 "../src/Objects/Item.vala"
			_tmp107_ = _item_label_it;
#line 465 "../src/Objects/Item.vala"
			_tmp108_ = gee_iterator_get (_tmp107_);
#line 465 "../src/Objects/Item.vala"
			item_label = (ObjectsItemLabel*) _tmp108_;
#line 466 "../src/Objects/Item.vala"
			_tmp109_ = objects_item_get_builder (self);
#line 466 "../src/Objects/Item.vala"
			_tmp110_ = _tmp109_;
#line 466 "../src/Objects/Item.vala"
			_tmp111_ = item_label;
#line 466 "../src/Objects/Item.vala"
			_tmp112_ = objects_item_label_get_label (_tmp111_);
#line 466 "../src/Objects/Item.vala"
			_tmp113_ = _tmp112_;
#line 466 "../src/Objects/Item.vala"
			_tmp114_ = objects_label_get_name (_tmp113_);
#line 466 "../src/Objects/Item.vala"
			_tmp115_ = _tmp114_;
#line 466 "../src/Objects/Item.vala"
			json_builder_add_string_value (_tmp110_, _tmp115_);
#line 465 "../src/Objects/Item.vala"
			_g_object_unref0 (item_label);
#line 3109 "Item.c"
		}
#line 465 "../src/Objects/Item.vala"
		_g_object_unref0 (_item_label_it);
#line 3113 "Item.c"
	}
#line 468 "../src/Objects/Item.vala"
	_tmp116_ = objects_item_get_builder (self);
#line 468 "../src/Objects/Item.vala"
	_tmp117_ = _tmp116_;
#line 468 "../src/Objects/Item.vala"
	json_builder_end_array (_tmp117_);
#line 469 "../src/Objects/Item.vala"
	_tmp118_ = objects_item_get_builder (self);
#line 469 "../src/Objects/Item.vala"
	_tmp119_ = _tmp118_;
#line 469 "../src/Objects/Item.vala"
	json_builder_end_object (_tmp119_);
#line 470 "../src/Objects/Item.vala"
	_tmp120_ = objects_item_get_builder (self);
#line 470 "../src/Objects/Item.vala"
	_tmp121_ = _tmp120_;
#line 470 "../src/Objects/Item.vala"
	json_builder_end_object (_tmp121_);
#line 471 "../src/Objects/Item.vala"
	_tmp122_ = objects_item_get_builder (self);
#line 471 "../src/Objects/Item.vala"
	_tmp123_ = _tmp122_;
#line 471 "../src/Objects/Item.vala"
	json_builder_end_array (_tmp123_);
#line 473 "../src/Objects/Item.vala"
	_tmp124_ = json_generator_new ();
#line 473 "../src/Objects/Item.vala"
	generator = _tmp124_;
#line 474 "../src/Objects/Item.vala"
	_tmp125_ = objects_item_get_builder (self);
#line 474 "../src/Objects/Item.vala"
	_tmp126_ = _tmp125_;
#line 474 "../src/Objects/Item.vala"
	_tmp127_ = json_builder_get_root (_tmp126_);
#line 474 "../src/Objects/Item.vala"
	root = _tmp127_;
#line 475 "../src/Objects/Item.vala"
	json_generator_set_root (generator, root);
#line 477 "../src/Objects/Item.vala"
	_tmp128_ = json_generator_to_data (generator, NULL);
#line 477 "../src/Objects/Item.vala"
	result = _tmp128_;
#line 477 "../src/Objects/Item.vala"
	__vala_JsonNode_free0 (root);
#line 477 "../src/Objects/Item.vala"
	_g_object_unref0 (generator);
#line 477 "../src/Objects/Item.vala"
	return result;
#line 3163 "Item.c"
}

gchar*
objects_item_to_string (ObjectsItem* self)
{
	gchar* _tmp0_;
	gchar* result = NULL;
#line 480 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 481 "../src/Objects/Item.vala"
	_tmp0_ = g_strdup ("");
#line 481 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 481 "../src/Objects/Item.vala"
	return result;
#line 3179 "Item.c"
}

static Block51Data*
block51_data_ref (Block51Data* _data51_)
{
#line 484 "../src/Objects/Item.vala"
	g_atomic_int_inc (&_data51_->_ref_count_);
#line 484 "../src/Objects/Item.vala"
	return _data51_;
#line 3189 "Item.c"
}

static void
block51_data_unref (void * _userdata_)
{
	Block51Data* _data51_;
	_data51_ = (Block51Data*) _userdata_;
#line 484 "../src/Objects/Item.vala"
	if (g_atomic_int_dec_and_test (&_data51_->_ref_count_)) {
#line 3199 "Item.c"
		ObjectsItem* self;
#line 484 "../src/Objects/Item.vala"
		self = _data51_->self;
#line 484 "../src/Objects/Item.vala"
		_g_object_unref0 (_data51_->itemrow);
#line 484 "../src/Objects/Item.vala"
		_g_object_unref0 (self);
#line 484 "../src/Objects/Item.vala"
		g_slice_free (Block51Data, _data51_);
#line 3209 "Item.c"
	}
}

static void
___lambda156_ (Block51Data* _data51_,
               GObject* obj,
               GAsyncResult* res)
{
	ObjectsItem* self;
	ServicesTodoist* _tmp0_;
#line 490 "../src/Objects/Item.vala"
	self = _data51_->self;
#line 490 "../src/Objects/Item.vala"
	g_return_if_fail (res != NULL);
#line 491 "../src/Objects/Item.vala"
	_tmp0_ = planner_todoist;
#line 491 "../src/Objects/Item.vala"
	if (services_todoist_delete_finish (_tmp0_, res)) {
#line 3228 "Item.c"
		ServicesDatabase* _tmp1_;
#line 492 "../src/Objects/Item.vala"
		_tmp1_ = planner_database;
#line 492 "../src/Objects/Item.vala"
		services_database_delete_item (_tmp1_, self);
#line 3234 "Item.c"
	} else {
#line 494 "../src/Objects/Item.vala"
		if (_data51_->itemrow != NULL) {
#line 495 "../src/Objects/Item.vala"
			layouts_item_row_set_is_loading (_data51_->itemrow, FALSE);
#line 3240 "Item.c"
		}
	}
}

static void
____lambda156__gasync_ready_callback (GObject* source_object,
                                      GAsyncResult* res,
                                      gpointer self)
{
#line 490 "../src/Objects/Item.vala"
	___lambda156_ (self, source_object, res);
#line 490 "../src/Objects/Item.vala"
	block51_data_unref (self);
#line 3254 "Item.c"
}

void
objects_item_delete (ObjectsItem* self,
                     LayoutsItemRow* itemrow)
{
	Block51Data* _data51_;
	LayoutsItemRow* _tmp0_;
	ObjectsProject* _tmp1_;
	ObjectsProject* _tmp2_;
	gboolean _tmp3_;
	gboolean _tmp4_;
#line 484 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 484 "../src/Objects/Item.vala"
	_data51_ = g_slice_new0 (Block51Data);
#line 484 "../src/Objects/Item.vala"
	_data51_->_ref_count_ = 1;
#line 484 "../src/Objects/Item.vala"
	_data51_->self = g_object_ref (self);
#line 484 "../src/Objects/Item.vala"
	_tmp0_ = _g_object_ref0 (itemrow);
#line 484 "../src/Objects/Item.vala"
	_g_object_unref0 (_data51_->itemrow);
#line 484 "../src/Objects/Item.vala"
	_data51_->itemrow = _tmp0_;
#line 485 "../src/Objects/Item.vala"
	_tmp1_ = objects_item_get_project (self);
#line 485 "../src/Objects/Item.vala"
	_tmp2_ = _tmp1_;
#line 485 "../src/Objects/Item.vala"
	_tmp3_ = objects_project_get_todoist (_tmp2_);
#line 485 "../src/Objects/Item.vala"
	_tmp4_ = _tmp3_;
#line 485 "../src/Objects/Item.vala"
	if (_tmp4_) {
#line 3291 "Item.c"
		ServicesTodoist* _tmp5_;
#line 486 "../src/Objects/Item.vala"
		if (_data51_->itemrow != NULL) {
#line 487 "../src/Objects/Item.vala"
			layouts_item_row_set_is_loading (_data51_->itemrow, TRUE);
#line 3297 "Item.c"
		}
#line 490 "../src/Objects/Item.vala"
		_tmp5_ = planner_todoist;
#line 490 "../src/Objects/Item.vala"
		services_todoist_delete (_tmp5_, (ObjectsBaseObject*) self, ____lambda156__gasync_ready_callback, block51_data_ref (_data51_));
#line 3303 "Item.c"
	} else {
		ServicesDatabase* _tmp6_;
#line 500 "../src/Objects/Item.vala"
		_tmp6_ = planner_database;
#line 500 "../src/Objects/Item.vala"
		services_database_delete_item (_tmp6_, self);
#line 3310 "Item.c"
	}
#line 484 "../src/Objects/Item.vala"
	block51_data_unref (_data51_);
#line 484 "../src/Objects/Item.vala"
	_data51_ = NULL;
#line 3316 "Item.c"
}

ObjectsItem*
objects_item_construct (GType object_type)
{
	ObjectsItem * self = NULL;
#line 22 "../src/Objects/Item.vala"
	self = (ObjectsItem*) objects_base_object_construct (object_type);
#line 22 "../src/Objects/Item.vala"
	return self;
#line 3327 "Item.c"
}

ObjectsItem*
objects_item_new (void)
{
#line 22 "../src/Objects/Item.vala"
	return objects_item_construct (OBJECTS_TYPE_ITEM);
#line 3335 "Item.c"
}

const gchar*
objects_item_get_content (ObjectsItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 23 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 23 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_content;
#line 23 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 23 "../src/Objects/Item.vala"
	return result;
#line 3351 "Item.c"
}

void
objects_item_set_content (ObjectsItem* self,
                          const gchar* value)
{
	gchar* old_value;
#line 23 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 23 "../src/Objects/Item.vala"
	old_value = objects_item_get_content (self);
#line 23 "../src/Objects/Item.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 3365 "Item.c"
		gchar* _tmp0_;
#line 23 "../src/Objects/Item.vala"
		_tmp0_ = g_strdup (value);
#line 23 "../src/Objects/Item.vala"
		_g_free0 (self->priv->_content);
#line 23 "../src/Objects/Item.vala"
		self->priv->_content = _tmp0_;
#line 23 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_CONTENT_PROPERTY]);
#line 3375 "Item.c"
	}
}

const gchar*
objects_item_get_description (ObjectsItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 24 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 24 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_description;
#line 24 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 24 "../src/Objects/Item.vala"
	return result;
#line 3392 "Item.c"
}

void
objects_item_set_description (ObjectsItem* self,
                              const gchar* value)
{
	gchar* old_value;
#line 24 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 24 "../src/Objects/Item.vala"
	old_value = objects_item_get_description (self);
#line 24 "../src/Objects/Item.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 3406 "Item.c"
		gchar* _tmp0_;
#line 24 "../src/Objects/Item.vala"
		_tmp0_ = g_strdup (value);
#line 24 "../src/Objects/Item.vala"
		_g_free0 (self->priv->_description);
#line 24 "../src/Objects/Item.vala"
		self->priv->_description = _tmp0_;
#line 24 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_DESCRIPTION_PROPERTY]);
#line 3416 "Item.c"
	}
}

ObjectsDueDate*
objects_item_get_due (ObjectsItem* self)
{
	ObjectsDueDate* result;
	ObjectsDueDate* _tmp0_;
#line 25 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 25 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_due;
#line 25 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 25 "../src/Objects/Item.vala"
	return result;
#line 3433 "Item.c"
}

void
objects_item_set_due (ObjectsItem* self,
                      ObjectsDueDate* value)
{
	ObjectsDueDate* old_value;
#line 25 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 25 "../src/Objects/Item.vala"
	old_value = objects_item_get_due (self);
#line 25 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 3447 "Item.c"
		ObjectsDueDate* _tmp0_;
#line 25 "../src/Objects/Item.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 25 "../src/Objects/Item.vala"
		_g_object_unref0 (self->priv->_due);
#line 25 "../src/Objects/Item.vala"
		self->priv->_due = _tmp0_;
#line 25 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_DUE_PROPERTY]);
#line 3457 "Item.c"
	}
}

const gchar*
objects_item_get_added_at (ObjectsItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 26 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 26 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_added_at;
#line 26 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 26 "../src/Objects/Item.vala"
	return result;
#line 3474 "Item.c"
}

void
objects_item_set_added_at (ObjectsItem* self,
                           const gchar* value)
{
	gchar* old_value;
#line 26 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 26 "../src/Objects/Item.vala"
	old_value = objects_item_get_added_at (self);
#line 26 "../src/Objects/Item.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 3488 "Item.c"
		gchar* _tmp0_;
#line 26 "../src/Objects/Item.vala"
		_tmp0_ = g_strdup (value);
#line 26 "../src/Objects/Item.vala"
		_g_free0 (self->priv->_added_at);
#line 26 "../src/Objects/Item.vala"
		self->priv->_added_at = _tmp0_;
#line 26 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_ADDED_AT_PROPERTY]);
#line 3498 "Item.c"
	}
}

const gchar*
objects_item_get_completed_at (ObjectsItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 27 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 27 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_completed_at;
#line 27 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 27 "../src/Objects/Item.vala"
	return result;
#line 3515 "Item.c"
}

void
objects_item_set_completed_at (ObjectsItem* self,
                               const gchar* value)
{
	gchar* old_value;
#line 27 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 27 "../src/Objects/Item.vala"
	old_value = objects_item_get_completed_at (self);
#line 27 "../src/Objects/Item.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 3529 "Item.c"
		gchar* _tmp0_;
#line 27 "../src/Objects/Item.vala"
		_tmp0_ = g_strdup (value);
#line 27 "../src/Objects/Item.vala"
		_g_free0 (self->priv->_completed_at);
#line 27 "../src/Objects/Item.vala"
		self->priv->_completed_at = _tmp0_;
#line 27 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_COMPLETED_AT_PROPERTY]);
#line 3539 "Item.c"
	}
}

const gchar*
objects_item_get_updated_at (ObjectsItem* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 28 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 28 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_updated_at;
#line 28 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 28 "../src/Objects/Item.vala"
	return result;
#line 3556 "Item.c"
}

void
objects_item_set_updated_at (ObjectsItem* self,
                             const gchar* value)
{
	gchar* old_value;
#line 28 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 28 "../src/Objects/Item.vala"
	old_value = objects_item_get_updated_at (self);
#line 28 "../src/Objects/Item.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 3570 "Item.c"
		gchar* _tmp0_;
#line 28 "../src/Objects/Item.vala"
		_tmp0_ = g_strdup (value);
#line 28 "../src/Objects/Item.vala"
		_g_free0 (self->priv->_updated_at);
#line 28 "../src/Objects/Item.vala"
		self->priv->_updated_at = _tmp0_;
#line 28 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_UPDATED_AT_PROPERTY]);
#line 3580 "Item.c"
	}
}

gint64
objects_item_get_section_id (ObjectsItem* self)
{
	gint64 result;
#line 29 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, 0LL);
#line 29 "../src/Objects/Item.vala"
	result = self->priv->_section_id;
#line 29 "../src/Objects/Item.vala"
	return result;
#line 3594 "Item.c"
}

void
objects_item_set_section_id (ObjectsItem* self,
                             gint64 value)
{
	gint64 old_value;
#line 29 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 29 "../src/Objects/Item.vala"
	old_value = objects_item_get_section_id (self);
#line 29 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 29 "../src/Objects/Item.vala"
		self->priv->_section_id = value;
#line 29 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_SECTION_ID_PROPERTY]);
#line 3612 "Item.c"
	}
}

gint64
objects_item_get_project_id (ObjectsItem* self)
{
	gint64 result;
#line 30 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, 0LL);
#line 30 "../src/Objects/Item.vala"
	result = self->priv->_project_id;
#line 30 "../src/Objects/Item.vala"
	return result;
#line 3626 "Item.c"
}

void
objects_item_set_project_id (ObjectsItem* self,
                             gint64 value)
{
	gint64 old_value;
#line 30 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 30 "../src/Objects/Item.vala"
	old_value = objects_item_get_project_id (self);
#line 30 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 30 "../src/Objects/Item.vala"
		self->priv->_project_id = value;
#line 30 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_PROJECT_ID_PROPERTY]);
#line 3644 "Item.c"
	}
}

gint64
objects_item_get_parent_id (ObjectsItem* self)
{
	gint64 result;
#line 31 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, 0LL);
#line 31 "../src/Objects/Item.vala"
	result = self->priv->_parent_id;
#line 31 "../src/Objects/Item.vala"
	return result;
#line 3658 "Item.c"
}

void
objects_item_set_parent_id (ObjectsItem* self,
                            gint64 value)
{
	gint64 old_value;
#line 31 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 31 "../src/Objects/Item.vala"
	old_value = objects_item_get_parent_id (self);
#line 31 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 31 "../src/Objects/Item.vala"
		self->priv->_parent_id = value;
#line 31 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_PARENT_ID_PROPERTY]);
#line 3676 "Item.c"
	}
}

gint
objects_item_get_priority (ObjectsItem* self)
{
	gint result;
#line 33 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 33 "../src/Objects/Item.vala"
	result = self->priv->_priority;
#line 33 "../src/Objects/Item.vala"
	return result;
#line 3690 "Item.c"
}

void
objects_item_set_priority (ObjectsItem* self,
                           gint value)
{
	gint old_value;
#line 33 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 33 "../src/Objects/Item.vala"
	old_value = objects_item_get_priority (self);
#line 33 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 33 "../src/Objects/Item.vala"
		self->priv->_priority = value;
#line 33 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_PRIORITY_PROPERTY]);
#line 3708 "Item.c"
	}
}

const gchar*
objects_item_get_priority_icon (ObjectsItem* self)
{
	const gchar* result;
	gint _tmp0_;
#line 35 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 36 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_priority;
#line 36 "../src/Objects/Item.vala"
	if (_tmp0_ == CONSTANTS_PRIORITY_1) {
#line 37 "../src/Objects/Item.vala"
		result = "planner-priority-1";
#line 37 "../src/Objects/Item.vala"
		return result;
#line 3727 "Item.c"
	} else {
		gint _tmp1_;
#line 38 "../src/Objects/Item.vala"
		_tmp1_ = self->priv->_priority;
#line 38 "../src/Objects/Item.vala"
		if (_tmp1_ == CONSTANTS_PRIORITY_2) {
#line 39 "../src/Objects/Item.vala"
			result = "planner-priority-2";
#line 39 "../src/Objects/Item.vala"
			return result;
#line 3738 "Item.c"
		} else {
			gint _tmp2_;
#line 40 "../src/Objects/Item.vala"
			_tmp2_ = self->priv->_priority;
#line 40 "../src/Objects/Item.vala"
			if (_tmp2_ == CONSTANTS_PRIORITY_3) {
#line 41 "../src/Objects/Item.vala"
				result = "planner-priority-3";
#line 41 "../src/Objects/Item.vala"
				return result;
#line 3749 "Item.c"
			} else {
#line 43 "../src/Objects/Item.vala"
				result = "planner-flag";
#line 43 "../src/Objects/Item.vala"
				return result;
#line 3755 "Item.c"
			}
		}
	}
}

gint
objects_item_get_child_order (ObjectsItem* self)
{
	gint result;
#line 48 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 48 "../src/Objects/Item.vala"
	result = self->priv->_child_order;
#line 48 "../src/Objects/Item.vala"
	return result;
#line 3771 "Item.c"
}

void
objects_item_set_child_order (ObjectsItem* self,
                              gint value)
{
	gint old_value;
#line 48 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 48 "../src/Objects/Item.vala"
	old_value = objects_item_get_child_order (self);
#line 48 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 48 "../src/Objects/Item.vala"
		self->priv->_child_order = value;
#line 48 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_CHILD_ORDER_PROPERTY]);
#line 3789 "Item.c"
	}
}

gint
objects_item_get_day_order (ObjectsItem* self)
{
	gint result;
#line 49 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 49 "../src/Objects/Item.vala"
	result = self->priv->_day_order;
#line 49 "../src/Objects/Item.vala"
	return result;
#line 3803 "Item.c"
}

void
objects_item_set_day_order (ObjectsItem* self,
                            gint value)
{
	gint old_value;
#line 49 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 49 "../src/Objects/Item.vala"
	old_value = objects_item_get_day_order (self);
#line 49 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 49 "../src/Objects/Item.vala"
		self->priv->_day_order = value;
#line 49 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_DAY_ORDER_PROPERTY]);
#line 3821 "Item.c"
	}
}

gint
objects_item_get_due_is_recurring (ObjectsItem* self)
{
	gint result;
#line 50 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 50 "../src/Objects/Item.vala"
	result = self->priv->_due_is_recurring;
#line 50 "../src/Objects/Item.vala"
	return result;
#line 3835 "Item.c"
}

void
objects_item_set_due_is_recurring (ObjectsItem* self,
                                   gint value)
{
	gint old_value;
#line 50 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 50 "../src/Objects/Item.vala"
	old_value = objects_item_get_due_is_recurring (self);
#line 50 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 50 "../src/Objects/Item.vala"
		self->priv->_due_is_recurring = value;
#line 50 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_DUE_IS_RECURRING_PROPERTY]);
#line 3853 "Item.c"
	}
}

gboolean
objects_item_get_checked (ObjectsItem* self)
{
	gboolean result;
#line 51 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 51 "../src/Objects/Item.vala"
	result = self->priv->_checked;
#line 51 "../src/Objects/Item.vala"
	return result;
#line 3867 "Item.c"
}

void
objects_item_set_checked (ObjectsItem* self,
                          gboolean value)
{
	gboolean old_value;
#line 51 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 51 "../src/Objects/Item.vala"
	old_value = objects_item_get_checked (self);
#line 51 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 51 "../src/Objects/Item.vala"
		self->priv->_checked = value;
#line 51 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_CHECKED_PROPERTY]);
#line 3885 "Item.c"
	}
}

gboolean
objects_item_get_is_deleted (ObjectsItem* self)
{
	gboolean result;
#line 52 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 52 "../src/Objects/Item.vala"
	result = self->priv->_is_deleted;
#line 52 "../src/Objects/Item.vala"
	return result;
#line 3899 "Item.c"
}

void
objects_item_set_is_deleted (ObjectsItem* self,
                             gboolean value)
{
	gboolean old_value;
#line 52 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 52 "../src/Objects/Item.vala"
	old_value = objects_item_get_is_deleted (self);
#line 52 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 52 "../src/Objects/Item.vala"
		self->priv->_is_deleted = value;
#line 52 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_IS_DELETED_PROPERTY]);
#line 3917 "Item.c"
	}
}

gboolean
objects_item_get_collapsed (ObjectsItem* self)
{
	gboolean result;
#line 53 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 53 "../src/Objects/Item.vala"
	result = self->priv->_collapsed;
#line 53 "../src/Objects/Item.vala"
	return result;
#line 3931 "Item.c"
}

void
objects_item_set_collapsed (ObjectsItem* self,
                            gboolean value)
{
	gboolean old_value;
#line 53 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 53 "../src/Objects/Item.vala"
	old_value = objects_item_get_collapsed (self);
#line 53 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 53 "../src/Objects/Item.vala"
		self->priv->_collapsed = value;
#line 53 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_COLLAPSED_PROPERTY]);
#line 3949 "Item.c"
	}
}

gboolean
objects_item_get_pinned (ObjectsItem* self)
{
	gboolean result;
#line 54 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 54 "../src/Objects/Item.vala"
	result = self->priv->_pinned;
#line 54 "../src/Objects/Item.vala"
	return result;
#line 3963 "Item.c"
}

void
objects_item_set_pinned (ObjectsItem* self,
                         gboolean value)
{
	gboolean old_value;
#line 54 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 54 "../src/Objects/Item.vala"
	old_value = objects_item_get_pinned (self);
#line 54 "../src/Objects/Item.vala"
	if (old_value != value) {
#line 54 "../src/Objects/Item.vala"
		self->priv->_pinned = value;
#line 54 "../src/Objects/Item.vala"
		g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_PINNED_PROPERTY]);
#line 3981 "Item.c"
	}
}

const gchar*
objects_item_get_pinned_icon (ObjectsItem* self)
{
	const gchar* result;
	const gchar* _tmp0_ = NULL;
	gboolean _tmp1_;
#line 56 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 57 "../src/Objects/Item.vala"
	_tmp1_ = self->priv->_pinned;
#line 57 "../src/Objects/Item.vala"
	if (_tmp1_) {
#line 57 "../src/Objects/Item.vala"
		_tmp0_ = "planner-pinned-activated";
#line 3999 "Item.c"
	} else {
#line 57 "../src/Objects/Item.vala"
		_tmp0_ = "planner-pinned";
#line 4003 "Item.c"
	}
#line 57 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 57 "../src/Objects/Item.vala"
	return result;
#line 4009 "Item.c"
}

gboolean
objects_item_get_completed (ObjectsItem* self)
{
	gboolean result;
	gboolean _tmp0_;
#line 62 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 63 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_checked;
#line 63 "../src/Objects/Item.vala"
	result = _tmp0_;
#line 63 "../src/Objects/Item.vala"
	return result;
#line 4025 "Item.c"
}

gboolean
objects_item_get_has_due (ObjectsItem* self)
{
	gboolean result;
	ObjectsDueDate* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
#line 68 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 69 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_due;
#line 69 "../src/Objects/Item.vala"
	_tmp1_ = objects_due_date_get_datetime (_tmp0_);
#line 69 "../src/Objects/Item.vala"
	_tmp2_ = _tmp1_;
#line 69 "../src/Objects/Item.vala"
	result = _tmp2_ != NULL;
#line 69 "../src/Objects/Item.vala"
	return result;
#line 4047 "Item.c"
}

gboolean
objects_item_get_has_section (ObjectsItem* self)
{
	gboolean result;
	gint64 _tmp0_;
#line 74 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 75 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_section_id;
#line 75 "../src/Objects/Item.vala"
	result = _tmp0_ != ((gint64) CONSTANTS_INACTIVE);
#line 75 "../src/Objects/Item.vala"
	return result;
#line 4063 "Item.c"
}

JsonBuilder*
objects_item_get_builder (ObjectsItem* self)
{
	JsonBuilder* result;
	JsonBuilder* _tmp0_;
	JsonBuilder* _tmp2_;
#line 81 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 82 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_builder;
#line 82 "../src/Objects/Item.vala"
	if (_tmp0_ == NULL) {
#line 4078 "Item.c"
		JsonBuilder* _tmp1_;
#line 83 "../src/Objects/Item.vala"
		_tmp1_ = json_builder_new ();
#line 83 "../src/Objects/Item.vala"
		_g_object_unref0 (self->priv->_builder);
#line 83 "../src/Objects/Item.vala"
		self->priv->_builder = _tmp1_;
#line 4086 "Item.c"
	}
#line 86 "../src/Objects/Item.vala"
	_tmp2_ = self->priv->_builder;
#line 86 "../src/Objects/Item.vala"
	result = _tmp2_;
#line 86 "../src/Objects/Item.vala"
	return result;
#line 4094 "Item.c"
}

ObjectsProject*
objects_item_get_project (ObjectsItem* self)
{
	ObjectsProject* result;
	ServicesDatabase* _tmp0_;
	gint64 _tmp1_;
	ObjectsProject* _tmp2_;
	ObjectsProject* _tmp3_;
#line 92 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 93 "../src/Objects/Item.vala"
	_tmp0_ = planner_database;
#line 93 "../src/Objects/Item.vala"
	_tmp1_ = self->priv->_project_id;
#line 93 "../src/Objects/Item.vala"
	_tmp2_ = services_database_get_project (_tmp0_, _tmp1_);
#line 93 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_project);
#line 93 "../src/Objects/Item.vala"
	self->priv->_project = _tmp2_;
#line 94 "../src/Objects/Item.vala"
	_tmp3_ = self->priv->_project;
#line 94 "../src/Objects/Item.vala"
	result = _tmp3_;
#line 94 "../src/Objects/Item.vala"
	return result;
#line 4123 "Item.c"
}

ObjectsSection*
objects_item_get_section (ObjectsItem* self)
{
	ObjectsSection* result;
	ServicesDatabase* _tmp0_;
	gint64 _tmp1_;
	ObjectsSection* _tmp2_;
	ObjectsSection* _tmp3_;
#line 100 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 101 "../src/Objects/Item.vala"
	_tmp0_ = planner_database;
#line 101 "../src/Objects/Item.vala"
	_tmp1_ = self->priv->_section_id;
#line 101 "../src/Objects/Item.vala"
	_tmp2_ = services_database_get_section (_tmp0_, _tmp1_);
#line 101 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_section);
#line 101 "../src/Objects/Item.vala"
	self->priv->_section = _tmp2_;
#line 102 "../src/Objects/Item.vala"
	_tmp3_ = self->priv->_section;
#line 102 "../src/Objects/Item.vala"
	result = _tmp3_;
#line 102 "../src/Objects/Item.vala"
	return result;
#line 4152 "Item.c"
}

GeeHashMap*
objects_item_get_labels (ObjectsItem* self)
{
	GeeHashMap* result;
	GeeHashMap* _tmp0_;
	GeeHashMap* _tmp3_;
#line 108 "../src/Objects/Item.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 109 "../src/Objects/Item.vala"
	_tmp0_ = self->priv->_labels;
#line 109 "../src/Objects/Item.vala"
	if (_tmp0_ == NULL) {
#line 4167 "Item.c"
		ServicesDatabase* _tmp1_;
		GeeHashMap* _tmp2_;
#line 110 "../src/Objects/Item.vala"
		_tmp1_ = planner_database;
#line 110 "../src/Objects/Item.vala"
		_tmp2_ = services_database_get_labels_by_item (_tmp1_, self);
#line 110 "../src/Objects/Item.vala"
		_g_object_unref0 (self->priv->_labels);
#line 110 "../src/Objects/Item.vala"
		self->priv->_labels = _tmp2_;
#line 4178 "Item.c"
	}
#line 112 "../src/Objects/Item.vala"
	_tmp3_ = self->priv->_labels;
#line 112 "../src/Objects/Item.vala"
	result = _tmp3_;
#line 112 "../src/Objects/Item.vala"
	return result;
#line 4186 "Item.c"
}

void
objects_item_set_labels (ObjectsItem* self,
                         GeeHashMap* value)
{
	GeeHashMap* _tmp0_;
#line 114 "../src/Objects/Item.vala"
	g_return_if_fail (self != NULL);
#line 115 "../src/Objects/Item.vala"
	_tmp0_ = _g_object_ref0 (value);
#line 115 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_labels);
#line 115 "../src/Objects/Item.vala"
	self->priv->_labels = _tmp0_;
#line 114 "../src/Objects/Item.vala"
	g_object_notify_by_pspec ((GObject *) self, objects_item_properties[OBJECTS_ITEM_LABELS_PROPERTY]);
#line 4204 "Item.c"
}

static void
_objects_item___lambda157_ (ObjectsItem* self)
{
	ServicesDatabase* _tmp0_;
#line 123 "../src/Objects/Item.vala"
	_tmp0_ = planner_database;
#line 123 "../src/Objects/Item.vala"
	g_signal_emit_by_name (_tmp0_, "item-deleted", self);
#line 4215 "Item.c"
}

static void
__objects_item___lambda157__objects_base_object_deleted (ObjectsBaseObject* _sender,
                                                         gpointer self)
{
#line 122 "../src/Objects/Item.vala"
	_objects_item___lambda157_ ((ObjectsItem*) self);
#line 4224 "Item.c"
}

static GObject *
objects_item_constructor (GType type,
                          guint n_construct_properties,
                          GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ObjectsItem * self;
#line 121 "../src/Objects/Item.vala"
	parent_class = G_OBJECT_CLASS (objects_item_parent_class);
#line 121 "../src/Objects/Item.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 121 "../src/Objects/Item.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, OBJECTS_TYPE_ITEM, ObjectsItem);
#line 122 "../src/Objects/Item.vala"
	g_signal_connect_object ((ObjectsBaseObject*) self, "deleted", (GCallback) __objects_item___lambda157__objects_base_object_deleted, self, 0);
#line 121 "../src/Objects/Item.vala"
	return obj;
#line 4245 "Item.c"
}

static void
objects_item_class_init (ObjectsItemClass * klass,
                         gpointer klass_data)
{
#line 22 "../src/Objects/Item.vala"
	objects_item_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Objects/Item.vala"
	g_type_class_adjust_private_offset (klass, &ObjectsItem_private_offset);
#line 22 "../src/Objects/Item.vala"
	((ObjectsBaseObjectClass *) klass)->get_add_json = (gchar* (*) (ObjectsBaseObject*, const gchar*, const gchar*)) objects_item_real_get_add_json;
#line 22 "../src/Objects/Item.vala"
	((ObjectsBaseObjectClass *) klass)->get_update_json = (gchar* (*) (ObjectsBaseObject*, const gchar*, const gchar*)) objects_item_real_get_update_json;
#line 22 "../src/Objects/Item.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_objects_item_get_property;
#line 22 "../src/Objects/Item.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_objects_item_set_property;
#line 22 "../src/Objects/Item.vala"
	G_OBJECT_CLASS (klass)->constructor = objects_item_constructor;
#line 22 "../src/Objects/Item.vala"
	G_OBJECT_CLASS (klass)->finalize = objects_item_finalize;
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_CONTENT_PROPERTY, objects_item_properties[OBJECTS_ITEM_CONTENT_PROPERTY] = g_param_spec_string ("content", "content", "content", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_DESCRIPTION_PROPERTY, objects_item_properties[OBJECTS_ITEM_DESCRIPTION_PROPERTY] = g_param_spec_string ("description", "description", "description", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_DUE_PROPERTY, objects_item_properties[OBJECTS_ITEM_DUE_PROPERTY] = g_param_spec_object ("due", "due", "due", OBJECTS_TYPE_DUE_DATE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_ADDED_AT_PROPERTY, objects_item_properties[OBJECTS_ITEM_ADDED_AT_PROPERTY] = g_param_spec_string ("added-at", "added-at", "added-at", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_COMPLETED_AT_PROPERTY, objects_item_properties[OBJECTS_ITEM_COMPLETED_AT_PROPERTY] = g_param_spec_string ("completed-at", "completed-at", "completed-at", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_UPDATED_AT_PROPERTY, objects_item_properties[OBJECTS_ITEM_UPDATED_AT_PROPERTY] = g_param_spec_string ("updated-at", "updated-at", "updated-at", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_SECTION_ID_PROPERTY, objects_item_properties[OBJECTS_ITEM_SECTION_ID_PROPERTY] = g_param_spec_int64 ("section-id", "section-id", "section-id", G_MININT64, G_MAXINT64, (gint64) CONSTANTS_INACTIVE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_PROJECT_ID_PROPERTY, objects_item_properties[OBJECTS_ITEM_PROJECT_ID_PROPERTY] = g_param_spec_int64 ("project-id", "project-id", "project-id", G_MININT64, G_MAXINT64, (gint64) CONSTANTS_INACTIVE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_PARENT_ID_PROPERTY, objects_item_properties[OBJECTS_ITEM_PARENT_ID_PROPERTY] = g_param_spec_int64 ("parent-id", "parent-id", "parent-id", G_MININT64, G_MAXINT64, (gint64) CONSTANTS_INACTIVE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_PRIORITY_PROPERTY, objects_item_properties[OBJECTS_ITEM_PRIORITY_PROPERTY] = g_param_spec_int ("priority", "priority", "priority", G_MININT, G_MAXINT, CONSTANTS_INACTIVE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_PRIORITY_ICON_PROPERTY, objects_item_properties[OBJECTS_ITEM_PRIORITY_ICON_PROPERTY] = g_param_spec_string ("priority-icon", "priority-icon", "priority-icon", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_CHILD_ORDER_PROPERTY, objects_item_properties[OBJECTS_ITEM_CHILD_ORDER_PROPERTY] = g_param_spec_int ("child-order", "child-order", "child-order", G_MININT, G_MAXINT, CONSTANTS_INACTIVE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_DAY_ORDER_PROPERTY, objects_item_properties[OBJECTS_ITEM_DAY_ORDER_PROPERTY] = g_param_spec_int ("day-order", "day-order", "day-order", G_MININT, G_MAXINT, CONSTANTS_INACTIVE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_DUE_IS_RECURRING_PROPERTY, objects_item_properties[OBJECTS_ITEM_DUE_IS_RECURRING_PROPERTY] = g_param_spec_int ("due-is-recurring", "due-is-recurring", "due-is-recurring", G_MININT, G_MAXINT, CONSTANTS_INACTIVE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_CHECKED_PROPERTY, objects_item_properties[OBJECTS_ITEM_CHECKED_PROPERTY] = g_param_spec_boolean ("checked", "checked", "checked", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_IS_DELETED_PROPERTY, objects_item_properties[OBJECTS_ITEM_IS_DELETED_PROPERTY] = g_param_spec_boolean ("is-deleted", "is-deleted", "is-deleted", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_COLLAPSED_PROPERTY, objects_item_properties[OBJECTS_ITEM_COLLAPSED_PROPERTY] = g_param_spec_boolean ("collapsed", "collapsed", "collapsed", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_PINNED_PROPERTY, objects_item_properties[OBJECTS_ITEM_PINNED_PROPERTY] = g_param_spec_boolean ("pinned", "pinned", "pinned", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_PINNED_ICON_PROPERTY, objects_item_properties[OBJECTS_ITEM_PINNED_ICON_PROPERTY] = g_param_spec_string ("pinned-icon", "pinned-icon", "pinned-icon", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_COMPLETED_PROPERTY, objects_item_properties[OBJECTS_ITEM_COMPLETED_PROPERTY] = g_param_spec_boolean ("completed", "completed", "completed", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_HAS_DUE_PROPERTY, objects_item_properties[OBJECTS_ITEM_HAS_DUE_PROPERTY] = g_param_spec_boolean ("has-due", "has-due", "has-due", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_HAS_SECTION_PROPERTY, objects_item_properties[OBJECTS_ITEM_HAS_SECTION_PROPERTY] = g_param_spec_boolean ("has-section", "has-section", "has-section", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_BUILDER_PROPERTY, objects_item_properties[OBJECTS_ITEM_BUILDER_PROPERTY] = g_param_spec_object ("builder", "builder", "builder", json_builder_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_PROJECT_PROPERTY, objects_item_properties[OBJECTS_ITEM_PROJECT_PROPERTY] = g_param_spec_object ("project", "project", "project", OBJECTS_TYPE_PROJECT, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_SECTION_PROPERTY, objects_item_properties[OBJECTS_ITEM_SECTION_PROPERTY] = g_param_spec_object ("section", "section", "section", OBJECTS_TYPE_SECTION, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 22 "../src/Objects/Item.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), OBJECTS_ITEM_LABELS_PROPERTY, objects_item_properties[OBJECTS_ITEM_LABELS_PROPERTY] = g_param_spec_object ("labels", "labels", "labels", GEE_TYPE_HASH_MAP, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Objects/Item.vala"
	objects_item_signals[OBJECTS_ITEM_ITEM_LABEL_ADDED_SIGNAL] = g_signal_new ("item-label-added", OBJECTS_TYPE_ITEM, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, OBJECTS_TYPE_ITEM_LABEL);
#line 4322 "Item.c"
}

static void
objects_item_instance_init (ObjectsItem * self,
                            gpointer klass)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	ObjectsDueDate* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
#line 22 "../src/Objects/Item.vala"
	self->priv = objects_item_get_instance_private (self);
#line 23 "../src/Objects/Item.vala"
	_tmp0_ = g_strdup ("");
#line 23 "../src/Objects/Item.vala"
	self->priv->_content = _tmp0_;
#line 24 "../src/Objects/Item.vala"
	_tmp1_ = g_strdup ("");
#line 24 "../src/Objects/Item.vala"
	self->priv->_description = _tmp1_;
#line 25 "../src/Objects/Item.vala"
	_tmp2_ = objects_due_date_new ();
#line 25 "../src/Objects/Item.vala"
	self->priv->_due = _tmp2_;
#line 26 "../src/Objects/Item.vala"
	_tmp3_ = g_strdup ("");
#line 26 "../src/Objects/Item.vala"
	self->priv->_added_at = _tmp3_;
#line 27 "../src/Objects/Item.vala"
	_tmp4_ = g_strdup ("");
#line 27 "../src/Objects/Item.vala"
	self->priv->_completed_at = _tmp4_;
#line 28 "../src/Objects/Item.vala"
	_tmp5_ = g_strdup ("");
#line 28 "../src/Objects/Item.vala"
	self->priv->_updated_at = _tmp5_;
#line 29 "../src/Objects/Item.vala"
	self->priv->_section_id = (gint64) CONSTANTS_INACTIVE;
#line 30 "../src/Objects/Item.vala"
	self->priv->_project_id = (gint64) CONSTANTS_INACTIVE;
#line 31 "../src/Objects/Item.vala"
	self->priv->_parent_id = (gint64) CONSTANTS_INACTIVE;
#line 33 "../src/Objects/Item.vala"
	self->priv->_priority = CONSTANTS_INACTIVE;
#line 48 "../src/Objects/Item.vala"
	self->priv->_child_order = CONSTANTS_INACTIVE;
#line 49 "../src/Objects/Item.vala"
	self->priv->_day_order = CONSTANTS_INACTIVE;
#line 50 "../src/Objects/Item.vala"
	self->priv->_due_is_recurring = CONSTANTS_INACTIVE;
#line 51 "../src/Objects/Item.vala"
	self->priv->_checked = FALSE;
#line 52 "../src/Objects/Item.vala"
	self->priv->_is_deleted = FALSE;
#line 53 "../src/Objects/Item.vala"
	self->priv->_collapsed = FALSE;
#line 54 "../src/Objects/Item.vala"
	self->priv->_pinned = FALSE;
#line 106 "../src/Objects/Item.vala"
	g_rec_mutex_init (&self->priv->__lock__labels);
#line 106 "../src/Objects/Item.vala"
	self->priv->_labels = NULL;
#line 4387 "Item.c"
}

static void
objects_item_finalize (GObject * obj)
{
	ObjectsItem * self;
#line 22 "../src/Objects/Item.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, OBJECTS_TYPE_ITEM, ObjectsItem);
#line 23 "../src/Objects/Item.vala"
	_g_free0 (self->priv->_content);
#line 24 "../src/Objects/Item.vala"
	_g_free0 (self->priv->_description);
#line 25 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_due);
#line 26 "../src/Objects/Item.vala"
	_g_free0 (self->priv->_added_at);
#line 27 "../src/Objects/Item.vala"
	_g_free0 (self->priv->_completed_at);
#line 28 "../src/Objects/Item.vala"
	_g_free0 (self->priv->_updated_at);
#line 79 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_builder);
#line 90 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_project);
#line 98 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_section);
#line 106 "../src/Objects/Item.vala"
	g_rec_mutex_clear (&self->priv->__lock__labels);
#line 106 "../src/Objects/Item.vala"
	_g_object_unref0 (self->priv->_labels);
#line 22 "../src/Objects/Item.vala"
	G_OBJECT_CLASS (objects_item_parent_class)->finalize (obj);
#line 4420 "Item.c"
}

static GType
objects_item_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (ObjectsItemClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) objects_item_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ObjectsItem), 0, (GInstanceInitFunc) objects_item_instance_init, NULL };
	GType objects_item_type_id;
	objects_item_type_id = g_type_register_static (OBJECTS_TYPE_BASE_OBJECT, "ObjectsItem", &g_define_type_info, 0);
	ObjectsItem_private_offset = g_type_add_instance_private (objects_item_type_id, sizeof (ObjectsItemPrivate));
	return objects_item_type_id;
}

GType
objects_item_get_type (void)
{
	static volatile gsize objects_item_type_id__volatile = 0;
	if (g_once_init_enter (&objects_item_type_id__volatile)) {
		GType objects_item_type_id;
		objects_item_type_id = objects_item_get_type_once ();
		g_once_init_leave (&objects_item_type_id__volatile, objects_item_type_id);
	}
	return objects_item_type_id__volatile;
}

static void
_vala_objects_item_get_property (GObject * object,
                                 guint property_id,
                                 GValue * value,
                                 GParamSpec * pspec)
{
	ObjectsItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, OBJECTS_TYPE_ITEM, ObjectsItem);
#line 22 "../src/Objects/Item.vala"
	switch (property_id) {
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_CONTENT_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_string (value, objects_item_get_content (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_DESCRIPTION_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_string (value, objects_item_get_description (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_DUE_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_object (value, objects_item_get_due (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_ADDED_AT_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_string (value, objects_item_get_added_at (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_COMPLETED_AT_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_string (value, objects_item_get_completed_at (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_UPDATED_AT_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_string (value, objects_item_get_updated_at (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_SECTION_ID_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_int64 (value, objects_item_get_section_id (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PROJECT_ID_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_int64 (value, objects_item_get_project_id (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PARENT_ID_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_int64 (value, objects_item_get_parent_id (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PRIORITY_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_int (value, objects_item_get_priority (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PRIORITY_ICON_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_string (value, objects_item_get_priority_icon (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_CHILD_ORDER_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_int (value, objects_item_get_child_order (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_DAY_ORDER_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_int (value, objects_item_get_day_order (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_DUE_IS_RECURRING_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_int (value, objects_item_get_due_is_recurring (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_CHECKED_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_boolean (value, objects_item_get_checked (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_IS_DELETED_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_boolean (value, objects_item_get_is_deleted (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_COLLAPSED_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_boolean (value, objects_item_get_collapsed (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PINNED_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_boolean (value, objects_item_get_pinned (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PINNED_ICON_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_string (value, objects_item_get_pinned_icon (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_COMPLETED_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_boolean (value, objects_item_get_completed (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_HAS_DUE_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_boolean (value, objects_item_get_has_due (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_HAS_SECTION_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_boolean (value, objects_item_get_has_section (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_BUILDER_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_object (value, objects_item_get_builder (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PROJECT_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_object (value, objects_item_get_project (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_SECTION_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_object (value, objects_item_get_section (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_LABELS_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		g_value_set_object (value, objects_item_get_labels (self));
#line 22 "../src/Objects/Item.vala"
		break;
#line 4611 "Item.c"
		default:
#line 22 "../src/Objects/Item.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Objects/Item.vala"
		break;
#line 4617 "Item.c"
	}
}

static void
_vala_objects_item_set_property (GObject * object,
                                 guint property_id,
                                 const GValue * value,
                                 GParamSpec * pspec)
{
	ObjectsItem * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, OBJECTS_TYPE_ITEM, ObjectsItem);
#line 22 "../src/Objects/Item.vala"
	switch (property_id) {
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_CONTENT_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_content (self, g_value_get_string (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_DESCRIPTION_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_description (self, g_value_get_string (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_DUE_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_due (self, g_value_get_object (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_ADDED_AT_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_added_at (self, g_value_get_string (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_COMPLETED_AT_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_completed_at (self, g_value_get_string (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_UPDATED_AT_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_updated_at (self, g_value_get_string (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_SECTION_ID_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_section_id (self, g_value_get_int64 (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PROJECT_ID_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_project_id (self, g_value_get_int64 (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PARENT_ID_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_parent_id (self, g_value_get_int64 (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PRIORITY_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_priority (self, g_value_get_int (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_CHILD_ORDER_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_child_order (self, g_value_get_int (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_DAY_ORDER_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_day_order (self, g_value_get_int (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_DUE_IS_RECURRING_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_due_is_recurring (self, g_value_get_int (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_CHECKED_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_checked (self, g_value_get_boolean (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_IS_DELETED_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_is_deleted (self, g_value_get_boolean (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_COLLAPSED_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_collapsed (self, g_value_get_boolean (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_PINNED_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_pinned (self, g_value_get_boolean (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 22 "../src/Objects/Item.vala"
		case OBJECTS_ITEM_LABELS_PROPERTY:
#line 22 "../src/Objects/Item.vala"
		objects_item_set_labels (self, g_value_get_object (value));
#line 22 "../src/Objects/Item.vala"
		break;
#line 4739 "Item.c"
		default:
#line 22 "../src/Objects/Item.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Objects/Item.vala"
		break;
#line 4745 "Item.c"
	}
}


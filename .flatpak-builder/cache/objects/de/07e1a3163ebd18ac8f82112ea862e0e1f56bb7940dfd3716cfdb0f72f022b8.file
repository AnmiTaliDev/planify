/* ColorPopover.c generated by valac 0.50.10, the Vala compiler
 * generated from ColorPopover.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 3 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alainmh23@gmail.com>
*/

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gee.h>

#define WIDGETS_TYPE_COLOR_POPOVER (widgets_color_popover_get_type ())
#define WIDGETS_COLOR_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopover))
#define WIDGETS_COLOR_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopoverClass))
#define WIDGETS_IS_COLOR_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_COLOR_POPOVER))
#define WIDGETS_IS_COLOR_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_COLOR_POPOVER))
#define WIDGETS_COLOR_POPOVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopoverClass))

typedef struct _WidgetsColorPopover WidgetsColorPopover;
typedef struct _WidgetsColorPopoverClass WidgetsColorPopoverClass;
typedef struct _WidgetsColorPopoverPrivate WidgetsColorPopoverPrivate;
enum  {
	WIDGETS_COLOR_POPOVER_0_PROPERTY,
	WIDGETS_COLOR_POPOVER_SELECTED_PROPERTY,
	WIDGETS_COLOR_POPOVER_NUM_PROPERTIES
};
static GParamSpec* widgets_color_popover_properties[WIDGETS_COLOR_POPOVER_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define OBJECTS_TYPE_COLOR (objects_color_get_type ())
#define OBJECTS_COLOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_COLOR, ObjectsColor))
#define OBJECTS_COLOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_COLOR, ObjectsColorClass))
#define OBJECTS_IS_COLOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_COLOR))
#define OBJECTS_IS_COLOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_COLOR))
#define OBJECTS_COLOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_COLOR, ObjectsColorClass))

typedef struct _ObjectsColor ObjectsColor;
typedef struct _ObjectsColorClass ObjectsColorClass;

#define TYPE_UTIL (util_get_type ())
#define UTIL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTIL, Util))
#define UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTIL, UtilClass))
#define IS_UTIL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTIL))
#define IS_UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTIL))
#define UTIL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTIL, UtilClass))

typedef struct _Util Util;
typedef struct _UtilClass UtilClass;
typedef struct _Block23Data Block23Data;
enum  {
	WIDGETS_COLOR_POPOVER_COLOR_CHANGED_SIGNAL,
	WIDGETS_COLOR_POPOVER_NUM_SIGNALS
};
static guint widgets_color_popover_signals[WIDGETS_COLOR_POPOVER_NUM_SIGNALS] = {0};

struct _WidgetsColorPopover {
	GtkPopover parent_instance;
	WidgetsColorPopoverPrivate * priv;
};

struct _WidgetsColorPopoverClass {
	GtkPopoverClass parent_class;
};

struct _WidgetsColorPopoverPrivate {
	gchar* _selected;
	GeeHashMap* colors_hashmap;
	GtkFlowBox* flowbox;
};

struct _Block23Data {
	int _ref_count_;
	WidgetsColorPopover* self;
	GeeMapEntry* entry;
};

static gint WidgetsColorPopover_private_offset;
static gpointer widgets_color_popover_parent_class = NULL;

GType widgets_color_popover_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsColorPopover, g_object_unref)
WidgetsColorPopover* widgets_color_popover_new (void);
WidgetsColorPopover* widgets_color_popover_construct (GType object_type);
const gchar* widgets_color_popover_get_selected (WidgetsColorPopover* self);
void widgets_color_popover_set_selected (WidgetsColorPopover* self,
                                         const gchar* value);
static GObject * widgets_color_popover_constructor (GType type,
                                             guint n_construct_properties,
                                             GObjectConstructParam * construct_properties);
GType objects_color_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsColor, g_object_unref)
GType util_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Util, g_object_unref)
Util* util_get_default (void);
GeeHashMap* util_get_colors (Util* self);
static Block23Data* block23_data_ref (Block23Data* _data23_);
static void block23_data_unref (void * _userdata_);
gchar* util_get_color_name (Util* self,
                            const gchar* key);
void util_set_widget_color (Util* self,
                            const gchar* color,
                            GtkWidget* widget);
gchar* util_get_color (Util* self,
                       const gchar* key);
static void _widgets_color_popover_____lambda324_ (Block23Data* _data23_);
static void __widgets_color_popover_____lambda324__gtk_toggle_button_toggled (GtkToggleButton* _sender,
                                                                       gpointer self);
static void _widgets_color_popover___lambda325_ (WidgetsColorPopover* self);
static void __widgets_color_popover___lambda325__g_object_notify (GObject* _sender,
                                                           GParamSpec* pspec,
                                                           gpointer self);
static void widgets_color_popover_finalize (GObject * obj);
static GType widgets_color_popover_get_type_once (void);
static void _vala_widgets_color_popover_get_property (GObject * object,
                                               guint property_id,
                                               GValue * value,
                                               GParamSpec * pspec);
static void _vala_widgets_color_popover_set_property (GObject * object,
                                               guint property_id,
                                               const GValue * value,
                                               GParamSpec * pspec);

static inline gpointer
widgets_color_popover_get_instance_private (WidgetsColorPopover* self)
{
	return G_STRUCT_MEMBER_P (self, WidgetsColorPopover_private_offset);
}

WidgetsColorPopover*
widgets_color_popover_construct (GType object_type)
{
	WidgetsColorPopover * self = NULL;
#line 22 "../src/Widgets/ColorPopover.vala"
	self = (WidgetsColorPopover*) g_object_new (object_type, NULL);
#line 22 "../src/Widgets/ColorPopover.vala"
	return self;
#line 159 "ColorPopover.c"
}

WidgetsColorPopover*
widgets_color_popover_new (void)
{
#line 22 "../src/Widgets/ColorPopover.vala"
	return widgets_color_popover_construct (WIDGETS_TYPE_COLOR_POPOVER);
#line 167 "ColorPopover.c"
}

const gchar*
widgets_color_popover_get_selected (WidgetsColorPopover* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 23 "../src/Widgets/ColorPopover.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 23 "../src/Widgets/ColorPopover.vala"
	_tmp0_ = self->priv->_selected;
#line 23 "../src/Widgets/ColorPopover.vala"
	result = _tmp0_;
#line 23 "../src/Widgets/ColorPopover.vala"
	return result;
#line 183 "ColorPopover.c"
}

void
widgets_color_popover_set_selected (WidgetsColorPopover* self,
                                    const gchar* value)
{
	gchar* old_value;
#line 23 "../src/Widgets/ColorPopover.vala"
	g_return_if_fail (self != NULL);
#line 23 "../src/Widgets/ColorPopover.vala"
	old_value = widgets_color_popover_get_selected (self);
#line 23 "../src/Widgets/ColorPopover.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 197 "ColorPopover.c"
		gchar* _tmp0_;
#line 23 "../src/Widgets/ColorPopover.vala"
		_tmp0_ = g_strdup (value);
#line 23 "../src/Widgets/ColorPopover.vala"
		_g_free0 (self->priv->_selected);
#line 23 "../src/Widgets/ColorPopover.vala"
		self->priv->_selected = _tmp0_;
#line 23 "../src/Widgets/ColorPopover.vala"
		g_object_notify_by_pspec ((GObject *) self, widgets_color_popover_properties[WIDGETS_COLOR_POPOVER_SELECTED_PROPERTY]);
#line 207 "ColorPopover.c"
	}
}

static Block23Data*
block23_data_ref (Block23Data* _data23_)
{
#line 46 "../src/Widgets/ColorPopover.vala"
	g_atomic_int_inc (&_data23_->_ref_count_);
#line 46 "../src/Widgets/ColorPopover.vala"
	return _data23_;
#line 218 "ColorPopover.c"
}

static void
block23_data_unref (void * _userdata_)
{
	Block23Data* _data23_;
	_data23_ = (Block23Data*) _userdata_;
#line 46 "../src/Widgets/ColorPopover.vala"
	if (g_atomic_int_dec_and_test (&_data23_->_ref_count_)) {
#line 228 "ColorPopover.c"
		WidgetsColorPopover* self;
#line 46 "../src/Widgets/ColorPopover.vala"
		self = _data23_->self;
#line 46 "../src/Widgets/ColorPopover.vala"
		_g_object_unref0 (_data23_->entry);
#line 46 "../src/Widgets/ColorPopover.vala"
		_g_object_unref0 (self);
#line 46 "../src/Widgets/ColorPopover.vala"
		g_slice_free (Block23Data, _data23_);
#line 238 "ColorPopover.c"
	}
}

static void
_widgets_color_popover_____lambda324_ (Block23Data* _data23_)
{
	WidgetsColorPopover* self;
	GeeMapEntry* _tmp0_;
	gconstpointer _tmp1_;
	gconstpointer _tmp2_;
	const gchar* _tmp3_;
#line 56 "../src/Widgets/ColorPopover.vala"
	self = _data23_->self;
#line 57 "../src/Widgets/ColorPopover.vala"
	_tmp0_ = _data23_->entry;
#line 57 "../src/Widgets/ColorPopover.vala"
	_tmp1_ = gee_map_entry_get_key (_tmp0_);
#line 57 "../src/Widgets/ColorPopover.vala"
	_tmp2_ = _tmp1_;
#line 57 "../src/Widgets/ColorPopover.vala"
	widgets_color_popover_set_selected (self, (const gchar*) _tmp2_);
#line 58 "../src/Widgets/ColorPopover.vala"
	_tmp3_ = self->priv->_selected;
#line 58 "../src/Widgets/ColorPopover.vala"
	g_signal_emit (self, widgets_color_popover_signals[WIDGETS_COLOR_POPOVER_COLOR_CHANGED_SIGNAL], 0, _tmp3_);
#line 264 "ColorPopover.c"
}

static void
__widgets_color_popover_____lambda324__gtk_toggle_button_toggled (GtkToggleButton* _sender,
                                                                  gpointer self)
{
#line 56 "../src/Widgets/ColorPopover.vala"
	_widgets_color_popover_____lambda324_ (self);
#line 273 "ColorPopover.c"
}

static void
_widgets_color_popover___lambda325_ (WidgetsColorPopover* self)
{
	GeeHashMap* _tmp0_;
	const gchar* _tmp1_;
#line 69 "../src/Widgets/ColorPopover.vala"
	_tmp0_ = self->priv->colors_hashmap;
#line 69 "../src/Widgets/ColorPopover.vala"
	_tmp1_ = self->priv->_selected;
#line 69 "../src/Widgets/ColorPopover.vala"
	if (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp0_, _tmp1_)) {
#line 287 "ColorPopover.c"
		GeeHashMap* _tmp2_;
		const gchar* _tmp3_;
		gpointer _tmp4_;
		GtkRadioButton* _tmp5_;
#line 70 "../src/Widgets/ColorPopover.vala"
		_tmp2_ = self->priv->colors_hashmap;
#line 70 "../src/Widgets/ColorPopover.vala"
		_tmp3_ = self->priv->_selected;
#line 70 "../src/Widgets/ColorPopover.vala"
		_tmp4_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp2_, _tmp3_);
#line 70 "../src/Widgets/ColorPopover.vala"
		_tmp5_ = (GtkRadioButton*) _tmp4_;
#line 70 "../src/Widgets/ColorPopover.vala"
		gtk_toggle_button_set_active ((GtkToggleButton*) _tmp5_, TRUE);
#line 70 "../src/Widgets/ColorPopover.vala"
		_g_object_unref0 (_tmp5_);
#line 304 "ColorPopover.c"
	}
}

static void
__widgets_color_popover___lambda325__g_object_notify (GObject* _sender,
                                                      GParamSpec* pspec,
                                                      gpointer self)
{
#line 68 "../src/Widgets/ColorPopover.vala"
	_widgets_color_popover___lambda325_ ((WidgetsColorPopover*) self);
#line 315 "ColorPopover.c"
}

static GObject *
widgets_color_popover_constructor (GType type,
                                   guint n_construct_properties,
                                   GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsColorPopover * self;
	GtkRadioButton* radio = NULL;
	GtkRadioButton* _tmp0_;
	GeeHashMap* _tmp1_;
	GtkFlowBox* _tmp2_ = NULL;
	GtkStyleContext* flowbox_context = NULL;
	GtkFlowBox* _tmp3_;
	GtkStyleContext* _tmp4_;
	GtkStyleContext* _tmp5_;
	GtkGrid* popover_grid = NULL;
	GtkGrid* _tmp56_;
	GtkGrid* _tmp57_;
	GtkFlowBox* _tmp58_;
	GtkGrid* _tmp59_;
	GtkGrid* _tmp60_;
#line 30 "../src/Widgets/ColorPopover.vala"
	parent_class = G_OBJECT_CLASS (widgets_color_popover_parent_class);
#line 30 "../src/Widgets/ColorPopover.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 30 "../src/Widgets/ColorPopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopover);
#line 31 "../src/Widgets/ColorPopover.vala"
	_tmp0_ = (GtkRadioButton*) gtk_radio_button_new (NULL);
#line 31 "../src/Widgets/ColorPopover.vala"
	g_object_ref_sink (_tmp0_);
#line 31 "../src/Widgets/ColorPopover.vala"
	radio = _tmp0_;
#line 32 "../src/Widgets/ColorPopover.vala"
	_tmp1_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, gtk_radio_button_get_type (), (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 32 "../src/Widgets/ColorPopover.vala"
	_g_object_unref0 (self->priv->colors_hashmap);
#line 32 "../src/Widgets/ColorPopover.vala"
	self->priv->colors_hashmap = _tmp1_;
#line 34 "../src/Widgets/ColorPopover.vala"
	_tmp2_ = (GtkFlowBox*) gtk_flow_box_new ();
#line 34 "../src/Widgets/ColorPopover.vala"
	gtk_flow_box_set_column_spacing (_tmp2_, (guint) 9);
#line 34 "../src/Widgets/ColorPopover.vala"
	gtk_flow_box_set_row_spacing (_tmp2_, (guint) 9);
#line 34 "../src/Widgets/ColorPopover.vala"
	gtk_container_set_border_width ((GtkContainer*) _tmp2_, (guint) 9);
#line 34 "../src/Widgets/ColorPopover.vala"
	gtk_flow_box_set_max_children_per_line (_tmp2_, (guint) 7);
#line 34 "../src/Widgets/ColorPopover.vala"
	gtk_flow_box_set_min_children_per_line (_tmp2_, (guint) 7);
#line 34 "../src/Widgets/ColorPopover.vala"
	g_object_set ((GtkWidget*) _tmp2_, "expand", TRUE, NULL);
#line 34 "../src/Widgets/ColorPopover.vala"
	g_object_ref_sink (_tmp2_);
#line 34 "../src/Widgets/ColorPopover.vala"
	_g_object_unref0 (self->priv->flowbox);
#line 34 "../src/Widgets/ColorPopover.vala"
	self->priv->flowbox = _tmp2_;
#line 43 "../src/Widgets/ColorPopover.vala"
	_tmp3_ = self->priv->flowbox;
#line 43 "../src/Widgets/ColorPopover.vala"
	_tmp4_ = gtk_widget_get_style_context ((GtkWidget*) _tmp3_);
#line 43 "../src/Widgets/ColorPopover.vala"
	flowbox_context = _tmp4_;
#line 44 "../src/Widgets/ColorPopover.vala"
	_tmp5_ = flowbox_context;
#line 44 "../src/Widgets/ColorPopover.vala"
	gtk_style_context_add_class (_tmp5_, "flowbox-color");
#line 388 "ColorPopover.c"
	{
		GeeIterator* _entry_it = NULL;
		Util* _tmp6_;
		Util* _tmp7_;
		GeeHashMap* _tmp8_;
		GeeHashMap* _tmp9_;
		GeeSet* _tmp10_;
		GeeSet* _tmp11_;
		GeeSet* _tmp12_;
		GeeIterator* _tmp13_;
		GeeIterator* _tmp14_;
#line 46 "../src/Widgets/ColorPopover.vala"
		_tmp6_ = util_get_default ();
#line 46 "../src/Widgets/ColorPopover.vala"
		_tmp7_ = _tmp6_;
#line 46 "../src/Widgets/ColorPopover.vala"
		_tmp8_ = util_get_colors (_tmp7_);
#line 46 "../src/Widgets/ColorPopover.vala"
		_tmp9_ = _tmp8_;
#line 46 "../src/Widgets/ColorPopover.vala"
		_tmp10_ = gee_abstract_map_get_entries ((GeeAbstractMap*) _tmp9_);
#line 46 "../src/Widgets/ColorPopover.vala"
		_tmp11_ = _tmp10_;
#line 46 "../src/Widgets/ColorPopover.vala"
		_tmp12_ = _tmp11_;
#line 46 "../src/Widgets/ColorPopover.vala"
		_tmp13_ = gee_iterable_iterator ((GeeIterable*) _tmp12_);
#line 46 "../src/Widgets/ColorPopover.vala"
		_tmp14_ = _tmp13_;
#line 46 "../src/Widgets/ColorPopover.vala"
		_g_object_unref0 (_tmp12_);
#line 46 "../src/Widgets/ColorPopover.vala"
		_g_object_unref0 (_tmp9_);
#line 46 "../src/Widgets/ColorPopover.vala"
		_g_object_unref0 (_tmp7_);
#line 46 "../src/Widgets/ColorPopover.vala"
		_entry_it = _tmp14_;
#line 46 "../src/Widgets/ColorPopover.vala"
		while (TRUE) {
#line 428 "ColorPopover.c"
			Block23Data* _data23_;
			GeeIterator* _tmp15_;
			GeeIterator* _tmp16_;
			gpointer _tmp17_;
			GtkRadioButton* color_radio = NULL;
			GtkRadioButton* _tmp18_;
			GSList* _tmp19_;
			GtkRadioButton* _tmp20_;
			GtkRadioButton* _tmp21_;
			GtkRadioButton* _tmp22_;
			GtkRadioButton* _tmp23_;
			Util* _tmp24_;
			Util* _tmp25_;
			GeeMapEntry* _tmp26_;
			gconstpointer _tmp27_;
			gconstpointer _tmp28_;
			gchar* _tmp29_;
			gchar* _tmp30_;
			GtkRadioButton* _tmp31_;
			GtkStyleContext* _tmp32_;
			Util* _tmp33_;
			Util* _tmp34_;
			Util* _tmp35_;
			Util* _tmp36_;
			GeeMapEntry* _tmp37_;
			gconstpointer _tmp38_;
			gconstpointer _tmp39_;
			gchar* _tmp40_;
			gchar* _tmp41_;
			GtkRadioButton* _tmp42_;
			GeeHashMap* _tmp43_;
			GeeMapEntry* _tmp44_;
			gconstpointer _tmp45_;
			gconstpointer _tmp46_;
			GtkRadioButton* _tmp47_;
			GtkFlowBox* _tmp48_;
			GeeHashMap* _tmp49_;
			GeeMapEntry* _tmp50_;
			gconstpointer _tmp51_;
			gconstpointer _tmp52_;
			gpointer _tmp53_;
			GtkRadioButton* _tmp54_;
			GtkRadioButton* _tmp55_;
#line 46 "../src/Widgets/ColorPopover.vala"
			_data23_ = g_slice_new0 (Block23Data);
#line 46 "../src/Widgets/ColorPopover.vala"
			_data23_->_ref_count_ = 1;
#line 46 "../src/Widgets/ColorPopover.vala"
			_data23_->self = g_object_ref (self);
#line 46 "../src/Widgets/ColorPopover.vala"
			_tmp15_ = _entry_it;
#line 46 "../src/Widgets/ColorPopover.vala"
			if (!gee_iterator_next (_tmp15_)) {
#line 46 "../src/Widgets/ColorPopover.vala"
				block23_data_unref (_data23_);
#line 46 "../src/Widgets/ColorPopover.vala"
				_data23_ = NULL;
#line 46 "../src/Widgets/ColorPopover.vala"
				break;
#line 488 "ColorPopover.c"
			}
#line 46 "../src/Widgets/ColorPopover.vala"
			_tmp16_ = _entry_it;
#line 46 "../src/Widgets/ColorPopover.vala"
			_tmp17_ = gee_iterator_get (_tmp16_);
#line 46 "../src/Widgets/ColorPopover.vala"
			_data23_->entry = (GeeMapEntry*) _tmp17_;
#line 47 "../src/Widgets/ColorPopover.vala"
			_tmp18_ = radio;
#line 47 "../src/Widgets/ColorPopover.vala"
			_tmp19_ = gtk_radio_button_get_group (_tmp18_);
#line 47 "../src/Widgets/ColorPopover.vala"
			_tmp20_ = (GtkRadioButton*) gtk_radio_button_new (_tmp19_);
#line 47 "../src/Widgets/ColorPopover.vala"
			g_object_ref_sink (_tmp20_);
#line 47 "../src/Widgets/ColorPopover.vala"
			color_radio = _tmp20_;
#line 48 "../src/Widgets/ColorPopover.vala"
			_tmp21_ = color_radio;
#line 48 "../src/Widgets/ColorPopover.vala"
			gtk_widget_set_valign ((GtkWidget*) _tmp21_, GTK_ALIGN_START);
#line 49 "../src/Widgets/ColorPopover.vala"
			_tmp22_ = color_radio;
#line 49 "../src/Widgets/ColorPopover.vala"
			gtk_widget_set_halign ((GtkWidget*) _tmp22_, GTK_ALIGN_START);
#line 50 "../src/Widgets/ColorPopover.vala"
			_tmp23_ = color_radio;
#line 50 "../src/Widgets/ColorPopover.vala"
			_tmp24_ = util_get_default ();
#line 50 "../src/Widgets/ColorPopover.vala"
			_tmp25_ = _tmp24_;
#line 50 "../src/Widgets/ColorPopover.vala"
			_tmp26_ = _data23_->entry;
#line 50 "../src/Widgets/ColorPopover.vala"
			_tmp27_ = gee_map_entry_get_key (_tmp26_);
#line 50 "../src/Widgets/ColorPopover.vala"
			_tmp28_ = _tmp27_;
#line 50 "../src/Widgets/ColorPopover.vala"
			_tmp29_ = util_get_color_name (_tmp25_, (const gchar*) _tmp28_);
#line 50 "../src/Widgets/ColorPopover.vala"
			_tmp30_ = _tmp29_;
#line 50 "../src/Widgets/ColorPopover.vala"
			gtk_widget_set_tooltip_text ((GtkWidget*) _tmp23_, _tmp30_);
#line 50 "../src/Widgets/ColorPopover.vala"
			_g_free0 (_tmp30_);
#line 50 "../src/Widgets/ColorPopover.vala"
			_g_object_unref0 (_tmp25_);
#line 51 "../src/Widgets/ColorPopover.vala"
			_tmp31_ = color_radio;
#line 51 "../src/Widgets/ColorPopover.vala"
			_tmp32_ = gtk_widget_get_style_context ((GtkWidget*) _tmp31_);
#line 51 "../src/Widgets/ColorPopover.vala"
			gtk_style_context_add_class (_tmp32_, "color-radio");
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp33_ = util_get_default ();
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp34_ = _tmp33_;
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp35_ = util_get_default ();
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp36_ = _tmp35_;
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp37_ = _data23_->entry;
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp38_ = gee_map_entry_get_key (_tmp37_);
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp39_ = _tmp38_;
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp40_ = util_get_color (_tmp36_, (const gchar*) _tmp39_);
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp41_ = _tmp40_;
#line 52 "../src/Widgets/ColorPopover.vala"
			_tmp42_ = color_radio;
#line 52 "../src/Widgets/ColorPopover.vala"
			util_set_widget_color (_tmp34_, _tmp41_, (GtkWidget*) _tmp42_);
#line 52 "../src/Widgets/ColorPopover.vala"
			_g_free0 (_tmp41_);
#line 52 "../src/Widgets/ColorPopover.vala"
			_g_object_unref0 (_tmp36_);
#line 52 "../src/Widgets/ColorPopover.vala"
			_g_object_unref0 (_tmp34_);
#line 53 "../src/Widgets/ColorPopover.vala"
			_tmp43_ = self->priv->colors_hashmap;
#line 53 "../src/Widgets/ColorPopover.vala"
			_tmp44_ = _data23_->entry;
#line 53 "../src/Widgets/ColorPopover.vala"
			_tmp45_ = gee_map_entry_get_key (_tmp44_);
#line 53 "../src/Widgets/ColorPopover.vala"
			_tmp46_ = _tmp45_;
#line 53 "../src/Widgets/ColorPopover.vala"
			_tmp47_ = color_radio;
#line 53 "../src/Widgets/ColorPopover.vala"
			gee_abstract_map_set ((GeeAbstractMap*) _tmp43_, (const gchar*) _tmp46_, _tmp47_);
#line 54 "../src/Widgets/ColorPopover.vala"
			_tmp48_ = self->priv->flowbox;
#line 54 "../src/Widgets/ColorPopover.vala"
			_tmp49_ = self->priv->colors_hashmap;
#line 54 "../src/Widgets/ColorPopover.vala"
			_tmp50_ = _data23_->entry;
#line 54 "../src/Widgets/ColorPopover.vala"
			_tmp51_ = gee_map_entry_get_key (_tmp50_);
#line 54 "../src/Widgets/ColorPopover.vala"
			_tmp52_ = _tmp51_;
#line 54 "../src/Widgets/ColorPopover.vala"
			_tmp53_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp49_, (const gchar*) _tmp52_);
#line 54 "../src/Widgets/ColorPopover.vala"
			_tmp54_ = (GtkRadioButton*) _tmp53_;
#line 54 "../src/Widgets/ColorPopover.vala"
			gtk_container_add ((GtkContainer*) _tmp48_, (GtkWidget*) _tmp54_);
#line 54 "../src/Widgets/ColorPopover.vala"
			_g_object_unref0 (_tmp54_);
#line 56 "../src/Widgets/ColorPopover.vala"
			_tmp55_ = color_radio;
#line 56 "../src/Widgets/ColorPopover.vala"
			g_signal_connect_data ((GtkToggleButton*) _tmp55_, "toggled", (GCallback) __widgets_color_popover_____lambda324__gtk_toggle_button_toggled, block23_data_ref (_data23_), (GClosureNotify) block23_data_unref, 0);
#line 46 "../src/Widgets/ColorPopover.vala"
			_g_object_unref0 (color_radio);
#line 46 "../src/Widgets/ColorPopover.vala"
			block23_data_unref (_data23_);
#line 46 "../src/Widgets/ColorPopover.vala"
			_data23_ = NULL;
#line 610 "ColorPopover.c"
		}
#line 46 "../src/Widgets/ColorPopover.vala"
		_g_object_unref0 (_entry_it);
#line 614 "ColorPopover.c"
	}
#line 62 "../src/Widgets/ColorPopover.vala"
	_tmp56_ = (GtkGrid*) gtk_grid_new ();
#line 62 "../src/Widgets/ColorPopover.vala"
	g_object_ref_sink (_tmp56_);
#line 62 "../src/Widgets/ColorPopover.vala"
	popover_grid = _tmp56_;
#line 63 "../src/Widgets/ColorPopover.vala"
	_tmp57_ = popover_grid;
#line 63 "../src/Widgets/ColorPopover.vala"
	_tmp58_ = self->priv->flowbox;
#line 63 "../src/Widgets/ColorPopover.vala"
	gtk_container_add ((GtkContainer*) _tmp57_, (GtkWidget*) _tmp58_);
#line 64 "../src/Widgets/ColorPopover.vala"
	_tmp59_ = popover_grid;
#line 64 "../src/Widgets/ColorPopover.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp59_);
#line 66 "../src/Widgets/ColorPopover.vala"
	_tmp60_ = popover_grid;
#line 66 "../src/Widgets/ColorPopover.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp60_);
#line 68 "../src/Widgets/ColorPopover.vala"
	g_signal_connect_object ((GObject*) self, "notify::selected", (GCallback) __widgets_color_popover___lambda325__g_object_notify, self, 0);
#line 30 "../src/Widgets/ColorPopover.vala"
	_g_object_unref0 (popover_grid);
#line 30 "../src/Widgets/ColorPopover.vala"
	_g_object_unref0 (radio);
#line 30 "../src/Widgets/ColorPopover.vala"
	return obj;
#line 644 "ColorPopover.c"
}

static void
widgets_color_popover_class_init (WidgetsColorPopoverClass * klass,
                                  gpointer klass_data)
{
#line 22 "../src/Widgets/ColorPopover.vala"
	widgets_color_popover_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Widgets/ColorPopover.vala"
	g_type_class_adjust_private_offset (klass, &WidgetsColorPopover_private_offset);
#line 22 "../src/Widgets/ColorPopover.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_widgets_color_popover_get_property;
#line 22 "../src/Widgets/ColorPopover.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_widgets_color_popover_set_property;
#line 22 "../src/Widgets/ColorPopover.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_color_popover_constructor;
#line 22 "../src/Widgets/ColorPopover.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_color_popover_finalize;
#line 22 "../src/Widgets/ColorPopover.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_COLOR_POPOVER_SELECTED_PROPERTY, widgets_color_popover_properties[WIDGETS_COLOR_POPOVER_SELECTED_PROPERTY] = g_param_spec_string ("selected", "selected", "selected", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Widgets/ColorPopover.vala"
	widgets_color_popover_signals[WIDGETS_COLOR_POPOVER_COLOR_CHANGED_SIGNAL] = g_signal_new ("color-changed", WIDGETS_TYPE_COLOR_POPOVER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__STRING, G_TYPE_NONE, 1, G_TYPE_STRING);
#line 667 "ColorPopover.c"
}

static void
widgets_color_popover_instance_init (WidgetsColorPopover * self,
                                     gpointer klass)
{
#line 22 "../src/Widgets/ColorPopover.vala"
	self->priv = widgets_color_popover_get_instance_private (self);
#line 676 "ColorPopover.c"
}

static void
widgets_color_popover_finalize (GObject * obj)
{
	WidgetsColorPopover * self;
#line 22 "../src/Widgets/ColorPopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopover);
#line 23 "../src/Widgets/ColorPopover.vala"
	_g_free0 (self->priv->_selected);
#line 27 "../src/Widgets/ColorPopover.vala"
	_g_object_unref0 (self->priv->colors_hashmap);
#line 28 "../src/Widgets/ColorPopover.vala"
	_g_object_unref0 (self->priv->flowbox);
#line 22 "../src/Widgets/ColorPopover.vala"
	G_OBJECT_CLASS (widgets_color_popover_parent_class)->finalize (obj);
#line 693 "ColorPopover.c"
}

static GType
widgets_color_popover_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (WidgetsColorPopoverClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_color_popover_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsColorPopover), 0, (GInstanceInitFunc) widgets_color_popover_instance_init, NULL };
	GType widgets_color_popover_type_id;
	widgets_color_popover_type_id = g_type_register_static (gtk_popover_get_type (), "WidgetsColorPopover", &g_define_type_info, 0);
	WidgetsColorPopover_private_offset = g_type_add_instance_private (widgets_color_popover_type_id, sizeof (WidgetsColorPopoverPrivate));
	return widgets_color_popover_type_id;
}

GType
widgets_color_popover_get_type (void)
{
	static volatile gsize widgets_color_popover_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_color_popover_type_id__volatile)) {
		GType widgets_color_popover_type_id;
		widgets_color_popover_type_id = widgets_color_popover_get_type_once ();
		g_once_init_leave (&widgets_color_popover_type_id__volatile, widgets_color_popover_type_id);
	}
	return widgets_color_popover_type_id__volatile;
}

static void
_vala_widgets_color_popover_get_property (GObject * object,
                                          guint property_id,
                                          GValue * value,
                                          GParamSpec * pspec)
{
	WidgetsColorPopover * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopover);
#line 22 "../src/Widgets/ColorPopover.vala"
	switch (property_id) {
#line 22 "../src/Widgets/ColorPopover.vala"
		case WIDGETS_COLOR_POPOVER_SELECTED_PROPERTY:
#line 22 "../src/Widgets/ColorPopover.vala"
		g_value_set_string (value, widgets_color_popover_get_selected (self));
#line 22 "../src/Widgets/ColorPopover.vala"
		break;
#line 734 "ColorPopover.c"
		default:
#line 22 "../src/Widgets/ColorPopover.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Widgets/ColorPopover.vala"
		break;
#line 740 "ColorPopover.c"
	}
}

static void
_vala_widgets_color_popover_set_property (GObject * object,
                                          guint property_id,
                                          const GValue * value,
                                          GParamSpec * pspec)
{
	WidgetsColorPopover * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_COLOR_POPOVER, WidgetsColorPopover);
#line 22 "../src/Widgets/ColorPopover.vala"
	switch (property_id) {
#line 22 "../src/Widgets/ColorPopover.vala"
		case WIDGETS_COLOR_POPOVER_SELECTED_PROPERTY:
#line 22 "../src/Widgets/ColorPopover.vala"
		widgets_color_popover_set_selected (self, g_value_get_string (value));
#line 22 "../src/Widgets/ColorPopover.vala"
		break;
#line 760 "ColorPopover.c"
		default:
#line 22 "../src/Widgets/ColorPopover.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Widgets/ColorPopover.vala"
		break;
#line 766 "ColorPopover.c"
	}
}


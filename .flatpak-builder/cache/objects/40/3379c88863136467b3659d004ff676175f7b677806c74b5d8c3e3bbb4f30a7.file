/* EditableLabel.c generated by valac 0.50.10, the Vala compiler
 * generated from EditableLabel.vala, do not modify */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gdk/gdk.h>
#include <pango/pango.h>
#include <float.h>
#include <math.h>
#include <glib/gi18n-lib.h>
#include <granite.h>

#define WIDGETS_TYPE_EDITABLE_LABEL (widgets_editable_label_get_type ())
#define WIDGETS_EDITABLE_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabel))
#define WIDGETS_EDITABLE_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabelClass))
#define WIDGETS_IS_EDITABLE_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_EDITABLE_LABEL))
#define WIDGETS_IS_EDITABLE_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_EDITABLE_LABEL))
#define WIDGETS_EDITABLE_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabelClass))

typedef struct _WidgetsEditableLabel WidgetsEditableLabel;
typedef struct _WidgetsEditableLabelClass WidgetsEditableLabelClass;
typedef struct _WidgetsEditableLabelPrivate WidgetsEditableLabelPrivate;
enum  {
	WIDGETS_EDITABLE_LABEL_0_PROPERTY,
	WIDGETS_EDITABLE_LABEL_TITLE_STYLE_PROPERTY,
	WIDGETS_EDITABLE_LABEL_PLACEHOLDER_TEXT_PROPERTY,
	WIDGETS_EDITABLE_LABEL_TEXT_PROPERTY,
	WIDGETS_EDITABLE_LABEL_ENTRY_MENU_OPENED_PROPERTY,
	WIDGETS_EDITABLE_LABEL_EDITING_PROPERTY,
	WIDGETS_EDITABLE_LABEL_EDITABLE_PROPERTY,
	WIDGETS_EDITABLE_LABEL_NUM_PROPERTIES
};
static GParamSpec* widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
enum  {
	WIDGETS_EDITABLE_LABEL_FOCUS_CHANGED_SIGNAL,
	WIDGETS_EDITABLE_LABEL_CHANGED_SIGNAL,
	WIDGETS_EDITABLE_LABEL_NUM_SIGNALS
};
static guint widgets_editable_label_signals[WIDGETS_EDITABLE_LABEL_NUM_SIGNALS] = {0};

struct _WidgetsEditableLabel {
	GtkEventBox parent_instance;
	WidgetsEditableLabelPrivate * priv;
};

struct _WidgetsEditableLabelClass {
	GtkEventBoxClass parent_class;
};

struct _WidgetsEditableLabelPrivate {
	gchar* _title_style;
	gchar* _placeholder_text;
	GtkLabel* title;
	GtkEntry* entry;
	GtkStack* stack;
	GtkGrid* grid;
	gchar* _text;
	gboolean _entry_menu_opened;
};

static gint WidgetsEditableLabel_private_offset;
static gpointer widgets_editable_label_parent_class = NULL;

GType widgets_editable_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsEditableLabel, g_object_unref)
WidgetsEditableLabel* widgets_editable_label_new (const gchar* title_style,
                                                  const gchar* placeholder_text);
WidgetsEditableLabel* widgets_editable_label_construct (GType object_type,
                                                        const gchar* title_style,
                                                        const gchar* placeholder_text);
const gchar* widgets_editable_label_get_title_style (WidgetsEditableLabel* self);
static void widgets_editable_label_set_title_style (WidgetsEditableLabel* self,
                                             const gchar* value);
const gchar* widgets_editable_label_get_placeholder_text (WidgetsEditableLabel* self);
static void widgets_editable_label_set_placeholder_text (WidgetsEditableLabel* self,
                                                  const gchar* value);
const gchar* widgets_editable_label_get_text (WidgetsEditableLabel* self);
void widgets_editable_label_set_text (WidgetsEditableLabel* self,
                                      const gchar* value);
gboolean widgets_editable_label_get_entry_menu_opened (WidgetsEditableLabel* self);
void widgets_editable_label_set_entry_menu_opened (WidgetsEditableLabel* self,
                                                   gboolean value);
gboolean widgets_editable_label_get_editing (WidgetsEditableLabel* self);
void widgets_editable_label_set_editing (WidgetsEditableLabel* self,
                                         gboolean value);
void widgets_editable_label_set_editable (WidgetsEditableLabel* self,
                                          gboolean value);
static GObject * widgets_editable_label_constructor (GType type,
                                              guint n_construct_properties,
                                              GObjectConstructParam * construct_properties);
static gboolean _widgets_editable_label___lambda283_ (WidgetsEditableLabel* self,
                                               GdkEventButton* event);
static gboolean __widgets_editable_label___lambda283__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                              GdkEventButton* event,
                                                                              gpointer self);
static void _widgets_editable_label___lambda284_ (WidgetsEditableLabel* self);
static void __widgets_editable_label___lambda284__gtk_entry_activate (GtkEntry* _sender,
                                                               gpointer self);
static void _widgets_editable_label___lambda285_ (WidgetsEditableLabel* self);
static void __widgets_editable_label___lambda285__gtk_widget_grab_focus (GtkWidget* _sender,
                                                                  gpointer self);
static gboolean _widgets_editable_label___lambda286_ (WidgetsEditableLabel* self,
                                               GdkEventFocus* event);
static gboolean __widgets_editable_label___lambda286__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                                           GdkEventFocus* event,
                                                                           gpointer self);
static void _widgets_editable_label___lambda287_ (WidgetsEditableLabel* self,
                                           GtkMenu* menu);
static void __lambda288_ (WidgetsEditableLabel* self);
static void ___lambda288__gtk_widget_hide (GtkWidget* _sender,
                                    gpointer self);
static void __widgets_editable_label___lambda287__gtk_entry_populate_popup (GtkEntry* _sender,
                                                                     GtkMenu* popup,
                                                                     gpointer self);
static void _widgets_editable_label___lambda289_ (WidgetsEditableLabel* self);
static void __widgets_editable_label___lambda289__gtk_button_clicked (GtkButton* _sender,
                                                               gpointer self);
static void _widgets_editable_label___lambda290_ (WidgetsEditableLabel* self);
static void __widgets_editable_label___lambda290__gtk_button_clicked (GtkButton* _sender,
                                                               gpointer self);
static void widgets_editable_label_finalize (GObject * obj);
static GType widgets_editable_label_get_type_once (void);
static void _vala_widgets_editable_label_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec);
static void _vala_widgets_editable_label_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec);

static inline gpointer
widgets_editable_label_get_instance_private (WidgetsEditableLabel* self)
{
	return G_STRUCT_MEMBER_P (self, WidgetsEditableLabel_private_offset);
}

WidgetsEditableLabel*
widgets_editable_label_construct (GType object_type,
                                  const gchar* title_style,
                                  const gchar* placeholder_text)
{
	WidgetsEditableLabel * self = NULL;
#line 48 "../src/Widgets/EditableLabel.vala"
	g_return_val_if_fail (title_style != NULL, NULL);
#line 48 "../src/Widgets/EditableLabel.vala"
	g_return_val_if_fail (placeholder_text != NULL, NULL);
#line 49 "../src/Widgets/EditableLabel.vala"
	self = (WidgetsEditableLabel*) g_object_new (object_type, "title-style", title_style, "placeholder-text", placeholder_text, NULL);
#line 48 "../src/Widgets/EditableLabel.vala"
	return self;
#line 158 "EditableLabel.c"
}

WidgetsEditableLabel*
widgets_editable_label_new (const gchar* title_style,
                            const gchar* placeholder_text)
{
#line 48 "../src/Widgets/EditableLabel.vala"
	return widgets_editable_label_construct (WIDGETS_TYPE_EDITABLE_LABEL, title_style, placeholder_text);
#line 167 "EditableLabel.c"
}

const gchar*
widgets_editable_label_get_title_style (WidgetsEditableLabel* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 2 "../src/Widgets/EditableLabel.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2 "../src/Widgets/EditableLabel.vala"
	_tmp0_ = self->priv->_title_style;
#line 2 "../src/Widgets/EditableLabel.vala"
	result = _tmp0_;
#line 2 "../src/Widgets/EditableLabel.vala"
	return result;
#line 183 "EditableLabel.c"
}

static void
widgets_editable_label_set_title_style (WidgetsEditableLabel* self,
                                        const gchar* value)
{
	gchar* old_value;
#line 2 "../src/Widgets/EditableLabel.vala"
	g_return_if_fail (self != NULL);
#line 2 "../src/Widgets/EditableLabel.vala"
	old_value = widgets_editable_label_get_title_style (self);
#line 2 "../src/Widgets/EditableLabel.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 197 "EditableLabel.c"
		gchar* _tmp0_;
#line 2 "../src/Widgets/EditableLabel.vala"
		_tmp0_ = g_strdup (value);
#line 2 "../src/Widgets/EditableLabel.vala"
		_g_free0 (self->priv->_title_style);
#line 2 "../src/Widgets/EditableLabel.vala"
		self->priv->_title_style = _tmp0_;
#line 2 "../src/Widgets/EditableLabel.vala"
		g_object_notify_by_pspec ((GObject *) self, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_TITLE_STYLE_PROPERTY]);
#line 207 "EditableLabel.c"
	}
}

const gchar*
widgets_editable_label_get_placeholder_text (WidgetsEditableLabel* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 3 "../src/Widgets/EditableLabel.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 3 "../src/Widgets/EditableLabel.vala"
	_tmp0_ = self->priv->_placeholder_text;
#line 3 "../src/Widgets/EditableLabel.vala"
	result = _tmp0_;
#line 3 "../src/Widgets/EditableLabel.vala"
	return result;
#line 224 "EditableLabel.c"
}

static void
widgets_editable_label_set_placeholder_text (WidgetsEditableLabel* self,
                                             const gchar* value)
{
	gchar* old_value;
#line 3 "../src/Widgets/EditableLabel.vala"
	g_return_if_fail (self != NULL);
#line 3 "../src/Widgets/EditableLabel.vala"
	old_value = widgets_editable_label_get_placeholder_text (self);
#line 3 "../src/Widgets/EditableLabel.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 238 "EditableLabel.c"
		gchar* _tmp0_;
#line 3 "../src/Widgets/EditableLabel.vala"
		_tmp0_ = g_strdup (value);
#line 3 "../src/Widgets/EditableLabel.vala"
		_g_free0 (self->priv->_placeholder_text);
#line 3 "../src/Widgets/EditableLabel.vala"
		self->priv->_placeholder_text = _tmp0_;
#line 3 "../src/Widgets/EditableLabel.vala"
		g_object_notify_by_pspec ((GObject *) self, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_PLACEHOLDER_TEXT_PROPERTY]);
#line 248 "EditableLabel.c"
	}
}

const gchar*
widgets_editable_label_get_text (WidgetsEditableLabel* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 13 "../src/Widgets/EditableLabel.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 13 "../src/Widgets/EditableLabel.vala"
	_tmp0_ = self->priv->_text;
#line 13 "../src/Widgets/EditableLabel.vala"
	result = _tmp0_;
#line 13 "../src/Widgets/EditableLabel.vala"
	return result;
#line 265 "EditableLabel.c"
}

void
widgets_editable_label_set_text (WidgetsEditableLabel* self,
                                 const gchar* value)
{
	gchar* old_value;
#line 13 "../src/Widgets/EditableLabel.vala"
	g_return_if_fail (self != NULL);
#line 13 "../src/Widgets/EditableLabel.vala"
	old_value = widgets_editable_label_get_text (self);
#line 13 "../src/Widgets/EditableLabel.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 279 "EditableLabel.c"
		gchar* _tmp0_;
#line 13 "../src/Widgets/EditableLabel.vala"
		_tmp0_ = g_strdup (value);
#line 13 "../src/Widgets/EditableLabel.vala"
		_g_free0 (self->priv->_text);
#line 13 "../src/Widgets/EditableLabel.vala"
		self->priv->_text = _tmp0_;
#line 13 "../src/Widgets/EditableLabel.vala"
		g_object_notify_by_pspec ((GObject *) self, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_TEXT_PROPERTY]);
#line 289 "EditableLabel.c"
	}
}

gboolean
widgets_editable_label_get_entry_menu_opened (WidgetsEditableLabel* self)
{
	gboolean result;
#line 14 "../src/Widgets/EditableLabel.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 14 "../src/Widgets/EditableLabel.vala"
	result = self->priv->_entry_menu_opened;
#line 14 "../src/Widgets/EditableLabel.vala"
	return result;
#line 303 "EditableLabel.c"
}

void
widgets_editable_label_set_entry_menu_opened (WidgetsEditableLabel* self,
                                              gboolean value)
{
	gboolean old_value;
#line 14 "../src/Widgets/EditableLabel.vala"
	g_return_if_fail (self != NULL);
#line 14 "../src/Widgets/EditableLabel.vala"
	old_value = widgets_editable_label_get_entry_menu_opened (self);
#line 14 "../src/Widgets/EditableLabel.vala"
	if (old_value != value) {
#line 14 "../src/Widgets/EditableLabel.vala"
		self->priv->_entry_menu_opened = value;
#line 14 "../src/Widgets/EditableLabel.vala"
		g_object_notify_by_pspec ((GObject *) self, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_ENTRY_MENU_OPENED_PROPERTY]);
#line 321 "EditableLabel.c"
	}
}

gboolean
widgets_editable_label_get_editing (WidgetsEditableLabel* self)
{
	gboolean result;
	GtkStack* _tmp0_;
	GtkWidget* _tmp1_;
	GtkWidget* _tmp2_;
	GtkEntry* _tmp3_;
#line 17 "../src/Widgets/EditableLabel.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 18 "../src/Widgets/EditableLabel.vala"
	_tmp0_ = self->priv->stack;
#line 18 "../src/Widgets/EditableLabel.vala"
	_tmp1_ = gtk_stack_get_visible_child (_tmp0_);
#line 18 "../src/Widgets/EditableLabel.vala"
	_tmp2_ = _tmp1_;
#line 18 "../src/Widgets/EditableLabel.vala"
	_tmp3_ = self->priv->entry;
#line 18 "../src/Widgets/EditableLabel.vala"
	result = _tmp2_ == G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, gtk_widget_get_type (), GtkWidget);
#line 18 "../src/Widgets/EditableLabel.vala"
	return result;
#line 347 "EditableLabel.c"
}

static gchar*
string_strip (const gchar* self)
{
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	gchar* result = NULL;
#line 1359 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1360 "glib-2.0.vapi"
	_tmp0_ = g_strdup (self);
#line 1360 "glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1361 "glib-2.0.vapi"
	g_strstrip (_result_);
#line 1362 "glib-2.0.vapi"
	result = _result_;
#line 1362 "glib-2.0.vapi"
	return result;
#line 368 "EditableLabel.c"
}

void
widgets_editable_label_set_editing (WidgetsEditableLabel* self,
                                    gboolean value)
{
#line 20 "../src/Widgets/EditableLabel.vala"
	g_return_if_fail (self != NULL);
#line 21 "../src/Widgets/EditableLabel.vala"
	g_signal_emit (self, widgets_editable_label_signals[WIDGETS_EDITABLE_LABEL_FOCUS_CHANGED_SIGNAL], 0, value);
#line 23 "../src/Widgets/EditableLabel.vala"
	if (value) {
#line 381 "EditableLabel.c"
		GtkEntry* _tmp0_;
		const gchar* _tmp1_;
		GtkStack* _tmp2_;
		GtkEntry* _tmp3_;
		GtkEntry* _tmp4_;
		GtkEntry* _tmp5_;
		gint _tmp6_;
		gint _tmp7_;
		GtkEntry* _tmp8_;
		guint _tmp9_;
		guint _tmp10_;
#line 24 "../src/Widgets/EditableLabel.vala"
		_tmp0_ = self->priv->entry;
#line 24 "../src/Widgets/EditableLabel.vala"
		_tmp1_ = self->priv->_text;
#line 24 "../src/Widgets/EditableLabel.vala"
		gtk_entry_set_text (_tmp0_, _tmp1_);
#line 25 "../src/Widgets/EditableLabel.vala"
		_tmp2_ = self->priv->stack;
#line 25 "../src/Widgets/EditableLabel.vala"
		_tmp3_ = self->priv->entry;
#line 25 "../src/Widgets/EditableLabel.vala"
		gtk_stack_set_visible_child (_tmp2_, (GtkWidget*) _tmp3_);
#line 27 "../src/Widgets/EditableLabel.vala"
		_tmp4_ = self->priv->entry;
#line 27 "../src/Widgets/EditableLabel.vala"
		gtk_entry_grab_focus_without_selecting (_tmp4_);
#line 28 "../src/Widgets/EditableLabel.vala"
		_tmp5_ = self->priv->entry;
#line 28 "../src/Widgets/EditableLabel.vala"
		g_object_get (_tmp5_, "cursor-position", &_tmp6_, NULL);
#line 28 "../src/Widgets/EditableLabel.vala"
		_tmp7_ = _tmp6_;
#line 28 "../src/Widgets/EditableLabel.vala"
		_tmp8_ = self->priv->entry;
#line 28 "../src/Widgets/EditableLabel.vala"
		_tmp9_ = gtk_entry_get_text_length (_tmp8_);
#line 28 "../src/Widgets/EditableLabel.vala"
		_tmp10_ = _tmp9_;
#line 28 "../src/Widgets/EditableLabel.vala"
		if (((guint) _tmp7_) < _tmp10_) {
#line 423 "EditableLabel.c"
			GtkEntry* _tmp11_;
			GtkEntry* _tmp12_;
			guint _tmp13_;
			guint _tmp14_;
#line 29 "../src/Widgets/EditableLabel.vala"
			_tmp11_ = self->priv->entry;
#line 29 "../src/Widgets/EditableLabel.vala"
			_tmp12_ = self->priv->entry;
#line 29 "../src/Widgets/EditableLabel.vala"
			_tmp13_ = gtk_entry_get_text_length (_tmp12_);
#line 29 "../src/Widgets/EditableLabel.vala"
			_tmp14_ = _tmp13_;
#line 29 "../src/Widgets/EditableLabel.vala"
			g_signal_emit_by_name (_tmp11_, "move-cursor", GTK_MOVEMENT_BUFFER_ENDS, (gint) ((gint32) _tmp14_), FALSE);
#line 438 "EditableLabel.c"
		}
	} else {
		gboolean _tmp15_ = FALSE;
		GtkEntry* _tmp16_;
		const gchar* _tmp17_;
		const gchar* _tmp18_;
		gchar* _tmp19_;
		gchar* _tmp20_;
		gboolean _tmp21_;
		GtkStack* _tmp29_;
		GtkGrid* _tmp30_;
#line 32 "../src/Widgets/EditableLabel.vala"
		_tmp16_ = self->priv->entry;
#line 32 "../src/Widgets/EditableLabel.vala"
		_tmp17_ = gtk_entry_get_text (_tmp16_);
#line 32 "../src/Widgets/EditableLabel.vala"
		_tmp18_ = _tmp17_;
#line 32 "../src/Widgets/EditableLabel.vala"
		_tmp19_ = string_strip (_tmp18_);
#line 32 "../src/Widgets/EditableLabel.vala"
		_tmp20_ = _tmp19_;
#line 32 "../src/Widgets/EditableLabel.vala"
		_tmp21_ = g_strcmp0 (_tmp20_, "") != 0;
#line 32 "../src/Widgets/EditableLabel.vala"
		_g_free0 (_tmp20_);
#line 32 "../src/Widgets/EditableLabel.vala"
		if (_tmp21_) {
#line 466 "EditableLabel.c"
			const gchar* _tmp22_;
			GtkEntry* _tmp23_;
			const gchar* _tmp24_;
			const gchar* _tmp25_;
#line 32 "../src/Widgets/EditableLabel.vala"
			_tmp22_ = self->priv->_text;
#line 32 "../src/Widgets/EditableLabel.vala"
			_tmp23_ = self->priv->entry;
#line 32 "../src/Widgets/EditableLabel.vala"
			_tmp24_ = gtk_entry_get_text (_tmp23_);
#line 32 "../src/Widgets/EditableLabel.vala"
			_tmp25_ = _tmp24_;
#line 32 "../src/Widgets/EditableLabel.vala"
			_tmp15_ = g_strcmp0 (_tmp22_, _tmp25_) != 0;
#line 481 "EditableLabel.c"
		} else {
#line 32 "../src/Widgets/EditableLabel.vala"
			_tmp15_ = FALSE;
#line 485 "EditableLabel.c"
		}
#line 32 "../src/Widgets/EditableLabel.vala"
		if (_tmp15_) {
#line 489 "EditableLabel.c"
			GtkEntry* _tmp26_;
			const gchar* _tmp27_;
			const gchar* _tmp28_;
#line 33 "../src/Widgets/EditableLabel.vala"
			_tmp26_ = self->priv->entry;
#line 33 "../src/Widgets/EditableLabel.vala"
			_tmp27_ = gtk_entry_get_text (_tmp26_);
#line 33 "../src/Widgets/EditableLabel.vala"
			_tmp28_ = _tmp27_;
#line 33 "../src/Widgets/EditableLabel.vala"
			widgets_editable_label_set_text (self, _tmp28_);
#line 34 "../src/Widgets/EditableLabel.vala"
			g_signal_emit (self, widgets_editable_label_signals[WIDGETS_EDITABLE_LABEL_CHANGED_SIGNAL], 0);
#line 503 "EditableLabel.c"
		}
#line 37 "../src/Widgets/EditableLabel.vala"
		_tmp29_ = self->priv->stack;
#line 37 "../src/Widgets/EditableLabel.vala"
		_tmp30_ = self->priv->grid;
#line 37 "../src/Widgets/EditableLabel.vala"
		gtk_stack_set_visible_child (_tmp29_, (GtkWidget*) _tmp30_);
#line 511 "EditableLabel.c"
	}
#line 20 "../src/Widgets/EditableLabel.vala"
	g_object_notify_by_pspec ((GObject *) self, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_EDITING_PROPERTY]);
#line 515 "EditableLabel.c"
}

void
widgets_editable_label_set_editable (WidgetsEditableLabel* self,
                                     gboolean value)
{
	GtkEntry* _tmp0_;
#line 43 "../src/Widgets/EditableLabel.vala"
	g_return_if_fail (self != NULL);
#line 44 "../src/Widgets/EditableLabel.vala"
	_tmp0_ = self->priv->entry;
#line 44 "../src/Widgets/EditableLabel.vala"
	g_object_set (_tmp0_, "editable", value, NULL);
#line 43 "../src/Widgets/EditableLabel.vala"
	g_object_notify_by_pspec ((GObject *) self, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_EDITABLE_PROPERTY]);
#line 531 "EditableLabel.c"
}

static gboolean
_widgets_editable_label___lambda283_ (WidgetsEditableLabel* self,
                                      GdkEventButton* event)
{
	gboolean result = FALSE;
#line 134 "../src/Widgets/EditableLabel.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 135 "../src/Widgets/EditableLabel.vala"
	widgets_editable_label_set_editing (self, TRUE);
#line 136 "../src/Widgets/EditableLabel.vala"
	result = GDK_EVENT_PROPAGATE;
#line 136 "../src/Widgets/EditableLabel.vala"
	return result;
#line 547 "EditableLabel.c"
}

static gboolean
__widgets_editable_label___lambda283__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                     GdkEventButton* event,
                                                                     gpointer self)
{
	gboolean result;
	result = _widgets_editable_label___lambda283_ ((WidgetsEditableLabel*) self, event);
#line 134 "../src/Widgets/EditableLabel.vala"
	return result;
#line 559 "EditableLabel.c"
}

static void
_widgets_editable_label___lambda284_ (WidgetsEditableLabel* self)
{
	GtkStack* _tmp0_;
	GtkWidget* _tmp1_;
	GtkWidget* _tmp2_;
	GtkEntry* _tmp3_;
#line 140 "../src/Widgets/EditableLabel.vala"
	_tmp0_ = self->priv->stack;
#line 140 "../src/Widgets/EditableLabel.vala"
	_tmp1_ = gtk_stack_get_visible_child (_tmp0_);
#line 140 "../src/Widgets/EditableLabel.vala"
	_tmp2_ = _tmp1_;
#line 140 "../src/Widgets/EditableLabel.vala"
	_tmp3_ = self->priv->entry;
#line 140 "../src/Widgets/EditableLabel.vala"
	if (_tmp2_ == G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, gtk_widget_get_type (), GtkWidget)) {
#line 141 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_editing (self, FALSE);
#line 581 "EditableLabel.c"
	}
}

static void
__widgets_editable_label___lambda284__gtk_entry_activate (GtkEntry* _sender,
                                                          gpointer self)
{
#line 139 "../src/Widgets/EditableLabel.vala"
	_widgets_editable_label___lambda284_ ((WidgetsEditableLabel*) self);
#line 591 "EditableLabel.c"
}

static void
_widgets_editable_label___lambda285_ (WidgetsEditableLabel* self)
{
#line 146 "../src/Widgets/EditableLabel.vala"
	widgets_editable_label_set_editing (self, TRUE);
#line 599 "EditableLabel.c"
}

static void
__widgets_editable_label___lambda285__gtk_widget_grab_focus (GtkWidget* _sender,
                                                             gpointer self)
{
#line 145 "../src/Widgets/EditableLabel.vala"
	_widgets_editable_label___lambda285_ ((WidgetsEditableLabel*) self);
#line 608 "EditableLabel.c"
}

static gboolean
_widgets_editable_label___lambda286_ (WidgetsEditableLabel* self,
                                      GdkEventFocus* event)
{
	gboolean _tmp0_ = FALSE;
	GtkStack* _tmp1_;
	GtkWidget* _tmp2_;
	GtkWidget* _tmp3_;
	GtkEntry* _tmp4_;
	gboolean result = FALSE;
#line 149 "../src/Widgets/EditableLabel.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 150 "../src/Widgets/EditableLabel.vala"
	_tmp1_ = self->priv->stack;
#line 150 "../src/Widgets/EditableLabel.vala"
	_tmp2_ = gtk_stack_get_visible_child (_tmp1_);
#line 150 "../src/Widgets/EditableLabel.vala"
	_tmp3_ = _tmp2_;
#line 150 "../src/Widgets/EditableLabel.vala"
	_tmp4_ = self->priv->entry;
#line 150 "../src/Widgets/EditableLabel.vala"
	if (_tmp3_ == G_TYPE_CHECK_INSTANCE_CAST (_tmp4_, gtk_widget_get_type (), GtkWidget)) {
#line 633 "EditableLabel.c"
		gboolean _tmp5_;
#line 150 "../src/Widgets/EditableLabel.vala"
		_tmp5_ = self->priv->_entry_menu_opened;
#line 150 "../src/Widgets/EditableLabel.vala"
		_tmp0_ = !_tmp5_;
#line 639 "EditableLabel.c"
	} else {
#line 150 "../src/Widgets/EditableLabel.vala"
		_tmp0_ = FALSE;
#line 643 "EditableLabel.c"
	}
#line 150 "../src/Widgets/EditableLabel.vala"
	if (_tmp0_) {
#line 151 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_editing (self, FALSE);
#line 649 "EditableLabel.c"
	}
#line 153 "../src/Widgets/EditableLabel.vala"
	result = GDK_EVENT_PROPAGATE;
#line 153 "../src/Widgets/EditableLabel.vala"
	return result;
#line 655 "EditableLabel.c"
}

static gboolean
__widgets_editable_label___lambda286__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                                  GdkEventFocus* event,
                                                                  gpointer self)
{
	gboolean result;
	result = _widgets_editable_label___lambda286_ ((WidgetsEditableLabel*) self, event);
#line 149 "../src/Widgets/EditableLabel.vala"
	return result;
#line 667 "EditableLabel.c"
}

static void
__lambda288_ (WidgetsEditableLabel* self)
{
#line 159 "../src/Widgets/EditableLabel.vala"
	widgets_editable_label_set_entry_menu_opened (self, FALSE);
#line 675 "EditableLabel.c"
}

static void
___lambda288__gtk_widget_hide (GtkWidget* _sender,
                               gpointer self)
{
#line 158 "../src/Widgets/EditableLabel.vala"
	__lambda288_ ((WidgetsEditableLabel*) self);
#line 684 "EditableLabel.c"
}

static void
_widgets_editable_label___lambda287_ (WidgetsEditableLabel* self,
                                      GtkMenu* menu)
{
#line 156 "../src/Widgets/EditableLabel.vala"
	g_return_if_fail (menu != NULL);
#line 157 "../src/Widgets/EditableLabel.vala"
	widgets_editable_label_set_entry_menu_opened (self, TRUE);
#line 158 "../src/Widgets/EditableLabel.vala"
	g_signal_connect_object ((GtkWidget*) menu, "hide", (GCallback) ___lambda288__gtk_widget_hide, self, 0);
#line 697 "EditableLabel.c"
}

static void
__widgets_editable_label___lambda287__gtk_entry_populate_popup (GtkEntry* _sender,
                                                                GtkMenu* popup,
                                                                gpointer self)
{
#line 156 "../src/Widgets/EditableLabel.vala"
	_widgets_editable_label___lambda287_ ((WidgetsEditableLabel*) self, popup);
#line 707 "EditableLabel.c"
}

static void
_widgets_editable_label___lambda289_ (WidgetsEditableLabel* self)
{
	GtkEntry* _tmp0_;
	const gchar* _tmp1_;
	GtkStack* _tmp2_;
	GtkWidget* _tmp3_;
	GtkWidget* _tmp4_;
	GtkEntry* _tmp5_;
#line 164 "../src/Widgets/EditableLabel.vala"
	_tmp0_ = self->priv->entry;
#line 164 "../src/Widgets/EditableLabel.vala"
	_tmp1_ = self->priv->_text;
#line 164 "../src/Widgets/EditableLabel.vala"
	gtk_entry_set_text (_tmp0_, _tmp1_);
#line 165 "../src/Widgets/EditableLabel.vala"
	_tmp2_ = self->priv->stack;
#line 165 "../src/Widgets/EditableLabel.vala"
	_tmp3_ = gtk_stack_get_visible_child (_tmp2_);
#line 165 "../src/Widgets/EditableLabel.vala"
	_tmp4_ = _tmp3_;
#line 165 "../src/Widgets/EditableLabel.vala"
	_tmp5_ = self->priv->entry;
#line 165 "../src/Widgets/EditableLabel.vala"
	if (_tmp4_ == G_TYPE_CHECK_INSTANCE_CAST (_tmp5_, gtk_widget_get_type (), GtkWidget)) {
#line 166 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_editing (self, FALSE);
#line 737 "EditableLabel.c"
	}
}

static void
__widgets_editable_label___lambda289__gtk_button_clicked (GtkButton* _sender,
                                                          gpointer self)
{
#line 163 "../src/Widgets/EditableLabel.vala"
	_widgets_editable_label___lambda289_ ((WidgetsEditableLabel*) self);
#line 747 "EditableLabel.c"
}

static void
_widgets_editable_label___lambda290_ (WidgetsEditableLabel* self)
{
	GtkStack* _tmp0_;
	GtkWidget* _tmp1_;
	GtkWidget* _tmp2_;
	GtkEntry* _tmp3_;
#line 171 "../src/Widgets/EditableLabel.vala"
	_tmp0_ = self->priv->stack;
#line 171 "../src/Widgets/EditableLabel.vala"
	_tmp1_ = gtk_stack_get_visible_child (_tmp0_);
#line 171 "../src/Widgets/EditableLabel.vala"
	_tmp2_ = _tmp1_;
#line 171 "../src/Widgets/EditableLabel.vala"
	_tmp3_ = self->priv->entry;
#line 171 "../src/Widgets/EditableLabel.vala"
	if (_tmp2_ == G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, gtk_widget_get_type (), GtkWidget)) {
#line 172 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_editing (self, FALSE);
#line 769 "EditableLabel.c"
	}
}

static void
__widgets_editable_label___lambda290__gtk_button_clicked (GtkButton* _sender,
                                                          gpointer self)
{
#line 170 "../src/Widgets/EditableLabel.vala"
	_widgets_editable_label___lambda290_ ((WidgetsEditableLabel*) self);
#line 779 "EditableLabel.c"
}

static GObject *
widgets_editable_label_constructor (GType type,
                                    guint n_construct_properties,
                                    GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsEditableLabel * self;
	GtkStyleContext* style_context = NULL;
	GtkStyleContext* _tmp0_;
	GtkStyleContext* _tmp1_;
	GdkEventMask _tmp2_;
	GdkEventMask _tmp3_;
	GdkEventMask _tmp4_;
	GdkEventMask _tmp5_;
	GdkEventMask _tmp6_;
	GdkEventMask _tmp7_;
	GtkLabel* _tmp8_ = NULL;
	GtkGrid* _tmp9_ = NULL;
	GtkGrid* _tmp10_;
	GtkLabel* _tmp11_;
	const gchar* _tmp12_;
	gchar* _tmp13_;
	GtkEntry* _tmp14_ = NULL;
	GtkStack* _tmp15_ = NULL;
	GtkStack* _tmp16_;
	GtkGrid* _tmp17_;
	GtkStack* _tmp18_;
	GtkEntry* _tmp19_;
	GtkStyleContext* stack_context = NULL;
	GtkStack* _tmp20_;
	GtkStyleContext* _tmp21_;
	GtkStyleContext* _tmp22_;
	const gchar* _tmp23_;
	GtkButton* submit_button = NULL;
	GtkButton* _tmp24_ = NULL;
	GtkButton* _tmp25_;
	GtkStyleContext* _tmp26_;
	GtkSpinner* submit_spinner = NULL;
	GtkSpinner* _tmp27_;
	GtkSpinner* _tmp28_;
	GtkStack* submit_stack = NULL;
	GtkStack* _tmp29_ = NULL;
	GtkStack* _tmp30_;
	GtkLabel* _tmp31_;
	GtkLabel* _tmp32_;
	GtkStack* _tmp33_;
	GtkSpinner* _tmp34_;
	GtkButton* _tmp35_;
	GtkStack* _tmp36_;
	GtkButton* cancel_button = NULL;
	GtkButton* _tmp37_ = NULL;
	GtkGrid* buttons_grid = NULL;
	GtkGrid* _tmp38_ = NULL;
	GtkGrid* _tmp39_;
	GtkButton* _tmp40_;
	GtkGrid* _tmp41_;
	GtkButton* _tmp42_;
	GtkStyleContext* buttons_grid_context = NULL;
	GtkGrid* _tmp43_;
	GtkStyleContext* _tmp44_;
	GtkStyleContext* _tmp45_;
	GtkStyleContext* _tmp46_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp47_ = NULL;
	GtkGrid* _tmp48_;
	GtkStack* _tmp49_;
	GtkGrid* _tmp50_;
	GtkLabel* _tmp51_;
	GtkEntry* _tmp52_;
	GtkEntry* _tmp53_;
	GtkEntry* _tmp54_;
	GtkButton* _tmp55_;
	GtkButton* _tmp56_;
#line 55 "../src/Widgets/EditableLabel.vala"
	parent_class = G_OBJECT_CLASS (widgets_editable_label_parent_class);
#line 55 "../src/Widgets/EditableLabel.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 55 "../src/Widgets/EditableLabel.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabel);
#line 56 "../src/Widgets/EditableLabel.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 56 "../src/Widgets/EditableLabel.vala"
	style_context = _tmp0_;
#line 57 "../src/Widgets/EditableLabel.vala"
	_tmp1_ = style_context;
#line 57 "../src/Widgets/EditableLabel.vala"
	gtk_style_context_add_class (_tmp1_, "editable-label");
#line 59 "../src/Widgets/EditableLabel.vala"
	gtk_widget_set_valign ((GtkWidget*) self, GTK_ALIGN_CENTER);
#line 60 "../src/Widgets/EditableLabel.vala"
	_tmp2_ = gtk_widget_get_events ((GtkWidget*) self);
#line 60 "../src/Widgets/EditableLabel.vala"
	_tmp3_ = _tmp2_;
#line 60 "../src/Widgets/EditableLabel.vala"
	gtk_widget_set_events ((GtkWidget*) self, _tmp3_ | GDK_ENTER_NOTIFY_MASK);
#line 61 "../src/Widgets/EditableLabel.vala"
	_tmp4_ = gtk_widget_get_events ((GtkWidget*) self);
#line 61 "../src/Widgets/EditableLabel.vala"
	_tmp5_ = _tmp4_;
#line 61 "../src/Widgets/EditableLabel.vala"
	gtk_widget_set_events ((GtkWidget*) self, _tmp5_ | GDK_LEAVE_NOTIFY_MASK);
#line 62 "../src/Widgets/EditableLabel.vala"
	_tmp6_ = gtk_widget_get_events ((GtkWidget*) self);
#line 62 "../src/Widgets/EditableLabel.vala"
	_tmp7_ = _tmp6_;
#line 62 "../src/Widgets/EditableLabel.vala"
	gtk_widget_set_events ((GtkWidget*) self, _tmp7_ | GDK_BUTTON_PRESS_MASK);
#line 64 "../src/Widgets/EditableLabel.vala"
	_tmp8_ = (GtkLabel*) gtk_label_new (NULL);
#line 64 "../src/Widgets/EditableLabel.vala"
	gtk_label_set_ellipsize (_tmp8_, PANGO_ELLIPSIZE_END);
#line 64 "../src/Widgets/EditableLabel.vala"
	gtk_label_set_xalign (_tmp8_, (gfloat) 0);
#line 64 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp8_);
#line 64 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (self->priv->title);
#line 64 "../src/Widgets/EditableLabel.vala"
	self->priv->title = _tmp8_;
#line 69 "../src/Widgets/EditableLabel.vala"
	_tmp9_ = (GtkGrid*) gtk_grid_new ();
#line 69 "../src/Widgets/EditableLabel.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp9_, GTK_ALIGN_CENTER);
#line 69 "../src/Widgets/EditableLabel.vala"
	gtk_grid_set_column_spacing (_tmp9_, 12);
#line 69 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp9_);
#line 69 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (self->priv->grid);
#line 69 "../src/Widgets/EditableLabel.vala"
	self->priv->grid = _tmp9_;
#line 73 "../src/Widgets/EditableLabel.vala"
	_tmp10_ = self->priv->grid;
#line 73 "../src/Widgets/EditableLabel.vala"
	_tmp11_ = self->priv->title;
#line 73 "../src/Widgets/EditableLabel.vala"
	gtk_container_add ((GtkContainer*) _tmp10_, (GtkWidget*) _tmp11_);
#line 75 "../src/Widgets/EditableLabel.vala"
	_tmp12_ = self->priv->_placeholder_text;
#line 75 "../src/Widgets/EditableLabel.vala"
	_tmp13_ = g_strdup (_tmp12_);
#line 75 "../src/Widgets/EditableLabel.vala"
	_tmp14_ = (GtkEntry*) gtk_entry_new ();
#line 75 "../src/Widgets/EditableLabel.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp14_, TRUE);
#line 75 "../src/Widgets/EditableLabel.vala"
	gtk_entry_set_placeholder_text (_tmp14_, _tmp13_);
#line 75 "../src/Widgets/EditableLabel.vala"
	_g_free0 (_tmp13_);
#line 75 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp14_);
#line 75 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (self->priv->entry);
#line 75 "../src/Widgets/EditableLabel.vala"
	self->priv->entry = _tmp14_;
#line 80 "../src/Widgets/EditableLabel.vala"
	_tmp15_ = (GtkStack*) gtk_stack_new ();
#line 80 "../src/Widgets/EditableLabel.vala"
	gtk_stack_set_homogeneous (_tmp15_, TRUE);
#line 80 "../src/Widgets/EditableLabel.vala"
	gtk_stack_set_transition_type (_tmp15_, GTK_STACK_TRANSITION_TYPE_CROSSFADE);
#line 80 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp15_);
#line 80 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (self->priv->stack);
#line 80 "../src/Widgets/EditableLabel.vala"
	self->priv->stack = _tmp15_;
#line 84 "../src/Widgets/EditableLabel.vala"
	_tmp16_ = self->priv->stack;
#line 84 "../src/Widgets/EditableLabel.vala"
	_tmp17_ = self->priv->grid;
#line 84 "../src/Widgets/EditableLabel.vala"
	gtk_container_add ((GtkContainer*) _tmp16_, (GtkWidget*) _tmp17_);
#line 85 "../src/Widgets/EditableLabel.vala"
	_tmp18_ = self->priv->stack;
#line 85 "../src/Widgets/EditableLabel.vala"
	_tmp19_ = self->priv->entry;
#line 85 "../src/Widgets/EditableLabel.vala"
	gtk_container_add ((GtkContainer*) _tmp18_, (GtkWidget*) _tmp19_);
#line 87 "../src/Widgets/EditableLabel.vala"
	_tmp20_ = self->priv->stack;
#line 87 "../src/Widgets/EditableLabel.vala"
	_tmp21_ = gtk_widget_get_style_context ((GtkWidget*) _tmp20_);
#line 87 "../src/Widgets/EditableLabel.vala"
	stack_context = _tmp21_;
#line 88 "../src/Widgets/EditableLabel.vala"
	_tmp22_ = stack_context;
#line 88 "../src/Widgets/EditableLabel.vala"
	_tmp23_ = self->priv->_title_style;
#line 88 "../src/Widgets/EditableLabel.vala"
	gtk_style_context_add_class (_tmp22_, _tmp23_);
#line 90 "../src/Widgets/EditableLabel.vala"
	_tmp24_ = (GtkButton*) gtk_button_new ();
#line 90 "../src/Widgets/EditableLabel.vala"
	g_object_set ((GtkWidget*) _tmp24_, "width-request", 64, NULL);
#line 90 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp24_);
#line 90 "../src/Widgets/EditableLabel.vala"
	submit_button = _tmp24_;
#line 93 "../src/Widgets/EditableLabel.vala"
	_tmp25_ = submit_button;
#line 93 "../src/Widgets/EditableLabel.vala"
	_tmp26_ = gtk_widget_get_style_context ((GtkWidget*) _tmp25_);
#line 93 "../src/Widgets/EditableLabel.vala"
	gtk_style_context_add_class (_tmp26_, GTK_STYLE_CLASS_SUGGESTED_ACTION);
#line 95 "../src/Widgets/EditableLabel.vala"
	_tmp27_ = (GtkSpinner*) gtk_spinner_new ();
#line 95 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp27_);
#line 95 "../src/Widgets/EditableLabel.vala"
	submit_spinner = _tmp27_;
#line 96 "../src/Widgets/EditableLabel.vala"
	_tmp28_ = submit_spinner;
#line 96 "../src/Widgets/EditableLabel.vala"
	gtk_spinner_start (_tmp28_);
#line 98 "../src/Widgets/EditableLabel.vala"
	_tmp29_ = (GtkStack*) gtk_stack_new ();
#line 98 "../src/Widgets/EditableLabel.vala"
	g_object_set ((GtkWidget*) _tmp29_, "expand", TRUE, NULL);
#line 98 "../src/Widgets/EditableLabel.vala"
	gtk_stack_set_transition_type (_tmp29_, GTK_STACK_TRANSITION_TYPE_CROSSFADE);
#line 98 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp29_);
#line 98 "../src/Widgets/EditableLabel.vala"
	submit_stack = _tmp29_;
#line 103 "../src/Widgets/EditableLabel.vala"
	_tmp30_ = submit_stack;
#line 103 "../src/Widgets/EditableLabel.vala"
	_tmp31_ = (GtkLabel*) gtk_label_new (_ ("Save"));
#line 103 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp31_);
#line 103 "../src/Widgets/EditableLabel.vala"
	_tmp32_ = _tmp31_;
#line 103 "../src/Widgets/EditableLabel.vala"
	gtk_stack_add_named (_tmp30_, (GtkWidget*) _tmp32_, "label");
#line 103 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (_tmp32_);
#line 104 "../src/Widgets/EditableLabel.vala"
	_tmp33_ = submit_stack;
#line 104 "../src/Widgets/EditableLabel.vala"
	_tmp34_ = submit_spinner;
#line 104 "../src/Widgets/EditableLabel.vala"
	gtk_stack_add_named (_tmp33_, (GtkWidget*) _tmp34_, "spinner");
#line 106 "../src/Widgets/EditableLabel.vala"
	_tmp35_ = submit_button;
#line 106 "../src/Widgets/EditableLabel.vala"
	_tmp36_ = submit_stack;
#line 106 "../src/Widgets/EditableLabel.vala"
	gtk_container_add ((GtkContainer*) _tmp35_, (GtkWidget*) _tmp36_);
#line 108 "../src/Widgets/EditableLabel.vala"
	_tmp37_ = (GtkButton*) gtk_button_new_with_label (_ ("Cancel"));
#line 108 "../src/Widgets/EditableLabel.vala"
	g_object_set ((GtkWidget*) _tmp37_, "width-request", 64, NULL);
#line 108 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp37_);
#line 108 "../src/Widgets/EditableLabel.vala"
	cancel_button = _tmp37_;
#line 112 "../src/Widgets/EditableLabel.vala"
	_tmp38_ = (GtkGrid*) gtk_grid_new ();
#line 112 "../src/Widgets/EditableLabel.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp38_, GTK_ALIGN_START);
#line 112 "../src/Widgets/EditableLabel.vala"
	gtk_grid_set_column_homogeneous (_tmp38_, TRUE);
#line 112 "../src/Widgets/EditableLabel.vala"
	gtk_grid_set_column_spacing (_tmp38_, 6);
#line 112 "../src/Widgets/EditableLabel.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp38_, 6);
#line 112 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp38_);
#line 112 "../src/Widgets/EditableLabel.vala"
	buttons_grid = _tmp38_;
#line 118 "../src/Widgets/EditableLabel.vala"
	_tmp39_ = buttons_grid;
#line 118 "../src/Widgets/EditableLabel.vala"
	_tmp40_ = cancel_button;
#line 118 "../src/Widgets/EditableLabel.vala"
	gtk_container_add ((GtkContainer*) _tmp39_, (GtkWidget*) _tmp40_);
#line 119 "../src/Widgets/EditableLabel.vala"
	_tmp41_ = buttons_grid;
#line 119 "../src/Widgets/EditableLabel.vala"
	_tmp42_ = submit_button;
#line 119 "../src/Widgets/EditableLabel.vala"
	gtk_container_add ((GtkContainer*) _tmp41_, (GtkWidget*) _tmp42_);
#line 121 "../src/Widgets/EditableLabel.vala"
	_tmp43_ = buttons_grid;
#line 121 "../src/Widgets/EditableLabel.vala"
	_tmp44_ = gtk_widget_get_style_context ((GtkWidget*) _tmp43_);
#line 121 "../src/Widgets/EditableLabel.vala"
	buttons_grid_context = _tmp44_;
#line 122 "../src/Widgets/EditableLabel.vala"
	_tmp45_ = buttons_grid_context;
#line 122 "../src/Widgets/EditableLabel.vala"
	gtk_style_context_add_class (_tmp45_, "editable-buttons");
#line 123 "../src/Widgets/EditableLabel.vala"
	_tmp46_ = buttons_grid_context;
#line 123 "../src/Widgets/EditableLabel.vala"
	gtk_style_context_add_class (_tmp46_, GRANITE_STYLE_CLASS_SMALL_LABEL);
#line 125 "../src/Widgets/EditableLabel.vala"
	_tmp47_ = (GtkGrid*) gtk_grid_new ();
#line 125 "../src/Widgets/EditableLabel.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp47_, GTK_ORIENTATION_VERTICAL);
#line 125 "../src/Widgets/EditableLabel.vala"
	g_object_ref_sink (_tmp47_);
#line 125 "../src/Widgets/EditableLabel.vala"
	main_grid = _tmp47_;
#line 128 "../src/Widgets/EditableLabel.vala"
	_tmp48_ = main_grid;
#line 128 "../src/Widgets/EditableLabel.vala"
	_tmp49_ = self->priv->stack;
#line 128 "../src/Widgets/EditableLabel.vala"
	gtk_container_add ((GtkContainer*) _tmp48_, (GtkWidget*) _tmp49_);
#line 130 "../src/Widgets/EditableLabel.vala"
	_tmp50_ = main_grid;
#line 130 "../src/Widgets/EditableLabel.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp50_);
#line 132 "../src/Widgets/EditableLabel.vala"
	_tmp51_ = self->priv->title;
#line 132 "../src/Widgets/EditableLabel.vala"
	g_object_bind_property_with_closures ((GObject*) self, "text", (GObject*) _tmp51_, "label", G_BINDING_DEFAULT, (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)), (GClosure*) ((NULL == NULL) ? NULL : g_cclosure_new ((GCallback) NULL, NULL, (GClosureNotify) NULL)));
#line 134 "../src/Widgets/EditableLabel.vala"
	g_signal_connect_object ((GtkWidget*) self, "button-press-event", (GCallback) __widgets_editable_label___lambda283__gtk_widget_button_press_event, self, 0);
#line 139 "../src/Widgets/EditableLabel.vala"
	_tmp52_ = self->priv->entry;
#line 139 "../src/Widgets/EditableLabel.vala"
	g_signal_connect_object (_tmp52_, "activate", (GCallback) __widgets_editable_label___lambda284__gtk_entry_activate, self, 0);
#line 145 "../src/Widgets/EditableLabel.vala"
	g_signal_connect_object ((GtkWidget*) self, "grab-focus", (GCallback) __widgets_editable_label___lambda285__gtk_widget_grab_focus, self, 0);
#line 149 "../src/Widgets/EditableLabel.vala"
	_tmp53_ = self->priv->entry;
#line 149 "../src/Widgets/EditableLabel.vala"
	g_signal_connect_object ((GtkWidget*) _tmp53_, "focus-out-event", (GCallback) __widgets_editable_label___lambda286__gtk_widget_focus_out_event, self, 0);
#line 156 "../src/Widgets/EditableLabel.vala"
	_tmp54_ = self->priv->entry;
#line 156 "../src/Widgets/EditableLabel.vala"
	g_signal_connect_object (_tmp54_, "populate-popup", (GCallback) __widgets_editable_label___lambda287__gtk_entry_populate_popup, self, 0);
#line 163 "../src/Widgets/EditableLabel.vala"
	_tmp55_ = cancel_button;
#line 163 "../src/Widgets/EditableLabel.vala"
	g_signal_connect_object (_tmp55_, "clicked", (GCallback) __widgets_editable_label___lambda289__gtk_button_clicked, self, 0);
#line 170 "../src/Widgets/EditableLabel.vala"
	_tmp56_ = submit_button;
#line 170 "../src/Widgets/EditableLabel.vala"
	g_signal_connect_object (_tmp56_, "clicked", (GCallback) __widgets_editable_label___lambda290__gtk_button_clicked, self, 0);
#line 55 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (main_grid);
#line 55 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (buttons_grid);
#line 55 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (cancel_button);
#line 55 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (submit_stack);
#line 55 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (submit_spinner);
#line 55 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (submit_button);
#line 55 "../src/Widgets/EditableLabel.vala"
	return obj;
#line 1140 "EditableLabel.c"
}

static void
widgets_editable_label_class_init (WidgetsEditableLabelClass * klass,
                                   gpointer klass_data)
{
#line 1 "../src/Widgets/EditableLabel.vala"
	widgets_editable_label_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Widgets/EditableLabel.vala"
	g_type_class_adjust_private_offset (klass, &WidgetsEditableLabel_private_offset);
#line 1 "../src/Widgets/EditableLabel.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_widgets_editable_label_get_property;
#line 1 "../src/Widgets/EditableLabel.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_widgets_editable_label_set_property;
#line 1 "../src/Widgets/EditableLabel.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_editable_label_constructor;
#line 1 "../src/Widgets/EditableLabel.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_editable_label_finalize;
#line 1 "../src/Widgets/EditableLabel.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_EDITABLE_LABEL_TITLE_STYLE_PROPERTY, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_TITLE_STYLE_PROPERTY] = g_param_spec_string ("title-style", "title-style", "title-style", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1 "../src/Widgets/EditableLabel.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_EDITABLE_LABEL_PLACEHOLDER_TEXT_PROPERTY, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_PLACEHOLDER_TEXT_PROPERTY] = g_param_spec_string ("placeholder-text", "placeholder-text", "placeholder-text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1 "../src/Widgets/EditableLabel.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_EDITABLE_LABEL_TEXT_PROPERTY, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_TEXT_PROPERTY] = g_param_spec_string ("text", "text", "text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Widgets/EditableLabel.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_EDITABLE_LABEL_ENTRY_MENU_OPENED_PROPERTY, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_ENTRY_MENU_OPENED_PROPERTY] = g_param_spec_boolean ("entry-menu-opened", "entry-menu-opened", "entry-menu-opened", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Widgets/EditableLabel.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_EDITABLE_LABEL_EDITING_PROPERTY, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_EDITING_PROPERTY] = g_param_spec_boolean ("editing", "editing", "editing", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1 "../src/Widgets/EditableLabel.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_EDITABLE_LABEL_EDITABLE_PROPERTY, widgets_editable_label_properties[WIDGETS_EDITABLE_LABEL_EDITABLE_PROPERTY] = g_param_spec_boolean ("editable", "editable", "editable", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_WRITABLE));
#line 1 "../src/Widgets/EditableLabel.vala"
	widgets_editable_label_signals[WIDGETS_EDITABLE_LABEL_FOCUS_CHANGED_SIGNAL] = g_signal_new ("focus-changed", WIDGETS_TYPE_EDITABLE_LABEL, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__BOOLEAN, G_TYPE_NONE, 1, G_TYPE_BOOLEAN);
#line 1 "../src/Widgets/EditableLabel.vala"
	widgets_editable_label_signals[WIDGETS_EDITABLE_LABEL_CHANGED_SIGNAL] = g_signal_new ("changed", WIDGETS_TYPE_EDITABLE_LABEL, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 1175 "EditableLabel.c"
}

static void
widgets_editable_label_instance_init (WidgetsEditableLabel * self,
                                      gpointer klass)
{
#line 1 "../src/Widgets/EditableLabel.vala"
	self->priv = widgets_editable_label_get_instance_private (self);
#line 14 "../src/Widgets/EditableLabel.vala"
	self->priv->_entry_menu_opened = FALSE;
#line 1186 "EditableLabel.c"
}

static void
widgets_editable_label_finalize (GObject * obj)
{
	WidgetsEditableLabel * self;
#line 1 "../src/Widgets/EditableLabel.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabel);
#line 2 "../src/Widgets/EditableLabel.vala"
	_g_free0 (self->priv->_title_style);
#line 3 "../src/Widgets/EditableLabel.vala"
	_g_free0 (self->priv->_placeholder_text);
#line 8 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (self->priv->title);
#line 9 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (self->priv->entry);
#line 10 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (self->priv->stack);
#line 11 "../src/Widgets/EditableLabel.vala"
	_g_object_unref0 (self->priv->grid);
#line 13 "../src/Widgets/EditableLabel.vala"
	_g_free0 (self->priv->_text);
#line 1 "../src/Widgets/EditableLabel.vala"
	G_OBJECT_CLASS (widgets_editable_label_parent_class)->finalize (obj);
#line 1211 "EditableLabel.c"
}

static GType
widgets_editable_label_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (WidgetsEditableLabelClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_editable_label_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsEditableLabel), 0, (GInstanceInitFunc) widgets_editable_label_instance_init, NULL };
	GType widgets_editable_label_type_id;
	widgets_editable_label_type_id = g_type_register_static (gtk_event_box_get_type (), "WidgetsEditableLabel", &g_define_type_info, 0);
	WidgetsEditableLabel_private_offset = g_type_add_instance_private (widgets_editable_label_type_id, sizeof (WidgetsEditableLabelPrivate));
	return widgets_editable_label_type_id;
}

GType
widgets_editable_label_get_type (void)
{
	static volatile gsize widgets_editable_label_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_editable_label_type_id__volatile)) {
		GType widgets_editable_label_type_id;
		widgets_editable_label_type_id = widgets_editable_label_get_type_once ();
		g_once_init_leave (&widgets_editable_label_type_id__volatile, widgets_editable_label_type_id);
	}
	return widgets_editable_label_type_id__volatile;
}

static void
_vala_widgets_editable_label_get_property (GObject * object,
                                           guint property_id,
                                           GValue * value,
                                           GParamSpec * pspec)
{
	WidgetsEditableLabel * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabel);
#line 1 "../src/Widgets/EditableLabel.vala"
	switch (property_id) {
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_TITLE_STYLE_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		g_value_set_string (value, widgets_editable_label_get_title_style (self));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_PLACEHOLDER_TEXT_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		g_value_set_string (value, widgets_editable_label_get_placeholder_text (self));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_TEXT_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		g_value_set_string (value, widgets_editable_label_get_text (self));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_ENTRY_MENU_OPENED_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		g_value_set_boolean (value, widgets_editable_label_get_entry_menu_opened (self));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_EDITING_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		g_value_set_boolean (value, widgets_editable_label_get_editing (self));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1276 "EditableLabel.c"
		default:
#line 1 "../src/Widgets/EditableLabel.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1282 "EditableLabel.c"
	}
}

static void
_vala_widgets_editable_label_set_property (GObject * object,
                                           guint property_id,
                                           const GValue * value,
                                           GParamSpec * pspec)
{
	WidgetsEditableLabel * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_EDITABLE_LABEL, WidgetsEditableLabel);
#line 1 "../src/Widgets/EditableLabel.vala"
	switch (property_id) {
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_TITLE_STYLE_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_title_style (self, g_value_get_string (value));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_PLACEHOLDER_TEXT_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_placeholder_text (self, g_value_get_string (value));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_TEXT_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_text (self, g_value_get_string (value));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_ENTRY_MENU_OPENED_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_entry_menu_opened (self, g_value_get_boolean (value));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_EDITING_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_editing (self, g_value_get_boolean (value));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1 "../src/Widgets/EditableLabel.vala"
		case WIDGETS_EDITABLE_LABEL_EDITABLE_PROPERTY:
#line 1 "../src/Widgets/EditableLabel.vala"
		widgets_editable_label_set_editable (self, g_value_get_boolean (value));
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1332 "EditableLabel.c"
		default:
#line 1 "../src/Widgets/EditableLabel.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Widgets/EditableLabel.vala"
		break;
#line 1338 "EditableLabel.c"
	}
}


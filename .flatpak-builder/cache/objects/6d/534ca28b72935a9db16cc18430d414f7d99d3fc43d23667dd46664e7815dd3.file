/* TimePicker.c generated by valac 0.50.10, the Vala compiler
 * generated from TimePicker.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 3 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alainmh23@gmail.com>
*/

#include <gtk/gtk.h>
#include <glib-object.h>
#include <granite.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <glib/gi18n-lib.h>
#include <float.h>
#include <math.h>

#define DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER (dialogs_date_time_picker_time_picker_get_type ())
#define DIALOGS_DATE_TIME_PICKER_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePicker))
#define DIALOGS_DATE_TIME_PICKER_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePickerClass))
#define DIALOGS_DATE_TIME_PICKER_IS_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER))
#define DIALOGS_DATE_TIME_PICKER_IS_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER))
#define DIALOGS_DATE_TIME_PICKER_TIME_PICKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePickerClass))

typedef struct _DialogsDateTimePickerTimePicker DialogsDateTimePickerTimePicker;
typedef struct _DialogsDateTimePickerTimePickerClass DialogsDateTimePickerTimePickerClass;
typedef struct _DialogsDateTimePickerTimePickerPrivate DialogsDateTimePickerTimePickerPrivate;
enum  {
	DIALOGS_DATE_TIME_PICKER_TIME_PICKER_0_PROPERTY,
	DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_12_PROPERTY,
	DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_24_PROPERTY,
	DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_PROPERTY,
	DIALOGS_DATE_TIME_PICKER_TIME_PICKER_HAS_TIME_PROPERTY,
	DIALOGS_DATE_TIME_PICKER_TIME_PICKER_NUM_PROPERTIES
};
static GParamSpec* dialogs_date_time_picker_time_picker_properties[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))

#define TYPE_UTIL (util_get_type ())
#define UTIL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTIL, Util))
#define UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTIL, UtilClass))
#define IS_UTIL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTIL))
#define IS_UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTIL))
#define UTIL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTIL, UtilClass))

typedef struct _Util Util;
typedef struct _UtilClass UtilClass;
typedef struct _Block38Data Block38Data;

#define WIDGETS_TYPE_DYNAMIC_ICON (widgets_dynamic_icon_get_type ())
#define WIDGETS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIcon))
#define WIDGETS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))
#define WIDGETS_IS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_IS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_DYNAMIC_ICON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))

typedef struct _WidgetsDynamicIcon WidgetsDynamicIcon;
typedef struct _WidgetsDynamicIconClass WidgetsDynamicIconClass;
enum  {
	DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_CHANGED_SIGNAL,
	DIALOGS_DATE_TIME_PICKER_TIME_PICKER_NUM_SIGNALS
};
static guint dialogs_date_time_picker_time_picker_signals[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_NUM_SIGNALS] = {0};

struct _DialogsDateTimePickerTimePicker {
	GtkEventBox parent_instance;
	DialogsDateTimePickerTimePickerPrivate * priv;
};

struct _DialogsDateTimePickerTimePickerClass {
	GtkEventBoxClass parent_class;
};

struct _DialogsDateTimePickerTimePickerPrivate {
	GtkButton* time_button;
	GraniteWidgetsModeButton* am_pm_modebutton;
	GtkSpinButton* hours_spinbutton;
	GtkSpinButton* minutes_spinbutton;
	GtkStack* time_stack;
	gchar* _format_12;
	gchar* _format_24;
	GDateTime* _time;
	gchar* old_string;
	gboolean changing_time;
};

struct _Block38Data {
	int _ref_count_;
	DialogsDateTimePickerTimePicker* self;
	GtkPopover* popover;
};

static gint DialogsDateTimePickerTimePicker_private_offset;
static gpointer dialogs_date_time_picker_time_picker_parent_class = NULL;

GType dialogs_date_time_picker_time_picker_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsDateTimePickerTimePicker, g_object_unref)
static void dialogs_date_time_picker_time_picker_update_time (DialogsDateTimePickerTimePicker* self,
                                                       gboolean is_hour);
GDateTime* dialogs_date_time_picker_time_picker_get_time (DialogsDateTimePickerTimePicker* self);
GType util_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Util, g_object_unref)
Util* util_get_default (void);
gboolean util_is_clock_format_12h (Util* self);
static void dialogs_date_time_picker_time_picker_update_text (DialogsDateTimePickerTimePicker* self,
                                                       gboolean no_signal);
const gchar* dialogs_date_time_picker_time_picker_get_format_12 (DialogsDateTimePickerTimePicker* self);
const gchar* dialogs_date_time_picker_time_picker_get_format_24 (DialogsDateTimePickerTimePicker* self);
DialogsDateTimePickerTimePicker* dialogs_date_time_picker_time_picker_new (void);
DialogsDateTimePickerTimePicker* dialogs_date_time_picker_time_picker_construct (GType object_type);
static void dialogs_date_time_picker_time_picker_set_format_12 (DialogsDateTimePickerTimePicker* self,
                                                         const gchar* value);
static void dialogs_date_time_picker_time_picker_set_format_24 (DialogsDateTimePickerTimePicker* self,
                                                         const gchar* value);
void dialogs_date_time_picker_time_picker_set_time (DialogsDateTimePickerTimePicker* self,
                                                    GDateTime* value);
gboolean dialogs_date_time_picker_time_picker_get_has_time (DialogsDateTimePickerTimePicker* self);
void dialogs_date_time_picker_time_picker_set_has_time (DialogsDateTimePickerTimePicker* self,
                                                        gboolean value);
static GObject * dialogs_date_time_picker_time_picker_constructor (GType type,
                                                            guint n_construct_properties,
                                                            GObjectConstructParam * construct_properties);
static Block38Data* block38_data_ref (Block38Data* _data38_);
static void block38_data_unref (void * _userdata_);
GType widgets_dynamic_icon_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsDynamicIcon, g_object_unref)
WidgetsDynamicIcon* widgets_dynamic_icon_new (void);
WidgetsDynamicIcon* widgets_dynamic_icon_construct (GType object_type);
void widgets_dynamic_icon_set_size (WidgetsDynamicIcon* self,
                                    gint value);
void widgets_dynamic_icon_update_icon_name (WidgetsDynamicIcon* self,
                                            const gchar* icon_name);
static void _dialogs_date_time_picker_time_picker___lambda75_ (DialogsDateTimePickerTimePicker* self,
                                                        GtkWidget* mode);
static void __dialogs_date_time_picker_time_picker___lambda75__granite_widgets_mode_button_mode_changed (GraniteWidgetsModeButton* _sender,
                                                                                                  GtkWidget* widget,
                                                                                                  gpointer self);
static void _dialogs_date_time_picker_time_picker___lambda76_ (DialogsDateTimePickerTimePicker* self);
static void __dialogs_date_time_picker_time_picker___lambda76__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                                                       gpointer self);
static void _dialogs_date_time_picker_time_picker___lambda77_ (DialogsDateTimePickerTimePicker* self);
static void __dialogs_date_time_picker_time_picker___lambda77__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                                                       gpointer self);
static void _dialogs_date_time_picker_time_picker___lambda78_ (Block38Data* _data38_);
static void __dialogs_date_time_picker_time_picker___lambda78__gtk_button_clicked (GtkButton* _sender,
                                                                            gpointer self);
static void _dialogs_date_time_picker_time_picker___lambda79_ (DialogsDateTimePickerTimePicker* self);
static void __dialogs_date_time_picker_time_picker___lambda79__gtk_button_clicked (GtkButton* _sender,
                                                                            gpointer self);
static void _dialogs_date_time_picker_time_picker___lambda80_ (DialogsDateTimePickerTimePicker* self);
static void __dialogs_date_time_picker_time_picker___lambda80__gtk_button_clicked (GtkButton* _sender,
                                                                            gpointer self);
static void dialogs_date_time_picker_time_picker_finalize (GObject * obj);
static GType dialogs_date_time_picker_time_picker_get_type_once (void);
static void _vala_dialogs_date_time_picker_time_picker_get_property (GObject * object,
                                                              guint property_id,
                                                              GValue * value,
                                                              GParamSpec * pspec);
static void _vala_dialogs_date_time_picker_time_picker_set_property (GObject * object,
                                                              guint property_id,
                                                              const GValue * value,
                                                              GParamSpec * pspec);

static inline gpointer
dialogs_date_time_picker_time_picker_get_instance_private (DialogsDateTimePickerTimePicker* self)
{
	return G_STRUCT_MEMBER_P (self, DialogsDateTimePickerTimePicker_private_offset);
}

static void
dialogs_date_time_picker_time_picker_update_time (DialogsDateTimePickerTimePicker* self,
                                                  gboolean is_hour)
{
#line 266 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 267 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (self->priv->changing_time) {
#line 268 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		return;
#line 200 "TimePicker.c"
	}
#line 271 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (is_hour) {
#line 204 "TimePicker.c"
		gint new_hour = 0;
		GtkSpinButton* _tmp0_;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
		Util* _tmp3_;
		Util* _tmp4_;
		gboolean _tmp5_;
#line 272 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp0_ = self->priv->hours_spinbutton;
#line 272 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp1_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 272 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp2_ = _tmp1_;
#line 272 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		new_hour = gtk_spin_button_get_value_as_int (_tmp0_) - g_date_time_get_hour (_tmp2_);
#line 274 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp3_ = util_get_default ();
#line 274 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp4_ = _tmp3_;
#line 274 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp5_ = util_is_clock_format_12h (_tmp4_);
#line 274 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_object_unref0 (_tmp4_);
#line 274 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		if (_tmp5_) {
#line 230 "TimePicker.c"
			gboolean _tmp6_ = FALSE;
			GtkSpinButton* _tmp7_;
#line 275 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp7_ = self->priv->hours_spinbutton;
#line 275 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			if (gtk_spin_button_get_value_as_int (_tmp7_) == 12) {
#line 237 "TimePicker.c"
				GraniteWidgetsModeButton* _tmp8_;
				gint _tmp9_;
				gint _tmp10_;
#line 275 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp8_ = self->priv->am_pm_modebutton;
#line 275 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp9_ = granite_widgets_mode_button_get_selected (_tmp8_);
#line 275 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp10_ = _tmp9_;
#line 275 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp6_ = _tmp10_ == 0;
#line 249 "TimePicker.c"
			} else {
#line 275 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp6_ = FALSE;
#line 253 "TimePicker.c"
			}
#line 275 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			if (_tmp6_) {
#line 257 "TimePicker.c"
				GDateTime* _tmp11_;
				GDateTime* _tmp12_;
				GDateTime* _tmp13_;
#line 276 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp11_ = self->priv->_time;
#line 276 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp12_ = self->priv->_time;
#line 276 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp13_ = g_date_time_add_hours (_tmp11_, -g_date_time_get_hour (_tmp12_));
#line 276 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_g_date_time_unref0 (self->priv->_time);
#line 276 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				self->priv->_time = _tmp13_;
#line 271 "TimePicker.c"
			} else {
				gboolean _tmp14_ = FALSE;
				GtkSpinButton* _tmp15_;
#line 277 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp15_ = self->priv->hours_spinbutton;
#line 277 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				if (gtk_spin_button_get_value_as_int (_tmp15_) < 12) {
#line 279 "TimePicker.c"
					GraniteWidgetsModeButton* _tmp16_;
					gint _tmp17_;
					gint _tmp18_;
#line 277 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					_tmp16_ = self->priv->am_pm_modebutton;
#line 277 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					_tmp17_ = granite_widgets_mode_button_get_selected (_tmp16_);
#line 277 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					_tmp18_ = _tmp17_;
#line 277 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					_tmp14_ = _tmp18_ == 0;
#line 291 "TimePicker.c"
				} else {
#line 277 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					_tmp14_ = FALSE;
#line 295 "TimePicker.c"
				}
#line 277 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				if (_tmp14_) {
#line 299 "TimePicker.c"
					GDateTime* _tmp19_;
					GDateTime* _tmp20_;
#line 278 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					_tmp19_ = self->priv->_time;
#line 278 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					_tmp20_ = g_date_time_add_hours (_tmp19_, new_hour);
#line 278 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					_g_date_time_unref0 (self->priv->_time);
#line 278 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					self->priv->_time = _tmp20_;
#line 310 "TimePicker.c"
				} else {
					gboolean _tmp21_ = FALSE;
					GtkSpinButton* _tmp22_;
#line 279 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					_tmp22_ = self->priv->hours_spinbutton;
#line 279 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					if (gtk_spin_button_get_value_as_int (_tmp22_) == 12) {
#line 318 "TimePicker.c"
						GraniteWidgetsModeButton* _tmp23_;
						gint _tmp24_;
						gint _tmp25_;
#line 279 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_tmp23_ = self->priv->am_pm_modebutton;
#line 279 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_tmp24_ = granite_widgets_mode_button_get_selected (_tmp23_);
#line 279 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_tmp25_ = _tmp24_;
#line 279 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_tmp21_ = _tmp25_ == 1;
#line 330 "TimePicker.c"
					} else {
#line 279 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_tmp21_ = FALSE;
#line 334 "TimePicker.c"
					}
#line 279 "../src/Dialogs/DateTimePicker/TimePicker.vala"
					if (_tmp21_) {
#line 338 "TimePicker.c"
						GDateTime* _tmp26_;
						GDateTime* _tmp27_;
						GDateTime* _tmp28_;
#line 280 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_tmp26_ = self->priv->_time;
#line 280 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_tmp27_ = self->priv->_time;
#line 280 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_tmp28_ = g_date_time_add_hours (_tmp26_, (-g_date_time_get_hour (_tmp27_)) + 12);
#line 280 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_g_date_time_unref0 (self->priv->_time);
#line 280 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						self->priv->_time = _tmp28_;
#line 352 "TimePicker.c"
					} else {
						gboolean _tmp29_ = FALSE;
						GtkSpinButton* _tmp30_;
#line 281 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						_tmp30_ = self->priv->hours_spinbutton;
#line 281 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						if (gtk_spin_button_get_value_as_int (_tmp30_) < 12) {
#line 360 "TimePicker.c"
							GraniteWidgetsModeButton* _tmp31_;
							gint _tmp32_;
							gint _tmp33_;
#line 281 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_tmp31_ = self->priv->am_pm_modebutton;
#line 281 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_tmp32_ = granite_widgets_mode_button_get_selected (_tmp31_);
#line 281 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_tmp33_ = _tmp32_;
#line 281 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_tmp29_ = _tmp33_ == 1;
#line 372 "TimePicker.c"
						} else {
#line 281 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_tmp29_ = FALSE;
#line 376 "TimePicker.c"
						}
#line 281 "../src/Dialogs/DateTimePicker/TimePicker.vala"
						if (_tmp29_) {
#line 380 "TimePicker.c"
							GDateTime* _tmp34_;
							GDateTime* _tmp35_;
							GDateTime* _tmp36_;
							GDateTime* _tmp37_;
#line 282 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_tmp34_ = self->priv->_time;
#line 282 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_tmp35_ = g_date_time_add_hours (_tmp34_, new_hour + 12);
#line 282 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_g_date_time_unref0 (self->priv->_time);
#line 282 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							self->priv->_time = _tmp35_;
#line 284 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_tmp36_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 284 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							_tmp37_ = _tmp36_;
#line 284 "../src/Dialogs/DateTimePicker/TimePicker.vala"
							if (g_date_time_get_hour (_tmp37_) <= 12) {
#line 399 "TimePicker.c"
								GDateTime* _tmp38_;
								GDateTime* _tmp39_;
#line 285 "../src/Dialogs/DateTimePicker/TimePicker.vala"
								_tmp38_ = self->priv->_time;
#line 285 "../src/Dialogs/DateTimePicker/TimePicker.vala"
								_tmp39_ = g_date_time_add_hours (_tmp38_, 12);
#line 285 "../src/Dialogs/DateTimePicker/TimePicker.vala"
								_g_date_time_unref0 (self->priv->_time);
#line 285 "../src/Dialogs/DateTimePicker/TimePicker.vala"
								self->priv->_time = _tmp39_;
#line 410 "TimePicker.c"
							}
						}
					}
				}
			}
		} else {
			GDateTime* _tmp40_;
			GDateTime* _tmp41_;
#line 289 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp40_ = self->priv->_time;
#line 289 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp41_ = g_date_time_add_hours (_tmp40_, new_hour);
#line 289 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_g_date_time_unref0 (self->priv->_time);
#line 289 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			self->priv->_time = _tmp41_;
#line 427 "TimePicker.c"
		}
	} else {
		GDateTime* _tmp42_;
		GDateTime* _tmp43_;
		GtkSpinButton* _tmp44_;
		GDateTime* _tmp45_;
		GDateTime* _tmp46_;
		GDateTime* _tmp47_;
#line 292 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp42_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 292 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp43_ = _tmp42_;
#line 292 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp44_ = self->priv->minutes_spinbutton;
#line 292 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp45_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 292 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp46_ = _tmp45_;
#line 292 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp47_ = g_date_time_add_minutes (_tmp43_, gtk_spin_button_get_value_as_int (_tmp44_) - g_date_time_get_minute (_tmp46_));
#line 292 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_date_time_unref0 (self->priv->_time);
#line 292 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		self->priv->_time = _tmp47_;
#line 452 "TimePicker.c"
	}
#line 295 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	dialogs_date_time_picker_time_picker_update_text (self, FALSE);
#line 456 "TimePicker.c"
}

static void
dialogs_date_time_picker_time_picker_update_text (DialogsDateTimePickerTimePicker* self,
                                                  gboolean no_signal)
{
	Util* _tmp0_;
	Util* _tmp1_;
	gboolean _tmp2_;
	GtkButton* _tmp15_;
	const gchar* _tmp16_;
	const gchar* _tmp17_;
	gchar* _tmp18_;
#line 298 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 299 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = util_get_default ();
#line 299 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp1_ = _tmp0_;
#line 299 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp2_ = util_is_clock_format_12h (_tmp1_);
#line 299 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (_tmp1_);
#line 299 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (_tmp2_) {
#line 482 "TimePicker.c"
		GtkButton* _tmp3_;
		GDateTime* _tmp4_;
		GDateTime* _tmp5_;
		const gchar* _tmp6_;
		gchar* _tmp7_;
		gchar* _tmp8_;
#line 300 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp3_ = self->priv->time_button;
#line 300 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp4_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 300 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp5_ = _tmp4_;
#line 300 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp6_ = self->priv->_format_12;
#line 300 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp7_ = g_date_time_format (_tmp5_, _tmp6_);
#line 300 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp8_ = _tmp7_;
#line 300 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_button_set_label (_tmp3_, _tmp8_);
#line 300 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_free0 (_tmp8_);
#line 505 "TimePicker.c"
	} else {
		GtkButton* _tmp9_;
		GDateTime* _tmp10_;
		GDateTime* _tmp11_;
		const gchar* _tmp12_;
		gchar* _tmp13_;
		gchar* _tmp14_;
#line 302 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp9_ = self->priv->time_button;
#line 302 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp10_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 302 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp11_ = _tmp10_;
#line 302 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp12_ = self->priv->_format_24;
#line 302 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp13_ = g_date_time_format (_tmp11_, _tmp12_);
#line 302 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp14_ = _tmp13_;
#line 302 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_button_set_label (_tmp9_, _tmp14_);
#line 302 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_free0 (_tmp14_);
#line 529 "TimePicker.c"
	}
#line 305 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp15_ = self->priv->time_button;
#line 305 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp16_ = gtk_button_get_label (_tmp15_);
#line 305 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp17_ = _tmp16_;
#line 305 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp18_ = g_strdup (_tmp17_);
#line 305 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_free0 (self->priv->old_string);
#line 305 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->old_string = _tmp18_;
#line 307 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (no_signal == FALSE) {
#line 308 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_signal_emit (self, dialogs_date_time_picker_time_picker_signals[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_CHANGED_SIGNAL], 0);
#line 547 "TimePicker.c"
	}
}

DialogsDateTimePickerTimePicker*
dialogs_date_time_picker_time_picker_construct (GType object_type)
{
	DialogsDateTimePickerTimePicker * self = NULL;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self = (DialogsDateTimePickerTimePicker*) g_object_new (object_type, NULL);
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	return self;
#line 559 "TimePicker.c"
}

DialogsDateTimePickerTimePicker*
dialogs_date_time_picker_time_picker_new (void)
{
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	return dialogs_date_time_picker_time_picker_construct (DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER);
#line 567 "TimePicker.c"
}

const gchar*
dialogs_date_time_picker_time_picker_get_format_12 (DialogsDateTimePickerTimePicker* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = self->priv->_format_12;
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	result = _tmp0_;
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	return result;
#line 583 "TimePicker.c"
}

static void
dialogs_date_time_picker_time_picker_set_format_12 (DialogsDateTimePickerTimePicker* self,
                                                    const gchar* value)
{
	gchar* old_value;
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	old_value = dialogs_date_time_picker_time_picker_get_format_12 (self);
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 597 "TimePicker.c"
		gchar* _tmp0_;
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp0_ = g_strdup (value);
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_free0 (self->priv->_format_12);
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		self->priv->_format_12 = _tmp0_;
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_object_notify_by_pspec ((GObject *) self, dialogs_date_time_picker_time_picker_properties[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_12_PROPERTY]);
#line 607 "TimePicker.c"
	}
}

const gchar*
dialogs_date_time_picker_time_picker_get_format_24 (DialogsDateTimePickerTimePicker* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = self->priv->_format_24;
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	result = _tmp0_;
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	return result;
#line 624 "TimePicker.c"
}

static void
dialogs_date_time_picker_time_picker_set_format_24 (DialogsDateTimePickerTimePicker* self,
                                                    const gchar* value)
{
	gchar* old_value;
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	old_value = dialogs_date_time_picker_time_picker_get_format_24 (self);
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 638 "TimePicker.c"
		gchar* _tmp0_;
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp0_ = g_strdup (value);
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_free0 (self->priv->_format_24);
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		self->priv->_format_24 = _tmp0_;
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_object_notify_by_pspec ((GObject *) self, dialogs_date_time_picker_time_picker_properties[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_24_PROPERTY]);
#line 648 "TimePicker.c"
	}
}

GDateTime*
dialogs_date_time_picker_time_picker_get_time (DialogsDateTimePickerTimePicker* self)
{
	GDateTime* result;
	GDateTime* _tmp0_;
	GDateTime* _tmp3_;
#line 34 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 35 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = self->priv->_time;
#line 35 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (_tmp0_ == NULL) {
#line 664 "TimePicker.c"
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
#line 36 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp1_ = g_date_time_new_now_local ();
#line 36 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp2_ = _tmp1_;
#line 36 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		dialogs_date_time_picker_time_picker_set_time (self, _tmp2_);
#line 36 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_date_time_unref0 (_tmp2_);
#line 675 "TimePicker.c"
	}
#line 39 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp3_ = self->priv->_time;
#line 39 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	result = _tmp3_;
#line 39 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	return result;
#line 683 "TimePicker.c"
}

static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 43 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 691 "TimePicker.c"
}

void
dialogs_date_time_picker_time_picker_set_time (DialogsDateTimePickerTimePicker* self,
                                               GDateTime* value)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
#line 42 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 43 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = _g_date_time_ref0 (value);
#line 43 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_date_time_unref0 (self->priv->_time);
#line 43 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->_time = _tmp0_;
#line 44 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->changing_time = TRUE;
#line 46 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp1_ = self->priv->_time;
#line 46 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (g_date_time_get_hour (_tmp1_) >= 12) {
#line 714 "TimePicker.c"
		GraniteWidgetsModeButton* _tmp2_;
#line 47 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp2_ = self->priv->am_pm_modebutton;
#line 47 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		granite_widgets_mode_button_set_active (_tmp2_, 1);
#line 720 "TimePicker.c"
	} else {
		GraniteWidgetsModeButton* _tmp3_;
#line 49 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp3_ = self->priv->am_pm_modebutton;
#line 49 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		granite_widgets_mode_button_set_active (_tmp3_, 0);
#line 727 "TimePicker.c"
	}
#line 52 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	dialogs_date_time_picker_time_picker_update_text (self, TRUE);
#line 53 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->changing_time = FALSE;
#line 42 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_date_time_picker_time_picker_properties[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_PROPERTY]);
#line 735 "TimePicker.c"
}

gboolean
dialogs_date_time_picker_time_picker_get_has_time (DialogsDateTimePickerTimePicker* self)
{
	gboolean result;
	GtkStack* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
#line 58 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 59 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = self->priv->time_stack;
#line 59 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp1_ = gtk_stack_get_visible_child_name (_tmp0_);
#line 59 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp2_ = _tmp1_;
#line 59 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	result = g_strcmp0 (_tmp2_, "time-box") == 0;
#line 59 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	return result;
#line 757 "TimePicker.c"
}

void
dialogs_date_time_picker_time_picker_set_has_time (DialogsDateTimePickerTimePicker* self,
                                                   gboolean value)
{
	const gchar* _tmp0_ = NULL;
	GtkStack* _tmp1_;
#line 62 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 63 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (value) {
#line 63 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp0_ = "time-box";
#line 772 "TimePicker.c"
	} else {
#line 63 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp0_ = "add-time";
#line 776 "TimePicker.c"
	}
#line 63 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp1_ = self->priv->time_stack;
#line 63 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_stack_set_visible_child_name (_tmp1_, _tmp0_);
#line 62 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_date_time_picker_time_picker_properties[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_HAS_TIME_PROPERTY]);
#line 784 "TimePicker.c"
}

static Block38Data*
block38_data_ref (Block38Data* _data38_)
{
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_atomic_int_inc (&_data38_->_ref_count_);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	return _data38_;
#line 794 "TimePicker.c"
}

static void
block38_data_unref (void * _userdata_)
{
	Block38Data* _data38_;
	_data38_ = (Block38Data*) _userdata_;
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (g_atomic_int_dec_and_test (&_data38_->_ref_count_)) {
#line 804 "TimePicker.c"
		DialogsDateTimePickerTimePicker* self;
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		self = _data38_->self;
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_object_unref0 (_data38_->popover);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_object_unref0 (self);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_slice_free (Block38Data, _data38_);
#line 814 "TimePicker.c"
	}
}

static void
_dialogs_date_time_picker_time_picker___lambda75_ (DialogsDateTimePickerTimePicker* self,
                                                   GtkWidget* mode)
{
	GraniteWidgetsModeButton* _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
#line 151 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_return_if_fail (mode != NULL);
#line 152 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (self->priv->changing_time) {
#line 153 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		return;
#line 831 "TimePicker.c"
	}
#line 156 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = self->priv->am_pm_modebutton;
#line 156 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp1_ = granite_widgets_mode_button_get_selected (_tmp0_);
#line 156 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp2_ = _tmp1_;
#line 156 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (_tmp2_ == 0) {
#line 841 "TimePicker.c"
		GDateTime* _tmp3_;
		GDateTime* _tmp4_;
		GDateTime* _tmp5_;
#line 157 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp3_ = self->priv->_time;
#line 157 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp4_ = g_date_time_add_hours (_tmp3_, -12);
#line 157 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp5_ = _tmp4_;
#line 157 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		dialogs_date_time_picker_time_picker_set_time (self, _tmp5_);
#line 157 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_date_time_unref0 (_tmp5_);
#line 158 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_signal_emit (self, dialogs_date_time_picker_time_picker_signals[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_CHANGED_SIGNAL], 0);
#line 857 "TimePicker.c"
	} else {
		GraniteWidgetsModeButton* _tmp6_;
		gint _tmp7_;
		gint _tmp8_;
#line 159 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp6_ = self->priv->am_pm_modebutton;
#line 159 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp7_ = granite_widgets_mode_button_get_selected (_tmp6_);
#line 159 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp8_ = _tmp7_;
#line 159 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		if (_tmp8_ == 1) {
#line 870 "TimePicker.c"
			GDateTime* _tmp9_;
			GDateTime* _tmp10_;
			GDateTime* _tmp11_;
#line 160 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp9_ = self->priv->_time;
#line 160 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp10_ = g_date_time_add_hours (_tmp9_, 12);
#line 160 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp11_ = _tmp10_;
#line 160 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			dialogs_date_time_picker_time_picker_set_time (self, _tmp11_);
#line 160 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_g_date_time_unref0 (_tmp11_);
#line 161 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			g_signal_emit (self, dialogs_date_time_picker_time_picker_signals[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_CHANGED_SIGNAL], 0);
#line 886 "TimePicker.c"
		} else {
#line 163 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			g_assert_not_reached ();
#line 890 "TimePicker.c"
		}
	}
#line 166 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	dialogs_date_time_picker_time_picker_update_text (self, TRUE);
#line 895 "TimePicker.c"
}

static void
__dialogs_date_time_picker_time_picker___lambda75__granite_widgets_mode_button_mode_changed (GraniteWidgetsModeButton* _sender,
                                                                                             GtkWidget* widget,
                                                                                             gpointer self)
{
#line 151 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_dialogs_date_time_picker_time_picker___lambda75_ ((DialogsDateTimePickerTimePicker*) self, widget);
#line 905 "TimePicker.c"
}

static void
_dialogs_date_time_picker_time_picker___lambda76_ (DialogsDateTimePickerTimePicker* self)
{
#line 178 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	dialogs_date_time_picker_time_picker_update_time (self, TRUE);
#line 913 "TimePicker.c"
}

static void
__dialogs_date_time_picker_time_picker___lambda76__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                                                  gpointer self)
{
#line 177 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_dialogs_date_time_picker_time_picker___lambda76_ ((DialogsDateTimePickerTimePicker*) self);
#line 922 "TimePicker.c"
}

static void
_dialogs_date_time_picker_time_picker___lambda77_ (DialogsDateTimePickerTimePicker* self)
{
#line 185 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	dialogs_date_time_picker_time_picker_update_time (self, FALSE);
#line 930 "TimePicker.c"
}

static void
__dialogs_date_time_picker_time_picker___lambda77__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                                                  gpointer self)
{
#line 184 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_dialogs_date_time_picker_time_picker___lambda77_ ((DialogsDateTimePickerTimePicker*) self);
#line 939 "TimePicker.c"
}

static void
_dialogs_date_time_picker_time_picker___lambda78_ (Block38Data* _data38_)
{
	DialogsDateTimePickerTimePicker* self;
	gboolean _tmp0_ = FALSE;
	Util* _tmp1_;
	Util* _tmp2_;
	gboolean _tmp3_;
	Util* _tmp12_;
	Util* _tmp13_;
	gboolean _tmp14_;
	GtkSpinButton* _tmp35_;
	GDateTime* _tmp36_;
	GDateTime* _tmp37_;
	GtkPopover* _tmp38_;
#line 217 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self = _data38_->self;
#line 219 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	dialogs_date_time_picker_time_picker_update_text (self, FALSE);
#line 220 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->changing_time = TRUE;
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp1_ = util_get_default ();
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp2_ = _tmp1_;
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp3_ = util_is_clock_format_12h (_tmp2_);
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (_tmp2_);
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (_tmp3_) {
#line 973 "TimePicker.c"
		GDateTime* _tmp4_;
		GDateTime* _tmp5_;
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp4_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp5_ = _tmp4_;
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp0_ = g_date_time_get_hour (_tmp5_) > 12;
#line 982 "TimePicker.c"
	} else {
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp0_ = FALSE;
#line 986 "TimePicker.c"
	}
#line 222 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (_tmp0_) {
#line 990 "TimePicker.c"
		GtkSpinButton* _tmp6_;
		GDateTime* _tmp7_;
		GDateTime* _tmp8_;
#line 223 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp6_ = self->priv->hours_spinbutton;
#line 223 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp7_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 223 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp8_ = _tmp7_;
#line 223 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_spin_button_set_value (_tmp6_, (gdouble) (g_date_time_get_hour (_tmp8_) - 12));
#line 1002 "TimePicker.c"
	} else {
		GtkSpinButton* _tmp9_;
		GDateTime* _tmp10_;
		GDateTime* _tmp11_;
#line 225 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp9_ = self->priv->hours_spinbutton;
#line 225 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp10_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 225 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp11_ = _tmp10_;
#line 225 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_spin_button_set_value (_tmp9_, (gdouble) g_date_time_get_hour (_tmp11_));
#line 1015 "TimePicker.c"
	}
#line 228 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp12_ = util_get_default ();
#line 228 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp13_ = _tmp12_;
#line 228 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp14_ = util_is_clock_format_12h (_tmp13_);
#line 228 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (_tmp13_);
#line 228 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (_tmp14_) {
#line 1027 "TimePicker.c"
		GraniteWidgetsModeButton* _tmp15_;
		GraniteWidgetsModeButton* _tmp16_;
		GDateTime* _tmp17_;
		GDateTime* _tmp18_;
		GtkSpinButton* _tmp28_;
#line 229 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp15_ = self->priv->am_pm_modebutton;
#line 229 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_widget_set_no_show_all ((GtkWidget*) _tmp15_, FALSE);
#line 230 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp16_ = self->priv->am_pm_modebutton;
#line 230 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_widget_show_all ((GtkWidget*) _tmp16_);
#line 232 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp17_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 232 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp18_ = _tmp17_;
#line 232 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		if (g_date_time_get_hour (_tmp18_) > 12) {
#line 1047 "TimePicker.c"
			GtkSpinButton* _tmp19_;
			GDateTime* _tmp20_;
			GDateTime* _tmp21_;
#line 233 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp19_ = self->priv->hours_spinbutton;
#line 233 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp20_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 233 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp21_ = _tmp20_;
#line 233 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			gtk_spin_button_set_value (_tmp19_, (gdouble) (g_date_time_get_hour (_tmp21_) - 12));
#line 1059 "TimePicker.c"
		} else {
			GDateTime* _tmp22_;
			GDateTime* _tmp23_;
#line 234 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp22_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 234 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			_tmp23_ = _tmp22_;
#line 234 "../src/Dialogs/DateTimePicker/TimePicker.vala"
			if (g_date_time_get_hour (_tmp23_) == 0) {
#line 1069 "TimePicker.c"
				GtkSpinButton* _tmp24_;
#line 235 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp24_ = self->priv->hours_spinbutton;
#line 235 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				gtk_spin_button_set_value (_tmp24_, (gdouble) 12);
#line 1075 "TimePicker.c"
			} else {
				GtkSpinButton* _tmp25_;
				GDateTime* _tmp26_;
				GDateTime* _tmp27_;
#line 237 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp25_ = self->priv->hours_spinbutton;
#line 237 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp26_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 237 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				_tmp27_ = _tmp26_;
#line 237 "../src/Dialogs/DateTimePicker/TimePicker.vala"
				gtk_spin_button_set_value (_tmp25_, (gdouble) g_date_time_get_hour (_tmp27_));
#line 1088 "TimePicker.c"
			}
		}
#line 241 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp28_ = self->priv->hours_spinbutton;
#line 241 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_spin_button_set_range (_tmp28_, (gdouble) 1, (gdouble) 12);
#line 1095 "TimePicker.c"
	} else {
		GraniteWidgetsModeButton* _tmp29_;
		GraniteWidgetsModeButton* _tmp30_;
		GtkSpinButton* _tmp31_;
		GDateTime* _tmp32_;
		GDateTime* _tmp33_;
		GtkSpinButton* _tmp34_;
#line 243 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp29_ = self->priv->am_pm_modebutton;
#line 243 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_widget_set_no_show_all ((GtkWidget*) _tmp29_, TRUE);
#line 244 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp30_ = self->priv->am_pm_modebutton;
#line 244 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_widget_hide ((GtkWidget*) _tmp30_);
#line 245 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp31_ = self->priv->hours_spinbutton;
#line 245 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp32_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 245 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp33_ = _tmp32_;
#line 245 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_spin_button_set_value (_tmp31_, (gdouble) g_date_time_get_hour (_tmp33_));
#line 247 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp34_ = self->priv->hours_spinbutton;
#line 247 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		gtk_spin_button_set_range (_tmp34_, (gdouble) 0, (gdouble) 23);
#line 1123 "TimePicker.c"
	}
#line 250 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp35_ = self->priv->minutes_spinbutton;
#line 250 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp36_ = dialogs_date_time_picker_time_picker_get_time (self);
#line 250 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp37_ = _tmp36_;
#line 250 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_spin_button_set_value (_tmp35_, (gdouble) g_date_time_get_minute (_tmp37_));
#line 251 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->changing_time = FALSE;
#line 253 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp38_ = _data38_->popover;
#line 253 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp38_);
#line 1139 "TimePicker.c"
}

static void
__dialogs_date_time_picker_time_picker___lambda78__gtk_button_clicked (GtkButton* _sender,
                                                                       gpointer self)
{
#line 217 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_dialogs_date_time_picker_time_picker___lambda78_ (self);
#line 1148 "TimePicker.c"
}

static void
_dialogs_date_time_picker_time_picker___lambda79_ (DialogsDateTimePickerTimePicker* self)
{
	GtkStack* _tmp0_;
#line 257 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = self->priv->time_stack;
#line 257 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_stack_set_visible_child_name (_tmp0_, "time-box");
#line 258 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	dialogs_date_time_picker_time_picker_update_text (self, FALSE);
#line 1161 "TimePicker.c"
}

static void
__dialogs_date_time_picker_time_picker___lambda79__gtk_button_clicked (GtkButton* _sender,
                                                                       gpointer self)
{
#line 256 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_dialogs_date_time_picker_time_picker___lambda79_ ((DialogsDateTimePickerTimePicker*) self);
#line 1170 "TimePicker.c"
}

static void
_dialogs_date_time_picker_time_picker___lambda80_ (DialogsDateTimePickerTimePicker* self)
{
	GtkStack* _tmp0_;
#line 262 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = self->priv->time_stack;
#line 262 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_stack_set_visible_child_name (_tmp0_, "add-time");
#line 1181 "TimePicker.c"
}

static void
__dialogs_date_time_picker_time_picker___lambda80__gtk_button_clicked (GtkButton* _sender,
                                                                       gpointer self)
{
#line 261 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_dialogs_date_time_picker_time_picker___lambda80_ ((DialogsDateTimePickerTimePicker*) self);
#line 1190 "TimePicker.c"
}

static GObject *
dialogs_date_time_picker_time_picker_constructor (GType type,
                                                  guint n_construct_properties,
                                                  GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	DialogsDateTimePickerTimePicker * self;
	Block38Data* _data38_;
	WidgetsDynamicIcon* time_icon = NULL;
	WidgetsDynamicIcon* _tmp0_;
	WidgetsDynamicIcon* _tmp1_;
	WidgetsDynamicIcon* _tmp2_;
	GtkLabel* title_label = NULL;
	GtkLabel* _tmp3_;
	GtkLabel* _tmp4_;
	GtkStyleContext* _tmp5_;
	GtkButton* _tmp6_ = NULL;
	GtkButton* _tmp7_;
	GtkStyleContext* _tmp8_;
	GtkButton* _tmp9_;
	GtkStyleContext* _tmp10_;
	WidgetsDynamicIcon* close_circle_icon = NULL;
	WidgetsDynamicIcon* _tmp11_;
	WidgetsDynamicIcon* _tmp12_;
	WidgetsDynamicIcon* _tmp13_;
	GtkButton* no_time_button = NULL;
	GtkButton* _tmp14_ = NULL;
	GtkButton* _tmp15_;
	WidgetsDynamicIcon* _tmp16_;
	GtkButton* _tmp17_;
	GtkStyleContext* _tmp18_;
	GtkGrid* time_grid = NULL;
	GtkGrid* _tmp19_;
	GtkGrid* _tmp20_;
	GtkButton* _tmp21_;
	GtkGrid* _tmp22_;
	GtkButton* _tmp23_;
	WidgetsDynamicIcon* add_circle_icon = NULL;
	WidgetsDynamicIcon* _tmp24_;
	WidgetsDynamicIcon* _tmp25_;
	WidgetsDynamicIcon* _tmp26_;
	GtkButton* add_time_button = NULL;
	GtkButton* _tmp27_ = NULL;
	GtkButton* _tmp28_;
	WidgetsDynamicIcon* _tmp29_;
	GtkButton* _tmp30_;
	GtkStyleContext* _tmp31_;
	GtkStack* _tmp32_ = NULL;
	GtkStack* _tmp33_;
	GtkButton* _tmp34_;
	GtkStack* _tmp35_;
	GtkGrid* _tmp36_;
	GtkBox* timepicker_box = NULL;
	GtkBox* _tmp37_ = NULL;
	GtkBox* _tmp38_;
	WidgetsDynamicIcon* _tmp39_;
	GtkBox* _tmp40_;
	GtkLabel* _tmp41_;
	GtkBox* _tmp42_;
	GtkStack* _tmp43_;
	const gchar* _tmp44_;
	const gchar* _tmp47_;
	GraniteWidgetsModeButton* _tmp50_ = NULL;
	GraniteWidgetsModeButton* _tmp51_;
	GraniteWidgetsModeButton* _tmp52_;
	GraniteWidgetsModeButton* _tmp53_;
	Util* _tmp54_;
	Util* _tmp55_;
	gboolean _tmp56_;
	GtkSpinButton* _tmp59_;
	GtkSpinButton* _tmp60_;
	GtkSpinButton* _tmp61_;
	GtkSpinButton* _tmp62_;
	GtkSpinButton* _tmp63_;
	GtkSpinButton* _tmp64_;
	GtkSpinButton* _tmp65_;
	GtkLabel* separation_label = NULL;
	GtkLabel* _tmp66_;
	GtkGrid* pop_grid = NULL;
	GtkGrid* _tmp67_;
	GtkGrid* _tmp68_;
	GtkGrid* _tmp69_;
	GtkGrid* _tmp70_;
	GtkSpinButton* _tmp71_;
	GtkGrid* _tmp72_;
	GtkLabel* _tmp73_;
	GtkGrid* _tmp74_;
	GtkSpinButton* _tmp75_;
	GtkGrid* _tmp76_;
	GraniteWidgetsModeButton* _tmp77_;
	GtkGrid* _tmp78_;
	GtkButton* _tmp79_;
	GtkPopover* _tmp80_;
	GtkPopover* _tmp81_;
	GtkPopover* _tmp82_;
	GtkGrid* _tmp83_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp84_ = NULL;
	GtkGrid* _tmp85_;
	GtkBox* _tmp86_;
	GtkStyleContext* main_grid_context = NULL;
	GtkGrid* _tmp87_;
	GtkStyleContext* _tmp88_;
	GtkStyleContext* _tmp89_;
	GtkGrid* _tmp90_;
	GtkButton* _tmp91_;
	GtkButton* _tmp92_;
	GtkButton* _tmp93_;
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	parent_class = G_OBJECT_CLASS (dialogs_date_time_picker_time_picker_parent_class);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePicker);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_data38_ = g_slice_new0 (Block38Data);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_data38_->_ref_count_ = 1;
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_data38_->self = g_object_ref (self);
#line 73 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = widgets_dynamic_icon_new ();
#line 73 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp0_);
#line 73 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	time_icon = _tmp0_;
#line 74 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp1_ = time_icon;
#line 74 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	widgets_dynamic_icon_set_size (_tmp1_, 19);
#line 75 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp2_ = time_icon;
#line 75 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	widgets_dynamic_icon_update_icon_name (_tmp2_, "planner-clock");
#line 77 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp3_ = (GtkLabel*) gtk_label_new (_ ("Time"));
#line 77 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp3_);
#line 77 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	title_label = _tmp3_;
#line 78 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp4_ = title_label;
#line 78 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) _tmp4_);
#line 78 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_style_context_add_class (_tmp5_, "font-weight-500");
#line 80 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp6_ = (GtkButton*) gtk_button_new_with_label (_ (""));
#line 80 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp6_, GTK_ALIGN_CENTER);
#line 80 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp6_, FALSE);
#line 80 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp6_);
#line 80 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (self->priv->time_button);
#line 80 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->time_button = _tmp6_;
#line 85 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp7_ = self->priv->time_button;
#line 85 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp8_ = gtk_widget_get_style_context ((GtkWidget*) _tmp7_);
#line 85 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_style_context_add_class (_tmp8_, "time-button-picker");
#line 86 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp9_ = self->priv->time_button;
#line 86 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp10_ = gtk_widget_get_style_context ((GtkWidget*) _tmp9_);
#line 86 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_style_context_add_class (_tmp10_, GTK_STYLE_CLASS_FLAT);
#line 88 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp11_ = widgets_dynamic_icon_new ();
#line 88 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp11_);
#line 88 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	close_circle_icon = _tmp11_;
#line 89 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp12_ = close_circle_icon;
#line 89 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	widgets_dynamic_icon_set_size (_tmp12_, 19);
#line 90 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp13_ = close_circle_icon;
#line 90 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	widgets_dynamic_icon_update_icon_name (_tmp13_, "planner-close-circle");
#line 92 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp14_ = (GtkButton*) gtk_button_new ();
#line 92 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp14_, GTK_ALIGN_CENTER);
#line 92 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp14_, GTK_ALIGN_CENTER);
#line 92 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp14_, FALSE);
#line 92 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp14_);
#line 92 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	no_time_button = _tmp14_;
#line 97 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp15_ = no_time_button;
#line 97 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp16_ = close_circle_icon;
#line 97 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp15_, (GtkWidget*) _tmp16_);
#line 98 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp17_ = no_time_button;
#line 98 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp18_ = gtk_widget_get_style_context ((GtkWidget*) _tmp17_);
#line 98 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_style_context_add_class (_tmp18_, GTK_STYLE_CLASS_FLAT);
#line 100 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp19_ = (GtkGrid*) gtk_grid_new ();
#line 100 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp19_);
#line 100 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	time_grid = _tmp19_;
#line 101 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp20_ = time_grid;
#line 101 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp21_ = self->priv->time_button;
#line 101 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp20_, (GtkWidget*) _tmp21_);
#line 102 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp22_ = time_grid;
#line 102 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp23_ = no_time_button;
#line 102 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp22_, (GtkWidget*) _tmp23_);
#line 104 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp24_ = widgets_dynamic_icon_new ();
#line 104 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp24_);
#line 104 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	add_circle_icon = _tmp24_;
#line 105 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp25_ = add_circle_icon;
#line 105 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	widgets_dynamic_icon_set_size (_tmp25_, 19);
#line 106 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp26_ = add_circle_icon;
#line 106 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	widgets_dynamic_icon_update_icon_name (_tmp26_, "planner-plus-circle");
#line 108 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp27_ = (GtkButton*) gtk_button_new ();
#line 108 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp27_, GTK_ALIGN_CENTER);
#line 108 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp27_, GTK_ALIGN_END);
#line 108 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp27_, FALSE);
#line 108 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp27_);
#line 108 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	add_time_button = _tmp27_;
#line 113 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp28_ = add_time_button;
#line 113 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp29_ = add_circle_icon;
#line 113 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp28_, (GtkWidget*) _tmp29_);
#line 114 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp30_ = add_time_button;
#line 114 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp31_ = gtk_widget_get_style_context ((GtkWidget*) _tmp30_);
#line 114 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_style_context_add_class (_tmp31_, GTK_STYLE_CLASS_FLAT);
#line 116 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp32_ = (GtkStack*) gtk_stack_new ();
#line 116 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_stack_set_transition_type (_tmp32_, GTK_STACK_TRANSITION_TYPE_CROSSFADE);
#line 116 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_stack_set_homogeneous (_tmp32_, FALSE);
#line 116 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp32_);
#line 116 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (self->priv->time_stack);
#line 116 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->time_stack = _tmp32_;
#line 120 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp33_ = self->priv->time_stack;
#line 120 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp34_ = add_time_button;
#line 120 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_stack_add_named (_tmp33_, (GtkWidget*) _tmp34_, "add-time");
#line 121 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp35_ = self->priv->time_stack;
#line 121 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp36_ = time_grid;
#line 121 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_stack_add_named (_tmp35_, (GtkWidget*) _tmp36_, "time-box");
#line 123 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp37_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
#line 123 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp37_, 3);
#line 123 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp37_, TRUE);
#line 123 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp37_);
#line 123 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	timepicker_box = _tmp37_;
#line 127 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp38_ = timepicker_box;
#line 127 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp39_ = time_icon;
#line 127 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_box_pack_start (_tmp38_, (GtkWidget*) _tmp39_, FALSE, FALSE, (guint) 0);
#line 128 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp40_ = timepicker_box;
#line 128 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp41_ = title_label;
#line 128 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_box_pack_start (_tmp40_, (GtkWidget*) _tmp41_, FALSE, TRUE, (guint) 6);
#line 129 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp42_ = timepicker_box;
#line 129 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp43_ = self->priv->time_stack;
#line 129 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_box_pack_end (_tmp42_, (GtkWidget*) _tmp43_, FALSE, FALSE, (guint) 0);
#line 135 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp44_ = self->priv->_format_12;
#line 135 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (_tmp44_ == NULL) {
#line 1514 "TimePicker.c"
		gchar* _tmp45_;
		gchar* _tmp46_;
#line 136 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp45_ = granite_date_time_get_default_time_format (TRUE, FALSE);
#line 136 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp46_ = _tmp45_;
#line 136 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		dialogs_date_time_picker_time_picker_set_format_12 (self, _tmp46_);
#line 136 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_free0 (_tmp46_);
#line 1525 "TimePicker.c"
	}
#line 139 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp47_ = self->priv->_format_24;
#line 139 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (_tmp47_ == NULL) {
#line 1531 "TimePicker.c"
		gchar* _tmp48_;
		gchar* _tmp49_;
#line 140 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp48_ = granite_date_time_get_default_time_format (FALSE, FALSE);
#line 140 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp49_ = _tmp48_;
#line 140 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		dialogs_date_time_picker_time_picker_set_format_24 (self, _tmp49_);
#line 140 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_free0 (_tmp49_);
#line 1542 "TimePicker.c"
	}
#line 143 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp50_ = granite_widgets_mode_button_new ();
#line 143 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp50_, TRUE);
#line 143 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp50_, GTK_ORIENTATION_VERTICAL);
#line 143 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_no_show_all ((GtkWidget*) _tmp50_, TRUE);
#line 143 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp50_);
#line 143 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (self->priv->am_pm_modebutton);
#line 143 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->am_pm_modebutton = _tmp50_;
#line 148 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp51_ = self->priv->am_pm_modebutton;
#line 148 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	granite_widgets_mode_button_append_text (_tmp51_, _ ("AM"));
#line 149 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp52_ = self->priv->am_pm_modebutton;
#line 149 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	granite_widgets_mode_button_append_text (_tmp52_, _ ("PM"));
#line 151 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp53_ = self->priv->am_pm_modebutton;
#line 151 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_signal_connect_object (_tmp53_, "mode-changed", (GCallback) __dialogs_date_time_picker_time_picker___lambda75__granite_widgets_mode_button_mode_changed, self, 0);
#line 169 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp54_ = util_get_default ();
#line 169 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp55_ = _tmp54_;
#line 169 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp56_ = util_is_clock_format_12h (_tmp55_);
#line 169 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (_tmp55_);
#line 169 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	if (_tmp56_) {
#line 1580 "TimePicker.c"
		GtkSpinButton* _tmp57_;
#line 170 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp57_ = (GtkSpinButton*) gtk_spin_button_new_with_range ((gdouble) 1, (gdouble) 12, (gdouble) 1);
#line 170 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_object_ref_sink (_tmp57_);
#line 170 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_object_unref0 (self->priv->hours_spinbutton);
#line 170 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		self->priv->hours_spinbutton = _tmp57_;
#line 1590 "TimePicker.c"
	} else {
		GtkSpinButton* _tmp58_;
#line 172 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_tmp58_ = (GtkSpinButton*) gtk_spin_button_new_with_range ((gdouble) 0, (gdouble) 23, (gdouble) 1);
#line 172 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_object_ref_sink (_tmp58_);
#line 172 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		_g_object_unref0 (self->priv->hours_spinbutton);
#line 172 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		self->priv->hours_spinbutton = _tmp58_;
#line 1601 "TimePicker.c"
	}
#line 175 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp59_ = self->priv->hours_spinbutton;
#line 175 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp59_, GTK_ORIENTATION_VERTICAL);
#line 176 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp60_ = self->priv->hours_spinbutton;
#line 176 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_spin_button_set_wrap (_tmp60_, TRUE);
#line 177 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp61_ = self->priv->hours_spinbutton;
#line 177 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_signal_connect_object (_tmp61_, "value-changed", (GCallback) __dialogs_date_time_picker_time_picker___lambda76__gtk_spin_button_value_changed, self, 0);
#line 181 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp62_ = (GtkSpinButton*) gtk_spin_button_new_with_range ((gdouble) 0, (gdouble) 59, (gdouble) 1);
#line 181 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp62_);
#line 181 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (self->priv->minutes_spinbutton);
#line 181 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->minutes_spinbutton = _tmp62_;
#line 182 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp63_ = self->priv->minutes_spinbutton;
#line 182 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp63_, GTK_ORIENTATION_VERTICAL);
#line 183 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp64_ = self->priv->minutes_spinbutton;
#line 183 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_spin_button_set_wrap (_tmp64_, TRUE);
#line 184 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp65_ = self->priv->minutes_spinbutton;
#line 184 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_signal_connect_object (_tmp65_, "value-changed", (GCallback) __dialogs_date_time_picker_time_picker___lambda77__gtk_spin_button_value_changed, self, 0);
#line 188 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp66_ = (GtkLabel*) gtk_label_new (_ (":"));
#line 188 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp66_);
#line 188 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	separation_label = _tmp66_;
#line 190 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp67_ = (GtkGrid*) gtk_grid_new ();
#line 190 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp67_);
#line 190 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	pop_grid = _tmp67_;
#line 191 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp68_ = pop_grid;
#line 191 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_grid_set_column_spacing (_tmp68_, 6);
#line 192 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp69_ = pop_grid;
#line 192 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_grid_set_row_spacing (_tmp69_, 6);
#line 193 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp70_ = pop_grid;
#line 193 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp71_ = self->priv->hours_spinbutton;
#line 193 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_grid_attach (_tmp70_, (GtkWidget*) _tmp71_, 0, 0, 1, 1);
#line 194 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp72_ = pop_grid;
#line 194 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp73_ = separation_label;
#line 194 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_grid_attach (_tmp72_, (GtkWidget*) _tmp73_, 1, 0, 1, 1);
#line 195 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp74_ = pop_grid;
#line 195 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp75_ = self->priv->minutes_spinbutton;
#line 195 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_grid_attach (_tmp74_, (GtkWidget*) _tmp75_, 2, 0, 1, 1);
#line 196 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp76_ = pop_grid;
#line 196 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp77_ = self->priv->am_pm_modebutton;
#line 196 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_grid_attach (_tmp76_, (GtkWidget*) _tmp77_, 3, 0, 1, 1);
#line 197 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp78_ = pop_grid;
#line 197 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_set ((GtkWidget*) _tmp78_, "margin", 6, NULL);
#line 199 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp79_ = self->priv->time_button;
#line 199 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp80_ = (GtkPopover*) gtk_popover_new ((GtkWidget*) _tmp79_);
#line 199 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp80_);
#line 199 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_data38_->popover = _tmp80_;
#line 200 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp81_ = _data38_->popover;
#line 200 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_popover_set_position (_tmp81_, GTK_POS_BOTTOM);
#line 201 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp82_ = _data38_->popover;
#line 201 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp83_ = pop_grid;
#line 201 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp82_, (GtkWidget*) _tmp83_);
#line 203 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp84_ = (GtkGrid*) gtk_grid_new ();
#line 203 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp84_, TRUE);
#line 203 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_set ((GtkWidget*) _tmp84_, "margin", 9, NULL);
#line 203 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp84_, 0);
#line 203 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp84_, 12);
#line 203 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_ref_sink (_tmp84_);
#line 203 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	main_grid = _tmp84_;
#line 210 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp85_ = main_grid;
#line 210 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp86_ = timepicker_box;
#line 210 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp85_, (GtkWidget*) _tmp86_);
#line 212 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp87_ = main_grid;
#line 212 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp88_ = gtk_widget_get_style_context ((GtkWidget*) _tmp87_);
#line 212 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	main_grid_context = _tmp88_;
#line 213 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp89_ = main_grid_context;
#line 213 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_style_context_add_class (_tmp89_, "picker-content");
#line 215 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp90_ = main_grid;
#line 215 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp90_);
#line 217 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp91_ = self->priv->time_button;
#line 217 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_signal_connect_data (_tmp91_, "clicked", (GCallback) __dialogs_date_time_picker_time_picker___lambda78__gtk_button_clicked, block38_data_ref (_data38_), (GClosureNotify) block38_data_unref, 0);
#line 256 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp92_ = add_time_button;
#line 256 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_signal_connect_object (_tmp92_, "clicked", (GCallback) __dialogs_date_time_picker_time_picker___lambda79__gtk_button_clicked, self, 0);
#line 261 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp93_ = no_time_button;
#line 261 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_signal_connect_object (_tmp93_, "clicked", (GCallback) __dialogs_date_time_picker_time_picker___lambda80__gtk_button_clicked, self, 0);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (main_grid);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (pop_grid);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (separation_label);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (timepicker_box);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (add_time_button);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (add_circle_icon);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (time_grid);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (no_time_button);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (close_circle_icon);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (title_label);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (time_icon);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	block38_data_unref (_data38_);
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_data38_ = NULL;
#line 72 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	return obj;
#line 1775 "TimePicker.c"
}

static void
dialogs_date_time_picker_time_picker_class_init (DialogsDateTimePickerTimePickerClass * klass,
                                                 gpointer klass_data)
{
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	dialogs_date_time_picker_time_picker_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_type_class_adjust_private_offset (klass, &DialogsDateTimePickerTimePicker_private_offset);
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_dialogs_date_time_picker_time_picker_get_property;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_dialogs_date_time_picker_time_picker_set_property;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	G_OBJECT_CLASS (klass)->constructor = dialogs_date_time_picker_time_picker_constructor;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	G_OBJECT_CLASS (klass)->finalize = dialogs_date_time_picker_time_picker_finalize;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_12_PROPERTY, dialogs_date_time_picker_time_picker_properties[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_12_PROPERTY] = g_param_spec_string ("format-12", "format-12", "format-12", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_24_PROPERTY, dialogs_date_time_picker_time_picker_properties[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_24_PROPERTY] = g_param_spec_string ("format-24", "format-24", "format-24", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_PROPERTY, dialogs_date_time_picker_time_picker_properties[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_PROPERTY] = g_param_spec_boxed ("time", "time", "time", G_TYPE_DATE_TIME, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_DATE_TIME_PICKER_TIME_PICKER_HAS_TIME_PROPERTY, dialogs_date_time_picker_time_picker_properties[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_HAS_TIME_PROPERTY] = g_param_spec_boolean ("has-time", "has-time", "has-time", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	dialogs_date_time_picker_time_picker_signals[DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_CHANGED_SIGNAL] = g_signal_new ("time-changed", DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 1804 "TimePicker.c"
}

static void
dialogs_date_time_picker_time_picker_instance_init (DialogsDateTimePickerTimePicker * self,
                                                    gpointer klass)
{
	gchar* _tmp0_;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv = dialogs_date_time_picker_time_picker_get_instance_private (self);
#line 32 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->_time = NULL;
#line 67 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_tmp0_ = g_strdup ("");
#line 67 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->old_string = _tmp0_;
#line 68 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self->priv->changing_time = FALSE;
#line 1822 "TimePicker.c"
}

static void
dialogs_date_time_picker_time_picker_finalize (GObject * obj)
{
	DialogsDateTimePickerTimePicker * self;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePicker);
#line 23 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (self->priv->time_button);
#line 24 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (self->priv->am_pm_modebutton);
#line 25 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (self->priv->hours_spinbutton);
#line 26 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (self->priv->minutes_spinbutton);
#line 27 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_object_unref0 (self->priv->time_stack);
#line 29 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_free0 (self->priv->_format_12);
#line 30 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_free0 (self->priv->_format_24);
#line 32 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_date_time_unref0 (self->priv->_time);
#line 67 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	_g_free0 (self->priv->old_string);
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	G_OBJECT_CLASS (dialogs_date_time_picker_time_picker_parent_class)->finalize (obj);
#line 1851 "TimePicker.c"
}

static GType
dialogs_date_time_picker_time_picker_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (DialogsDateTimePickerTimePickerClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) dialogs_date_time_picker_time_picker_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (DialogsDateTimePickerTimePicker), 0, (GInstanceInitFunc) dialogs_date_time_picker_time_picker_instance_init, NULL };
	GType dialogs_date_time_picker_time_picker_type_id;
	dialogs_date_time_picker_time_picker_type_id = g_type_register_static (gtk_event_box_get_type (), "DialogsDateTimePickerTimePicker", &g_define_type_info, 0);
	DialogsDateTimePickerTimePicker_private_offset = g_type_add_instance_private (dialogs_date_time_picker_time_picker_type_id, sizeof (DialogsDateTimePickerTimePickerPrivate));
	return dialogs_date_time_picker_time_picker_type_id;
}

GType
dialogs_date_time_picker_time_picker_get_type (void)
{
	static volatile gsize dialogs_date_time_picker_time_picker_type_id__volatile = 0;
	if (g_once_init_enter (&dialogs_date_time_picker_time_picker_type_id__volatile)) {
		GType dialogs_date_time_picker_time_picker_type_id;
		dialogs_date_time_picker_time_picker_type_id = dialogs_date_time_picker_time_picker_get_type_once ();
		g_once_init_leave (&dialogs_date_time_picker_time_picker_type_id__volatile, dialogs_date_time_picker_time_picker_type_id);
	}
	return dialogs_date_time_picker_time_picker_type_id__volatile;
}

static void
_vala_dialogs_date_time_picker_time_picker_get_property (GObject * object,
                                                         guint property_id,
                                                         GValue * value,
                                                         GParamSpec * pspec)
{
	DialogsDateTimePickerTimePicker * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePicker);
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	switch (property_id) {
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_12_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_value_set_string (value, dialogs_date_time_picker_time_picker_get_format_12 (self));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_24_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_value_set_string (value, dialogs_date_time_picker_time_picker_get_format_24 (self));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_value_set_boxed (value, dialogs_date_time_picker_time_picker_get_time (self));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_TIME_PICKER_HAS_TIME_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		g_value_set_boolean (value, dialogs_date_time_picker_time_picker_get_has_time (self));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 1910 "TimePicker.c"
		default:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 1916 "TimePicker.c"
	}
}

static void
_vala_dialogs_date_time_picker_time_picker_set_property (GObject * object,
                                                         guint property_id,
                                                         const GValue * value,
                                                         GParamSpec * pspec)
{
	DialogsDateTimePickerTimePicker * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePicker);
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
	switch (property_id) {
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_12_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		dialogs_date_time_picker_time_picker_set_format_12 (self, g_value_get_string (value));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_TIME_PICKER_FORMAT_24_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		dialogs_date_time_picker_time_picker_set_format_24 (self, g_value_get_string (value));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_TIME_PICKER_TIME_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		dialogs_date_time_picker_time_picker_set_time (self, g_value_get_boxed (value));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_TIME_PICKER_HAS_TIME_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		dialogs_date_time_picker_time_picker_set_has_time (self, g_value_get_boolean (value));
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 1954 "TimePicker.c"
		default:
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Dialogs/DateTimePicker/TimePicker.vala"
		break;
#line 1960 "TimePicker.c"
	}
}


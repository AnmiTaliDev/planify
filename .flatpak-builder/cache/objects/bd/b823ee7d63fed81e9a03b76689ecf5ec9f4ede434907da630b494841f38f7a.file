/* DateTimePicker.c generated by valac 0.50.10, the Vala compiler
 * generated from DateTimePicker.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 3 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alainmh23@gmail.com>
*/

#include <handy.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include <glib/gi18n-lib.h>
#include <granite.h>
#include <stdlib.h>
#include <string.h>
#include <gdk/gdk.h>

#define DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER (dialogs_date_time_picker_date_time_picker_get_type ())
#define DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER, DialogsDateTimePickerDateTimePicker))
#define DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER, DialogsDateTimePickerDateTimePickerClass))
#define DIALOGS_DATE_TIME_PICKER_IS_DATE_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER))
#define DIALOGS_DATE_TIME_PICKER_IS_DATE_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER))
#define DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER, DialogsDateTimePickerDateTimePickerClass))

typedef struct _DialogsDateTimePickerDateTimePicker DialogsDateTimePickerDateTimePicker;
typedef struct _DialogsDateTimePickerDateTimePickerClass DialogsDateTimePickerDateTimePickerClass;
typedef struct _DialogsDateTimePickerDateTimePickerPrivate DialogsDateTimePickerDateTimePickerPrivate;

#define DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER (dialogs_date_time_picker_time_picker_get_type ())
#define DIALOGS_DATE_TIME_PICKER_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePicker))
#define DIALOGS_DATE_TIME_PICKER_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePickerClass))
#define DIALOGS_DATE_TIME_PICKER_IS_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER))
#define DIALOGS_DATE_TIME_PICKER_IS_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER))
#define DIALOGS_DATE_TIME_PICKER_TIME_PICKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_DATE_TIME_PICKER_TYPE_TIME_PICKER, DialogsDateTimePickerTimePickerClass))

typedef struct _DialogsDateTimePickerTimePicker DialogsDateTimePickerTimePicker;
typedef struct _DialogsDateTimePickerTimePickerClass DialogsDateTimePickerTimePickerClass;
enum  {
	DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_0_PROPERTY,
	DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATETIME_PROPERTY,
	DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_NUM_PROPERTIES
};
static GParamSpec* dialogs_date_time_picker_date_time_picker_properties[DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))

#define TYPE_PLANNER (planner_get_type ())
#define PLANNER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PLANNER, Planner))
#define PLANNER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_PLANNER, PlannerClass))
#define IS_PLANNER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PLANNER))
#define IS_PLANNER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_PLANNER))
#define PLANNER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PLANNER, PlannerClass))

typedef struct _Planner Planner;
typedef struct _PlannerClass PlannerClass;
typedef struct _PlannerPrivate PlannerPrivate;

#define TYPE_MAIN_WINDOW (main_window_get_type ())
#define MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MAIN_WINDOW, MainWindow))
#define MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_MAIN_WINDOW, MainWindowClass))
#define IS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MAIN_WINDOW))
#define IS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_MAIN_WINDOW))
#define MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MAIN_WINDOW, MainWindowClass))

typedef struct _MainWindow MainWindow;
typedef struct _MainWindowClass MainWindowClass;

#define TYPE_UTIL (util_get_type ())
#define UTIL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTIL, Util))
#define UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTIL, UtilClass))
#define IS_UTIL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTIL))
#define IS_UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTIL))
#define UTIL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTIL, UtilClass))

typedef struct _Util Util;
typedef struct _UtilClass UtilClass;

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM (dialogs_context_menu_menu_item_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItem))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItemClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItemClass))

typedef struct _DialogsContextMenuMenuItem DialogsContextMenuMenuItem;
typedef struct _DialogsContextMenuMenuItemClass DialogsContextMenuMenuItemClass;
#define _g_free0(var) (var = (g_free (var), NULL))

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER (dialogs_context_menu_menu_calendar_picker_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPicker))
#define DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPickerClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_CALENDAR_PICKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER))
#define DIALOGS_CONTEXT_MENU_IS_MENU_CALENDAR_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER))
#define DIALOGS_CONTEXT_MENU_MENU_CALENDAR_PICKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_CALENDAR_PICKER, DialogsContextMenuMenuCalendarPickerClass))

typedef struct _DialogsContextMenuMenuCalendarPicker DialogsContextMenuMenuCalendarPicker;
typedef struct _DialogsContextMenuMenuCalendarPickerClass DialogsContextMenuMenuCalendarPickerClass;
enum  {
	DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATE_CHANGED_SIGNAL,
	DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_NUM_SIGNALS
};
static guint dialogs_date_time_picker_date_time_picker_signals[DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_NUM_SIGNALS] = {0};

struct _DialogsDateTimePickerDateTimePicker {
	HdyWindow parent_instance;
	DialogsDateTimePickerDateTimePickerPrivate * priv;
};

struct _DialogsDateTimePickerDateTimePickerClass {
	HdyWindowClass parent_class;
};

struct _DialogsDateTimePickerDateTimePickerPrivate {
	DialogsDateTimePickerTimePicker* time_picker;
	GtkButton* cancel_clear_button;
	GDateTime* _datetime;
};

struct _Planner {
	GtkApplication parent_instance;
	PlannerPrivate * priv;
	MainWindow* main_window;
};

struct _PlannerClass {
	GtkApplicationClass parent_class;
};

static gint DialogsDateTimePickerDateTimePicker_private_offset;
static gpointer dialogs_date_time_picker_date_time_picker_parent_class = NULL;

GType dialogs_date_time_picker_date_time_picker_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsDateTimePickerDateTimePicker, g_object_unref)
GType dialogs_date_time_picker_time_picker_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsDateTimePickerTimePicker, g_object_unref)
DialogsDateTimePickerDateTimePicker* dialogs_date_time_picker_date_time_picker_new (void);
DialogsDateTimePickerDateTimePicker* dialogs_date_time_picker_date_time_picker_construct (GType object_type);
GType planner_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Planner, g_object_unref)
Planner* planner_get_instance (void);
GType main_window_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (MainWindow, g_object_unref)
static void dialogs_date_time_picker_date_time_picker_set_date (DialogsDateTimePickerDateTimePicker* self,
                                                         GDateTime* date);
GType util_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Util, g_object_unref)
Util* util_get_default (void);
GDateTime* util_get_format_date (Util* self,
                                 GDateTime* date);
static void dialogs_date_time_picker_date_time_picker_hide_destroy (DialogsDateTimePickerDateTimePicker* self);
static GDateTime* dialogs_date_time_picker_date_time_picker_add_date_time (DialogsDateTimePickerDateTimePicker* self,
                                                                    GDateTime* date,
                                                                    GDateTime* time);
static gboolean __lambda81_ (DialogsDateTimePickerDateTimePicker* self);
static gboolean ___lambda81__gsource_func (gpointer self);
void dialogs_date_time_picker_date_time_picker_popup (DialogsDateTimePickerDateTimePicker* self);
GDateTime* dialogs_date_time_picker_date_time_picker_get_datetime (DialogsDateTimePickerDateTimePicker* self);
gboolean dialogs_date_time_picker_time_picker_get_has_time (DialogsDateTimePickerTimePicker* self);
GDateTime* dialogs_date_time_picker_time_picker_get_time (DialogsDateTimePickerTimePicker* self);
void dialogs_date_time_picker_date_time_picker_set_datetime (DialogsDateTimePickerDateTimePicker* self,
                                                             GDateTime* value);
gboolean util_has_time (Util* self,
                        GDateTime* datetime);
void dialogs_date_time_picker_time_picker_set_time (DialogsDateTimePickerTimePicker* self,
                                                    GDateTime* value);
void dialogs_date_time_picker_time_picker_set_has_time (DialogsDateTimePickerTimePicker* self,
                                                        gboolean value);
static GObject * dialogs_date_time_picker_date_time_picker_constructor (GType type,
                                                                 guint n_construct_properties,
                                                                 GObjectConstructParam * construct_properties);
GType dialogs_context_menu_menu_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuItem, g_object_unref)
DialogsContextMenuMenuItem* dialogs_context_menu_menu_item_new (const gchar* title,
                                                                const gchar* icon_name);
DialogsContextMenuMenuItem* dialogs_context_menu_menu_item_construct (GType object_type,
                                                                      const gchar* title,
                                                                      const gchar* icon_name);
void dialogs_context_menu_menu_item_set_secondary_text (DialogsContextMenuMenuItem* self,
                                                        const gchar* value);
gchar* util_get_relative_date_from_date (Util* self,
                                         GDateTime* datetime);
GType dialogs_context_menu_menu_calendar_picker_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuCalendarPicker, g_object_unref)
DialogsContextMenuMenuCalendarPicker* dialogs_context_menu_menu_calendar_picker_new (const gchar* title);
DialogsContextMenuMenuCalendarPicker* dialogs_context_menu_menu_calendar_picker_construct (GType object_type,
                                                                                           const gchar* title);
DialogsDateTimePickerTimePicker* dialogs_date_time_picker_time_picker_new (void);
DialogsDateTimePickerTimePicker* dialogs_date_time_picker_time_picker_construct (GType object_type);
static gboolean _dialogs_date_time_picker_date_time_picker___lambda94_ (DialogsDateTimePickerDateTimePicker* self);
static gboolean __dialogs_date_time_picker_date_time_picker___lambda94__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                                                             GdkEventFocus* event,
                                                                                             gpointer self);
static gboolean _dialogs_date_time_picker_date_time_picker___lambda95_ (DialogsDateTimePickerDateTimePicker* self,
                                                                 GdkEventKey* key);
static gboolean __dialogs_date_time_picker_date_time_picker___lambda95__gtk_widget_key_release_event (GtkWidget* _sender,
                                                                                               GdkEventKey* event,
                                                                                               gpointer self);
static void _dialogs_date_time_picker_date_time_picker___lambda96_ (DialogsDateTimePickerDateTimePicker* self);
static void __dialogs_date_time_picker_date_time_picker___lambda96__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                                                           gpointer self);
static void _dialogs_date_time_picker_date_time_picker___lambda97_ (DialogsDateTimePickerDateTimePicker* self);
static void __dialogs_date_time_picker_date_time_picker___lambda97__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                                                           gpointer self);
static void _dialogs_date_time_picker_date_time_picker___lambda98_ (DialogsDateTimePickerDateTimePicker* self);
static void __dialogs_date_time_picker_date_time_picker___lambda98__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                                                           gpointer self);
static void _dialogs_date_time_picker_date_time_picker___lambda99_ (DialogsDateTimePickerDateTimePicker* self);
static void __dialogs_date_time_picker_date_time_picker___lambda99__gtk_button_clicked (GtkButton* _sender,
                                                                                 gpointer self);
static void _dialogs_date_time_picker_date_time_picker___lambda100_ (DialogsDateTimePickerDateTimePicker* self,
                                                              GDateTime* date);
static void __dialogs_date_time_picker_date_time_picker___lambda100__dialogs_context_menu_menu_calendar_picker_selection_changed (DialogsContextMenuMenuCalendarPicker* _sender,
                                                                                                                           GDateTime* date,
                                                                                                                           gpointer self);
static void _dialogs_date_time_picker_date_time_picker___lambda101_ (DialogsDateTimePickerDateTimePicker* self);
static void __dialogs_date_time_picker_date_time_picker___lambda101__gtk_button_clicked (GtkButton* _sender,
                                                                                  gpointer self);
static void dialogs_date_time_picker_date_time_picker_finalize (GObject * obj);
static GType dialogs_date_time_picker_date_time_picker_get_type_once (void);
static void _vala_dialogs_date_time_picker_date_time_picker_get_property (GObject * object,
                                                                   guint property_id,
                                                                   GValue * value,
                                                                   GParamSpec * pspec);
static void _vala_dialogs_date_time_picker_date_time_picker_set_property (GObject * object,
                                                                   guint property_id,
                                                                   const GValue * value,
                                                                   GParamSpec * pspec);

static inline gpointer
dialogs_date_time_picker_date_time_picker_get_instance_private (DialogsDateTimePickerDateTimePicker* self)
{
	return G_STRUCT_MEMBER_P (self, DialogsDateTimePickerDateTimePicker_private_offset);
}

DialogsDateTimePickerDateTimePicker*
dialogs_date_time_picker_date_time_picker_construct (GType object_type)
{
	DialogsDateTimePickerDateTimePicker * self = NULL;
	Planner* _tmp0_;
	Planner* _tmp1_;
	MainWindow* _tmp2_;
	GtkWidget* _tmp3_;
#line 57 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = planner_get_instance ();
#line 57 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp1_ = _tmp0_;
#line 57 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp2_ = _tmp1_->main_window;
#line 57 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp3_ = gtk_widget_get_toplevel ((GtkWidget*) _tmp2_);
#line 57 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self = (DialogsDateTimePickerDateTimePicker*) g_object_new (object_type, "transient-for", G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, gtk_window_get_type (), GtkWindow), "destroy-with-parent", TRUE, "window-position", GTK_WIN_POS_MOUSE, "resizable", FALSE, NULL);
#line 56 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return self;
#line 275 "DateTimePicker.c"
}

DialogsDateTimePickerDateTimePicker*
dialogs_date_time_picker_date_time_picker_new (void)
{
#line 56 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return dialogs_date_time_picker_date_time_picker_construct (DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER);
#line 283 "DateTimePicker.c"
}

static void
dialogs_date_time_picker_date_time_picker_set_date (DialogsDateTimePickerDateTimePicker* self,
                                                    GDateTime* date)
{
	Util* _tmp0_;
	Util* _tmp1_;
	GDateTime* _tmp2_;
#line 194 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_if_fail (self != NULL);
#line 194 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_if_fail (date != NULL);
#line 195 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = util_get_default ();
#line 195 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp1_ = _tmp0_;
#line 195 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp2_ = util_get_format_date (_tmp1_, date);
#line 195 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (self->priv->_datetime);
#line 195 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self->priv->_datetime = _tmp2_;
#line 195 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (_tmp1_);
#line 196 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_emit (self, dialogs_date_time_picker_date_time_picker_signals[DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATE_CHANGED_SIGNAL], 0);
#line 197 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_hide_destroy (self);
#line 313 "DateTimePicker.c"
}

static GDateTime*
dialogs_date_time_picker_date_time_picker_add_date_time (DialogsDateTimePickerDateTimePicker* self,
                                                         GDateTime* date,
                                                         GDateTime* time)
{
	GDateTime* _tmp0_;
	GDateTime* result = NULL;
#line 200 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 200 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_val_if_fail (date != NULL, NULL);
#line 200 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_val_if_fail (time != NULL, NULL);
#line 201 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = g_date_time_new_local (g_date_time_get_year (date), g_date_time_get_month (date), g_date_time_get_day_of_month (date), g_date_time_get_hour (time), g_date_time_get_minute (time), (gdouble) g_date_time_get_second (time));
#line 201 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	result = _tmp0_;
#line 201 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return result;
#line 335 "DateTimePicker.c"
}

static gboolean
__lambda81_ (DialogsDateTimePickerDateTimePicker* self)
{
	gboolean result = FALSE;
#line 215 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_destroy ((GtkWidget*) self);
#line 216 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	result = G_SOURCE_REMOVE;
#line 216 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return result;
#line 348 "DateTimePicker.c"
}

static gboolean
___lambda81__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda81_ ((DialogsDateTimePickerDateTimePicker*) self);
#line 214 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return result;
#line 358 "DateTimePicker.c"
}

static void
dialogs_date_time_picker_date_time_picker_hide_destroy (DialogsDateTimePickerDateTimePicker* self)
{
#line 211 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_if_fail (self != NULL);
#line 212 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_hide ((GtkWidget*) self);
#line 214 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 500, ___lambda81__gsource_func, g_object_ref (self), g_object_unref);
#line 370 "DateTimePicker.c"
}

void
dialogs_date_time_picker_date_time_picker_popup (DialogsDateTimePickerDateTimePicker* self)
{
#line 220 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_if_fail (self != NULL);
#line 221 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 380 "DateTimePicker.c"
}

static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 31 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 388 "DateTimePicker.c"
}

GDateTime*
dialogs_date_time_picker_date_time_picker_get_datetime (DialogsDateTimePickerDateTimePicker* self)
{
	GDateTime* result;
	DialogsDateTimePickerTimePicker* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
	GDateTime* _tmp18_;
#line 28 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 29 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = self->priv->time_picker;
#line 29 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp1_ = dialogs_date_time_picker_time_picker_get_has_time (_tmp0_);
#line 29 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp2_ = _tmp1_;
#line 29 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	if (_tmp2_) {
#line 409 "DateTimePicker.c"
		GDateTime* _tmp3_;
#line 30 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		_tmp3_ = self->priv->_datetime;
#line 30 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		if (_tmp3_ == NULL) {
#line 415 "DateTimePicker.c"
			DialogsDateTimePickerTimePicker* _tmp4_;
			GDateTime* _tmp5_;
			GDateTime* _tmp6_;
			GDateTime* _tmp7_;
#line 31 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp4_ = self->priv->time_picker;
#line 31 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp5_ = dialogs_date_time_picker_time_picker_get_time (_tmp4_);
#line 31 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp6_ = _tmp5_;
#line 31 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp7_ = _g_date_time_ref0 (_tmp6_);
#line 31 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_g_date_time_unref0 (self->priv->_datetime);
#line 31 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			self->priv->_datetime = _tmp7_;
#line 432 "DateTimePicker.c"
		} else {
			GDateTime* _tmp8_;
			DialogsDateTimePickerTimePicker* _tmp9_;
			GDateTime* _tmp10_;
			GDateTime* _tmp11_;
			GDateTime* _tmp12_;
#line 33 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp8_ = self->priv->_datetime;
#line 33 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp9_ = self->priv->time_picker;
#line 33 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp10_ = dialogs_date_time_picker_time_picker_get_time (_tmp9_);
#line 33 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp11_ = _tmp10_;
#line 33 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp12_ = dialogs_date_time_picker_date_time_picker_add_date_time (self, _tmp8_, _tmp11_);
#line 33 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_g_date_time_unref0 (self->priv->_datetime);
#line 33 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			self->priv->_datetime = _tmp12_;
#line 453 "DateTimePicker.c"
		}
	} else {
		GDateTime* _tmp13_;
#line 36 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		_tmp13_ = self->priv->_datetime;
#line 36 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		if (_tmp13_ != NULL) {
#line 461 "DateTimePicker.c"
			Util* _tmp14_;
			Util* _tmp15_;
			GDateTime* _tmp16_;
			GDateTime* _tmp17_;
#line 37 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp14_ = util_get_default ();
#line 37 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp15_ = _tmp14_;
#line 37 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp16_ = self->priv->_datetime;
#line 37 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_tmp17_ = util_get_format_date (_tmp15_, _tmp16_);
#line 37 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_g_date_time_unref0 (self->priv->_datetime);
#line 37 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			self->priv->_datetime = _tmp17_;
#line 37 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
			_g_object_unref0 (_tmp15_);
#line 480 "DateTimePicker.c"
		}
	}
#line 41 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp18_ = self->priv->_datetime;
#line 41 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	result = _tmp18_;
#line 41 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return result;
#line 489 "DateTimePicker.c"
}

void
dialogs_date_time_picker_date_time_picker_set_datetime (DialogsDateTimePickerDateTimePicker* self,
                                                        GDateTime* value)
{
	GDateTime* _tmp0_;
	GtkButton* _tmp1_;
	Util* _tmp2_;
	Util* _tmp3_;
	GDateTime* _tmp4_;
	gboolean _tmp5_;
#line 44 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_if_fail (self != NULL);
#line 45 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = _g_date_time_ref0 (value);
#line 45 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (self->priv->_datetime);
#line 45 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self->priv->_datetime = _tmp0_;
#line 46 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp1_ = self->priv->cancel_clear_button;
#line 46 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_button_set_label (_tmp1_, _ ("Clear"));
#line 47 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp2_ = util_get_default ();
#line 47 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp3_ = _tmp2_;
#line 47 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp4_ = self->priv->_datetime;
#line 47 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp5_ = util_has_time (_tmp3_, _tmp4_);
#line 47 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (_tmp3_);
#line 47 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	if (_tmp5_) {
#line 526 "DateTimePicker.c"
		DialogsDateTimePickerTimePicker* _tmp6_;
		GDateTime* _tmp7_;
		DialogsDateTimePickerTimePicker* _tmp8_;
#line 48 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		_tmp6_ = self->priv->time_picker;
#line 48 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		_tmp7_ = self->priv->_datetime;
#line 48 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		dialogs_date_time_picker_time_picker_set_time (_tmp6_, _tmp7_);
#line 49 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		_tmp8_ = self->priv->time_picker;
#line 49 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		dialogs_date_time_picker_time_picker_set_has_time (_tmp8_, TRUE);
#line 540 "DateTimePicker.c"
	}
#line 44 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_date_time_picker_date_time_picker_properties[DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATETIME_PROPERTY]);
#line 544 "DateTimePicker.c"
}

static gboolean
_dialogs_date_time_picker_date_time_picker___lambda94_ (DialogsDateTimePickerDateTimePicker* self)
{
	gboolean result = FALSE;
#line 152 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_hide_destroy (self);
#line 153 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	result = FALSE;
#line 153 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return result;
#line 557 "DateTimePicker.c"
}

static gboolean
__dialogs_date_time_picker_date_time_picker___lambda94__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                                                    GdkEventFocus* event,
                                                                                    gpointer self)
{
	gboolean result;
	result = _dialogs_date_time_picker_date_time_picker___lambda94_ ((DialogsDateTimePickerDateTimePicker*) self);
#line 151 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return result;
#line 569 "DateTimePicker.c"
}

static gboolean
_dialogs_date_time_picker_date_time_picker___lambda95_ (DialogsDateTimePickerDateTimePicker* self,
                                                        GdkEventKey* key)
{
	gboolean result = FALSE;
#line 156 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_val_if_fail (key != NULL, FALSE);
#line 157 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	if (key->keyval == ((guint) 65307)) {
#line 158 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		dialogs_date_time_picker_date_time_picker_hide_destroy (self);
#line 583 "DateTimePicker.c"
	}
#line 161 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	result = FALSE;
#line 161 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return result;
#line 589 "DateTimePicker.c"
}

static gboolean
__dialogs_date_time_picker_date_time_picker___lambda95__gtk_widget_key_release_event (GtkWidget* _sender,
                                                                                      GdkEventKey* event,
                                                                                      gpointer self)
{
	gboolean result;
	result = _dialogs_date_time_picker_date_time_picker___lambda95_ ((DialogsDateTimePickerDateTimePicker*) self, event);
#line 156 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return result;
#line 601 "DateTimePicker.c"
}

static void
_dialogs_date_time_picker_date_time_picker___lambda96_ (DialogsDateTimePickerDateTimePicker* self)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
#line 165 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = g_date_time_new_now_local ();
#line 165 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp1_ = _tmp0_;
#line 165 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_set_date (self, _tmp1_);
#line 165 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp1_);
#line 617 "DateTimePicker.c"
}

static void
__dialogs_date_time_picker_date_time_picker___lambda96__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                                                      gpointer self)
{
#line 164 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_dialogs_date_time_picker_date_time_picker___lambda96_ ((DialogsDateTimePickerDateTimePicker*) self);
#line 626 "DateTimePicker.c"
}

static void
_dialogs_date_time_picker_date_time_picker___lambda97_ (DialogsDateTimePickerDateTimePicker* self)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
	GDateTime* _tmp3_;
#line 169 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = g_date_time_new_now_local ();
#line 169 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp1_ = _tmp0_;
#line 169 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp2_ = g_date_time_add_days (_tmp1_, 1);
#line 169 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp3_ = _tmp2_;
#line 169 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_set_date (self, _tmp3_);
#line 169 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp3_);
#line 169 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp1_);
#line 650 "DateTimePicker.c"
}

static void
__dialogs_date_time_picker_date_time_picker___lambda97__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                                                      gpointer self)
{
#line 168 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_dialogs_date_time_picker_date_time_picker___lambda97_ ((DialogsDateTimePickerDateTimePicker*) self);
#line 659 "DateTimePicker.c"
}

static void
_dialogs_date_time_picker_date_time_picker___lambda98_ (DialogsDateTimePickerDateTimePicker* self)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
	GDateTime* _tmp3_;
#line 173 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = g_date_time_new_now_local ();
#line 173 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp1_ = _tmp0_;
#line 173 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp2_ = g_date_time_add_days (_tmp1_, 7);
#line 173 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp3_ = _tmp2_;
#line 173 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_set_date (self, _tmp3_);
#line 173 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp3_);
#line 173 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp1_);
#line 683 "DateTimePicker.c"
}

static void
__dialogs_date_time_picker_date_time_picker___lambda98__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                                                      gpointer self)
{
#line 172 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_dialogs_date_time_picker_date_time_picker___lambda98_ ((DialogsDateTimePickerDateTimePicker*) self);
#line 692 "DateTimePicker.c"
}

static void
_dialogs_date_time_picker_date_time_picker___lambda99_ (DialogsDateTimePickerDateTimePicker* self)
{
	DialogsDateTimePickerTimePicker* _tmp0_;
#line 177 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (self->priv->_datetime);
#line 177 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self->priv->_datetime = NULL;
#line 178 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = self->priv->time_picker;
#line 178 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_time_picker_set_has_time (_tmp0_, FALSE);
#line 180 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_emit (self, dialogs_date_time_picker_date_time_picker_signals[DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATE_CHANGED_SIGNAL], 0);
#line 181 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_hide_destroy (self);
#line 711 "DateTimePicker.c"
}

static void
__dialogs_date_time_picker_date_time_picker___lambda99__gtk_button_clicked (GtkButton* _sender,
                                                                            gpointer self)
{
#line 176 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_dialogs_date_time_picker_date_time_picker___lambda99_ ((DialogsDateTimePickerDateTimePicker*) self);
#line 720 "DateTimePicker.c"
}

static void
_dialogs_date_time_picker_date_time_picker___lambda100_ (DialogsDateTimePickerDateTimePicker* self,
                                                         GDateTime* date)
{
#line 184 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_return_if_fail (date != NULL);
#line 185 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_set_date (self, date);
#line 731 "DateTimePicker.c"
}

static void
__dialogs_date_time_picker_date_time_picker___lambda100__dialogs_context_menu_menu_calendar_picker_selection_changed (DialogsContextMenuMenuCalendarPicker* _sender,
                                                                                                                      GDateTime* date,
                                                                                                                      gpointer self)
{
#line 184 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_dialogs_date_time_picker_date_time_picker___lambda100_ ((DialogsDateTimePickerDateTimePicker*) self, date);
#line 741 "DateTimePicker.c"
}

static void
_dialogs_date_time_picker_date_time_picker___lambda101_ (DialogsDateTimePickerDateTimePicker* self)
{
#line 189 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_emit (self, dialogs_date_time_picker_date_time_picker_signals[DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATE_CHANGED_SIGNAL], 0);
#line 190 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_hide_destroy (self);
#line 751 "DateTimePicker.c"
}

static void
__dialogs_date_time_picker_date_time_picker___lambda101__gtk_button_clicked (GtkButton* _sender,
                                                                             gpointer self)
{
#line 188 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_dialogs_date_time_picker_date_time_picker___lambda101_ ((DialogsDateTimePickerDateTimePicker*) self);
#line 760 "DateTimePicker.c"
}

static GObject *
dialogs_date_time_picker_date_time_picker_constructor (GType type,
                                                       guint n_construct_properties,
                                                       GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	DialogsDateTimePickerDateTimePicker * self;
	HdyHeaderBar* headerbar = NULL;
	HdyHeaderBar* _tmp0_ = NULL;
	HdyHeaderBar* _tmp1_;
	GtkStyleContext* _tmp2_;
	HdyHeaderBar* _tmp3_;
	GtkStyleContext* _tmp4_;
	GtkButton* done_button = NULL;
	GtkButton* _tmp5_ = NULL;
	GtkButton* _tmp6_;
	GtkStyleContext* _tmp7_;
	GtkButton* _tmp8_;
	GtkStyleContext* _tmp9_;
	GtkButton* _tmp10_;
	GtkStyleContext* _tmp11_;
	GtkButton* _tmp12_ = NULL;
	GtkButton* _tmp13_;
	GtkStyleContext* _tmp14_;
	GtkButton* _tmp15_;
	GtkStyleContext* _tmp16_;
	GtkLabel* title_label = NULL;
	GtkLabel* _tmp17_;
	GtkLabel* _tmp18_;
	GtkStyleContext* _tmp19_;
	GtkBox* header_box = NULL;
	GtkBox* _tmp20_ = NULL;
	GtkBox* _tmp21_;
	GtkButton* _tmp22_;
	GtkBox* _tmp23_;
	GtkLabel* _tmp24_;
	GtkBox* _tmp25_;
	GtkButton* _tmp26_;
	HdyHeaderBar* _tmp27_;
	GtkBox* _tmp28_;
	DialogsContextMenuMenuItem* today_item = NULL;
	DialogsContextMenuMenuItem* _tmp29_;
	DialogsContextMenuMenuItem* _tmp30_;
	GDateTime* _tmp31_;
	GDateTime* _tmp32_;
	gchar* _tmp33_;
	gchar* _tmp34_;
	DialogsContextMenuMenuItem* tomorrow_item = NULL;
	DialogsContextMenuMenuItem* _tmp35_;
	DialogsContextMenuMenuItem* _tmp36_;
	GDateTime* _tmp37_;
	GDateTime* _tmp38_;
	GDateTime* _tmp39_;
	GDateTime* _tmp40_;
	gchar* _tmp41_;
	gchar* _tmp42_;
	DialogsContextMenuMenuItem* no_date_item = NULL;
	DialogsContextMenuMenuItem* _tmp43_;
	DialogsContextMenuMenuItem* next_week_item = NULL;
	DialogsContextMenuMenuItem* _tmp44_;
	DialogsContextMenuMenuItem* _tmp45_;
	Util* _tmp46_;
	Util* _tmp47_;
	Util* _tmp48_;
	Util* _tmp49_;
	GDateTime* _tmp50_;
	GDateTime* _tmp51_;
	GDateTime* _tmp52_;
	GDateTime* _tmp53_;
	GDateTime* _tmp54_;
	GDateTime* _tmp55_;
	gchar* _tmp56_;
	gchar* _tmp57_;
	DialogsContextMenuMenuCalendarPicker* calendar_item = NULL;
	DialogsContextMenuMenuCalendarPicker* _tmp58_;
	GtkGrid* date_grid = NULL;
	GtkGrid* _tmp59_ = NULL;
	GtkStyleContext* date_grid_context = NULL;
	GtkGrid* _tmp60_;
	GtkStyleContext* _tmp61_;
	GtkStyleContext* _tmp62_;
	GtkGrid* _tmp63_;
	DialogsContextMenuMenuItem* _tmp64_;
	GtkGrid* _tmp65_;
	DialogsContextMenuMenuItem* _tmp66_;
	GtkGrid* _tmp67_;
	DialogsContextMenuMenuItem* _tmp68_;
	GtkGrid* _tmp69_;
	DialogsContextMenuMenuCalendarPicker* _tmp70_;
	DialogsDateTimePickerTimePicker* _tmp71_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp72_ = NULL;
	GtkGrid* _tmp73_;
	HdyHeaderBar* _tmp74_;
	GtkGrid* _tmp75_;
	GtkGrid* _tmp76_;
	GtkGrid* _tmp77_;
	DialogsDateTimePickerTimePicker* _tmp78_;
	GtkStyleContext* main_grid_context = NULL;
	GtkGrid* _tmp79_;
	GtkStyleContext* _tmp80_;
	GtkStyleContext* _tmp81_;
	GtkGrid* _tmp82_;
	DialogsContextMenuMenuItem* _tmp83_;
	DialogsContextMenuMenuItem* _tmp84_;
	DialogsContextMenuMenuItem* _tmp85_;
	GtkButton* _tmp86_;
	DialogsContextMenuMenuCalendarPicker* _tmp87_;
	GtkButton* _tmp88_;
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	parent_class = G_OBJECT_CLASS (dialogs_date_time_picker_date_time_picker_parent_class);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER, DialogsDateTimePickerDateTimePicker);
#line 66 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp0_ = (HdyHeaderBar*) hdy_header_bar_new ();
#line 66 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	hdy_header_bar_set_has_subtitle (_tmp0_, FALSE);
#line 66 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	hdy_header_bar_set_show_close_button (_tmp0_, FALSE);
#line 66 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp0_, TRUE);
#line 66 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp0_);
#line 66 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	headerbar = _tmp0_;
#line 71 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp1_ = headerbar;
#line 71 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp2_ = gtk_widget_get_style_context ((GtkWidget*) _tmp1_);
#line 71 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp2_, GTK_STYLE_CLASS_FLAT);
#line 72 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp3_ = headerbar;
#line 72 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp4_ = gtk_widget_get_style_context ((GtkWidget*) _tmp3_);
#line 72 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp4_, "default-decoration");
#line 74 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp5_ = (GtkButton*) gtk_button_new_with_label (_ ("Done"));
#line 74 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp5_, GTK_ALIGN_CENTER);
#line 74 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp5_, GTK_ALIGN_CENTER);
#line 74 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp5_, FALSE);
#line 74 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp5_);
#line 74 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	done_button = _tmp5_;
#line 79 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp6_ = done_button;
#line 79 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp7_ = gtk_widget_get_style_context ((GtkWidget*) _tmp6_);
#line 79 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp7_, GTK_STYLE_CLASS_FLAT);
#line 80 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp8_ = done_button;
#line 80 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp9_ = gtk_widget_get_style_context ((GtkWidget*) _tmp8_);
#line 80 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp9_, "primary-color");
#line 81 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp10_ = done_button;
#line 81 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp11_ = gtk_widget_get_style_context ((GtkWidget*) _tmp10_);
#line 81 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp11_, GRANITE_STYLE_CLASS_SMALL_LABEL);
#line 83 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp12_ = (GtkButton*) gtk_button_new_with_label (_ ("Cancel"));
#line 83 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp12_, GTK_ALIGN_CENTER);
#line 83 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp12_, GTK_ALIGN_CENTER);
#line 83 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _tmp12_, FALSE);
#line 83 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp12_);
#line 83 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (self->priv->cancel_clear_button);
#line 83 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self->priv->cancel_clear_button = _tmp12_;
#line 88 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp13_ = self->priv->cancel_clear_button;
#line 88 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp14_ = gtk_widget_get_style_context ((GtkWidget*) _tmp13_);
#line 88 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp14_, GTK_STYLE_CLASS_FLAT);
#line 89 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp15_ = self->priv->cancel_clear_button;
#line 89 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp16_ = gtk_widget_get_style_context ((GtkWidget*) _tmp15_);
#line 89 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp16_, GRANITE_STYLE_CLASS_SMALL_LABEL);
#line 91 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp17_ = (GtkLabel*) gtk_label_new (_ ("Schedule"));
#line 91 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp17_);
#line 91 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	title_label = _tmp17_;
#line 92 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp18_ = title_label;
#line 92 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp19_ = gtk_widget_get_style_context ((GtkWidget*) _tmp18_);
#line 92 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp19_, "h4");
#line 94 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp20_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
#line 94 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp20_, TRUE);
#line 94 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp20_, 3);
#line 94 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp20_, 3);
#line 94 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp20_);
#line 94 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	header_box = _tmp20_;
#line 99 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp21_ = header_box;
#line 99 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp22_ = self->priv->cancel_clear_button;
#line 99 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_box_pack_start (_tmp21_, (GtkWidget*) _tmp22_, FALSE, FALSE, (guint) 0);
#line 100 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp23_ = header_box;
#line 100 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp24_ = title_label;
#line 100 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_box_set_center_widget (_tmp23_, (GtkWidget*) _tmp24_);
#line 101 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp25_ = header_box;
#line 101 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp26_ = done_button;
#line 101 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_box_pack_end (_tmp25_, (GtkWidget*) _tmp26_, FALSE, FALSE, (guint) 0);
#line 103 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp27_ = headerbar;
#line 103 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp28_ = header_box;
#line 103 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	hdy_header_bar_set_custom_title (_tmp27_, (GtkWidget*) _tmp28_);
#line 105 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp29_ = dialogs_context_menu_menu_item_new (_ ("Today"), "planner-today");
#line 105 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp29_);
#line 105 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	today_item = _tmp29_;
#line 106 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp30_ = today_item;
#line 106 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp31_ = g_date_time_new_now_local ();
#line 106 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp32_ = _tmp31_;
#line 106 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp33_ = g_date_time_format (_tmp32_, "%a");
#line 106 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp34_ = _tmp33_;
#line 106 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_context_menu_menu_item_set_secondary_text (_tmp30_, _tmp34_);
#line 106 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_free0 (_tmp34_);
#line 106 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp32_);
#line 108 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp35_ = dialogs_context_menu_menu_item_new (_ ("Tomorrow"), "planner-scheduled");
#line 108 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp35_);
#line 108 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	tomorrow_item = _tmp35_;
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp36_ = tomorrow_item;
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp37_ = g_date_time_new_now_local ();
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp38_ = _tmp37_;
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp39_ = g_date_time_add_days (_tmp38_, 1);
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp40_ = _tmp39_;
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp41_ = g_date_time_format (_tmp40_, "%a");
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp42_ = _tmp41_;
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_context_menu_menu_item_set_secondary_text (_tmp36_, _tmp42_);
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_free0 (_tmp42_);
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp40_);
#line 109 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp38_);
#line 111 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp43_ = dialogs_context_menu_menu_item_new (_ ("No Date"), "planner-close-circle");
#line 111 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp43_);
#line 111 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	no_date_item = _tmp43_;
#line 113 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp44_ = dialogs_context_menu_menu_item_new (_ ("Next week"), "planner-scheduled");
#line 113 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp44_);
#line 113 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	next_week_item = _tmp44_;
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp45_ = next_week_item;
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp46_ = util_get_default ();
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp47_ = _tmp46_;
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp48_ = util_get_default ();
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp49_ = _tmp48_;
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp50_ = g_date_time_new_now_local ();
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp51_ = _tmp50_;
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp52_ = g_date_time_add_days (_tmp51_, 7);
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp53_ = _tmp52_;
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp54_ = util_get_format_date (_tmp49_, _tmp53_);
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp55_ = _tmp54_;
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp56_ = util_get_relative_date_from_date (_tmp47_, _tmp55_);
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp57_ = _tmp56_;
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_context_menu_menu_item_set_secondary_text (_tmp45_, _tmp57_);
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_free0 (_tmp57_);
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp55_);
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp53_);
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (_tmp51_);
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (_tmp49_);
#line 114 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (_tmp47_);
#line 118 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp58_ = dialogs_context_menu_menu_calendar_picker_new (_ ("Pick Date"));
#line 118 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp58_);
#line 118 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	calendar_item = _tmp58_;
#line 120 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp59_ = (GtkGrid*) gtk_grid_new ();
#line 120 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp59_, GTK_ORIENTATION_VERTICAL);
#line 120 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp59_, TRUE);
#line 120 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_set ((GtkWidget*) _tmp59_, "margin", 9, NULL);
#line 120 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp59_, 0);
#line 120 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp59_, 12);
#line 120 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp59_);
#line 120 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	date_grid = _tmp59_;
#line 128 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp60_ = date_grid;
#line 128 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp61_ = gtk_widget_get_style_context ((GtkWidget*) _tmp60_);
#line 128 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	date_grid_context = _tmp61_;
#line 129 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp62_ = date_grid_context;
#line 129 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp62_, "picker-content");
#line 131 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp63_ = date_grid;
#line 131 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp64_ = today_item;
#line 131 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp63_, (GtkWidget*) _tmp64_);
#line 132 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp65_ = date_grid;
#line 132 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp66_ = tomorrow_item;
#line 132 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp65_, (GtkWidget*) _tmp66_);
#line 133 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp67_ = date_grid;
#line 133 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp68_ = next_week_item;
#line 133 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp67_, (GtkWidget*) _tmp68_);
#line 134 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp69_ = date_grid;
#line 134 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp70_ = calendar_item;
#line 134 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp69_, (GtkWidget*) _tmp70_);
#line 136 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp71_ = dialogs_date_time_picker_time_picker_new ();
#line 136 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp71_);
#line 136 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (self->priv->time_picker);
#line 136 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self->priv->time_picker = _tmp71_;
#line 138 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp72_ = (GtkGrid*) gtk_grid_new ();
#line 138 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp72_, GTK_ORIENTATION_VERTICAL);
#line 138 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_set ((GtkWidget*) _tmp72_, "width-request", 225, NULL);
#line 138 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_ref_sink (_tmp72_);
#line 138 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	main_grid = _tmp72_;
#line 142 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp73_ = main_grid;
#line 142 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp74_ = headerbar;
#line 142 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp73_, (GtkWidget*) _tmp74_);
#line 143 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp75_ = main_grid;
#line 143 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp76_ = date_grid;
#line 143 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp75_, (GtkWidget*) _tmp76_);
#line 144 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp77_ = main_grid;
#line 144 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp78_ = self->priv->time_picker;
#line 144 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp77_, (GtkWidget*) _tmp78_);
#line 146 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp79_ = main_grid;
#line 146 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp80_ = gtk_widget_get_style_context ((GtkWidget*) _tmp79_);
#line 146 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	main_grid_context = _tmp80_;
#line 147 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp81_ = main_grid_context;
#line 147 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_style_context_add_class (_tmp81_, "picker");
#line 149 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp82_ = main_grid;
#line 149 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp82_);
#line 151 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_connect_object ((GtkWidget*) self, "focus-out-event", (GCallback) __dialogs_date_time_picker_date_time_picker___lambda94__gtk_widget_focus_out_event, self, 0);
#line 156 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_connect_object ((GtkWidget*) self, "key-release-event", (GCallback) __dialogs_date_time_picker_date_time_picker___lambda95__gtk_widget_key_release_event, self, 0);
#line 164 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp83_ = today_item;
#line 164 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_connect_object (_tmp83_, "activate-item", (GCallback) __dialogs_date_time_picker_date_time_picker___lambda96__dialogs_context_menu_menu_item_activate_item, self, 0);
#line 168 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp84_ = tomorrow_item;
#line 168 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_connect_object (_tmp84_, "activate-item", (GCallback) __dialogs_date_time_picker_date_time_picker___lambda97__dialogs_context_menu_menu_item_activate_item, self, 0);
#line 172 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp85_ = next_week_item;
#line 172 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_connect_object (_tmp85_, "activate-item", (GCallback) __dialogs_date_time_picker_date_time_picker___lambda98__dialogs_context_menu_menu_item_activate_item, self, 0);
#line 176 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp86_ = self->priv->cancel_clear_button;
#line 176 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_connect_object (_tmp86_, "clicked", (GCallback) __dialogs_date_time_picker_date_time_picker___lambda99__gtk_button_clicked, self, 0);
#line 184 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp87_ = calendar_item;
#line 184 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_connect_object (_tmp87_, "selection-changed", (GCallback) __dialogs_date_time_picker_date_time_picker___lambda100__dialogs_context_menu_menu_calendar_picker_selection_changed, self, 0);
#line 188 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_tmp88_ = done_button;
#line 188 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_signal_connect_object (_tmp88_, "clicked", (GCallback) __dialogs_date_time_picker_date_time_picker___lambda101__gtk_button_clicked, self, 0);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (main_grid);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (date_grid);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (calendar_item);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (next_week_item);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (no_date_item);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (tomorrow_item);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (today_item);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (header_box);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (title_label);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (done_button);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (headerbar);
#line 65 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	return obj;
#line 1267 "DateTimePicker.c"
}

static void
dialogs_date_time_picker_date_time_picker_class_init (DialogsDateTimePickerDateTimePickerClass * klass,
                                                      gpointer klass_data)
{
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_type_class_adjust_private_offset (klass, &DialogsDateTimePickerDateTimePicker_private_offset);
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_dialogs_date_time_picker_date_time_picker_get_property;
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_dialogs_date_time_picker_date_time_picker_set_property;
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	G_OBJECT_CLASS (klass)->constructor = dialogs_date_time_picker_date_time_picker_constructor;
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	G_OBJECT_CLASS (klass)->finalize = dialogs_date_time_picker_date_time_picker_finalize;
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATETIME_PROPERTY, dialogs_date_time_picker_date_time_picker_properties[DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATETIME_PROPERTY] = g_param_spec_boxed ("datetime", "datetime", "datetime", G_TYPE_DATE_TIME, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	dialogs_date_time_picker_date_time_picker_signals[DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATE_CHANGED_SIGNAL] = g_signal_new ("date-changed", DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 1290 "DateTimePicker.c"
}

static void
dialogs_date_time_picker_date_time_picker_instance_init (DialogsDateTimePickerDateTimePicker * self,
                                                         gpointer klass)
{
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self->priv = dialogs_date_time_picker_date_time_picker_get_instance_private (self);
#line 26 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self->priv->_datetime = NULL;
#line 1301 "DateTimePicker.c"
}

static void
dialogs_date_time_picker_date_time_picker_finalize (GObject * obj)
{
	DialogsDateTimePickerDateTimePicker * self;
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER, DialogsDateTimePickerDateTimePicker);
#line 23 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (self->priv->time_picker);
#line 24 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_object_unref0 (self->priv->cancel_clear_button);
#line 26 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	_g_date_time_unref0 (self->priv->_datetime);
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	G_OBJECT_CLASS (dialogs_date_time_picker_date_time_picker_parent_class)->finalize (obj);
#line 1318 "DateTimePicker.c"
}

static GType
dialogs_date_time_picker_date_time_picker_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (DialogsDateTimePickerDateTimePickerClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) dialogs_date_time_picker_date_time_picker_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (DialogsDateTimePickerDateTimePicker), 0, (GInstanceInitFunc) dialogs_date_time_picker_date_time_picker_instance_init, NULL };
	GType dialogs_date_time_picker_date_time_picker_type_id;
	dialogs_date_time_picker_date_time_picker_type_id = g_type_register_static (hdy_window_get_type (), "DialogsDateTimePickerDateTimePicker", &g_define_type_info, 0);
	DialogsDateTimePickerDateTimePicker_private_offset = g_type_add_instance_private (dialogs_date_time_picker_date_time_picker_type_id, sizeof (DialogsDateTimePickerDateTimePickerPrivate));
	return dialogs_date_time_picker_date_time_picker_type_id;
}

GType
dialogs_date_time_picker_date_time_picker_get_type (void)
{
	static volatile gsize dialogs_date_time_picker_date_time_picker_type_id__volatile = 0;
	if (g_once_init_enter (&dialogs_date_time_picker_date_time_picker_type_id__volatile)) {
		GType dialogs_date_time_picker_date_time_picker_type_id;
		dialogs_date_time_picker_date_time_picker_type_id = dialogs_date_time_picker_date_time_picker_get_type_once ();
		g_once_init_leave (&dialogs_date_time_picker_date_time_picker_type_id__volatile, dialogs_date_time_picker_date_time_picker_type_id);
	}
	return dialogs_date_time_picker_date_time_picker_type_id__volatile;
}

static void
_vala_dialogs_date_time_picker_date_time_picker_get_property (GObject * object,
                                                              guint property_id,
                                                              GValue * value,
                                                              GParamSpec * pspec)
{
	DialogsDateTimePickerDateTimePicker * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER, DialogsDateTimePickerDateTimePicker);
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	switch (property_id) {
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATETIME_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		g_value_set_boxed (value, dialogs_date_time_picker_date_time_picker_get_datetime (self));
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		break;
#line 1359 "DateTimePicker.c"
		default:
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		break;
#line 1365 "DateTimePicker.c"
	}
}

static void
_vala_dialogs_date_time_picker_date_time_picker_set_property (GObject * object,
                                                              guint property_id,
                                                              const GValue * value,
                                                              GParamSpec * pspec)
{
	DialogsDateTimePickerDateTimePicker * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_DATE_TIME_PICKER_TYPE_DATE_TIME_PICKER, DialogsDateTimePickerDateTimePicker);
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
	switch (property_id) {
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		case DIALOGS_DATE_TIME_PICKER_DATE_TIME_PICKER_DATETIME_PROPERTY:
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		dialogs_date_time_picker_date_time_picker_set_datetime (self, g_value_get_boxed (value));
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		break;
#line 1385 "DateTimePicker.c"
		default:
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Dialogs/DateTimePicker/DateTimePicker.vala"
		break;
#line 1391 "DateTimePicker.c"
	}
}


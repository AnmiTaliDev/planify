/* Sidebar.c generated by valac 0.50.10, the Vala compiler
 * generated from Sidebar.vala, do not modify */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <gee.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <handy.h>

#define LAYOUTS_TYPE_SIDEBAR (layouts_sidebar_get_type ())
#define LAYOUTS_SIDEBAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), LAYOUTS_TYPE_SIDEBAR, LayoutsSidebar))
#define LAYOUTS_SIDEBAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), LAYOUTS_TYPE_SIDEBAR, LayoutsSidebarClass))
#define LAYOUTS_IS_SIDEBAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), LAYOUTS_TYPE_SIDEBAR))
#define LAYOUTS_IS_SIDEBAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), LAYOUTS_TYPE_SIDEBAR))
#define LAYOUTS_SIDEBAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), LAYOUTS_TYPE_SIDEBAR, LayoutsSidebarClass))

typedef struct _LayoutsSidebar LayoutsSidebar;
typedef struct _LayoutsSidebarClass LayoutsSidebarClass;
typedef struct _LayoutsSidebarPrivate LayoutsSidebarPrivate;

#define LAYOUTS_TYPE_PROJECT_ROW (layouts_project_row_get_type ())
#define LAYOUTS_PROJECT_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRow))
#define LAYOUTS_PROJECT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRowClass))
#define LAYOUTS_IS_PROJECT_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), LAYOUTS_TYPE_PROJECT_ROW))
#define LAYOUTS_IS_PROJECT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), LAYOUTS_TYPE_PROJECT_ROW))
#define LAYOUTS_PROJECT_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), LAYOUTS_TYPE_PROJECT_ROW, LayoutsProjectRowClass))

typedef struct _LayoutsProjectRow LayoutsProjectRow;
typedef struct _LayoutsProjectRowClass LayoutsProjectRowClass;

#define LAYOUTS_TYPE_FILTER_PANE_ROW (layouts_filter_pane_row_get_type ())
#define LAYOUTS_FILTER_PANE_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), LAYOUTS_TYPE_FILTER_PANE_ROW, LayoutsFilterPaneRow))
#define LAYOUTS_FILTER_PANE_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), LAYOUTS_TYPE_FILTER_PANE_ROW, LayoutsFilterPaneRowClass))
#define LAYOUTS_IS_FILTER_PANE_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), LAYOUTS_TYPE_FILTER_PANE_ROW))
#define LAYOUTS_IS_FILTER_PANE_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), LAYOUTS_TYPE_FILTER_PANE_ROW))
#define LAYOUTS_FILTER_PANE_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), LAYOUTS_TYPE_FILTER_PANE_ROW, LayoutsFilterPaneRowClass))

typedef struct _LayoutsFilterPaneRow LayoutsFilterPaneRow;
typedef struct _LayoutsFilterPaneRowClass LayoutsFilterPaneRowClass;

#define WIDGETS_TYPE_TODOIST_SYNC (widgets_todoist_sync_get_type ())
#define WIDGETS_TODOIST_SYNC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_TODOIST_SYNC, WidgetsTodoistSync))
#define WIDGETS_TODOIST_SYNC_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_TODOIST_SYNC, WidgetsTodoistSyncClass))
#define WIDGETS_IS_TODOIST_SYNC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_TODOIST_SYNC))
#define WIDGETS_IS_TODOIST_SYNC_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_TODOIST_SYNC))
#define WIDGETS_TODOIST_SYNC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_TODOIST_SYNC, WidgetsTodoistSyncClass))

typedef struct _WidgetsTodoistSync WidgetsTodoistSync;
typedef struct _WidgetsTodoistSyncClass WidgetsTodoistSyncClass;

#define LAYOUTS_TYPE_HEADER_ITEM (layouts_header_item_get_type ())
#define LAYOUTS_HEADER_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), LAYOUTS_TYPE_HEADER_ITEM, LayoutsHeaderItem))
#define LAYOUTS_HEADER_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), LAYOUTS_TYPE_HEADER_ITEM, LayoutsHeaderItemClass))
#define LAYOUTS_IS_HEADER_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), LAYOUTS_TYPE_HEADER_ITEM))
#define LAYOUTS_IS_HEADER_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), LAYOUTS_TYPE_HEADER_ITEM))
#define LAYOUTS_HEADER_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), LAYOUTS_TYPE_HEADER_ITEM, LayoutsHeaderItemClass))

typedef struct _LayoutsHeaderItem LayoutsHeaderItem;
typedef struct _LayoutsHeaderItemClass LayoutsHeaderItemClass;
enum  {
	LAYOUTS_SIDEBAR_0_PROPERTY,
	LAYOUTS_SIDEBAR_NUM_PROPERTIES
};
static GParamSpec* layouts_sidebar_properties[LAYOUTS_SIDEBAR_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define DIALOGS_TYPE_PROJECT (dialogs_project_get_type ())
#define DIALOGS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_TYPE_PROJECT, DialogsProject))
#define DIALOGS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_TYPE_PROJECT, DialogsProjectClass))
#define DIALOGS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_TYPE_PROJECT))
#define DIALOGS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_TYPE_PROJECT))
#define DIALOGS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_TYPE_PROJECT, DialogsProjectClass))

typedef struct _DialogsProject DialogsProject;
typedef struct _DialogsProjectClass DialogsProjectClass;

#define DIALOGS_TYPE_LABEL (dialogs_label_get_type ())
#define DIALOGS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_TYPE_LABEL, DialogsLabel))
#define DIALOGS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_TYPE_LABEL, DialogsLabelClass))
#define DIALOGS_IS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_TYPE_LABEL))
#define DIALOGS_IS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_TYPE_LABEL))
#define DIALOGS_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_TYPE_LABEL, DialogsLabelClass))

typedef struct _DialogsLabel DialogsLabel;
typedef struct _DialogsLabelClass DialogsLabelClass;
typedef enum  {
	BACKEND_TYPE_NONE = 0,
	BACKEND_TYPE_LOCAL = 1,
	BACKEND_TYPE_TODOIST = 2,
	BACKEND_TYPE_CALDAV = 3
} BackendType;

#define TYPE_BACKEND_TYPE (backend_type_get_type ())

#define SERVICES_TYPE_DATABASE (services_database_get_type ())
#define SERVICES_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_DATABASE, ServicesDatabase))
#define SERVICES_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))
#define SERVICES_IS_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_DATABASE))
#define SERVICES_IS_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_DATABASE))
#define SERVICES_DATABASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))

typedef struct _ServicesDatabase ServicesDatabase;
typedef struct _ServicesDatabaseClass ServicesDatabaseClass;

#define OBJECTS_TYPE_BASE_OBJECT (objects_base_object_get_type ())
#define OBJECTS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObject))
#define OBJECTS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))
#define OBJECTS_IS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_IS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_BASE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))

typedef struct _ObjectsBaseObject ObjectsBaseObject;
typedef struct _ObjectsBaseObjectClass ObjectsBaseObjectClass;

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;

#define OBJECTS_TYPE_LABEL (objects_label_get_type ())
#define OBJECTS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_LABEL, ObjectsLabel))
#define OBJECTS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_LABEL, ObjectsLabelClass))
#define OBJECTS_IS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_LABEL))
#define OBJECTS_IS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_LABEL))
#define OBJECTS_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_LABEL, ObjectsLabelClass))

typedef struct _ObjectsLabel ObjectsLabel;
typedef struct _ObjectsLabelClass ObjectsLabelClass;

#define SERVICES_TYPE_EVENT_BUS (services_event_bus_get_type ())
#define SERVICES_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBus))
#define SERVICES_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))
#define SERVICES_IS_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_IS_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_EVENT_BUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))

typedef struct _ServicesEventBus ServicesEventBus;
typedef struct _ServicesEventBusClass ServicesEventBusClass;

#define SERVICES_TYPE_TODOIST (services_todoist_get_type ())
#define SERVICES_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_TODOIST, ServicesTodoist))
#define SERVICES_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_TODOIST, ServicesTodoistClass))
#define SERVICES_IS_TODOIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_TODOIST))
#define SERVICES_IS_TODOIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_TODOIST))
#define SERVICES_TODOIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_TODOIST, ServicesTodoistClass))

typedef struct _ServicesTodoist ServicesTodoist;
typedef struct _ServicesTodoistClass ServicesTodoistClass;

#define LAYOUTS_TYPE_LABEL_ROW (layouts_label_row_get_type ())
#define LAYOUTS_LABEL_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRow))
#define LAYOUTS_LABEL_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRowClass))
#define LAYOUTS_IS_LABEL_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), LAYOUTS_TYPE_LABEL_ROW))
#define LAYOUTS_IS_LABEL_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), LAYOUTS_TYPE_LABEL_ROW))
#define LAYOUTS_LABEL_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRowClass))

typedef struct _LayoutsLabelRow LayoutsLabelRow;
typedef struct _LayoutsLabelRowClass LayoutsLabelRowClass;
typedef enum  {
	FILTER_TYPE_TODAY,
	FILTER_TYPE_INBOX,
	FILTER_TYPE_SCHEDULED,
	FILTER_TYPE_PINBOARD
} FilterType;

#define TYPE_FILTER_TYPE (filter_type_get_type ())
typedef enum  {
	PANE_TYPE_FILTER,
	PANE_TYPE_FAVORITE,
	PANE_TYPE_PROJECT,
	PANE_TYPE_LABEL,
	PANE_TYPE_TASKLIST
} PaneType;

#define TYPE_PANE_TYPE (pane_type_get_type ())
typedef enum  {
	CONTAINER_TYPE_LISTBOX,
	CONTAINER_TYPE_FLOWBOX
} ContainerType;

#define TYPE_CONTAINER_TYPE (container_type_get_type ())

struct _LayoutsSidebar {
	GtkEventBox parent_instance;
	LayoutsSidebarPrivate * priv;
	GeeHashMap* projects_hashmap;
	GeeHashMap* favorites_hashmap;
};

struct _LayoutsSidebarClass {
	GtkEventBoxClass parent_class;
};

struct _LayoutsSidebarPrivate {
	GtkFlowBox* listbox;
	LayoutsFilterPaneRow* inbox;
	LayoutsFilterPaneRow* today;
	LayoutsFilterPaneRow* scheduled;
	LayoutsFilterPaneRow* pinboard;
	WidgetsTodoistSync* todoist_button;
	LayoutsHeaderItem* favorites_header;
	LayoutsHeaderItem* projects_header;
	LayoutsHeaderItem* labels_header;
	GtkGrid* main_grid;
};

static gint LayoutsSidebar_private_offset;
static gpointer layouts_sidebar_parent_class = NULL;
extern ServicesDatabase* planner_database;
extern ServicesEventBus* planner_event_bus;
extern ServicesTodoist* planner_todoist;

GType layouts_sidebar_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (LayoutsSidebar, g_object_unref)
GType layouts_project_row_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (LayoutsProjectRow, g_object_unref)
GType layouts_filter_pane_row_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (LayoutsFilterPaneRow, g_object_unref)
GType widgets_todoist_sync_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsTodoistSync, g_object_unref)
GType layouts_header_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (LayoutsHeaderItem, g_object_unref)
static void layouts_sidebar_prepare_new_project (LayoutsSidebar* self);
GType dialogs_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsProject, g_object_unref)
DialogsProject* dialogs_project_new_new (void);
DialogsProject* dialogs_project_construct_new (GType object_type);
static void layouts_sidebar_prepare_new_label (LayoutsSidebar* self);
GType dialogs_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsLabel, g_object_unref)
DialogsLabel* dialogs_label_new_new (void);
DialogsLabel* dialogs_label_construct_new (GType object_type);
GType backend_type_get_type (void) G_GNUC_CONST;
void layouts_sidebar_init (LayoutsSidebar* self,
                           BackendType backend_type);
void layouts_filter_pane_row_init (LayoutsFilterPaneRow* self);
GType services_database_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesDatabase, g_object_unref)
GType objects_base_object_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsBaseObject, g_object_unref)
GType objects_project_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsProject, g_object_unref)
static void layouts_sidebar_add_row_project (LayoutsSidebar* self,
                                      ObjectsProject* project);
static void _layouts_sidebar_add_row_project_services_database_project_added (ServicesDatabase* _sender,
                                                                       ObjectsProject* project,
                                                                       gpointer self);
GType objects_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsLabel, g_object_unref)
static void layouts_sidebar_add_row_label (LayoutsSidebar* self,
                                    ObjectsLabel* label);
static void _layouts_sidebar_add_row_label_services_database_label_added (ServicesDatabase* _sender,
                                                                   ObjectsLabel* label,
                                                                   gpointer self);
GType services_event_bus_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesEventBus, g_object_unref)
static void ___lambda236_ (LayoutsSidebar* self,
                    ObjectsProject* project,
                    gint64 old_parent_id);
#define CONSTANTS_INACTIVE 0
const gchar* objects_base_object_get_id_string (ObjectsBaseObject* self);
void layouts_project_row_hide_destroy (LayoutsProjectRow* self);
gint64 objects_project_get_parent_id (ObjectsProject* self);
static void ____lambda236__services_event_bus_project_parent_changed (ServicesEventBus* _sender,
                                                               ObjectsProject* project,
                                                               gint64 old_parent_id,
                                                               gpointer self);
static void ___lambda237_ (LayoutsSidebar* self,
                    ObjectsProject* project);
static void layouts_sidebar_add_row_favorite (LayoutsSidebar* self,
                                       ObjectsProject* project);
static void ____lambda237__services_event_bus_favorite_toggled (ServicesEventBus* _sender,
                                                         ObjectsProject* project,
                                                         gpointer self);
GType services_todoist_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesTodoist, g_object_unref)
void widgets_todoist_sync_sync_started (WidgetsTodoistSync* self);
static void _widgets_todoist_sync_sync_started_services_todoist_sync_started (ServicesTodoist* _sender,
                                                                       gpointer self);
void widgets_todoist_sync_sync_finished (WidgetsTodoistSync* self);
static void _widgets_todoist_sync_sync_finished_services_todoist_sync_finished (ServicesTodoist* _sender,
                                                                         gpointer self);
static void layouts_sidebar_add_all_projects (LayoutsSidebar* self);
static void layouts_sidebar_add_all_favorites (LayoutsSidebar* self);
static void layouts_sidebar_add_all_labels (LayoutsSidebar* self);
gboolean objects_project_get_inbox_project (ObjectsProject* self);
LayoutsProjectRow* layouts_project_row_new (ObjectsProject* project,
                                            gboolean show_subprojects);
LayoutsProjectRow* layouts_project_row_construct (GType object_type,
                                                  ObjectsProject* project,
                                                  gboolean show_subprojects);
void layouts_header_item_add_child (LayoutsHeaderItem* self,
                                    GtkWidget* widget);
GeeArrayList* services_database_get_projects (ServicesDatabase* self);
gboolean objects_project_get_is_favorite (ObjectsProject* self);
GeeArrayList* services_database_get_labels (ServicesDatabase* self);
LayoutsLabelRow* layouts_label_row_new (ObjectsLabel* label);
LayoutsLabelRow* layouts_label_row_construct (GType object_type,
                                              ObjectsLabel* label);
GType layouts_label_row_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (LayoutsLabelRow, g_object_unref)
LayoutsSidebar* layouts_sidebar_new (void);
LayoutsSidebar* layouts_sidebar_construct (GType object_type);
static GObject * layouts_sidebar_constructor (GType type,
                                       guint n_construct_properties,
                                       GObjectConstructParam * construct_properties);
WidgetsTodoistSync* widgets_todoist_sync_new (void);
WidgetsTodoistSync* widgets_todoist_sync_construct (GType object_type);
GType filter_type_get_type (void) G_GNUC_CONST;
LayoutsFilterPaneRow* layouts_filter_pane_row_new (FilterType filter_type);
LayoutsFilterPaneRow* layouts_filter_pane_row_construct (GType object_type,
                                                         FilterType filter_type);
GType pane_type_get_type (void) G_GNUC_CONST;
GType container_type_get_type (void) G_GNUC_CONST;
LayoutsHeaderItem* layouts_header_item_new (PaneType pane_type,
                                            ContainerType container_shape,
                                            GtkSelectionMode selection_mode);
LayoutsHeaderItem* layouts_header_item_construct (GType object_type,
                                                  PaneType pane_type,
                                                  ContainerType container_shape,
                                                  GtkSelectionMode selection_mode);
static void _layouts_sidebar___lambda238_ (LayoutsSidebar* self);
static void __layouts_sidebar___lambda238__layouts_header_item_add_activated (LayoutsHeaderItem* _sender,
                                                                       gpointer self);
static void _layouts_sidebar___lambda239_ (LayoutsSidebar* self);
static void __layouts_sidebar___lambda239__layouts_header_item_add_activated (LayoutsHeaderItem* _sender,
                                                                       gpointer self);
static void layouts_sidebar_finalize (GObject * obj);
static GType layouts_sidebar_get_type_once (void);

static inline gpointer
layouts_sidebar_get_instance_private (LayoutsSidebar* self)
{
	return G_STRUCT_MEMBER_P (self, LayoutsSidebar_private_offset);
}

static void
layouts_sidebar_prepare_new_project (LayoutsSidebar* self)
{
	DialogsProject* dialog = NULL;
	DialogsProject* _tmp0_;
#line 79 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (self != NULL);
#line 80 "../src/Layouts/Sidebar.vala"
	_tmp0_ = dialogs_project_new_new ();
#line 80 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp0_);
#line 80 "../src/Layouts/Sidebar.vala"
	dialog = _tmp0_;
#line 81 "../src/Layouts/Sidebar.vala"
	gtk_widget_show_all ((GtkWidget*) dialog);
#line 79 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (dialog);
#line 362 "Sidebar.c"
}

static void
layouts_sidebar_prepare_new_label (LayoutsSidebar* self)
{
	DialogsLabel* dialog = NULL;
	DialogsLabel* _tmp0_;
#line 84 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (self != NULL);
#line 85 "../src/Layouts/Sidebar.vala"
	_tmp0_ = dialogs_label_new_new ();
#line 85 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp0_);
#line 85 "../src/Layouts/Sidebar.vala"
	dialog = _tmp0_;
#line 86 "../src/Layouts/Sidebar.vala"
	gtk_widget_show_all ((GtkWidget*) dialog);
#line 84 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (dialog);
#line 382 "Sidebar.c"
}

static void
_layouts_sidebar_add_row_project_services_database_project_added (ServicesDatabase* _sender,
                                                                  ObjectsProject* project,
                                                                  gpointer self)
{
#line 102 "../src/Layouts/Sidebar.vala"
	layouts_sidebar_add_row_project ((LayoutsSidebar*) self, project);
#line 392 "Sidebar.c"
}

static void
_layouts_sidebar_add_row_label_services_database_label_added (ServicesDatabase* _sender,
                                                              ObjectsLabel* label,
                                                              gpointer self)
{
#line 103 "../src/Layouts/Sidebar.vala"
	layouts_sidebar_add_row_label ((LayoutsSidebar*) self, label);
#line 402 "Sidebar.c"
}

static void
___lambda236_ (LayoutsSidebar* self,
               ObjectsProject* project,
               gint64 old_parent_id)
{
	gint64 _tmp11_;
	gint64 _tmp12_;
#line 104 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (project != NULL);
#line 105 "../src/Layouts/Sidebar.vala"
	if (old_parent_id == ((gint64) CONSTANTS_INACTIVE)) {
#line 416 "Sidebar.c"
		GeeHashMap* _tmp0_;
		const gchar* _tmp1_;
		const gchar* _tmp2_;
#line 106 "../src/Layouts/Sidebar.vala"
		_tmp0_ = self->projects_hashmap;
#line 106 "../src/Layouts/Sidebar.vala"
		_tmp1_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 106 "../src/Layouts/Sidebar.vala"
		_tmp2_ = _tmp1_;
#line 106 "../src/Layouts/Sidebar.vala"
		if (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp0_, _tmp2_)) {
#line 428 "Sidebar.c"
			GeeHashMap* _tmp3_;
			const gchar* _tmp4_;
			const gchar* _tmp5_;
			gpointer _tmp6_;
			LayoutsProjectRow* _tmp7_;
			GeeHashMap* _tmp8_;
			const gchar* _tmp9_;
			const gchar* _tmp10_;
#line 107 "../src/Layouts/Sidebar.vala"
			_tmp3_ = self->projects_hashmap;
#line 107 "../src/Layouts/Sidebar.vala"
			_tmp4_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 107 "../src/Layouts/Sidebar.vala"
			_tmp5_ = _tmp4_;
#line 107 "../src/Layouts/Sidebar.vala"
			_tmp6_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp3_, _tmp5_);
#line 107 "../src/Layouts/Sidebar.vala"
			_tmp7_ = (LayoutsProjectRow*) _tmp6_;
#line 107 "../src/Layouts/Sidebar.vala"
			layouts_project_row_hide_destroy (_tmp7_);
#line 107 "../src/Layouts/Sidebar.vala"
			_g_object_unref0 (_tmp7_);
#line 108 "../src/Layouts/Sidebar.vala"
			_tmp8_ = self->projects_hashmap;
#line 108 "../src/Layouts/Sidebar.vala"
			_tmp9_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 108 "../src/Layouts/Sidebar.vala"
			_tmp10_ = _tmp9_;
#line 108 "../src/Layouts/Sidebar.vala"
			gee_abstract_map_unset ((GeeAbstractMap*) _tmp8_, _tmp10_, NULL);
#line 459 "Sidebar.c"
		}
	}
#line 112 "../src/Layouts/Sidebar.vala"
	_tmp11_ = objects_project_get_parent_id (project);
#line 112 "../src/Layouts/Sidebar.vala"
	_tmp12_ = _tmp11_;
#line 112 "../src/Layouts/Sidebar.vala"
	if (_tmp12_ == ((gint64) CONSTANTS_INACTIVE)) {
#line 113 "../src/Layouts/Sidebar.vala"
		layouts_sidebar_add_row_project (self, project);
#line 470 "Sidebar.c"
	}
}

static void
____lambda236__services_event_bus_project_parent_changed (ServicesEventBus* _sender,
                                                          ObjectsProject* project,
                                                          gint64 old_parent_id,
                                                          gpointer self)
{
#line 104 "../src/Layouts/Sidebar.vala"
	___lambda236_ ((LayoutsSidebar*) self, project, old_parent_id);
#line 482 "Sidebar.c"
}

static void
___lambda237_ (LayoutsSidebar* self,
               ObjectsProject* project)
{
	GeeHashMap* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
#line 117 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (project != NULL);
#line 118 "../src/Layouts/Sidebar.vala"
	_tmp0_ = self->favorites_hashmap;
#line 118 "../src/Layouts/Sidebar.vala"
	_tmp1_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 118 "../src/Layouts/Sidebar.vala"
	_tmp2_ = _tmp1_;
#line 118 "../src/Layouts/Sidebar.vala"
	if (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp0_, _tmp2_)) {
#line 502 "Sidebar.c"
		GeeHashMap* _tmp3_;
		const gchar* _tmp4_;
		const gchar* _tmp5_;
		gpointer _tmp6_;
		LayoutsProjectRow* _tmp7_;
		GeeHashMap* _tmp8_;
		const gchar* _tmp9_;
		const gchar* _tmp10_;
#line 119 "../src/Layouts/Sidebar.vala"
		_tmp3_ = self->favorites_hashmap;
#line 119 "../src/Layouts/Sidebar.vala"
		_tmp4_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 119 "../src/Layouts/Sidebar.vala"
		_tmp5_ = _tmp4_;
#line 119 "../src/Layouts/Sidebar.vala"
		_tmp6_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp3_, _tmp5_);
#line 119 "../src/Layouts/Sidebar.vala"
		_tmp7_ = (LayoutsProjectRow*) _tmp6_;
#line 119 "../src/Layouts/Sidebar.vala"
		layouts_project_row_hide_destroy (_tmp7_);
#line 119 "../src/Layouts/Sidebar.vala"
		_g_object_unref0 (_tmp7_);
#line 120 "../src/Layouts/Sidebar.vala"
		_tmp8_ = self->favorites_hashmap;
#line 120 "../src/Layouts/Sidebar.vala"
		_tmp9_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 120 "../src/Layouts/Sidebar.vala"
		_tmp10_ = _tmp9_;
#line 120 "../src/Layouts/Sidebar.vala"
		gee_abstract_map_unset ((GeeAbstractMap*) _tmp8_, _tmp10_, NULL);
#line 533 "Sidebar.c"
	} else {
#line 122 "../src/Layouts/Sidebar.vala"
		layouts_sidebar_add_row_favorite (self, project);
#line 537 "Sidebar.c"
	}
}

static void
____lambda237__services_event_bus_favorite_toggled (ServicesEventBus* _sender,
                                                    ObjectsProject* project,
                                                    gpointer self)
{
#line 117 "../src/Layouts/Sidebar.vala"
	___lambda237_ ((LayoutsSidebar*) self, project);
#line 548 "Sidebar.c"
}

static void
_widgets_todoist_sync_sync_started_services_todoist_sync_started (ServicesTodoist* _sender,
                                                                  gpointer self)
{
#line 127 "../src/Layouts/Sidebar.vala"
	widgets_todoist_sync_sync_started ((WidgetsTodoistSync*) self);
#line 557 "Sidebar.c"
}

static void
_widgets_todoist_sync_sync_finished_services_todoist_sync_finished (ServicesTodoist* _sender,
                                                                    gpointer self)
{
#line 128 "../src/Layouts/Sidebar.vala"
	widgets_todoist_sync_sync_finished ((WidgetsTodoistSync*) self);
#line 566 "Sidebar.c"
}

void
layouts_sidebar_init (LayoutsSidebar* self,
                      BackendType backend_type)
{
	gboolean _tmp0_ = FALSE;
	GtkFlowBox* _tmp21_;
#line 89 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (self != NULL);
#line 90 "../src/Layouts/Sidebar.vala"
	if (backend_type == BACKEND_TYPE_LOCAL) {
#line 90 "../src/Layouts/Sidebar.vala"
		_tmp0_ = TRUE;
#line 581 "Sidebar.c"
	} else {
#line 90 "../src/Layouts/Sidebar.vala"
		_tmp0_ = backend_type == BACKEND_TYPE_TODOIST;
#line 585 "Sidebar.c"
	}
#line 90 "../src/Layouts/Sidebar.vala"
	if (_tmp0_) {
#line 589 "Sidebar.c"
		GtkFlowBox* _tmp1_;
		LayoutsFilterPaneRow* _tmp2_;
		GtkFlowBox* _tmp3_;
		LayoutsFilterPaneRow* _tmp4_;
		GtkFlowBox* _tmp5_;
		LayoutsFilterPaneRow* _tmp6_;
		GtkFlowBox* _tmp7_;
		LayoutsFilterPaneRow* _tmp8_;
		LayoutsFilterPaneRow* _tmp9_;
		LayoutsFilterPaneRow* _tmp10_;
		LayoutsFilterPaneRow* _tmp11_;
		LayoutsFilterPaneRow* _tmp12_;
		ServicesDatabase* _tmp13_;
		ServicesDatabase* _tmp14_;
		ServicesEventBus* _tmp15_;
		ServicesEventBus* _tmp16_;
#line 91 "../src/Layouts/Sidebar.vala"
		_tmp1_ = self->priv->listbox;
#line 91 "../src/Layouts/Sidebar.vala"
		_tmp2_ = self->priv->inbox;
#line 91 "../src/Layouts/Sidebar.vala"
		gtk_container_add ((GtkContainer*) _tmp1_, (GtkWidget*) _tmp2_);
#line 92 "../src/Layouts/Sidebar.vala"
		_tmp3_ = self->priv->listbox;
#line 92 "../src/Layouts/Sidebar.vala"
		_tmp4_ = self->priv->today;
#line 92 "../src/Layouts/Sidebar.vala"
		gtk_container_add ((GtkContainer*) _tmp3_, (GtkWidget*) _tmp4_);
#line 93 "../src/Layouts/Sidebar.vala"
		_tmp5_ = self->priv->listbox;
#line 93 "../src/Layouts/Sidebar.vala"
		_tmp6_ = self->priv->scheduled;
#line 93 "../src/Layouts/Sidebar.vala"
		gtk_container_add ((GtkContainer*) _tmp5_, (GtkWidget*) _tmp6_);
#line 94 "../src/Layouts/Sidebar.vala"
		_tmp7_ = self->priv->listbox;
#line 94 "../src/Layouts/Sidebar.vala"
		_tmp8_ = self->priv->pinboard;
#line 94 "../src/Layouts/Sidebar.vala"
		gtk_container_add ((GtkContainer*) _tmp7_, (GtkWidget*) _tmp8_);
#line 96 "../src/Layouts/Sidebar.vala"
		_tmp9_ = self->priv->inbox;
#line 96 "../src/Layouts/Sidebar.vala"
		layouts_filter_pane_row_init (_tmp9_);
#line 97 "../src/Layouts/Sidebar.vala"
		_tmp10_ = self->priv->today;
#line 97 "../src/Layouts/Sidebar.vala"
		layouts_filter_pane_row_init (_tmp10_);
#line 98 "../src/Layouts/Sidebar.vala"
		_tmp11_ = self->priv->scheduled;
#line 98 "../src/Layouts/Sidebar.vala"
		layouts_filter_pane_row_init (_tmp11_);
#line 99 "../src/Layouts/Sidebar.vala"
		_tmp12_ = self->priv->pinboard;
#line 99 "../src/Layouts/Sidebar.vala"
		layouts_filter_pane_row_init (_tmp12_);
#line 102 "../src/Layouts/Sidebar.vala"
		_tmp13_ = planner_database;
#line 102 "../src/Layouts/Sidebar.vala"
		g_signal_connect_object (_tmp13_, "project-added", (GCallback) _layouts_sidebar_add_row_project_services_database_project_added, self, 0);
#line 103 "../src/Layouts/Sidebar.vala"
		_tmp14_ = planner_database;
#line 103 "../src/Layouts/Sidebar.vala"
		g_signal_connect_object (_tmp14_, "label-added", (GCallback) _layouts_sidebar_add_row_label_services_database_label_added, self, 0);
#line 104 "../src/Layouts/Sidebar.vala"
		_tmp15_ = planner_event_bus;
#line 104 "../src/Layouts/Sidebar.vala"
		g_signal_connect_object (_tmp15_, "project-parent-changed", (GCallback) ____lambda236__services_event_bus_project_parent_changed, self, 0);
#line 117 "../src/Layouts/Sidebar.vala"
		_tmp16_ = planner_event_bus;
#line 117 "../src/Layouts/Sidebar.vala"
		g_signal_connect_object (_tmp16_, "favorite-toggled", (GCallback) ____lambda237__services_event_bus_favorite_toggled, self, 0);
#line 126 "../src/Layouts/Sidebar.vala"
		if (backend_type == BACKEND_TYPE_TODOIST) {
#line 664 "Sidebar.c"
			ServicesTodoist* _tmp17_;
			WidgetsTodoistSync* _tmp18_;
			ServicesTodoist* _tmp19_;
			WidgetsTodoistSync* _tmp20_;
#line 127 "../src/Layouts/Sidebar.vala"
			_tmp17_ = planner_todoist;
#line 127 "../src/Layouts/Sidebar.vala"
			_tmp18_ = self->priv->todoist_button;
#line 127 "../src/Layouts/Sidebar.vala"
			g_signal_connect_object (_tmp17_, "sync-started", (GCallback) _widgets_todoist_sync_sync_started_services_todoist_sync_started, _tmp18_, 0);
#line 128 "../src/Layouts/Sidebar.vala"
			_tmp19_ = planner_todoist;
#line 128 "../src/Layouts/Sidebar.vala"
			_tmp20_ = self->priv->todoist_button;
#line 128 "../src/Layouts/Sidebar.vala"
			g_signal_connect_object (_tmp19_, "sync-finished", (GCallback) _widgets_todoist_sync_sync_finished_services_todoist_sync_finished, _tmp20_, 0);
#line 681 "Sidebar.c"
		}
#line 132 "../src/Layouts/Sidebar.vala"
		layouts_sidebar_add_all_projects (self);
#line 133 "../src/Layouts/Sidebar.vala"
		layouts_sidebar_add_all_favorites (self);
#line 134 "../src/Layouts/Sidebar.vala"
		layouts_sidebar_add_all_labels (self);
#line 689 "Sidebar.c"
	} else {
#line 135 "../src/Layouts/Sidebar.vala"
		if (backend_type == BACKEND_TYPE_CALDAV) {
#line 693 "Sidebar.c"
		}
	}
#line 139 "../src/Layouts/Sidebar.vala"
	_tmp21_ = self->priv->listbox;
#line 139 "../src/Layouts/Sidebar.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp21_);
#line 700 "Sidebar.c"
}

static void
layouts_sidebar_add_row_project (LayoutsSidebar* self,
                                 ObjectsProject* project)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 142 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (self != NULL);
#line 142 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (project != NULL);
#line 143 "../src/Layouts/Sidebar.vala"
	_tmp1_ = objects_project_get_inbox_project (project);
#line 143 "../src/Layouts/Sidebar.vala"
	_tmp2_ = _tmp1_;
#line 143 "../src/Layouts/Sidebar.vala"
	if (!_tmp2_) {
#line 720 "Sidebar.c"
		gint64 _tmp3_;
		gint64 _tmp4_;
#line 143 "../src/Layouts/Sidebar.vala"
		_tmp3_ = objects_project_get_parent_id (project);
#line 143 "../src/Layouts/Sidebar.vala"
		_tmp4_ = _tmp3_;
#line 143 "../src/Layouts/Sidebar.vala"
		_tmp0_ = _tmp4_ == ((gint64) CONSTANTS_INACTIVE);
#line 729 "Sidebar.c"
	} else {
#line 143 "../src/Layouts/Sidebar.vala"
		_tmp0_ = FALSE;
#line 733 "Sidebar.c"
	}
#line 143 "../src/Layouts/Sidebar.vala"
	if (_tmp0_) {
#line 737 "Sidebar.c"
		GeeHashMap* _tmp5_;
		const gchar* _tmp6_;
		const gchar* _tmp7_;
#line 144 "../src/Layouts/Sidebar.vala"
		_tmp5_ = self->projects_hashmap;
#line 144 "../src/Layouts/Sidebar.vala"
		_tmp6_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 144 "../src/Layouts/Sidebar.vala"
		_tmp7_ = _tmp6_;
#line 144 "../src/Layouts/Sidebar.vala"
		if (!gee_abstract_map_has_key ((GeeAbstractMap*) _tmp5_, _tmp7_)) {
#line 749 "Sidebar.c"
			GeeHashMap* _tmp8_;
			const gchar* _tmp9_;
			const gchar* _tmp10_;
			LayoutsProjectRow* _tmp11_;
			LayoutsProjectRow* _tmp12_;
			LayoutsHeaderItem* _tmp13_;
			GeeHashMap* _tmp14_;
			const gchar* _tmp15_;
			const gchar* _tmp16_;
			gpointer _tmp17_;
			LayoutsProjectRow* _tmp18_;
#line 145 "../src/Layouts/Sidebar.vala"
			_tmp8_ = self->projects_hashmap;
#line 145 "../src/Layouts/Sidebar.vala"
			_tmp9_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 145 "../src/Layouts/Sidebar.vala"
			_tmp10_ = _tmp9_;
#line 145 "../src/Layouts/Sidebar.vala"
			_tmp11_ = layouts_project_row_new (project, TRUE);
#line 145 "../src/Layouts/Sidebar.vala"
			g_object_ref_sink (_tmp11_);
#line 145 "../src/Layouts/Sidebar.vala"
			_tmp12_ = _tmp11_;
#line 145 "../src/Layouts/Sidebar.vala"
			gee_abstract_map_set ((GeeAbstractMap*) _tmp8_, _tmp10_, _tmp12_);
#line 145 "../src/Layouts/Sidebar.vala"
			_g_object_unref0 (_tmp12_);
#line 146 "../src/Layouts/Sidebar.vala"
			_tmp13_ = self->priv->projects_header;
#line 146 "../src/Layouts/Sidebar.vala"
			_tmp14_ = self->projects_hashmap;
#line 146 "../src/Layouts/Sidebar.vala"
			_tmp15_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 146 "../src/Layouts/Sidebar.vala"
			_tmp16_ = _tmp15_;
#line 146 "../src/Layouts/Sidebar.vala"
			_tmp17_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp14_, _tmp16_);
#line 146 "../src/Layouts/Sidebar.vala"
			_tmp18_ = (LayoutsProjectRow*) _tmp17_;
#line 146 "../src/Layouts/Sidebar.vala"
			layouts_header_item_add_child (_tmp13_, (GtkWidget*) _tmp18_);
#line 146 "../src/Layouts/Sidebar.vala"
			_g_object_unref0 (_tmp18_);
#line 793 "Sidebar.c"
		}
	}
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 152 "../src/Layouts/Sidebar.vala"
	return self ? g_object_ref (self) : NULL;
#line 803 "Sidebar.c"
}

static void
layouts_sidebar_add_all_projects (LayoutsSidebar* self)
{
#line 151 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (self != NULL);
#line 811 "Sidebar.c"
	{
		GeeArrayList* _project_list = NULL;
		ServicesDatabase* _tmp0_;
		GeeArrayList* _tmp1_;
		GeeArrayList* _tmp2_;
		GeeArrayList* _tmp3_;
		gint _project_size = 0;
		GeeArrayList* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		gint _project_index = 0;
#line 152 "../src/Layouts/Sidebar.vala"
		_tmp0_ = planner_database;
#line 152 "../src/Layouts/Sidebar.vala"
		_tmp1_ = services_database_get_projects (_tmp0_);
#line 152 "../src/Layouts/Sidebar.vala"
		_tmp2_ = _tmp1_;
#line 152 "../src/Layouts/Sidebar.vala"
		_tmp3_ = _g_object_ref0 (_tmp2_);
#line 152 "../src/Layouts/Sidebar.vala"
		_project_list = _tmp3_;
#line 152 "../src/Layouts/Sidebar.vala"
		_tmp4_ = _project_list;
#line 152 "../src/Layouts/Sidebar.vala"
		_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 152 "../src/Layouts/Sidebar.vala"
		_tmp6_ = _tmp5_;
#line 152 "../src/Layouts/Sidebar.vala"
		_project_size = _tmp6_;
#line 152 "../src/Layouts/Sidebar.vala"
		_project_index = -1;
#line 152 "../src/Layouts/Sidebar.vala"
		while (TRUE) {
#line 845 "Sidebar.c"
			gint _tmp7_;
			gint _tmp8_;
			ObjectsProject* project = NULL;
			GeeArrayList* _tmp9_;
			gpointer _tmp10_;
			ObjectsProject* _tmp11_;
#line 152 "../src/Layouts/Sidebar.vala"
			_project_index = _project_index + 1;
#line 152 "../src/Layouts/Sidebar.vala"
			_tmp7_ = _project_index;
#line 152 "../src/Layouts/Sidebar.vala"
			_tmp8_ = _project_size;
#line 152 "../src/Layouts/Sidebar.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 152 "../src/Layouts/Sidebar.vala"
				break;
#line 862 "Sidebar.c"
			}
#line 152 "../src/Layouts/Sidebar.vala"
			_tmp9_ = _project_list;
#line 152 "../src/Layouts/Sidebar.vala"
			_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _project_index);
#line 152 "../src/Layouts/Sidebar.vala"
			project = (ObjectsProject*) _tmp10_;
#line 153 "../src/Layouts/Sidebar.vala"
			_tmp11_ = project;
#line 153 "../src/Layouts/Sidebar.vala"
			layouts_sidebar_add_row_project (self, _tmp11_);
#line 152 "../src/Layouts/Sidebar.vala"
			_g_object_unref0 (project);
#line 876 "Sidebar.c"
		}
#line 152 "../src/Layouts/Sidebar.vala"
		_g_object_unref0 (_project_list);
#line 880 "Sidebar.c"
	}
}

static void
layouts_sidebar_add_all_favorites (LayoutsSidebar* self)
{
#line 157 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (self != NULL);
#line 889 "Sidebar.c"
	{
		GeeArrayList* _project_list = NULL;
		ServicesDatabase* _tmp0_;
		GeeArrayList* _tmp1_;
		GeeArrayList* _tmp2_;
		GeeArrayList* _tmp3_;
		gint _project_size = 0;
		GeeArrayList* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		gint _project_index = 0;
#line 158 "../src/Layouts/Sidebar.vala"
		_tmp0_ = planner_database;
#line 158 "../src/Layouts/Sidebar.vala"
		_tmp1_ = services_database_get_projects (_tmp0_);
#line 158 "../src/Layouts/Sidebar.vala"
		_tmp2_ = _tmp1_;
#line 158 "../src/Layouts/Sidebar.vala"
		_tmp3_ = _g_object_ref0 (_tmp2_);
#line 158 "../src/Layouts/Sidebar.vala"
		_project_list = _tmp3_;
#line 158 "../src/Layouts/Sidebar.vala"
		_tmp4_ = _project_list;
#line 158 "../src/Layouts/Sidebar.vala"
		_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 158 "../src/Layouts/Sidebar.vala"
		_tmp6_ = _tmp5_;
#line 158 "../src/Layouts/Sidebar.vala"
		_project_size = _tmp6_;
#line 158 "../src/Layouts/Sidebar.vala"
		_project_index = -1;
#line 158 "../src/Layouts/Sidebar.vala"
		while (TRUE) {
#line 923 "Sidebar.c"
			gint _tmp7_;
			gint _tmp8_;
			ObjectsProject* project = NULL;
			GeeArrayList* _tmp9_;
			gpointer _tmp10_;
			ObjectsProject* _tmp11_;
#line 158 "../src/Layouts/Sidebar.vala"
			_project_index = _project_index + 1;
#line 158 "../src/Layouts/Sidebar.vala"
			_tmp7_ = _project_index;
#line 158 "../src/Layouts/Sidebar.vala"
			_tmp8_ = _project_size;
#line 158 "../src/Layouts/Sidebar.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 158 "../src/Layouts/Sidebar.vala"
				break;
#line 940 "Sidebar.c"
			}
#line 158 "../src/Layouts/Sidebar.vala"
			_tmp9_ = _project_list;
#line 158 "../src/Layouts/Sidebar.vala"
			_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _project_index);
#line 158 "../src/Layouts/Sidebar.vala"
			project = (ObjectsProject*) _tmp10_;
#line 159 "../src/Layouts/Sidebar.vala"
			_tmp11_ = project;
#line 159 "../src/Layouts/Sidebar.vala"
			layouts_sidebar_add_row_favorite (self, _tmp11_);
#line 158 "../src/Layouts/Sidebar.vala"
			_g_object_unref0 (project);
#line 954 "Sidebar.c"
		}
#line 158 "../src/Layouts/Sidebar.vala"
		_g_object_unref0 (_project_list);
#line 958 "Sidebar.c"
	}
}

static void
layouts_sidebar_add_row_favorite (LayoutsSidebar* self,
                                  ObjectsProject* project)
{
	gboolean _tmp0_;
	gboolean _tmp1_;
#line 163 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (self != NULL);
#line 163 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (project != NULL);
#line 164 "../src/Layouts/Sidebar.vala"
	_tmp0_ = objects_project_get_is_favorite (project);
#line 164 "../src/Layouts/Sidebar.vala"
	_tmp1_ = _tmp0_;
#line 164 "../src/Layouts/Sidebar.vala"
	if (_tmp1_) {
#line 978 "Sidebar.c"
		GeeHashMap* _tmp2_;
		const gchar* _tmp3_;
		const gchar* _tmp4_;
#line 165 "../src/Layouts/Sidebar.vala"
		_tmp2_ = self->favorites_hashmap;
#line 165 "../src/Layouts/Sidebar.vala"
		_tmp3_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 165 "../src/Layouts/Sidebar.vala"
		_tmp4_ = _tmp3_;
#line 165 "../src/Layouts/Sidebar.vala"
		if (!gee_abstract_map_has_key ((GeeAbstractMap*) _tmp2_, _tmp4_)) {
#line 990 "Sidebar.c"
			GeeHashMap* _tmp5_;
			const gchar* _tmp6_;
			const gchar* _tmp7_;
			LayoutsProjectRow* _tmp8_;
			LayoutsProjectRow* _tmp9_;
			LayoutsHeaderItem* _tmp10_;
			GeeHashMap* _tmp11_;
			const gchar* _tmp12_;
			const gchar* _tmp13_;
			gpointer _tmp14_;
			LayoutsProjectRow* _tmp15_;
#line 166 "../src/Layouts/Sidebar.vala"
			_tmp5_ = self->favorites_hashmap;
#line 166 "../src/Layouts/Sidebar.vala"
			_tmp6_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 166 "../src/Layouts/Sidebar.vala"
			_tmp7_ = _tmp6_;
#line 166 "../src/Layouts/Sidebar.vala"
			_tmp8_ = layouts_project_row_new (project, FALSE);
#line 166 "../src/Layouts/Sidebar.vala"
			g_object_ref_sink (_tmp8_);
#line 166 "../src/Layouts/Sidebar.vala"
			_tmp9_ = _tmp8_;
#line 166 "../src/Layouts/Sidebar.vala"
			gee_abstract_map_set ((GeeAbstractMap*) _tmp5_, _tmp7_, _tmp9_);
#line 166 "../src/Layouts/Sidebar.vala"
			_g_object_unref0 (_tmp9_);
#line 167 "../src/Layouts/Sidebar.vala"
			_tmp10_ = self->priv->favorites_header;
#line 167 "../src/Layouts/Sidebar.vala"
			_tmp11_ = self->favorites_hashmap;
#line 167 "../src/Layouts/Sidebar.vala"
			_tmp12_ = objects_base_object_get_id_string ((ObjectsBaseObject*) project);
#line 167 "../src/Layouts/Sidebar.vala"
			_tmp13_ = _tmp12_;
#line 167 "../src/Layouts/Sidebar.vala"
			_tmp14_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp11_, _tmp13_);
#line 167 "../src/Layouts/Sidebar.vala"
			_tmp15_ = (LayoutsProjectRow*) _tmp14_;
#line 167 "../src/Layouts/Sidebar.vala"
			layouts_header_item_add_child (_tmp10_, (GtkWidget*) _tmp15_);
#line 167 "../src/Layouts/Sidebar.vala"
			_g_object_unref0 (_tmp15_);
#line 1034 "Sidebar.c"
		}
	}
}

static void
layouts_sidebar_add_all_labels (LayoutsSidebar* self)
{
#line 172 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (self != NULL);
#line 1044 "Sidebar.c"
	{
		GeeArrayList* _label_list = NULL;
		ServicesDatabase* _tmp0_;
		GeeArrayList* _tmp1_;
		GeeArrayList* _tmp2_;
		GeeArrayList* _tmp3_;
		gint _label_size = 0;
		GeeArrayList* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		gint _label_index = 0;
#line 173 "../src/Layouts/Sidebar.vala"
		_tmp0_ = planner_database;
#line 173 "../src/Layouts/Sidebar.vala"
		_tmp1_ = services_database_get_labels (_tmp0_);
#line 173 "../src/Layouts/Sidebar.vala"
		_tmp2_ = _tmp1_;
#line 173 "../src/Layouts/Sidebar.vala"
		_tmp3_ = _g_object_ref0 (_tmp2_);
#line 173 "../src/Layouts/Sidebar.vala"
		_label_list = _tmp3_;
#line 173 "../src/Layouts/Sidebar.vala"
		_tmp4_ = _label_list;
#line 173 "../src/Layouts/Sidebar.vala"
		_tmp5_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp4_);
#line 173 "../src/Layouts/Sidebar.vala"
		_tmp6_ = _tmp5_;
#line 173 "../src/Layouts/Sidebar.vala"
		_label_size = _tmp6_;
#line 173 "../src/Layouts/Sidebar.vala"
		_label_index = -1;
#line 173 "../src/Layouts/Sidebar.vala"
		while (TRUE) {
#line 1078 "Sidebar.c"
			gint _tmp7_;
			gint _tmp8_;
			ObjectsLabel* label = NULL;
			GeeArrayList* _tmp9_;
			gpointer _tmp10_;
			ObjectsLabel* _tmp11_;
#line 173 "../src/Layouts/Sidebar.vala"
			_label_index = _label_index + 1;
#line 173 "../src/Layouts/Sidebar.vala"
			_tmp7_ = _label_index;
#line 173 "../src/Layouts/Sidebar.vala"
			_tmp8_ = _label_size;
#line 173 "../src/Layouts/Sidebar.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 173 "../src/Layouts/Sidebar.vala"
				break;
#line 1095 "Sidebar.c"
			}
#line 173 "../src/Layouts/Sidebar.vala"
			_tmp9_ = _label_list;
#line 173 "../src/Layouts/Sidebar.vala"
			_tmp10_ = gee_abstract_list_get ((GeeAbstractList*) _tmp9_, _label_index);
#line 173 "../src/Layouts/Sidebar.vala"
			label = (ObjectsLabel*) _tmp10_;
#line 174 "../src/Layouts/Sidebar.vala"
			_tmp11_ = label;
#line 174 "../src/Layouts/Sidebar.vala"
			layouts_sidebar_add_row_label (self, _tmp11_);
#line 173 "../src/Layouts/Sidebar.vala"
			_g_object_unref0 (label);
#line 1109 "Sidebar.c"
		}
#line 173 "../src/Layouts/Sidebar.vala"
		_g_object_unref0 (_label_list);
#line 1113 "Sidebar.c"
	}
}

static void
layouts_sidebar_add_row_label (LayoutsSidebar* self,
                               ObjectsLabel* label)
{
	LayoutsHeaderItem* _tmp0_;
	LayoutsLabelRow* _tmp1_;
	LayoutsLabelRow* _tmp2_;
#line 178 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (self != NULL);
#line 178 "../src/Layouts/Sidebar.vala"
	g_return_if_fail (label != NULL);
#line 179 "../src/Layouts/Sidebar.vala"
	_tmp0_ = self->priv->labels_header;
#line 179 "../src/Layouts/Sidebar.vala"
	_tmp1_ = layouts_label_row_new (label);
#line 179 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp1_);
#line 179 "../src/Layouts/Sidebar.vala"
	_tmp2_ = _tmp1_;
#line 179 "../src/Layouts/Sidebar.vala"
	layouts_header_item_add_child (_tmp0_, (GtkWidget*) _tmp2_);
#line 179 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (_tmp2_);
#line 1140 "Sidebar.c"
}

LayoutsSidebar*
layouts_sidebar_construct (GType object_type)
{
	LayoutsSidebar * self = NULL;
#line 1 "../src/Layouts/Sidebar.vala"
	self = (LayoutsSidebar*) g_object_new (object_type, NULL);
#line 1 "../src/Layouts/Sidebar.vala"
	return self;
#line 1151 "Sidebar.c"
}

LayoutsSidebar*
layouts_sidebar_new (void)
{
#line 1 "../src/Layouts/Sidebar.vala"
	return layouts_sidebar_construct (LAYOUTS_TYPE_SIDEBAR);
#line 1159 "Sidebar.c"
}

static void
_layouts_sidebar___lambda238_ (LayoutsSidebar* self)
{
#line 71 "../src/Layouts/Sidebar.vala"
	layouts_sidebar_prepare_new_project (self);
#line 1167 "Sidebar.c"
}

static void
__layouts_sidebar___lambda238__layouts_header_item_add_activated (LayoutsHeaderItem* _sender,
                                                                  gpointer self)
{
#line 70 "../src/Layouts/Sidebar.vala"
	_layouts_sidebar___lambda238_ ((LayoutsSidebar*) self);
#line 1176 "Sidebar.c"
}

static void
_layouts_sidebar___lambda239_ (LayoutsSidebar* self)
{
#line 75 "../src/Layouts/Sidebar.vala"
	layouts_sidebar_prepare_new_label (self);
#line 1184 "Sidebar.c"
}

static void
__layouts_sidebar___lambda239__layouts_header_item_add_activated (LayoutsHeaderItem* _sender,
                                                                  gpointer self)
{
#line 74 "../src/Layouts/Sidebar.vala"
	_layouts_sidebar___lambda239_ ((LayoutsSidebar*) self);
#line 1193 "Sidebar.c"
}

static GObject *
layouts_sidebar_constructor (GType type,
                             guint n_construct_properties,
                             GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	LayoutsSidebar * self;
	GeeHashMap* _tmp0_;
	GeeHashMap* _tmp1_;
	WidgetsTodoistSync* _tmp2_;
	GtkFlowBox* _tmp3_ = NULL;
	GtkStyleContext* listbox_context = NULL;
	GtkFlowBox* _tmp4_;
	GtkStyleContext* _tmp5_;
	GtkStyleContext* _tmp6_;
	GtkGrid* listbox_grid = NULL;
	GtkGrid* _tmp7_ = NULL;
	GtkGrid* _tmp8_;
	GtkFlowBox* _tmp9_;
	LayoutsFilterPaneRow* _tmp10_;
	LayoutsFilterPaneRow* _tmp11_;
	LayoutsFilterPaneRow* _tmp12_;
	LayoutsFilterPaneRow* _tmp13_;
	LayoutsHeaderItem* _tmp14_;
	LayoutsHeaderItem* _tmp15_;
	LayoutsHeaderItem* _tmp16_;
	GtkGrid* _tmp17_ = NULL;
	GtkGrid* _tmp18_;
	WidgetsTodoistSync* _tmp19_;
	GtkGrid* _tmp20_;
	GtkGrid* _tmp21_;
	GtkGrid* _tmp22_;
	LayoutsHeaderItem* _tmp23_;
	GtkGrid* _tmp24_;
	LayoutsHeaderItem* _tmp25_;
	GtkGrid* _tmp26_;
	LayoutsHeaderItem* _tmp27_;
	GtkScrolledWindow* scrolled_window = NULL;
	GtkScrolledWindow* _tmp28_ = NULL;
	GtkScrolledWindow* _tmp29_;
	GtkScrolledWindow* _tmp30_;
	GtkGrid* _tmp31_;
	GtkScrolledWindow* _tmp32_;
	LayoutsHeaderItem* _tmp33_;
	LayoutsHeaderItem* _tmp34_;
#line 18 "../src/Layouts/Sidebar.vala"
	parent_class = G_OBJECT_CLASS (layouts_sidebar_parent_class);
#line 18 "../src/Layouts/Sidebar.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 18 "../src/Layouts/Sidebar.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, LAYOUTS_TYPE_SIDEBAR, LayoutsSidebar);
#line 19 "../src/Layouts/Sidebar.vala"
	_tmp0_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, LAYOUTS_TYPE_PROJECT_ROW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 19 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->projects_hashmap);
#line 19 "../src/Layouts/Sidebar.vala"
	self->projects_hashmap = _tmp0_;
#line 20 "../src/Layouts/Sidebar.vala"
	_tmp1_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, LAYOUTS_TYPE_PROJECT_ROW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 20 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->favorites_hashmap);
#line 20 "../src/Layouts/Sidebar.vala"
	self->favorites_hashmap = _tmp1_;
#line 22 "../src/Layouts/Sidebar.vala"
	_tmp2_ = widgets_todoist_sync_new ();
#line 22 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp2_);
#line 22 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->todoist_button);
#line 22 "../src/Layouts/Sidebar.vala"
	self->priv->todoist_button = _tmp2_;
#line 24 "../src/Layouts/Sidebar.vala"
	_tmp3_ = (GtkFlowBox*) gtk_flow_box_new ();
#line 24 "../src/Layouts/Sidebar.vala"
	gtk_flow_box_set_column_spacing (_tmp3_, (guint) 9);
#line 24 "../src/Layouts/Sidebar.vala"
	gtk_flow_box_set_row_spacing (_tmp3_, (guint) 9);
#line 24 "../src/Layouts/Sidebar.vala"
	gtk_flow_box_set_homogeneous (_tmp3_, TRUE);
#line 24 "../src/Layouts/Sidebar.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp3_, TRUE);
#line 24 "../src/Layouts/Sidebar.vala"
	gtk_flow_box_set_max_children_per_line (_tmp3_, (guint) 2);
#line 24 "../src/Layouts/Sidebar.vala"
	gtk_flow_box_set_min_children_per_line (_tmp3_, (guint) 2);
#line 24 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp3_);
#line 24 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->listbox);
#line 24 "../src/Layouts/Sidebar.vala"
	self->priv->listbox = _tmp3_;
#line 33 "../src/Layouts/Sidebar.vala"
	_tmp4_ = self->priv->listbox;
#line 33 "../src/Layouts/Sidebar.vala"
	_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) _tmp4_);
#line 33 "../src/Layouts/Sidebar.vala"
	listbox_context = _tmp5_;
#line 34 "../src/Layouts/Sidebar.vala"
	_tmp6_ = listbox_context;
#line 34 "../src/Layouts/Sidebar.vala"
	gtk_style_context_add_class (_tmp6_, "padding-3");
#line 36 "../src/Layouts/Sidebar.vala"
	_tmp7_ = (GtkGrid*) gtk_grid_new ();
#line 36 "../src/Layouts/Sidebar.vala"
	g_object_set ((GtkWidget*) _tmp7_, "margin", 6, NULL);
#line 36 "../src/Layouts/Sidebar.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp7_, 6);
#line 36 "../src/Layouts/Sidebar.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp7_, 0);
#line 36 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp7_);
#line 36 "../src/Layouts/Sidebar.vala"
	listbox_grid = _tmp7_;
#line 41 "../src/Layouts/Sidebar.vala"
	_tmp8_ = listbox_grid;
#line 41 "../src/Layouts/Sidebar.vala"
	_tmp9_ = self->priv->listbox;
#line 41 "../src/Layouts/Sidebar.vala"
	gtk_container_add ((GtkContainer*) _tmp8_, (GtkWidget*) _tmp9_);
#line 43 "../src/Layouts/Sidebar.vala"
	_tmp10_ = layouts_filter_pane_row_new (FILTER_TYPE_INBOX);
#line 43 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp10_);
#line 43 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->inbox);
#line 43 "../src/Layouts/Sidebar.vala"
	self->priv->inbox = _tmp10_;
#line 44 "../src/Layouts/Sidebar.vala"
	_tmp11_ = layouts_filter_pane_row_new (FILTER_TYPE_TODAY);
#line 44 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp11_);
#line 44 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->today);
#line 44 "../src/Layouts/Sidebar.vala"
	self->priv->today = _tmp11_;
#line 45 "../src/Layouts/Sidebar.vala"
	_tmp12_ = layouts_filter_pane_row_new (FILTER_TYPE_SCHEDULED);
#line 45 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp12_);
#line 45 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->scheduled);
#line 45 "../src/Layouts/Sidebar.vala"
	self->priv->scheduled = _tmp12_;
#line 46 "../src/Layouts/Sidebar.vala"
	_tmp13_ = layouts_filter_pane_row_new (FILTER_TYPE_PINBOARD);
#line 46 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp13_);
#line 46 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->pinboard);
#line 46 "../src/Layouts/Sidebar.vala"
	self->priv->pinboard = _tmp13_;
#line 48 "../src/Layouts/Sidebar.vala"
	_tmp14_ = layouts_header_item_new (PANE_TYPE_FAVORITE, CONTAINER_TYPE_LISTBOX, GTK_SELECTION_SINGLE);
#line 48 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp14_);
#line 48 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->favorites_header);
#line 48 "../src/Layouts/Sidebar.vala"
	self->priv->favorites_header = _tmp14_;
#line 49 "../src/Layouts/Sidebar.vala"
	_tmp15_ = layouts_header_item_new (PANE_TYPE_PROJECT, CONTAINER_TYPE_LISTBOX, GTK_SELECTION_SINGLE);
#line 49 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp15_);
#line 49 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->projects_header);
#line 49 "../src/Layouts/Sidebar.vala"
	self->priv->projects_header = _tmp15_;
#line 50 "../src/Layouts/Sidebar.vala"
	_tmp16_ = layouts_header_item_new (PANE_TYPE_LABEL, CONTAINER_TYPE_LISTBOX, GTK_SELECTION_SINGLE);
#line 50 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp16_);
#line 50 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->labels_header);
#line 50 "../src/Layouts/Sidebar.vala"
	self->priv->labels_header = _tmp16_;
#line 52 "../src/Layouts/Sidebar.vala"
	_tmp17_ = (GtkGrid*) gtk_grid_new ();
#line 52 "../src/Layouts/Sidebar.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp17_, GTK_ORIENTATION_VERTICAL);
#line 52 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp17_);
#line 52 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->main_grid);
#line 52 "../src/Layouts/Sidebar.vala"
	self->priv->main_grid = _tmp17_;
#line 56 "../src/Layouts/Sidebar.vala"
	_tmp18_ = self->priv->main_grid;
#line 56 "../src/Layouts/Sidebar.vala"
	_tmp19_ = self->priv->todoist_button;
#line 56 "../src/Layouts/Sidebar.vala"
	gtk_container_add ((GtkContainer*) _tmp18_, (GtkWidget*) _tmp19_);
#line 57 "../src/Layouts/Sidebar.vala"
	_tmp20_ = self->priv->main_grid;
#line 57 "../src/Layouts/Sidebar.vala"
	_tmp21_ = listbox_grid;
#line 57 "../src/Layouts/Sidebar.vala"
	gtk_container_add ((GtkContainer*) _tmp20_, (GtkWidget*) _tmp21_);
#line 58 "../src/Layouts/Sidebar.vala"
	_tmp22_ = self->priv->main_grid;
#line 58 "../src/Layouts/Sidebar.vala"
	_tmp23_ = self->priv->favorites_header;
#line 58 "../src/Layouts/Sidebar.vala"
	gtk_container_add ((GtkContainer*) _tmp22_, (GtkWidget*) _tmp23_);
#line 59 "../src/Layouts/Sidebar.vala"
	_tmp24_ = self->priv->main_grid;
#line 59 "../src/Layouts/Sidebar.vala"
	_tmp25_ = self->priv->projects_header;
#line 59 "../src/Layouts/Sidebar.vala"
	gtk_container_add ((GtkContainer*) _tmp24_, (GtkWidget*) _tmp25_);
#line 60 "../src/Layouts/Sidebar.vala"
	_tmp26_ = self->priv->main_grid;
#line 60 "../src/Layouts/Sidebar.vala"
	_tmp27_ = self->priv->labels_header;
#line 60 "../src/Layouts/Sidebar.vala"
	gtk_container_add ((GtkContainer*) _tmp26_, (GtkWidget*) _tmp27_);
#line 62 "../src/Layouts/Sidebar.vala"
	_tmp28_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 62 "../src/Layouts/Sidebar.vala"
	g_object_set (_tmp28_, "hscrollbar-policy", GTK_POLICY_NEVER, NULL);
#line 62 "../src/Layouts/Sidebar.vala"
	g_object_ref_sink (_tmp28_);
#line 62 "../src/Layouts/Sidebar.vala"
	scrolled_window = _tmp28_;
#line 65 "../src/Layouts/Sidebar.vala"
	_tmp29_ = scrolled_window;
#line 65 "../src/Layouts/Sidebar.vala"
	g_object_set ((GtkWidget*) _tmp29_, "expand", TRUE, NULL);
#line 66 "../src/Layouts/Sidebar.vala"
	_tmp30_ = scrolled_window;
#line 66 "../src/Layouts/Sidebar.vala"
	_tmp31_ = self->priv->main_grid;
#line 66 "../src/Layouts/Sidebar.vala"
	gtk_container_add ((GtkContainer*) _tmp30_, (GtkWidget*) _tmp31_);
#line 68 "../src/Layouts/Sidebar.vala"
	_tmp32_ = scrolled_window;
#line 68 "../src/Layouts/Sidebar.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp32_);
#line 70 "../src/Layouts/Sidebar.vala"
	_tmp33_ = self->priv->projects_header;
#line 70 "../src/Layouts/Sidebar.vala"
	g_signal_connect_object (_tmp33_, "add-activated", (GCallback) __layouts_sidebar___lambda238__layouts_header_item_add_activated, self, 0);
#line 74 "../src/Layouts/Sidebar.vala"
	_tmp34_ = self->priv->labels_header;
#line 74 "../src/Layouts/Sidebar.vala"
	g_signal_connect_object (_tmp34_, "add-activated", (GCallback) __layouts_sidebar___lambda239__layouts_header_item_add_activated, self, 0);
#line 18 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (scrolled_window);
#line 18 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (listbox_grid);
#line 18 "../src/Layouts/Sidebar.vala"
	return obj;
#line 1448 "Sidebar.c"
}

static void
layouts_sidebar_class_init (LayoutsSidebarClass * klass,
                            gpointer klass_data)
{
#line 1 "../src/Layouts/Sidebar.vala"
	layouts_sidebar_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Layouts/Sidebar.vala"
	g_type_class_adjust_private_offset (klass, &LayoutsSidebar_private_offset);
#line 1 "../src/Layouts/Sidebar.vala"
	G_OBJECT_CLASS (klass)->constructor = layouts_sidebar_constructor;
#line 1 "../src/Layouts/Sidebar.vala"
	G_OBJECT_CLASS (klass)->finalize = layouts_sidebar_finalize;
#line 1463 "Sidebar.c"
}

static void
layouts_sidebar_instance_init (LayoutsSidebar * self,
                               gpointer klass)
{
#line 1 "../src/Layouts/Sidebar.vala"
	self->priv = layouts_sidebar_get_instance_private (self);
#line 1472 "Sidebar.c"
}

static void
layouts_sidebar_finalize (GObject * obj)
{
	LayoutsSidebar * self;
#line 1 "../src/Layouts/Sidebar.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, LAYOUTS_TYPE_SIDEBAR, LayoutsSidebar);
#line 2 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->listbox);
#line 4 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->inbox);
#line 5 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->today);
#line 6 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->scheduled);
#line 7 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->pinboard);
#line 9 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->todoist_button);
#line 10 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->favorites_header);
#line 11 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->projects_header);
#line 12 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->labels_header);
#line 13 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->priv->main_grid);
#line 15 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->projects_hashmap);
#line 16 "../src/Layouts/Sidebar.vala"
	_g_object_unref0 (self->favorites_hashmap);
#line 1 "../src/Layouts/Sidebar.vala"
	G_OBJECT_CLASS (layouts_sidebar_parent_class)->finalize (obj);
#line 1507 "Sidebar.c"
}

static GType
layouts_sidebar_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (LayoutsSidebarClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) layouts_sidebar_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (LayoutsSidebar), 0, (GInstanceInitFunc) layouts_sidebar_instance_init, NULL };
	GType layouts_sidebar_type_id;
	layouts_sidebar_type_id = g_type_register_static (gtk_event_box_get_type (), "LayoutsSidebar", &g_define_type_info, 0);
	LayoutsSidebar_private_offset = g_type_add_instance_private (layouts_sidebar_type_id, sizeof (LayoutsSidebarPrivate));
	return layouts_sidebar_type_id;
}

GType
layouts_sidebar_get_type (void)
{
	static volatile gsize layouts_sidebar_type_id__volatile = 0;
	if (g_once_init_enter (&layouts_sidebar_type_id__volatile)) {
		GType layouts_sidebar_type_id;
		layouts_sidebar_type_id = layouts_sidebar_get_type_once ();
		g_once_init_leave (&layouts_sidebar_type_id__volatile, layouts_sidebar_type_id);
	}
	return layouts_sidebar_type_id__volatile;
}


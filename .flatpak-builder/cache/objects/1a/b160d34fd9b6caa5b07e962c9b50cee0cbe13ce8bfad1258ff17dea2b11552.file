/* LoadingButton.c generated by valac 0.50.10, the Vala compiler
 * generated from LoadingButton.vala, do not modify */

#include <gtk/gtk.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>

#define WIDGETS_TYPE_LOADING_BUTTON (widgets_loading_button_get_type ())
#define WIDGETS_LOADING_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButton))
#define WIDGETS_LOADING_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButtonClass))
#define WIDGETS_IS_LOADING_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_LOADING_BUTTON))
#define WIDGETS_IS_LOADING_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_LOADING_BUTTON))
#define WIDGETS_LOADING_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButtonClass))

typedef struct _WidgetsLoadingButton WidgetsLoadingButton;
typedef struct _WidgetsLoadingButtonClass WidgetsLoadingButtonClass;
typedef struct _WidgetsLoadingButtonPrivate WidgetsLoadingButtonPrivate;
typedef enum  {
	LOADING_BUTTON_TYPE_LABEL,
	LOADING_BUTTON_TYPE_ICON
} LoadingButtonType;

#define TYPE_LOADING_BUTTON_TYPE (loading_button_type_get_type ())
enum  {
	WIDGETS_LOADING_BUTTON_0_PROPERTY,
	WIDGETS_LOADING_BUTTON_TEXT_PROPERTY,
	WIDGETS_LOADING_BUTTON_LOADING_TYPE_PROPERTY,
	WIDGETS_LOADING_BUTTON_IS_LOADING_PROPERTY,
	WIDGETS_LOADING_BUTTON_NUM_PROPERTIES
};
static GParamSpec* widgets_loading_button_properties[WIDGETS_LOADING_BUTTON_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define WIDGETS_TYPE_DYNAMIC_ICON (widgets_dynamic_icon_get_type ())
#define WIDGETS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIcon))
#define WIDGETS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))
#define WIDGETS_IS_DYNAMIC_ICON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_IS_DYNAMIC_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_DYNAMIC_ICON))
#define WIDGETS_DYNAMIC_ICON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_DYNAMIC_ICON, WidgetsDynamicIconClass))

typedef struct _WidgetsDynamicIcon WidgetsDynamicIcon;
typedef struct _WidgetsDynamicIconClass WidgetsDynamicIconClass;

struct _WidgetsLoadingButton {
	GtkButton parent_instance;
	WidgetsLoadingButtonPrivate * priv;
};

struct _WidgetsLoadingButtonClass {
	GtkButtonClass parent_class;
};

struct _WidgetsLoadingButtonPrivate {
	gchar* _text;
	LoadingButtonType _loading_type;
	gboolean _is_loading;
	GtkStack* submit_stack;
};

static gint WidgetsLoadingButton_private_offset;
static gpointer widgets_loading_button_parent_class = NULL;

GType widgets_loading_button_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsLoadingButton, g_object_unref)
GType loading_button_type_get_type (void) G_GNUC_CONST;
WidgetsLoadingButton* widgets_loading_button_new (LoadingButtonType loading_type,
                                                  const gchar* text);
WidgetsLoadingButton* widgets_loading_button_construct (GType object_type,
                                                        LoadingButtonType loading_type,
                                                        const gchar* text);
const gchar* widgets_loading_button_get_text (WidgetsLoadingButton* self);
static void widgets_loading_button_set_text (WidgetsLoadingButton* self,
                                      const gchar* value);
LoadingButtonType widgets_loading_button_get_loading_type (WidgetsLoadingButton* self);
static void widgets_loading_button_set_loading_type (WidgetsLoadingButton* self,
                                              LoadingButtonType value);
gboolean widgets_loading_button_get_is_loading (WidgetsLoadingButton* self);
void widgets_loading_button_set_is_loading (WidgetsLoadingButton* self,
                                            gboolean value);
static GObject * widgets_loading_button_constructor (GType type,
                                              guint n_construct_properties,
                                              GObjectConstructParam * construct_properties);
GType widgets_dynamic_icon_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsDynamicIcon, g_object_unref)
WidgetsDynamicIcon* widgets_dynamic_icon_new (void);
WidgetsDynamicIcon* widgets_dynamic_icon_construct (GType object_type);
void widgets_dynamic_icon_set_size (WidgetsDynamicIcon* self,
                                    gint value);
void widgets_dynamic_icon_update_icon_name (WidgetsDynamicIcon* self,
                                            const gchar* icon_name);
static void widgets_loading_button_finalize (GObject * obj);
static GType widgets_loading_button_get_type_once (void);
static void _vala_widgets_loading_button_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec);
static void _vala_widgets_loading_button_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec);

static inline gpointer
widgets_loading_button_get_instance_private (WidgetsLoadingButton* self)
{
	return G_STRUCT_MEMBER_P (self, WidgetsLoadingButton_private_offset);
}

WidgetsLoadingButton*
widgets_loading_button_construct (GType object_type,
                                  LoadingButtonType loading_type,
                                  const gchar* text)
{
	WidgetsLoadingButton * self = NULL;
#line 25 "../src/Widgets/LoadingButton.vala"
	g_return_val_if_fail (text != NULL, NULL);
#line 26 "../src/Widgets/LoadingButton.vala"
	self = (WidgetsLoadingButton*) g_object_new (object_type, "loading-type", loading_type, "text", text, NULL);
#line 25 "../src/Widgets/LoadingButton.vala"
	return self;
#line 124 "LoadingButton.c"
}

WidgetsLoadingButton*
widgets_loading_button_new (LoadingButtonType loading_type,
                            const gchar* text)
{
#line 25 "../src/Widgets/LoadingButton.vala"
	return widgets_loading_button_construct (WIDGETS_TYPE_LOADING_BUTTON, loading_type, text);
#line 133 "LoadingButton.c"
}

const gchar*
widgets_loading_button_get_text (WidgetsLoadingButton* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 2 "../src/Widgets/LoadingButton.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2 "../src/Widgets/LoadingButton.vala"
	_tmp0_ = self->priv->_text;
#line 2 "../src/Widgets/LoadingButton.vala"
	result = _tmp0_;
#line 2 "../src/Widgets/LoadingButton.vala"
	return result;
#line 149 "LoadingButton.c"
}

static void
widgets_loading_button_set_text (WidgetsLoadingButton* self,
                                 const gchar* value)
{
	gchar* old_value;
#line 2 "../src/Widgets/LoadingButton.vala"
	g_return_if_fail (self != NULL);
#line 2 "../src/Widgets/LoadingButton.vala"
	old_value = widgets_loading_button_get_text (self);
#line 2 "../src/Widgets/LoadingButton.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 163 "LoadingButton.c"
		gchar* _tmp0_;
#line 2 "../src/Widgets/LoadingButton.vala"
		_tmp0_ = g_strdup (value);
#line 2 "../src/Widgets/LoadingButton.vala"
		_g_free0 (self->priv->_text);
#line 2 "../src/Widgets/LoadingButton.vala"
		self->priv->_text = _tmp0_;
#line 2 "../src/Widgets/LoadingButton.vala"
		g_object_notify_by_pspec ((GObject *) self, widgets_loading_button_properties[WIDGETS_LOADING_BUTTON_TEXT_PROPERTY]);
#line 173 "LoadingButton.c"
	}
}

LoadingButtonType
widgets_loading_button_get_loading_type (WidgetsLoadingButton* self)
{
	LoadingButtonType result;
	LoadingButtonType _tmp0_;
#line 3 "../src/Widgets/LoadingButton.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 3 "../src/Widgets/LoadingButton.vala"
	_tmp0_ = self->priv->_loading_type;
#line 3 "../src/Widgets/LoadingButton.vala"
	result = _tmp0_;
#line 3 "../src/Widgets/LoadingButton.vala"
	return result;
#line 190 "LoadingButton.c"
}

static void
widgets_loading_button_set_loading_type (WidgetsLoadingButton* self,
                                         LoadingButtonType value)
{
	LoadingButtonType old_value;
#line 3 "../src/Widgets/LoadingButton.vala"
	g_return_if_fail (self != NULL);
#line 3 "../src/Widgets/LoadingButton.vala"
	old_value = widgets_loading_button_get_loading_type (self);
#line 3 "../src/Widgets/LoadingButton.vala"
	if (old_value != value) {
#line 3 "../src/Widgets/LoadingButton.vala"
		self->priv->_loading_type = value;
#line 3 "../src/Widgets/LoadingButton.vala"
		g_object_notify_by_pspec ((GObject *) self, widgets_loading_button_properties[WIDGETS_LOADING_BUTTON_LOADING_TYPE_PROPERTY]);
#line 208 "LoadingButton.c"
	}
}

gboolean
widgets_loading_button_get_is_loading (WidgetsLoadingButton* self)
{
	gboolean result;
#line 10 "../src/Widgets/LoadingButton.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 11 "../src/Widgets/LoadingButton.vala"
	result = self->priv->_is_loading;
#line 11 "../src/Widgets/LoadingButton.vala"
	return result;
#line 222 "LoadingButton.c"
}

void
widgets_loading_button_set_is_loading (WidgetsLoadingButton* self,
                                       gboolean value)
{
#line 14 "../src/Widgets/LoadingButton.vala"
	g_return_if_fail (self != NULL);
#line 15 "../src/Widgets/LoadingButton.vala"
	if (value) {
#line 233 "LoadingButton.c"
		GtkStack* _tmp0_;
#line 16 "../src/Widgets/LoadingButton.vala"
		_tmp0_ = self->priv->submit_stack;
#line 16 "../src/Widgets/LoadingButton.vala"
		gtk_stack_set_visible_child_name (_tmp0_, "spinner");
#line 239 "LoadingButton.c"
	} else {
		GtkStack* _tmp1_;
#line 18 "../src/Widgets/LoadingButton.vala"
		_tmp1_ = self->priv->submit_stack;
#line 18 "../src/Widgets/LoadingButton.vala"
		gtk_stack_set_visible_child_name (_tmp1_, "button");
#line 246 "LoadingButton.c"
	}
#line 21 "../src/Widgets/LoadingButton.vala"
	self->priv->_is_loading = value;
#line 14 "../src/Widgets/LoadingButton.vala"
	g_object_notify_by_pspec ((GObject *) self, widgets_loading_button_properties[WIDGETS_LOADING_BUTTON_IS_LOADING_PROPERTY]);
#line 252 "LoadingButton.c"
}

static GObject *
widgets_loading_button_constructor (GType type,
                                    guint n_construct_properties,
                                    GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsLoadingButton * self;
	GtkSpinner* submit_spinner = NULL;
	GtkSpinner* _tmp0_ = NULL;
	GtkSpinner* _tmp1_;
	GtkStyleContext* _tmp2_;
	GtkSpinner* _tmp3_;
	GtkStack* _tmp4_ = NULL;
	LoadingButtonType _tmp5_;
	GtkStack* _tmp16_;
	GtkSpinner* _tmp17_;
	GtkStack* _tmp18_;
#line 32 "../src/Widgets/LoadingButton.vala"
	parent_class = G_OBJECT_CLASS (widgets_loading_button_parent_class);
#line 32 "../src/Widgets/LoadingButton.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 32 "../src/Widgets/LoadingButton.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButton);
#line 33 "../src/Widgets/LoadingButton.vala"
	_tmp0_ = (GtkSpinner*) gtk_spinner_new ();
#line 33 "../src/Widgets/LoadingButton.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp0_, GTK_ALIGN_CENTER);
#line 33 "../src/Widgets/LoadingButton.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp0_, GTK_ALIGN_CENTER);
#line 33 "../src/Widgets/LoadingButton.vala"
	g_object_ref_sink (_tmp0_);
#line 33 "../src/Widgets/LoadingButton.vala"
	submit_spinner = _tmp0_;
#line 37 "../src/Widgets/LoadingButton.vala"
	_tmp1_ = submit_spinner;
#line 37 "../src/Widgets/LoadingButton.vala"
	_tmp2_ = gtk_widget_get_style_context ((GtkWidget*) _tmp1_);
#line 37 "../src/Widgets/LoadingButton.vala"
	gtk_style_context_add_class (_tmp2_, "submit-spinner");
#line 38 "../src/Widgets/LoadingButton.vala"
	_tmp3_ = submit_spinner;
#line 38 "../src/Widgets/LoadingButton.vala"
	gtk_spinner_start (_tmp3_);
#line 40 "../src/Widgets/LoadingButton.vala"
	_tmp4_ = (GtkStack*) gtk_stack_new ();
#line 40 "../src/Widgets/LoadingButton.vala"
	gtk_stack_set_transition_type (_tmp4_, GTK_STACK_TRANSITION_TYPE_CROSSFADE);
#line 40 "../src/Widgets/LoadingButton.vala"
	g_object_ref_sink (_tmp4_);
#line 40 "../src/Widgets/LoadingButton.vala"
	_g_object_unref0 (self->priv->submit_stack);
#line 40 "../src/Widgets/LoadingButton.vala"
	self->priv->submit_stack = _tmp4_;
#line 44 "../src/Widgets/LoadingButton.vala"
	_tmp5_ = self->priv->_loading_type;
#line 44 "../src/Widgets/LoadingButton.vala"
	if (_tmp5_ == LOADING_BUTTON_TYPE_LABEL) {
#line 313 "LoadingButton.c"
		GtkStack* _tmp6_;
		const gchar* _tmp7_;
		GtkLabel* _tmp8_;
		GtkLabel* _tmp9_;
#line 45 "../src/Widgets/LoadingButton.vala"
		_tmp6_ = self->priv->submit_stack;
#line 45 "../src/Widgets/LoadingButton.vala"
		_tmp7_ = self->priv->_text;
#line 45 "../src/Widgets/LoadingButton.vala"
		_tmp8_ = (GtkLabel*) gtk_label_new (_tmp7_);
#line 45 "../src/Widgets/LoadingButton.vala"
		g_object_ref_sink (_tmp8_);
#line 45 "../src/Widgets/LoadingButton.vala"
		_tmp9_ = _tmp8_;
#line 45 "../src/Widgets/LoadingButton.vala"
		gtk_stack_add_named (_tmp6_, (GtkWidget*) _tmp9_, "button");
#line 45 "../src/Widgets/LoadingButton.vala"
		_g_object_unref0 (_tmp9_);
#line 332 "LoadingButton.c"
	} else {
		WidgetsDynamicIcon* icon = NULL;
		WidgetsDynamicIcon* _tmp10_;
		WidgetsDynamicIcon* _tmp11_;
		WidgetsDynamicIcon* _tmp12_;
		const gchar* _tmp13_;
		GtkStack* _tmp14_;
		WidgetsDynamicIcon* _tmp15_;
#line 47 "../src/Widgets/LoadingButton.vala"
		_tmp10_ = widgets_dynamic_icon_new ();
#line 47 "../src/Widgets/LoadingButton.vala"
		g_object_ref_sink (_tmp10_);
#line 47 "../src/Widgets/LoadingButton.vala"
		icon = _tmp10_;
#line 48 "../src/Widgets/LoadingButton.vala"
		_tmp11_ = icon;
#line 48 "../src/Widgets/LoadingButton.vala"
		widgets_dynamic_icon_set_size (_tmp11_, 19);
#line 49 "../src/Widgets/LoadingButton.vala"
		_tmp12_ = icon;
#line 49 "../src/Widgets/LoadingButton.vala"
		_tmp13_ = self->priv->_text;
#line 49 "../src/Widgets/LoadingButton.vala"
		widgets_dynamic_icon_update_icon_name (_tmp12_, _tmp13_);
#line 50 "../src/Widgets/LoadingButton.vala"
		_tmp14_ = self->priv->submit_stack;
#line 50 "../src/Widgets/LoadingButton.vala"
		_tmp15_ = icon;
#line 50 "../src/Widgets/LoadingButton.vala"
		gtk_stack_add_named (_tmp14_, (GtkWidget*) _tmp15_, "button");
#line 44 "../src/Widgets/LoadingButton.vala"
		_g_object_unref0 (icon);
#line 365 "LoadingButton.c"
	}
#line 53 "../src/Widgets/LoadingButton.vala"
	_tmp16_ = self->priv->submit_stack;
#line 53 "../src/Widgets/LoadingButton.vala"
	_tmp17_ = submit_spinner;
#line 53 "../src/Widgets/LoadingButton.vala"
	gtk_stack_add_named (_tmp16_, (GtkWidget*) _tmp17_, "spinner");
#line 55 "../src/Widgets/LoadingButton.vala"
	_tmp18_ = self->priv->submit_stack;
#line 55 "../src/Widgets/LoadingButton.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp18_);
#line 32 "../src/Widgets/LoadingButton.vala"
	_g_object_unref0 (submit_spinner);
#line 32 "../src/Widgets/LoadingButton.vala"
	return obj;
#line 381 "LoadingButton.c"
}

static void
widgets_loading_button_class_init (WidgetsLoadingButtonClass * klass,
                                   gpointer klass_data)
{
#line 1 "../src/Widgets/LoadingButton.vala"
	widgets_loading_button_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Widgets/LoadingButton.vala"
	g_type_class_adjust_private_offset (klass, &WidgetsLoadingButton_private_offset);
#line 1 "../src/Widgets/LoadingButton.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_widgets_loading_button_get_property;
#line 1 "../src/Widgets/LoadingButton.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_widgets_loading_button_set_property;
#line 1 "../src/Widgets/LoadingButton.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_loading_button_constructor;
#line 1 "../src/Widgets/LoadingButton.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_loading_button_finalize;
#line 1 "../src/Widgets/LoadingButton.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_LOADING_BUTTON_TEXT_PROPERTY, widgets_loading_button_properties[WIDGETS_LOADING_BUTTON_TEXT_PROPERTY] = g_param_spec_string ("text", "text", "text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1 "../src/Widgets/LoadingButton.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_LOADING_BUTTON_LOADING_TYPE_PROPERTY, widgets_loading_button_properties[WIDGETS_LOADING_BUTTON_LOADING_TYPE_PROPERTY] = g_param_spec_enum ("loading-type", "loading-type", "loading-type", TYPE_LOADING_BUTTON_TYPE, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1 "../src/Widgets/LoadingButton.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_LOADING_BUTTON_IS_LOADING_PROPERTY, widgets_loading_button_properties[WIDGETS_LOADING_BUTTON_IS_LOADING_PROPERTY] = g_param_spec_boolean ("is-loading", "Show loading", "Show loading", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 406 "LoadingButton.c"
}

static void
widgets_loading_button_instance_init (WidgetsLoadingButton * self,
                                      gpointer klass)
{
#line 1 "../src/Widgets/LoadingButton.vala"
	self->priv = widgets_loading_button_get_instance_private (self);
#line 415 "LoadingButton.c"
}

static void
widgets_loading_button_finalize (GObject * obj)
{
	WidgetsLoadingButton * self;
#line 1 "../src/Widgets/LoadingButton.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButton);
#line 2 "../src/Widgets/LoadingButton.vala"
	_g_free0 (self->priv->_text);
#line 6 "../src/Widgets/LoadingButton.vala"
	_g_object_unref0 (self->priv->submit_stack);
#line 1 "../src/Widgets/LoadingButton.vala"
	G_OBJECT_CLASS (widgets_loading_button_parent_class)->finalize (obj);
#line 430 "LoadingButton.c"
}

static GType
widgets_loading_button_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (WidgetsLoadingButtonClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_loading_button_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsLoadingButton), 0, (GInstanceInitFunc) widgets_loading_button_instance_init, NULL };
	GType widgets_loading_button_type_id;
	widgets_loading_button_type_id = g_type_register_static (gtk_button_get_type (), "WidgetsLoadingButton", &g_define_type_info, 0);
	WidgetsLoadingButton_private_offset = g_type_add_instance_private (widgets_loading_button_type_id, sizeof (WidgetsLoadingButtonPrivate));
	return widgets_loading_button_type_id;
}

GType
widgets_loading_button_get_type (void)
{
	static volatile gsize widgets_loading_button_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_loading_button_type_id__volatile)) {
		GType widgets_loading_button_type_id;
		widgets_loading_button_type_id = widgets_loading_button_get_type_once ();
		g_once_init_leave (&widgets_loading_button_type_id__volatile, widgets_loading_button_type_id);
	}
	return widgets_loading_button_type_id__volatile;
}

static void
_vala_widgets_loading_button_get_property (GObject * object,
                                           guint property_id,
                                           GValue * value,
                                           GParamSpec * pspec)
{
	WidgetsLoadingButton * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButton);
#line 1 "../src/Widgets/LoadingButton.vala"
	switch (property_id) {
#line 1 "../src/Widgets/LoadingButton.vala"
		case WIDGETS_LOADING_BUTTON_TEXT_PROPERTY:
#line 1 "../src/Widgets/LoadingButton.vala"
		g_value_set_string (value, widgets_loading_button_get_text (self));
#line 1 "../src/Widgets/LoadingButton.vala"
		break;
#line 1 "../src/Widgets/LoadingButton.vala"
		case WIDGETS_LOADING_BUTTON_LOADING_TYPE_PROPERTY:
#line 1 "../src/Widgets/LoadingButton.vala"
		g_value_set_enum (value, widgets_loading_button_get_loading_type (self));
#line 1 "../src/Widgets/LoadingButton.vala"
		break;
#line 1 "../src/Widgets/LoadingButton.vala"
		case WIDGETS_LOADING_BUTTON_IS_LOADING_PROPERTY:
#line 1 "../src/Widgets/LoadingButton.vala"
		g_value_set_boolean (value, widgets_loading_button_get_is_loading (self));
#line 1 "../src/Widgets/LoadingButton.vala"
		break;
#line 483 "LoadingButton.c"
		default:
#line 1 "../src/Widgets/LoadingButton.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Widgets/LoadingButton.vala"
		break;
#line 489 "LoadingButton.c"
	}
}

static void
_vala_widgets_loading_button_set_property (GObject * object,
                                           guint property_id,
                                           const GValue * value,
                                           GParamSpec * pspec)
{
	WidgetsLoadingButton * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_LOADING_BUTTON, WidgetsLoadingButton);
#line 1 "../src/Widgets/LoadingButton.vala"
	switch (property_id) {
#line 1 "../src/Widgets/LoadingButton.vala"
		case WIDGETS_LOADING_BUTTON_TEXT_PROPERTY:
#line 1 "../src/Widgets/LoadingButton.vala"
		widgets_loading_button_set_text (self, g_value_get_string (value));
#line 1 "../src/Widgets/LoadingButton.vala"
		break;
#line 1 "../src/Widgets/LoadingButton.vala"
		case WIDGETS_LOADING_BUTTON_LOADING_TYPE_PROPERTY:
#line 1 "../src/Widgets/LoadingButton.vala"
		widgets_loading_button_set_loading_type (self, g_value_get_enum (value));
#line 1 "../src/Widgets/LoadingButton.vala"
		break;
#line 1 "../src/Widgets/LoadingButton.vala"
		case WIDGETS_LOADING_BUTTON_IS_LOADING_PROPERTY:
#line 1 "../src/Widgets/LoadingButton.vala"
		widgets_loading_button_set_is_loading (self, g_value_get_boolean (value));
#line 1 "../src/Widgets/LoadingButton.vala"
		break;
#line 521 "LoadingButton.c"
		default:
#line 1 "../src/Widgets/LoadingButton.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Widgets/LoadingButton.vala"
		break;
#line 527 "LoadingButton.c"
	}
}


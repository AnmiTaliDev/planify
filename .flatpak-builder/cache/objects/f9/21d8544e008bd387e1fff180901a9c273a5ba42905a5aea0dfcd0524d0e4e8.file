/* LabelRow.c generated by valac 0.50.10, the Vala compiler
 * generated from LabelRow.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 3 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alainmh23@gmail.com>
*/

#include <gtk/gtk.h>
#include <glib-object.h>
#include <glib.h>
#include <stdlib.h>
#include <string.h>
#include <handy.h>
#include <glib/gi18n-lib.h>
#include <pango/pango.h>
#include <granite.h>
#include <gdk/gdk.h>

#define LAYOUTS_TYPE_LABEL_ROW (layouts_label_row_get_type ())
#define LAYOUTS_LABEL_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRow))
#define LAYOUTS_LABEL_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRowClass))
#define LAYOUTS_IS_LABEL_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), LAYOUTS_TYPE_LABEL_ROW))
#define LAYOUTS_IS_LABEL_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), LAYOUTS_TYPE_LABEL_ROW))
#define LAYOUTS_LABEL_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRowClass))

typedef struct _LayoutsLabelRow LayoutsLabelRow;
typedef struct _LayoutsLabelRowClass LayoutsLabelRowClass;
typedef struct _LayoutsLabelRowPrivate LayoutsLabelRowPrivate;

#define OBJECTS_TYPE_BASE_OBJECT (objects_base_object_get_type ())
#define OBJECTS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObject))
#define OBJECTS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))
#define OBJECTS_IS_BASE_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_IS_BASE_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_BASE_OBJECT))
#define OBJECTS_BASE_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_BASE_OBJECT, ObjectsBaseObjectClass))

typedef struct _ObjectsBaseObject ObjectsBaseObject;
typedef struct _ObjectsBaseObjectClass ObjectsBaseObjectClass;

#define OBJECTS_TYPE_LABEL (objects_label_get_type ())
#define OBJECTS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_LABEL, ObjectsLabel))
#define OBJECTS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_LABEL, ObjectsLabelClass))
#define OBJECTS_IS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_LABEL))
#define OBJECTS_IS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_LABEL))
#define OBJECTS_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_LABEL, ObjectsLabelClass))

typedef struct _ObjectsLabel ObjectsLabel;
typedef struct _ObjectsLabelClass ObjectsLabelClass;
enum  {
	LAYOUTS_LABEL_ROW_0_PROPERTY,
	LAYOUTS_LABEL_ROW_LABEL_PROPERTY,
	LAYOUTS_LABEL_ROW_NUM_PROPERTIES
};
static GParamSpec* layouts_label_row_properties[LAYOUTS_LABEL_ROW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define TYPE_UTIL (util_get_type ())
#define UTIL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTIL, Util))
#define UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTIL, UtilClass))
#define IS_UTIL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTIL))
#define IS_UTIL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTIL))
#define UTIL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTIL, UtilClass))

typedef struct _Util Util;
typedef struct _UtilClass UtilClass;
#define _g_free0(var) (var = (g_free (var), NULL))

#define DIALOGS_CONTEXT_MENU_TYPE_MENU (dialogs_context_menu_menu_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenu))
#define DIALOGS_CONTEXT_MENU_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_IS_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU))
#define DIALOGS_CONTEXT_MENU_MENU_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU, DialogsContextMenuMenuClass))

typedef struct _DialogsContextMenuMenu DialogsContextMenuMenu;
typedef struct _DialogsContextMenuMenuClass DialogsContextMenuMenuClass;
typedef struct _Block6Data Block6Data;

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM (dialogs_context_menu_menu_item_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItem))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItemClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM))
#define DIALOGS_CONTEXT_MENU_IS_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM))
#define DIALOGS_CONTEXT_MENU_MENU_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_ITEM, DialogsContextMenuMenuItemClass))

typedef struct _DialogsContextMenuMenuItem DialogsContextMenuMenuItem;
typedef struct _DialogsContextMenuMenuItemClass DialogsContextMenuMenuItemClass;

#define DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR (dialogs_context_menu_menu_separator_get_type ())
#define DIALOGS_CONTEXT_MENU_MENU_SEPARATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR, DialogsContextMenuMenuSeparator))
#define DIALOGS_CONTEXT_MENU_MENU_SEPARATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR, DialogsContextMenuMenuSeparatorClass))
#define DIALOGS_CONTEXT_MENU_IS_MENU_SEPARATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR))
#define DIALOGS_CONTEXT_MENU_IS_MENU_SEPARATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR))
#define DIALOGS_CONTEXT_MENU_MENU_SEPARATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_CONTEXT_MENU_TYPE_MENU_SEPARATOR, DialogsContextMenuMenuSeparatorClass))

typedef struct _DialogsContextMenuMenuSeparator DialogsContextMenuMenuSeparator;
typedef struct _DialogsContextMenuMenuSeparatorClass DialogsContextMenuMenuSeparatorClass;

#define DIALOGS_TYPE_LABEL (dialogs_label_get_type ())
#define DIALOGS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_TYPE_LABEL, DialogsLabel))
#define DIALOGS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_TYPE_LABEL, DialogsLabelClass))
#define DIALOGS_IS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_TYPE_LABEL))
#define DIALOGS_IS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_TYPE_LABEL))
#define DIALOGS_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_TYPE_LABEL, DialogsLabelClass))

typedef struct _DialogsLabel DialogsLabel;
typedef struct _DialogsLabelClass DialogsLabelClass;

#define SERVICES_TYPE_EVENT_BUS (services_event_bus_get_type ())
#define SERVICES_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBus))
#define SERVICES_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))
#define SERVICES_IS_EVENT_BUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_IS_EVENT_BUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_EVENT_BUS))
#define SERVICES_EVENT_BUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_EVENT_BUS, ServicesEventBusClass))

typedef struct _ServicesEventBus ServicesEventBus;
typedef struct _ServicesEventBusClass ServicesEventBusClass;
typedef enum  {
	PANE_TYPE_FILTER,
	PANE_TYPE_FAVORITE,
	PANE_TYPE_PROJECT,
	PANE_TYPE_LABEL,
	PANE_TYPE_TASKLIST
} PaneType;

#define TYPE_PANE_TYPE (pane_type_get_type ())

struct _LayoutsLabelRow {
	GtkListBoxRow parent_instance;
	LayoutsLabelRowPrivate * priv;
};

struct _LayoutsLabelRowClass {
	GtkListBoxRowClass parent_class;
};

struct _LayoutsLabelRowPrivate {
	ObjectsLabel* _label;
	GtkLabel* name_label;
	GtkLabel* count_label;
	GtkRevealer* count_revealer;
	GtkRevealer* main_revealer;
	GtkGrid* widget_color;
	GtkGrid* handle_grid;
	GtkEventBox* labelrow_eventbox;
};

struct _Block6Data {
	int _ref_count_;
	LayoutsLabelRow* self;
	DialogsContextMenuMenu* menu;
};

static gint LayoutsLabelRow_private_offset;
static gpointer layouts_label_row_parent_class = NULL;
extern ServicesEventBus* planner_event_bus;

GType layouts_label_row_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (LayoutsLabelRow, g_object_unref)
GType objects_base_object_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsBaseObject, g_object_unref)
GType objects_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ObjectsLabel, g_object_unref)
LayoutsLabelRow* layouts_label_row_new (ObjectsLabel* label);
LayoutsLabelRow* layouts_label_row_construct (GType object_type,
                                              ObjectsLabel* label);
void layouts_label_row_update_request (LayoutsLabelRow* self);
ObjectsLabel* layouts_label_row_get_label (LayoutsLabelRow* self);
const gchar* objects_label_get_name (ObjectsLabel* self);
GType util_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Util, g_object_unref)
Util* util_get_default (void);
void util_set_widget_color (Util* self,
                            const gchar* color,
                            GtkWidget* widget);
gchar* util_get_color (Util* self,
                       const gchar* key);
const gchar* objects_label_get_color (ObjectsLabel* self);
void layouts_label_row_hide_destroy (LayoutsLabelRow* self);
static gboolean __lambda227_ (LayoutsLabelRow* self);
static gboolean ___lambda227__gsource_func (gpointer self);
static void layouts_label_row_build_content_menu (LayoutsLabelRow* self);
GType dialogs_context_menu_menu_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenu, g_object_unref)
static Block6Data* block6_data_ref (Block6Data* _data6_);
static void block6_data_unref (void * _userdata_);
DialogsContextMenuMenu* dialogs_context_menu_menu_new (void);
DialogsContextMenuMenu* dialogs_context_menu_menu_construct (GType object_type);
GType dialogs_context_menu_menu_item_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuItem, g_object_unref)
DialogsContextMenuMenuItem* dialogs_context_menu_menu_item_new (const gchar* title,
                                                                const gchar* icon_name);
DialogsContextMenuMenuItem* dialogs_context_menu_menu_item_construct (GType object_type,
                                                                      const gchar* title,
                                                                      const gchar* icon_name);
void dialogs_context_menu_menu_add_item (DialogsContextMenuMenu* self,
                                         GtkWidget* widget);
DialogsContextMenuMenuSeparator* dialogs_context_menu_menu_separator_new (void);
DialogsContextMenuMenuSeparator* dialogs_context_menu_menu_separator_construct (GType object_type);
GType dialogs_context_menu_menu_separator_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsContextMenuMenuSeparator, g_object_unref)
void dialogs_context_menu_menu_popup (DialogsContextMenuMenu* self);
static void __lambda228_ (Block6Data* _data6_);
void dialogs_context_menu_menu_hide_destroy (DialogsContextMenuMenu* self);
static void ___lambda228__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                                 gpointer self);
static void __lambda229_ (Block6Data* _data6_);
GType dialogs_label_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DialogsLabel, g_object_unref)
DialogsLabel* dialogs_label_new (ObjectsLabel* label);
DialogsLabel* dialogs_label_construct (GType object_type,
                                       ObjectsLabel* label);
static void ___lambda229__gtk_button_clicked (GtkButton* _sender,
                                       gpointer self);
static void layouts_label_row_set_label (LayoutsLabelRow* self,
                                  ObjectsLabel* value);
static GObject * layouts_label_row_constructor (GType type,
                                         guint n_construct_properties,
                                         GObjectConstructParam * construct_properties);
gint objects_label_get_label_count (ObjectsLabel* self);
static gboolean _layouts_label_row___lambda230_ (LayoutsLabelRow* self);
static gboolean __layouts_label_row___lambda230__gsource_func (gpointer self);
static void _layouts_label_row___lambda231_ (LayoutsLabelRow* self);
static void __layouts_label_row___lambda231__objects_base_object_updated (ObjectsBaseObject* _sender,
                                                                   gpointer self);
static gboolean _layouts_label_row___lambda232_ (LayoutsLabelRow* self,
                                          GtkWidget* sender,
                                          GdkEventButton* evt);
static gboolean ___lambda233_ (LayoutsLabelRow* self);
GType services_event_bus_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ServicesEventBus, g_object_unref)
GType pane_type_get_type (void) G_GNUC_CONST;
const gchar* objects_base_object_get_id_string (ObjectsBaseObject* self);
static gboolean ____lambda233__gsource_func (gpointer self);
static gboolean __layouts_label_row___lambda232__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                         GdkEventButton* event,
                                                                         gpointer self);
static void _layouts_label_row___lambda234_ (LayoutsLabelRow* self,
                                      PaneType pane_type,
                                      const gchar* id);
static void __layouts_label_row___lambda234__services_event_bus_pane_selected (ServicesEventBus* _sender,
                                                                        PaneType panel_type,
                                                                        const gchar* id,
                                                                        gpointer self);
static void _layouts_label_row___lambda235_ (LayoutsLabelRow* self);
static void __layouts_label_row___lambda235__objects_label_label_count_updated (ObjectsLabel* _sender,
                                                                         gpointer self);
static void layouts_label_row_finalize (GObject * obj);
static GType layouts_label_row_get_type_once (void);
static void _vala_layouts_label_row_get_property (GObject * object,
                                           guint property_id,
                                           GValue * value,
                                           GParamSpec * pspec);
static void _vala_layouts_label_row_set_property (GObject * object,
                                           guint property_id,
                                           const GValue * value,
                                           GParamSpec * pspec);

static inline gpointer
layouts_label_row_get_instance_private (LayoutsLabelRow* self)
{
	return G_STRUCT_MEMBER_P (self, LayoutsLabelRow_private_offset);
}

LayoutsLabelRow*
layouts_label_row_construct (GType object_type,
                             ObjectsLabel* label)
{
	LayoutsLabelRow * self = NULL;
#line 33 "../src/Layouts/LabelRow.vala"
	g_return_val_if_fail (label != NULL, NULL);
#line 34 "../src/Layouts/LabelRow.vala"
	self = (LayoutsLabelRow*) g_object_new (object_type, "label", label, NULL);
#line 33 "../src/Layouts/LabelRow.vala"
	return self;
#line 294 "LabelRow.c"
}

LayoutsLabelRow*
layouts_label_row_new (ObjectsLabel* label)
{
#line 33 "../src/Layouts/LabelRow.vala"
	return layouts_label_row_construct (LAYOUTS_TYPE_LABEL_ROW, label);
#line 302 "LabelRow.c"
}

void
layouts_label_row_update_request (LayoutsLabelRow* self)
{
	GtkLabel* _tmp0_;
	ObjectsLabel* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	Util* _tmp4_;
	Util* _tmp5_;
	Util* _tmp6_;
	Util* _tmp7_;
	ObjectsLabel* _tmp8_;
	const gchar* _tmp9_;
	const gchar* _tmp10_;
	gchar* _tmp11_;
	gchar* _tmp12_;
	GtkGrid* _tmp13_;
#line 133 "../src/Layouts/LabelRow.vala"
	g_return_if_fail (self != NULL);
#line 134 "../src/Layouts/LabelRow.vala"
	_tmp0_ = self->priv->name_label;
#line 134 "../src/Layouts/LabelRow.vala"
	_tmp1_ = self->priv->_label;
#line 134 "../src/Layouts/LabelRow.vala"
	_tmp2_ = objects_label_get_name (_tmp1_);
#line 134 "../src/Layouts/LabelRow.vala"
	_tmp3_ = _tmp2_;
#line 134 "../src/Layouts/LabelRow.vala"
	gtk_label_set_label (_tmp0_, _tmp3_);
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp4_ = util_get_default ();
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp5_ = _tmp4_;
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp6_ = util_get_default ();
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp7_ = _tmp6_;
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp8_ = self->priv->_label;
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp9_ = objects_label_get_color (_tmp8_);
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp10_ = _tmp9_;
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp11_ = util_get_color (_tmp7_, _tmp10_);
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp12_ = _tmp11_;
#line 135 "../src/Layouts/LabelRow.vala"
	_tmp13_ = self->priv->widget_color;
#line 135 "../src/Layouts/LabelRow.vala"
	util_set_widget_color (_tmp5_, _tmp12_, (GtkWidget*) _tmp13_);
#line 135 "../src/Layouts/LabelRow.vala"
	_g_free0 (_tmp12_);
#line 135 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (_tmp7_);
#line 135 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (_tmp5_);
#line 362 "LabelRow.c"
}

static gboolean
__lambda227_ (LayoutsLabelRow* self)
{
	gboolean result = FALSE;
#line 141 "../src/Layouts/LabelRow.vala"
	gtk_widget_destroy ((GtkWidget*) self);
#line 142 "../src/Layouts/LabelRow.vala"
	result = G_SOURCE_REMOVE;
#line 142 "../src/Layouts/LabelRow.vala"
	return result;
#line 375 "LabelRow.c"
}

static gboolean
___lambda227__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda227_ ((LayoutsLabelRow*) self);
#line 140 "../src/Layouts/LabelRow.vala"
	return result;
#line 385 "LabelRow.c"
}

void
layouts_label_row_hide_destroy (LayoutsLabelRow* self)
{
	GtkRevealer* _tmp0_;
	GtkRevealer* _tmp1_;
	guint _tmp2_;
	guint _tmp3_;
#line 138 "../src/Layouts/LabelRow.vala"
	g_return_if_fail (self != NULL);
#line 139 "../src/Layouts/LabelRow.vala"
	_tmp0_ = self->priv->main_revealer;
#line 139 "../src/Layouts/LabelRow.vala"
	gtk_revealer_set_reveal_child (_tmp0_, FALSE);
#line 140 "../src/Layouts/LabelRow.vala"
	_tmp1_ = self->priv->main_revealer;
#line 140 "../src/Layouts/LabelRow.vala"
	_tmp2_ = gtk_revealer_get_transition_duration (_tmp1_);
#line 140 "../src/Layouts/LabelRow.vala"
	_tmp3_ = _tmp2_;
#line 140 "../src/Layouts/LabelRow.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, _tmp3_, ___lambda227__gsource_func, g_object_ref (self), g_object_unref);
#line 409 "LabelRow.c"
}

static Block6Data*
block6_data_ref (Block6Data* _data6_)
{
#line 146 "../src/Layouts/LabelRow.vala"
	g_atomic_int_inc (&_data6_->_ref_count_);
#line 146 "../src/Layouts/LabelRow.vala"
	return _data6_;
#line 419 "LabelRow.c"
}

static void
block6_data_unref (void * _userdata_)
{
	Block6Data* _data6_;
	_data6_ = (Block6Data*) _userdata_;
#line 146 "../src/Layouts/LabelRow.vala"
	if (g_atomic_int_dec_and_test (&_data6_->_ref_count_)) {
#line 429 "LabelRow.c"
		LayoutsLabelRow* self;
#line 146 "../src/Layouts/LabelRow.vala"
		self = _data6_->self;
#line 146 "../src/Layouts/LabelRow.vala"
		_g_object_unref0 (_data6_->menu);
#line 146 "../src/Layouts/LabelRow.vala"
		_g_object_unref0 (self);
#line 146 "../src/Layouts/LabelRow.vala"
		g_slice_free (Block6Data, _data6_);
#line 439 "LabelRow.c"
	}
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 153 "../src/Layouts/LabelRow.vala"
	return self ? g_object_ref (self) : NULL;
#line 448 "LabelRow.c"
}

static void
__lambda228_ (Block6Data* _data6_)
{
	LayoutsLabelRow* self;
#line 162 "../src/Layouts/LabelRow.vala"
	self = _data6_->self;
#line 163 "../src/Layouts/LabelRow.vala"
	dialogs_context_menu_menu_hide_destroy (_data6_->menu);
#line 459 "LabelRow.c"
}

static void
___lambda228__dialogs_context_menu_menu_item_activate_item (DialogsContextMenuMenuItem* _sender,
                                                            gpointer self)
{
#line 162 "../src/Layouts/LabelRow.vala"
	__lambda228_ (self);
#line 468 "LabelRow.c"
}

static void
__lambda229_ (Block6Data* _data6_)
{
	LayoutsLabelRow* self;
	DialogsLabel* dialog = NULL;
	ObjectsLabel* _tmp0_;
	DialogsLabel* _tmp1_;
#line 166 "../src/Layouts/LabelRow.vala"
	self = _data6_->self;
#line 167 "../src/Layouts/LabelRow.vala"
	dialogs_context_menu_menu_hide_destroy (_data6_->menu);
#line 168 "../src/Layouts/LabelRow.vala"
	_tmp0_ = self->priv->_label;
#line 168 "../src/Layouts/LabelRow.vala"
	_tmp1_ = dialogs_label_new (_tmp0_);
#line 168 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp1_);
#line 168 "../src/Layouts/LabelRow.vala"
	dialog = _tmp1_;
#line 169 "../src/Layouts/LabelRow.vala"
	gtk_widget_show_all ((GtkWidget*) dialog);
#line 166 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (dialog);
#line 494 "LabelRow.c"
}

static void
___lambda229__gtk_button_clicked (GtkButton* _sender,
                                  gpointer self)
{
#line 166 "../src/Layouts/LabelRow.vala"
	__lambda229_ (self);
#line 503 "LabelRow.c"
}

static void
layouts_label_row_build_content_menu (LayoutsLabelRow* self)
{
	Block6Data* _data6_;
	DialogsContextMenuMenu* _tmp0_;
	DialogsContextMenuMenuItem* edit_item = NULL;
	DialogsContextMenuMenuItem* _tmp1_;
	DialogsContextMenuMenuItem* delete_item = NULL;
	DialogsContextMenuMenuItem* _tmp2_;
	GtkStyleContext* delete_item_context = NULL;
	GtkStyleContext* _tmp3_;
	GtkStyleContext* _tmp4_;
	DialogsContextMenuMenuSeparator* _tmp5_;
	DialogsContextMenuMenuSeparator* _tmp6_;
#line 146 "../src/Layouts/LabelRow.vala"
	g_return_if_fail (self != NULL);
#line 146 "../src/Layouts/LabelRow.vala"
	_data6_ = g_slice_new0 (Block6Data);
#line 146 "../src/Layouts/LabelRow.vala"
	_data6_->_ref_count_ = 1;
#line 146 "../src/Layouts/LabelRow.vala"
	_data6_->self = g_object_ref (self);
#line 147 "../src/Layouts/LabelRow.vala"
	_tmp0_ = dialogs_context_menu_menu_new ();
#line 147 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp0_);
#line 147 "../src/Layouts/LabelRow.vala"
	_data6_->menu = _tmp0_;
#line 149 "../src/Layouts/LabelRow.vala"
	_tmp1_ = dialogs_context_menu_menu_item_new ("Edit label", "planner-edit");
#line 149 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp1_);
#line 149 "../src/Layouts/LabelRow.vala"
	edit_item = _tmp1_;
#line 151 "../src/Layouts/LabelRow.vala"
	_tmp2_ = dialogs_context_menu_menu_item_new (_ ("Delete label"), "planner-trash");
#line 151 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp2_);
#line 151 "../src/Layouts/LabelRow.vala"
	delete_item = _tmp2_;
#line 153 "../src/Layouts/LabelRow.vala"
	_tmp3_ = gtk_widget_get_style_context ((GtkWidget*) delete_item);
#line 153 "../src/Layouts/LabelRow.vala"
	_tmp4_ = _g_object_ref0 (_tmp3_);
#line 153 "../src/Layouts/LabelRow.vala"
	delete_item_context = _tmp4_;
#line 154 "../src/Layouts/LabelRow.vala"
	gtk_style_context_add_class (delete_item_context, "menu-item-danger");
#line 156 "../src/Layouts/LabelRow.vala"
	dialogs_context_menu_menu_add_item (_data6_->menu, (GtkWidget*) edit_item);
#line 157 "../src/Layouts/LabelRow.vala"
	_tmp5_ = dialogs_context_menu_menu_separator_new ();
#line 157 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp5_);
#line 157 "../src/Layouts/LabelRow.vala"
	_tmp6_ = _tmp5_;
#line 157 "../src/Layouts/LabelRow.vala"
	dialogs_context_menu_menu_add_item (_data6_->menu, (GtkWidget*) _tmp6_);
#line 157 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (_tmp6_);
#line 158 "../src/Layouts/LabelRow.vala"
	dialogs_context_menu_menu_add_item (_data6_->menu, (GtkWidget*) delete_item);
#line 160 "../src/Layouts/LabelRow.vala"
	dialogs_context_menu_menu_popup (_data6_->menu);
#line 162 "../src/Layouts/LabelRow.vala"
	g_signal_connect_data (delete_item, "activate-item", (GCallback) ___lambda228__dialogs_context_menu_menu_item_activate_item, block6_data_ref (_data6_), (GClosureNotify) block6_data_unref, 0);
#line 166 "../src/Layouts/LabelRow.vala"
	g_signal_connect_data ((GtkButton*) edit_item, "clicked", (GCallback) ___lambda229__gtk_button_clicked, block6_data_ref (_data6_), (GClosureNotify) block6_data_unref, 0);
#line 146 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (delete_item_context);
#line 146 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (delete_item);
#line 146 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (edit_item);
#line 146 "../src/Layouts/LabelRow.vala"
	block6_data_unref (_data6_);
#line 146 "../src/Layouts/LabelRow.vala"
	_data6_ = NULL;
#line 584 "LabelRow.c"
}

ObjectsLabel*
layouts_label_row_get_label (LayoutsLabelRow* self)
{
	ObjectsLabel* result;
	ObjectsLabel* _tmp0_;
#line 23 "../src/Layouts/LabelRow.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 23 "../src/Layouts/LabelRow.vala"
	_tmp0_ = self->priv->_label;
#line 23 "../src/Layouts/LabelRow.vala"
	result = _tmp0_;
#line 23 "../src/Layouts/LabelRow.vala"
	return result;
#line 600 "LabelRow.c"
}

static void
layouts_label_row_set_label (LayoutsLabelRow* self,
                             ObjectsLabel* value)
{
	ObjectsLabel* old_value;
#line 23 "../src/Layouts/LabelRow.vala"
	g_return_if_fail (self != NULL);
#line 23 "../src/Layouts/LabelRow.vala"
	old_value = layouts_label_row_get_label (self);
#line 23 "../src/Layouts/LabelRow.vala"
	if (old_value != value) {
#line 614 "LabelRow.c"
		ObjectsLabel* _tmp0_;
#line 23 "../src/Layouts/LabelRow.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 23 "../src/Layouts/LabelRow.vala"
		_g_object_unref0 (self->priv->_label);
#line 23 "../src/Layouts/LabelRow.vala"
		self->priv->_label = _tmp0_;
#line 23 "../src/Layouts/LabelRow.vala"
		g_object_notify_by_pspec ((GObject *) self, layouts_label_row_properties[LAYOUTS_LABEL_ROW_LABEL_PROPERTY]);
#line 624 "LabelRow.c"
	}
}

static gboolean
_layouts_label_row___lambda230_ (LayoutsLabelRow* self)
{
	GtkRevealer* _tmp0_;
	gboolean result = FALSE;
#line 94 "../src/Layouts/LabelRow.vala"
	_tmp0_ = self->priv->main_revealer;
#line 94 "../src/Layouts/LabelRow.vala"
	gtk_revealer_set_reveal_child (_tmp0_, TRUE);
#line 95 "../src/Layouts/LabelRow.vala"
	result = G_SOURCE_REMOVE;
#line 95 "../src/Layouts/LabelRow.vala"
	return result;
#line 641 "LabelRow.c"
}

static gboolean
__layouts_label_row___lambda230__gsource_func (gpointer self)
{
	gboolean result;
	result = _layouts_label_row___lambda230_ ((LayoutsLabelRow*) self);
#line 93 "../src/Layouts/LabelRow.vala"
	return result;
#line 651 "LabelRow.c"
}

static void
_layouts_label_row___lambda231_ (LayoutsLabelRow* self)
{
#line 99 "../src/Layouts/LabelRow.vala"
	layouts_label_row_update_request (self);
#line 659 "LabelRow.c"
}

static void
__layouts_label_row___lambda231__objects_base_object_updated (ObjectsBaseObject* _sender,
                                                              gpointer self)
{
#line 98 "../src/Layouts/LabelRow.vala"
	_layouts_label_row___lambda231_ ((LayoutsLabelRow*) self);
#line 668 "LabelRow.c"
}

static gboolean
___lambda233_ (LayoutsLabelRow* self)
{
	GtkRevealer* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
	gboolean result = FALSE;
#line 105 "../src/Layouts/LabelRow.vala"
	_tmp0_ = self->priv->main_revealer;
#line 105 "../src/Layouts/LabelRow.vala"
	_tmp1_ = gtk_revealer_get_reveal_child (_tmp0_);
#line 105 "../src/Layouts/LabelRow.vala"
	_tmp2_ = _tmp1_;
#line 105 "../src/Layouts/LabelRow.vala"
	if (_tmp2_) {
#line 686 "LabelRow.c"
		ServicesEventBus* _tmp3_;
		ObjectsLabel* _tmp4_;
		const gchar* _tmp5_;
		const gchar* _tmp6_;
#line 106 "../src/Layouts/LabelRow.vala"
		_tmp3_ = planner_event_bus;
#line 106 "../src/Layouts/LabelRow.vala"
		_tmp4_ = self->priv->_label;
#line 106 "../src/Layouts/LabelRow.vala"
		_tmp5_ = objects_base_object_get_id_string ((ObjectsBaseObject*) _tmp4_);
#line 106 "../src/Layouts/LabelRow.vala"
		_tmp6_ = _tmp5_;
#line 106 "../src/Layouts/LabelRow.vala"
		g_signal_emit_by_name (_tmp3_, "pane-selected", PANE_TYPE_LABEL, _tmp6_);
#line 701 "LabelRow.c"
	}
#line 108 "../src/Layouts/LabelRow.vala"
	result = G_SOURCE_REMOVE;
#line 108 "../src/Layouts/LabelRow.vala"
	return result;
#line 707 "LabelRow.c"
}

static gboolean
____lambda233__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda233_ ((LayoutsLabelRow*) self);
#line 104 "../src/Layouts/LabelRow.vala"
	return result;
#line 717 "LabelRow.c"
}

static gboolean
_layouts_label_row___lambda232_ (LayoutsLabelRow* self,
                                 GtkWidget* sender,
                                 GdkEventButton* evt)
{
	gboolean _tmp0_ = FALSE;
	GdkEventType _tmp1_;
	gboolean result = FALSE;
#line 102 "../src/Layouts/LabelRow.vala"
	g_return_val_if_fail (sender != NULL, FALSE);
#line 102 "../src/Layouts/LabelRow.vala"
	g_return_val_if_fail (evt != NULL, FALSE);
#line 103 "../src/Layouts/LabelRow.vala"
	_tmp1_ = evt->type;
#line 103 "../src/Layouts/LabelRow.vala"
	if (_tmp1_ == GDK_BUTTON_PRESS) {
#line 103 "../src/Layouts/LabelRow.vala"
		_tmp0_ = evt->button == ((guint) 1);
#line 738 "LabelRow.c"
	} else {
#line 103 "../src/Layouts/LabelRow.vala"
		_tmp0_ = FALSE;
#line 742 "LabelRow.c"
	}
#line 103 "../src/Layouts/LabelRow.vala"
	if (_tmp0_) {
#line 104 "../src/Layouts/LabelRow.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 120, ____lambda233__gsource_func, g_object_ref (self), g_object_unref);
#line 110 "../src/Layouts/LabelRow.vala"
		result = FALSE;
#line 110 "../src/Layouts/LabelRow.vala"
		return result;
#line 752 "LabelRow.c"
	} else {
		gboolean _tmp2_ = FALSE;
		GdkEventType _tmp3_;
#line 111 "../src/Layouts/LabelRow.vala"
		_tmp3_ = evt->type;
#line 111 "../src/Layouts/LabelRow.vala"
		if (_tmp3_ == GDK_BUTTON_PRESS) {
#line 111 "../src/Layouts/LabelRow.vala"
			_tmp2_ = evt->button == ((guint) 3);
#line 762 "LabelRow.c"
		} else {
#line 111 "../src/Layouts/LabelRow.vala"
			_tmp2_ = FALSE;
#line 766 "LabelRow.c"
		}
#line 111 "../src/Layouts/LabelRow.vala"
		if (_tmp2_) {
#line 112 "../src/Layouts/LabelRow.vala"
			layouts_label_row_build_content_menu (self);
#line 113 "../src/Layouts/LabelRow.vala"
			result = FALSE;
#line 113 "../src/Layouts/LabelRow.vala"
			return result;
#line 776 "LabelRow.c"
		}
	}
#line 116 "../src/Layouts/LabelRow.vala"
	result = FALSE;
#line 116 "../src/Layouts/LabelRow.vala"
	return result;
#line 783 "LabelRow.c"
}

static gboolean
__layouts_label_row___lambda232__gtk_widget_button_press_event (GtkWidget* _sender,
                                                                GdkEventButton* event,
                                                                gpointer self)
{
	gboolean result;
	result = _layouts_label_row___lambda232_ ((LayoutsLabelRow*) self, _sender, event);
#line 102 "../src/Layouts/LabelRow.vala"
	return result;
#line 795 "LabelRow.c"
}

static void
_layouts_label_row___lambda234_ (LayoutsLabelRow* self,
                                 PaneType pane_type,
                                 const gchar* id)
{
	gboolean _tmp0_ = FALSE;
#line 119 "../src/Layouts/LabelRow.vala"
	g_return_if_fail (id != NULL);
#line 120 "../src/Layouts/LabelRow.vala"
	if (pane_type == PANE_TYPE_LABEL) {
#line 808 "LabelRow.c"
		ObjectsLabel* _tmp1_;
		const gchar* _tmp2_;
		const gchar* _tmp3_;
#line 120 "../src/Layouts/LabelRow.vala"
		_tmp1_ = self->priv->_label;
#line 120 "../src/Layouts/LabelRow.vala"
		_tmp2_ = objects_base_object_get_id_string ((ObjectsBaseObject*) _tmp1_);
#line 120 "../src/Layouts/LabelRow.vala"
		_tmp3_ = _tmp2_;
#line 120 "../src/Layouts/LabelRow.vala"
		_tmp0_ = g_strcmp0 (_tmp3_, id) == 0;
#line 820 "LabelRow.c"
	} else {
#line 120 "../src/Layouts/LabelRow.vala"
		_tmp0_ = FALSE;
#line 824 "LabelRow.c"
	}
#line 120 "../src/Layouts/LabelRow.vala"
	if (_tmp0_) {
#line 828 "LabelRow.c"
		GtkEventBox* _tmp4_;
		GtkStyleContext* _tmp5_;
#line 121 "../src/Layouts/LabelRow.vala"
		_tmp4_ = self->priv->labelrow_eventbox;
#line 121 "../src/Layouts/LabelRow.vala"
		_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) _tmp4_);
#line 121 "../src/Layouts/LabelRow.vala"
		gtk_style_context_add_class (_tmp5_, "selectable-item-selected");
#line 837 "LabelRow.c"
	} else {
		GtkEventBox* _tmp6_;
		GtkStyleContext* _tmp7_;
#line 123 "../src/Layouts/LabelRow.vala"
		_tmp6_ = self->priv->labelrow_eventbox;
#line 123 "../src/Layouts/LabelRow.vala"
		_tmp7_ = gtk_widget_get_style_context ((GtkWidget*) _tmp6_);
#line 123 "../src/Layouts/LabelRow.vala"
		gtk_style_context_remove_class (_tmp7_, "selectable-item-selected");
#line 847 "LabelRow.c"
	}
}

static void
__layouts_label_row___lambda234__services_event_bus_pane_selected (ServicesEventBus* _sender,
                                                                   PaneType panel_type,
                                                                   const gchar* id,
                                                                   gpointer self)
{
#line 119 "../src/Layouts/LabelRow.vala"
	_layouts_label_row___lambda234_ ((LayoutsLabelRow*) self, panel_type, id);
#line 859 "LabelRow.c"
}

static void
_layouts_label_row___lambda235_ (LayoutsLabelRow* self)
{
	GtkLabel* _tmp0_;
	ObjectsLabel* _tmp1_;
	gint _tmp2_;
	gint _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	GtkRevealer* _tmp6_;
	GtkLabel* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
#line 128 "../src/Layouts/LabelRow.vala"
	_tmp0_ = self->priv->count_label;
#line 128 "../src/Layouts/LabelRow.vala"
	_tmp1_ = self->priv->_label;
#line 128 "../src/Layouts/LabelRow.vala"
	_tmp2_ = objects_label_get_label_count (_tmp1_);
#line 128 "../src/Layouts/LabelRow.vala"
	_tmp3_ = _tmp2_;
#line 128 "../src/Layouts/LabelRow.vala"
	_tmp4_ = g_strdup_printf ("%i", _tmp3_);
#line 128 "../src/Layouts/LabelRow.vala"
	_tmp5_ = _tmp4_;
#line 128 "../src/Layouts/LabelRow.vala"
	gtk_label_set_label (_tmp0_, _tmp5_);
#line 128 "../src/Layouts/LabelRow.vala"
	_g_free0 (_tmp5_);
#line 129 "../src/Layouts/LabelRow.vala"
	_tmp6_ = self->priv->count_revealer;
#line 129 "../src/Layouts/LabelRow.vala"
	_tmp7_ = self->priv->count_label;
#line 129 "../src/Layouts/LabelRow.vala"
	_tmp8_ = gtk_label_get_label (_tmp7_);
#line 129 "../src/Layouts/LabelRow.vala"
	_tmp9_ = _tmp8_;
#line 129 "../src/Layouts/LabelRow.vala"
	gtk_revealer_set_reveal_child (_tmp6_, atoi (_tmp9_) > 0);
#line 901 "LabelRow.c"
}

static void
__layouts_label_row___lambda235__objects_label_label_count_updated (ObjectsLabel* _sender,
                                                                    gpointer self)
{
#line 127 "../src/Layouts/LabelRow.vala"
	_layouts_label_row___lambda235_ ((LayoutsLabelRow*) self);
#line 910 "LabelRow.c"
}

static GObject *
layouts_label_row_constructor (GType type,
                               guint n_construct_properties,
                               GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	LayoutsLabelRow * self;
	GtkStyleContext* _tmp0_;
	GtkGrid* _tmp1_ = NULL;
	GtkStyleContext* widget_color_context = NULL;
	GtkGrid* _tmp2_;
	GtkStyleContext* _tmp3_;
	GtkStyleContext* _tmp4_;
	ObjectsLabel* _tmp5_;
	const gchar* _tmp6_;
	const gchar* _tmp7_;
	GtkLabel* _tmp8_;
	GtkLabel* _tmp9_;
	GtkLabel* _tmp10_;
	ObjectsLabel* _tmp11_;
	gint _tmp12_;
	gint _tmp13_;
	gchar* _tmp14_;
	gchar* _tmp15_;
	GtkLabel* _tmp16_ = NULL;
	GtkLabel* _tmp17_;
	GtkStyleContext* _tmp18_;
	GtkLabel* _tmp19_;
	GtkStyleContext* _tmp20_;
	GtkLabel* _tmp21_;
	const gchar* _tmp22_;
	const gchar* _tmp23_;
	GtkRevealer* _tmp24_ = NULL;
	GtkRevealer* _tmp25_;
	GtkRevealer* _tmp26_;
	GtkLabel* _tmp27_;
	GtkGrid* labelrow_grid = NULL;
	GtkGrid* _tmp28_ = NULL;
	GtkGrid* _tmp29_;
	GtkGrid* _tmp30_;
	GtkGrid* _tmp31_;
	GtkLabel* _tmp32_;
	GtkGrid* _tmp33_;
	GtkGrid* _tmp34_;
	GtkGrid* _tmp35_;
	GtkGrid* _tmp36_;
	GtkRevealer* _tmp37_;
	GtkEventBox* _tmp38_;
	GtkEventBox* _tmp39_;
	GtkStyleContext* _tmp40_;
	GtkEventBox* _tmp41_;
	GtkGrid* _tmp42_;
	GtkRevealer* _tmp43_ = NULL;
	GtkRevealer* _tmp44_;
	GtkEventBox* _tmp45_;
	GtkRevealer* _tmp46_;
	GtkRevealer* _tmp47_;
	guint _tmp48_;
	guint _tmp49_;
	ObjectsLabel* _tmp50_;
	GtkEventBox* _tmp51_;
	ServicesEventBus* _tmp52_;
	ObjectsLabel* _tmp53_;
#line 39 "../src/Layouts/LabelRow.vala"
	parent_class = G_OBJECT_CLASS (layouts_label_row_parent_class);
#line 39 "../src/Layouts/LabelRow.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 39 "../src/Layouts/LabelRow.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRow);
#line 40 "../src/Layouts/LabelRow.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 40 "../src/Layouts/LabelRow.vala"
	gtk_style_context_add_class (_tmp0_, "selectable-item");
#line 42 "../src/Layouts/LabelRow.vala"
	_tmp1_ = (GtkGrid*) gtk_grid_new ();
#line 42 "../src/Layouts/LabelRow.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp1_, GTK_ALIGN_CENTER);
#line 42 "../src/Layouts/LabelRow.vala"
	g_object_set ((GtkWidget*) _tmp1_, "height-request", 12, NULL);
#line 42 "../src/Layouts/LabelRow.vala"
	g_object_set ((GtkWidget*) _tmp1_, "width-request", 12, NULL);
#line 42 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp1_);
#line 42 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->widget_color);
#line 42 "../src/Layouts/LabelRow.vala"
	self->priv->widget_color = _tmp1_;
#line 48 "../src/Layouts/LabelRow.vala"
	_tmp2_ = self->priv->widget_color;
#line 48 "../src/Layouts/LabelRow.vala"
	_tmp3_ = gtk_widget_get_style_context ((GtkWidget*) _tmp2_);
#line 48 "../src/Layouts/LabelRow.vala"
	widget_color_context = _tmp3_;
#line 49 "../src/Layouts/LabelRow.vala"
	_tmp4_ = widget_color_context;
#line 49 "../src/Layouts/LabelRow.vala"
	gtk_style_context_add_class (_tmp4_, "label-color");
#line 51 "../src/Layouts/LabelRow.vala"
	_tmp5_ = self->priv->_label;
#line 51 "../src/Layouts/LabelRow.vala"
	_tmp6_ = objects_label_get_name (_tmp5_);
#line 51 "../src/Layouts/LabelRow.vala"
	_tmp7_ = _tmp6_;
#line 51 "../src/Layouts/LabelRow.vala"
	_tmp8_ = (GtkLabel*) gtk_label_new (_tmp7_);
#line 51 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp8_);
#line 51 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->name_label);
#line 51 "../src/Layouts/LabelRow.vala"
	self->priv->name_label = _tmp8_;
#line 52 "../src/Layouts/LabelRow.vala"
	_tmp9_ = self->priv->name_label;
#line 52 "../src/Layouts/LabelRow.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp9_, GTK_ALIGN_CENTER);
#line 53 "../src/Layouts/LabelRow.vala"
	_tmp10_ = self->priv->name_label;
#line 53 "../src/Layouts/LabelRow.vala"
	gtk_label_set_ellipsize (_tmp10_, PANGO_ELLIPSIZE_END);
#line 55 "../src/Layouts/LabelRow.vala"
	_tmp11_ = self->priv->_label;
#line 55 "../src/Layouts/LabelRow.vala"
	_tmp12_ = objects_label_get_label_count (_tmp11_);
#line 55 "../src/Layouts/LabelRow.vala"
	_tmp13_ = _tmp12_;
#line 55 "../src/Layouts/LabelRow.vala"
	_tmp14_ = g_strdup_printf ("%i", _tmp13_);
#line 55 "../src/Layouts/LabelRow.vala"
	_tmp15_ = _tmp14_;
#line 55 "../src/Layouts/LabelRow.vala"
	_tmp16_ = (GtkLabel*) gtk_label_new (_tmp15_);
#line 55 "../src/Layouts/LabelRow.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp16_, TRUE);
#line 55 "../src/Layouts/LabelRow.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp16_, GTK_ALIGN_END);
#line 55 "../src/Layouts/LabelRow.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp16_, 6);
#line 55 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp16_);
#line 55 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->count_label);
#line 55 "../src/Layouts/LabelRow.vala"
	self->priv->count_label = _tmp16_;
#line 55 "../src/Layouts/LabelRow.vala"
	_g_free0 (_tmp15_);
#line 60 "../src/Layouts/LabelRow.vala"
	_tmp17_ = self->priv->count_label;
#line 60 "../src/Layouts/LabelRow.vala"
	_tmp18_ = gtk_widget_get_style_context ((GtkWidget*) _tmp17_);
#line 60 "../src/Layouts/LabelRow.vala"
	gtk_style_context_add_class (_tmp18_, "dim-label");
#line 61 "../src/Layouts/LabelRow.vala"
	_tmp19_ = self->priv->count_label;
#line 61 "../src/Layouts/LabelRow.vala"
	_tmp20_ = gtk_widget_get_style_context ((GtkWidget*) _tmp19_);
#line 61 "../src/Layouts/LabelRow.vala"
	gtk_style_context_add_class (_tmp20_, GRANITE_STYLE_CLASS_SMALL_LABEL);
#line 63 "../src/Layouts/LabelRow.vala"
	_tmp21_ = self->priv->count_label;
#line 63 "../src/Layouts/LabelRow.vala"
	_tmp22_ = gtk_label_get_label (_tmp21_);
#line 63 "../src/Layouts/LabelRow.vala"
	_tmp23_ = _tmp22_;
#line 63 "../src/Layouts/LabelRow.vala"
	_tmp24_ = (GtkRevealer*) gtk_revealer_new ();
#line 63 "../src/Layouts/LabelRow.vala"
	gtk_revealer_set_reveal_child (_tmp24_, atoi (_tmp23_) > 0);
#line 63 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp24_);
#line 63 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->count_revealer);
#line 63 "../src/Layouts/LabelRow.vala"
	self->priv->count_revealer = _tmp24_;
#line 66 "../src/Layouts/LabelRow.vala"
	_tmp25_ = self->priv->count_revealer;
#line 66 "../src/Layouts/LabelRow.vala"
	gtk_revealer_set_transition_type (_tmp25_, GTK_REVEALER_TRANSITION_TYPE_CROSSFADE);
#line 67 "../src/Layouts/LabelRow.vala"
	_tmp26_ = self->priv->count_revealer;
#line 67 "../src/Layouts/LabelRow.vala"
	_tmp27_ = self->priv->count_label;
#line 67 "../src/Layouts/LabelRow.vala"
	gtk_container_add ((GtkContainer*) _tmp26_, (GtkWidget*) _tmp27_);
#line 69 "../src/Layouts/LabelRow.vala"
	_tmp28_ = (GtkGrid*) gtk_grid_new ();
#line 69 "../src/Layouts/LabelRow.vala"
	gtk_grid_set_column_spacing (_tmp28_, 6);
#line 69 "../src/Layouts/LabelRow.vala"
	g_object_set ((GtkWidget*) _tmp28_, "margin", 3, NULL);
#line 69 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp28_);
#line 69 "../src/Layouts/LabelRow.vala"
	labelrow_grid = _tmp28_;
#line 73 "../src/Layouts/LabelRow.vala"
	_tmp29_ = labelrow_grid;
#line 73 "../src/Layouts/LabelRow.vala"
	_tmp30_ = self->priv->widget_color;
#line 73 "../src/Layouts/LabelRow.vala"
	gtk_container_add ((GtkContainer*) _tmp29_, (GtkWidget*) _tmp30_);
#line 74 "../src/Layouts/LabelRow.vala"
	_tmp31_ = labelrow_grid;
#line 74 "../src/Layouts/LabelRow.vala"
	_tmp32_ = self->priv->name_label;
#line 74 "../src/Layouts/LabelRow.vala"
	gtk_container_add ((GtkContainer*) _tmp31_, (GtkWidget*) _tmp32_);
#line 76 "../src/Layouts/LabelRow.vala"
	_tmp33_ = (GtkGrid*) gtk_grid_new ();
#line 76 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp33_);
#line 76 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->handle_grid);
#line 76 "../src/Layouts/LabelRow.vala"
	self->priv->handle_grid = _tmp33_;
#line 77 "../src/Layouts/LabelRow.vala"
	_tmp34_ = self->priv->handle_grid;
#line 77 "../src/Layouts/LabelRow.vala"
	_tmp35_ = labelrow_grid;
#line 77 "../src/Layouts/LabelRow.vala"
	gtk_container_add ((GtkContainer*) _tmp34_, (GtkWidget*) _tmp35_);
#line 78 "../src/Layouts/LabelRow.vala"
	_tmp36_ = self->priv->handle_grid;
#line 78 "../src/Layouts/LabelRow.vala"
	_tmp37_ = self->priv->count_revealer;
#line 78 "../src/Layouts/LabelRow.vala"
	gtk_container_add ((GtkContainer*) _tmp36_, (GtkWidget*) _tmp37_);
#line 80 "../src/Layouts/LabelRow.vala"
	_tmp38_ = (GtkEventBox*) gtk_event_box_new ();
#line 80 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp38_);
#line 80 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->labelrow_eventbox);
#line 80 "../src/Layouts/LabelRow.vala"
	self->priv->labelrow_eventbox = _tmp38_;
#line 81 "../src/Layouts/LabelRow.vala"
	_tmp39_ = self->priv->labelrow_eventbox;
#line 81 "../src/Layouts/LabelRow.vala"
	_tmp40_ = gtk_widget_get_style_context ((GtkWidget*) _tmp39_);
#line 81 "../src/Layouts/LabelRow.vala"
	gtk_style_context_add_class (_tmp40_, "transition");
#line 82 "../src/Layouts/LabelRow.vala"
	_tmp41_ = self->priv->labelrow_eventbox;
#line 82 "../src/Layouts/LabelRow.vala"
	_tmp42_ = self->priv->handle_grid;
#line 82 "../src/Layouts/LabelRow.vala"
	gtk_container_add ((GtkContainer*) _tmp41_, (GtkWidget*) _tmp42_);
#line 84 "../src/Layouts/LabelRow.vala"
	_tmp43_ = (GtkRevealer*) gtk_revealer_new ();
#line 84 "../src/Layouts/LabelRow.vala"
	gtk_revealer_set_transition_type (_tmp43_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 84 "../src/Layouts/LabelRow.vala"
	g_object_ref_sink (_tmp43_);
#line 84 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->main_revealer);
#line 84 "../src/Layouts/LabelRow.vala"
	self->priv->main_revealer = _tmp43_;
#line 87 "../src/Layouts/LabelRow.vala"
	_tmp44_ = self->priv->main_revealer;
#line 87 "../src/Layouts/LabelRow.vala"
	_tmp45_ = self->priv->labelrow_eventbox;
#line 87 "../src/Layouts/LabelRow.vala"
	gtk_container_add ((GtkContainer*) _tmp44_, (GtkWidget*) _tmp45_);
#line 89 "../src/Layouts/LabelRow.vala"
	_tmp46_ = self->priv->main_revealer;
#line 89 "../src/Layouts/LabelRow.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp46_);
#line 91 "../src/Layouts/LabelRow.vala"
	layouts_label_row_update_request (self);
#line 93 "../src/Layouts/LabelRow.vala"
	_tmp47_ = self->priv->main_revealer;
#line 93 "../src/Layouts/LabelRow.vala"
	_tmp48_ = gtk_revealer_get_transition_duration (_tmp47_);
#line 93 "../src/Layouts/LabelRow.vala"
	_tmp49_ = _tmp48_;
#line 93 "../src/Layouts/LabelRow.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, _tmp49_, __layouts_label_row___lambda230__gsource_func, g_object_ref (self), g_object_unref);
#line 98 "../src/Layouts/LabelRow.vala"
	_tmp50_ = self->priv->_label;
#line 98 "../src/Layouts/LabelRow.vala"
	g_signal_connect_object ((ObjectsBaseObject*) _tmp50_, "updated", (GCallback) __layouts_label_row___lambda231__objects_base_object_updated, self, 0);
#line 102 "../src/Layouts/LabelRow.vala"
	_tmp51_ = self->priv->labelrow_eventbox;
#line 102 "../src/Layouts/LabelRow.vala"
	g_signal_connect_object ((GtkWidget*) _tmp51_, "button-press-event", (GCallback) __layouts_label_row___lambda232__gtk_widget_button_press_event, self, 0);
#line 119 "../src/Layouts/LabelRow.vala"
	_tmp52_ = planner_event_bus;
#line 119 "../src/Layouts/LabelRow.vala"
	g_signal_connect_object (_tmp52_, "pane-selected", (GCallback) __layouts_label_row___lambda234__services_event_bus_pane_selected, self, 0);
#line 127 "../src/Layouts/LabelRow.vala"
	_tmp53_ = self->priv->_label;
#line 127 "../src/Layouts/LabelRow.vala"
	g_signal_connect_object (_tmp53_, "label-count-updated", (GCallback) __layouts_label_row___lambda235__objects_label_label_count_updated, self, 0);
#line 39 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (labelrow_grid);
#line 39 "../src/Layouts/LabelRow.vala"
	return obj;
#line 1209 "LabelRow.c"
}

static void
layouts_label_row_class_init (LayoutsLabelRowClass * klass,
                              gpointer klass_data)
{
#line 22 "../src/Layouts/LabelRow.vala"
	layouts_label_row_parent_class = g_type_class_peek_parent (klass);
#line 22 "../src/Layouts/LabelRow.vala"
	g_type_class_adjust_private_offset (klass, &LayoutsLabelRow_private_offset);
#line 22 "../src/Layouts/LabelRow.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_layouts_label_row_get_property;
#line 22 "../src/Layouts/LabelRow.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_layouts_label_row_set_property;
#line 22 "../src/Layouts/LabelRow.vala"
	G_OBJECT_CLASS (klass)->constructor = layouts_label_row_constructor;
#line 22 "../src/Layouts/LabelRow.vala"
	G_OBJECT_CLASS (klass)->finalize = layouts_label_row_finalize;
#line 22 "../src/Layouts/LabelRow.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), LAYOUTS_LABEL_ROW_LABEL_PROPERTY, layouts_label_row_properties[LAYOUTS_LABEL_ROW_LABEL_PROPERTY] = g_param_spec_object ("label", "label", "label", OBJECTS_TYPE_LABEL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1230 "LabelRow.c"
}

static void
layouts_label_row_instance_init (LayoutsLabelRow * self,
                                 gpointer klass)
{
#line 22 "../src/Layouts/LabelRow.vala"
	self->priv = layouts_label_row_get_instance_private (self);
#line 1239 "LabelRow.c"
}

static void
layouts_label_row_finalize (GObject * obj)
{
	LayoutsLabelRow * self;
#line 22 "../src/Layouts/LabelRow.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRow);
#line 23 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->_label);
#line 25 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->name_label);
#line 26 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->count_label);
#line 27 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->count_revealer);
#line 28 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->main_revealer);
#line 29 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->widget_color);
#line 30 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->handle_grid);
#line 31 "../src/Layouts/LabelRow.vala"
	_g_object_unref0 (self->priv->labelrow_eventbox);
#line 22 "../src/Layouts/LabelRow.vala"
	G_OBJECT_CLASS (layouts_label_row_parent_class)->finalize (obj);
#line 1266 "LabelRow.c"
}

static GType
layouts_label_row_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (LayoutsLabelRowClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) layouts_label_row_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (LayoutsLabelRow), 0, (GInstanceInitFunc) layouts_label_row_instance_init, NULL };
	GType layouts_label_row_type_id;
	layouts_label_row_type_id = g_type_register_static (gtk_list_box_row_get_type (), "LayoutsLabelRow", &g_define_type_info, 0);
	LayoutsLabelRow_private_offset = g_type_add_instance_private (layouts_label_row_type_id, sizeof (LayoutsLabelRowPrivate));
	return layouts_label_row_type_id;
}

GType
layouts_label_row_get_type (void)
{
	static volatile gsize layouts_label_row_type_id__volatile = 0;
	if (g_once_init_enter (&layouts_label_row_type_id__volatile)) {
		GType layouts_label_row_type_id;
		layouts_label_row_type_id = layouts_label_row_get_type_once ();
		g_once_init_leave (&layouts_label_row_type_id__volatile, layouts_label_row_type_id);
	}
	return layouts_label_row_type_id__volatile;
}

static void
_vala_layouts_label_row_get_property (GObject * object,
                                      guint property_id,
                                      GValue * value,
                                      GParamSpec * pspec)
{
	LayoutsLabelRow * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRow);
#line 22 "../src/Layouts/LabelRow.vala"
	switch (property_id) {
#line 22 "../src/Layouts/LabelRow.vala"
		case LAYOUTS_LABEL_ROW_LABEL_PROPERTY:
#line 22 "../src/Layouts/LabelRow.vala"
		g_value_set_object (value, layouts_label_row_get_label (self));
#line 22 "../src/Layouts/LabelRow.vala"
		break;
#line 1307 "LabelRow.c"
		default:
#line 22 "../src/Layouts/LabelRow.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Layouts/LabelRow.vala"
		break;
#line 1313 "LabelRow.c"
	}
}

static void
_vala_layouts_label_row_set_property (GObject * object,
                                      guint property_id,
                                      const GValue * value,
                                      GParamSpec * pspec)
{
	LayoutsLabelRow * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, LAYOUTS_TYPE_LABEL_ROW, LayoutsLabelRow);
#line 22 "../src/Layouts/LabelRow.vala"
	switch (property_id) {
#line 22 "../src/Layouts/LabelRow.vala"
		case LAYOUTS_LABEL_ROW_LABEL_PROPERTY:
#line 22 "../src/Layouts/LabelRow.vala"
		layouts_label_row_set_label (self, g_value_get_object (value));
#line 22 "../src/Layouts/LabelRow.vala"
		break;
#line 1333 "LabelRow.c"
		default:
#line 22 "../src/Layouts/LabelRow.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "../src/Layouts/LabelRow.vala"
		break;
#line 1339 "LabelRow.c"
	}
}


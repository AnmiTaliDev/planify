/* HyperTextView.c generated by valac 0.50.10, the Vala compiler
 * generated from HyperTextView.vala, do not modify */

#include <granite.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gtk/gtk.h>
#include <float.h>
#include <math.h>
#include <gdk/gdk.h>

#define WIDGETS_TYPE_HYPER_TEXT_VIEW (widgets_hyper_text_view_get_type ())
#define WIDGETS_HYPER_TEXT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_HYPER_TEXT_VIEW, WidgetsHyperTextView))
#define WIDGETS_HYPER_TEXT_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_HYPER_TEXT_VIEW, WidgetsHyperTextViewClass))
#define WIDGETS_IS_HYPER_TEXT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_HYPER_TEXT_VIEW))
#define WIDGETS_IS_HYPER_TEXT_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_HYPER_TEXT_VIEW))
#define WIDGETS_HYPER_TEXT_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_HYPER_TEXT_VIEW, WidgetsHyperTextViewClass))

typedef struct _WidgetsHyperTextView WidgetsHyperTextView;
typedef struct _WidgetsHyperTextViewClass WidgetsHyperTextViewClass;
typedef struct _WidgetsHyperTextViewPrivate WidgetsHyperTextViewPrivate;
enum  {
	WIDGETS_HYPER_TEXT_VIEW_0_PROPERTY,
	WIDGETS_HYPER_TEXT_VIEW_PLACEHOLDER_TEXT_PROPERTY,
	WIDGETS_HYPER_TEXT_VIEW_IS_VALID_PROPERTY,
	WIDGETS_HYPER_TEXT_VIEW_NUM_PROPERTIES
};
static GParamSpec* widgets_hyper_text_view_properties[WIDGETS_HYPER_TEXT_VIEW_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
enum  {
	WIDGETS_HYPER_TEXT_VIEW_UPDATED_SIGNAL,
	WIDGETS_HYPER_TEXT_VIEW_NUM_SIGNALS
};
static guint widgets_hyper_text_view_signals[WIDGETS_HYPER_TEXT_VIEW_NUM_SIGNALS] = {0};

struct _WidgetsHyperTextView {
	GraniteHyperTextView parent_instance;
	WidgetsHyperTextViewPrivate * priv;
};

struct _WidgetsHyperTextViewClass {
	GraniteHyperTextViewClass parent_class;
};

struct _WidgetsHyperTextViewPrivate {
	gchar* _placeholder_text;
	guint _changed_timeout_id;
};

static gint WidgetsHyperTextView_private_offset;
static gpointer widgets_hyper_text_view_parent_class = NULL;

GType widgets_hyper_text_view_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (WidgetsHyperTextView, g_object_unref)
WidgetsHyperTextView* widgets_hyper_text_view_new (const gchar* placeholder_text);
WidgetsHyperTextView* widgets_hyper_text_view_construct (GType object_type,
                                                         const gchar* placeholder_text);
static gchar* widgets_hyper_text_view_buffer_get_text (WidgetsHyperTextView* self);
void widgets_hyper_text_view_set_text (WidgetsHyperTextView* self,
                                       const gchar* text);
const gchar* widgets_hyper_text_view_get_placeholder_text (WidgetsHyperTextView* self);
gchar* widgets_hyper_text_view_get_text (WidgetsHyperTextView* self);
static void widgets_hyper_text_view_changed_timeout (WidgetsHyperTextView* self);
static guint widgets_hyper_text_view_get_changed_timeout_id (WidgetsHyperTextView* self);
#define CONSTANTS_UPDATE_TIMEOUT 1500
static gboolean __lambda54_ (WidgetsHyperTextView* self);
static void widgets_hyper_text_view_set_changed_timeout_id (WidgetsHyperTextView* self,
                                                     guint value);
static gboolean ___lambda54__gsource_func (gpointer self);
static void widgets_hyper_text_view_set_placeholder_text (WidgetsHyperTextView* self,
                                                   const gchar* value);
gboolean widgets_hyper_text_view_get_is_valid (WidgetsHyperTextView* self);
static GObject * widgets_hyper_text_view_constructor (GType type,
                                               guint n_construct_properties,
                                               GObjectConstructParam * construct_properties);
static void _widgets_hyper_text_view_changed_timeout_gtk_text_buffer_changed (GtkTextBuffer* _sender,
                                                                       gpointer self);
static gboolean _widgets_hyper_text_view___lambda55_ (WidgetsHyperTextView* self);
static gboolean __widgets_hyper_text_view___lambda55__gtk_widget_focus_in_event (GtkWidget* _sender,
                                                                          GdkEventFocus* event,
                                                                          gpointer self);
static gboolean _widgets_hyper_text_view___lambda56_ (WidgetsHyperTextView* self);
static gboolean __widgets_hyper_text_view___lambda56__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                                           GdkEventFocus* event,
                                                                           gpointer self);
static void widgets_hyper_text_view_finalize (GObject * obj);
static GType widgets_hyper_text_view_get_type_once (void);
static void _vala_widgets_hyper_text_view_get_property (GObject * object,
                                                 guint property_id,
                                                 GValue * value,
                                                 GParamSpec * pspec);
static void _vala_widgets_hyper_text_view_set_property (GObject * object,
                                                 guint property_id,
                                                 const GValue * value,
                                                 GParamSpec * pspec);

static inline gpointer
widgets_hyper_text_view_get_instance_private (WidgetsHyperTextView* self)
{
	return G_STRUCT_MEMBER_P (self, WidgetsHyperTextView_private_offset);
}

WidgetsHyperTextView*
widgets_hyper_text_view_construct (GType object_type,
                                   const gchar* placeholder_text)
{
	WidgetsHyperTextView * self = NULL;
#line 14 "../src/Widgets/HyperTextView.vala"
	g_return_val_if_fail (placeholder_text != NULL, NULL);
#line 15 "../src/Widgets/HyperTextView.vala"
	self = (WidgetsHyperTextView*) g_object_new (object_type, "placeholder-text", placeholder_text, NULL);
#line 14 "../src/Widgets/HyperTextView.vala"
	return self;
#line 117 "HyperTextView.c"
}

WidgetsHyperTextView*
widgets_hyper_text_view_new (const gchar* placeholder_text)
{
#line 14 "../src/Widgets/HyperTextView.vala"
	return widgets_hyper_text_view_construct (WIDGETS_TYPE_HYPER_TEXT_VIEW, placeholder_text);
#line 125 "HyperTextView.c"
}

static gchar*
widgets_hyper_text_view_buffer_get_text (WidgetsHyperTextView* self)
{
	GtkTextIter start = {0};
	GtkTextIter end = {0};
	GtkTextBuffer* _tmp0_;
	GtkTextBuffer* _tmp1_;
	GtkTextIter _tmp2_ = {0};
	GtkTextBuffer* _tmp3_;
	GtkTextBuffer* _tmp4_;
	GtkTextIter _tmp5_ = {0};
	GtkTextBuffer* _tmp6_;
	GtkTextBuffer* _tmp7_;
	GtkTextIter _tmp8_;
	GtkTextIter _tmp9_;
	gchar* _tmp10_;
	gchar* result = NULL;
#line 40 "../src/Widgets/HyperTextView.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 44 "../src/Widgets/HyperTextView.vala"
	_tmp0_ = gtk_text_view_get_buffer ((GtkTextView*) self);
#line 44 "../src/Widgets/HyperTextView.vala"
	_tmp1_ = _tmp0_;
#line 44 "../src/Widgets/HyperTextView.vala"
	gtk_text_buffer_get_start_iter (_tmp1_, &_tmp2_);
#line 44 "../src/Widgets/HyperTextView.vala"
	start = _tmp2_;
#line 45 "../src/Widgets/HyperTextView.vala"
	_tmp3_ = gtk_text_view_get_buffer ((GtkTextView*) self);
#line 45 "../src/Widgets/HyperTextView.vala"
	_tmp4_ = _tmp3_;
#line 45 "../src/Widgets/HyperTextView.vala"
	gtk_text_buffer_get_end_iter (_tmp4_, &_tmp5_);
#line 45 "../src/Widgets/HyperTextView.vala"
	end = _tmp5_;
#line 47 "../src/Widgets/HyperTextView.vala"
	_tmp6_ = gtk_text_view_get_buffer ((GtkTextView*) self);
#line 47 "../src/Widgets/HyperTextView.vala"
	_tmp7_ = _tmp6_;
#line 47 "../src/Widgets/HyperTextView.vala"
	_tmp8_ = start;
#line 47 "../src/Widgets/HyperTextView.vala"
	_tmp9_ = end;
#line 47 "../src/Widgets/HyperTextView.vala"
	_tmp10_ = gtk_text_buffer_get_text (_tmp7_, &_tmp8_, &_tmp9_, TRUE);
#line 47 "../src/Widgets/HyperTextView.vala"
	result = _tmp10_;
#line 47 "../src/Widgets/HyperTextView.vala"
	return result;
#line 177 "HyperTextView.c"
}

void
widgets_hyper_text_view_set_text (WidgetsHyperTextView* self,
                                  const gchar* text)
{
	GtkTextBuffer* _tmp0_;
	GtkTextBuffer* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gboolean _tmp4_;
#line 50 "../src/Widgets/HyperTextView.vala"
	g_return_if_fail (self != NULL);
#line 50 "../src/Widgets/HyperTextView.vala"
	g_return_if_fail (text != NULL);
#line 51 "../src/Widgets/HyperTextView.vala"
	_tmp0_ = gtk_text_view_get_buffer ((GtkTextView*) self);
#line 51 "../src/Widgets/HyperTextView.vala"
	_tmp1_ = _tmp0_;
#line 51 "../src/Widgets/HyperTextView.vala"
	g_object_set (_tmp1_, "text", text, NULL);
#line 52 "../src/Widgets/HyperTextView.vala"
	_tmp2_ = widgets_hyper_text_view_buffer_get_text (self);
#line 52 "../src/Widgets/HyperTextView.vala"
	_tmp3_ = _tmp2_;
#line 52 "../src/Widgets/HyperTextView.vala"
	_tmp4_ = g_strcmp0 (_tmp3_, "") == 0;
#line 52 "../src/Widgets/HyperTextView.vala"
	_g_free0 (_tmp3_);
#line 52 "../src/Widgets/HyperTextView.vala"
	if (_tmp4_) {
#line 209 "HyperTextView.c"
		GtkTextBuffer* _tmp5_;
		GtkTextBuffer* _tmp6_;
		const gchar* _tmp7_;
#line 53 "../src/Widgets/HyperTextView.vala"
		_tmp5_ = gtk_text_view_get_buffer ((GtkTextView*) self);
#line 53 "../src/Widgets/HyperTextView.vala"
		_tmp6_ = _tmp5_;
#line 53 "../src/Widgets/HyperTextView.vala"
		_tmp7_ = self->priv->_placeholder_text;
#line 53 "../src/Widgets/HyperTextView.vala"
		g_object_set (_tmp6_, "text", _tmp7_, NULL);
#line 54 "../src/Widgets/HyperTextView.vala"
		gtk_widget_set_opacity ((GtkWidget*) self, 0.7);
#line 223 "HyperTextView.c"
	} else {
#line 56 "../src/Widgets/HyperTextView.vala"
		gtk_widget_set_opacity ((GtkWidget*) self, (gdouble) 1);
#line 227 "HyperTextView.c"
	}
}

gchar*
widgets_hyper_text_view_get_text (WidgetsHyperTextView* self)
{
	gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
	gchar* _tmp2_;
	const gchar* _tmp3_;
	gboolean _tmp4_;
	gchar* result = NULL;
#line 60 "../src/Widgets/HyperTextView.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 61 "../src/Widgets/HyperTextView.vala"
	_tmp1_ = widgets_hyper_text_view_buffer_get_text (self);
#line 61 "../src/Widgets/HyperTextView.vala"
	_tmp2_ = _tmp1_;
#line 61 "../src/Widgets/HyperTextView.vala"
	_tmp3_ = self->priv->_placeholder_text;
#line 61 "../src/Widgets/HyperTextView.vala"
	_tmp4_ = g_strcmp0 (_tmp2_, _tmp3_) == 0;
#line 61 "../src/Widgets/HyperTextView.vala"
	_g_free0 (_tmp2_);
#line 61 "../src/Widgets/HyperTextView.vala"
	if (_tmp4_) {
#line 254 "HyperTextView.c"
		gchar* _tmp5_;
#line 61 "../src/Widgets/HyperTextView.vala"
		_tmp5_ = g_strdup ("");
#line 61 "../src/Widgets/HyperTextView.vala"
		_g_free0 (_tmp0_);
#line 61 "../src/Widgets/HyperTextView.vala"
		_tmp0_ = _tmp5_;
#line 262 "HyperTextView.c"
	} else {
		gchar* _tmp6_;
#line 61 "../src/Widgets/HyperTextView.vala"
		_tmp6_ = widgets_hyper_text_view_buffer_get_text (self);
#line 61 "../src/Widgets/HyperTextView.vala"
		_g_free0 (_tmp0_);
#line 61 "../src/Widgets/HyperTextView.vala"
		_tmp0_ = _tmp6_;
#line 271 "HyperTextView.c"
	}
#line 61 "../src/Widgets/HyperTextView.vala"
	result = _tmp0_;
#line 61 "../src/Widgets/HyperTextView.vala"
	return result;
#line 277 "HyperTextView.c"
}

static gboolean
__lambda54_ (WidgetsHyperTextView* self)
{
	gboolean result = FALSE;
#line 70 "../src/Widgets/HyperTextView.vala"
	widgets_hyper_text_view_set_changed_timeout_id (self, (guint) 0);
#line 71 "../src/Widgets/HyperTextView.vala"
	g_signal_emit (self, widgets_hyper_text_view_signals[WIDGETS_HYPER_TEXT_VIEW_UPDATED_SIGNAL], 0);
#line 72 "../src/Widgets/HyperTextView.vala"
	result = G_SOURCE_REMOVE;
#line 72 "../src/Widgets/HyperTextView.vala"
	return result;
#line 292 "HyperTextView.c"
}

static gboolean
___lambda54__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda54_ ((WidgetsHyperTextView*) self);
#line 69 "../src/Widgets/HyperTextView.vala"
	return result;
#line 302 "HyperTextView.c"
}

static void
widgets_hyper_text_view_changed_timeout (WidgetsHyperTextView* self)
{
	guint _tmp0_;
#line 64 "../src/Widgets/HyperTextView.vala"
	g_return_if_fail (self != NULL);
#line 65 "../src/Widgets/HyperTextView.vala"
	_tmp0_ = self->priv->_changed_timeout_id;
#line 65 "../src/Widgets/HyperTextView.vala"
	if (_tmp0_ != ((guint) 0)) {
#line 315 "HyperTextView.c"
		guint _tmp1_;
#line 66 "../src/Widgets/HyperTextView.vala"
		_tmp1_ = self->priv->_changed_timeout_id;
#line 66 "../src/Widgets/HyperTextView.vala"
		g_source_remove (_tmp1_);
#line 321 "HyperTextView.c"
	}
#line 69 "../src/Widgets/HyperTextView.vala"
	widgets_hyper_text_view_set_changed_timeout_id (self, g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) CONSTANTS_UPDATE_TIMEOUT, ___lambda54__gsource_func, g_object_ref (self), g_object_unref));
#line 325 "HyperTextView.c"
}

const gchar*
widgets_hyper_text_view_get_placeholder_text (WidgetsHyperTextView* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 2 "../src/Widgets/HyperTextView.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 2 "../src/Widgets/HyperTextView.vala"
	_tmp0_ = self->priv->_placeholder_text;
#line 2 "../src/Widgets/HyperTextView.vala"
	result = _tmp0_;
#line 2 "../src/Widgets/HyperTextView.vala"
	return result;
#line 341 "HyperTextView.c"
}

static void
widgets_hyper_text_view_set_placeholder_text (WidgetsHyperTextView* self,
                                              const gchar* value)
{
	gchar* old_value;
#line 2 "../src/Widgets/HyperTextView.vala"
	g_return_if_fail (self != NULL);
#line 2 "../src/Widgets/HyperTextView.vala"
	old_value = widgets_hyper_text_view_get_placeholder_text (self);
#line 2 "../src/Widgets/HyperTextView.vala"
	if (g_strcmp0 (value, old_value) != 0) {
#line 355 "HyperTextView.c"
		gchar* _tmp0_;
#line 2 "../src/Widgets/HyperTextView.vala"
		_tmp0_ = g_strdup (value);
#line 2 "../src/Widgets/HyperTextView.vala"
		_g_free0 (self->priv->_placeholder_text);
#line 2 "../src/Widgets/HyperTextView.vala"
		self->priv->_placeholder_text = _tmp0_;
#line 2 "../src/Widgets/HyperTextView.vala"
		g_object_notify_by_pspec ((GObject *) self, widgets_hyper_text_view_properties[WIDGETS_HYPER_TEXT_VIEW_PLACEHOLDER_TEXT_PROPERTY]);
#line 365 "HyperTextView.c"
	}
}

static guint
widgets_hyper_text_view_get_changed_timeout_id (WidgetsHyperTextView* self)
{
	guint result;
#line 4 "../src/Widgets/HyperTextView.vala"
	g_return_val_if_fail (self != NULL, 0U);
#line 4 "../src/Widgets/HyperTextView.vala"
	result = self->priv->_changed_timeout_id;
#line 4 "../src/Widgets/HyperTextView.vala"
	return result;
#line 379 "HyperTextView.c"
}

static void
widgets_hyper_text_view_set_changed_timeout_id (WidgetsHyperTextView* self,
                                                guint value)
{
#line 4 "../src/Widgets/HyperTextView.vala"
	g_return_if_fail (self != NULL);
#line 4 "../src/Widgets/HyperTextView.vala"
	self->priv->_changed_timeout_id = value;
#line 390 "HyperTextView.c"
}

gboolean
widgets_hyper_text_view_get_is_valid (WidgetsHyperTextView* self)
{
	gboolean result;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gboolean _tmp2_;
#line 9 "../src/Widgets/HyperTextView.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 10 "../src/Widgets/HyperTextView.vala"
	_tmp0_ = widgets_hyper_text_view_buffer_get_text (self);
#line 10 "../src/Widgets/HyperTextView.vala"
	_tmp1_ = _tmp0_;
#line 10 "../src/Widgets/HyperTextView.vala"
	_tmp2_ = g_strcmp0 (_tmp1_, "") != 0;
#line 10 "../src/Widgets/HyperTextView.vala"
	_g_free0 (_tmp1_);
#line 10 "../src/Widgets/HyperTextView.vala"
	result = _tmp2_;
#line 10 "../src/Widgets/HyperTextView.vala"
	return result;
#line 414 "HyperTextView.c"
}

static void
_widgets_hyper_text_view_changed_timeout_gtk_text_buffer_changed (GtkTextBuffer* _sender,
                                                                  gpointer self)
{
#line 21 "../src/Widgets/HyperTextView.vala"
	widgets_hyper_text_view_changed_timeout ((WidgetsHyperTextView*) self);
#line 423 "HyperTextView.c"
}

static gboolean
_widgets_hyper_text_view___lambda55_ (WidgetsHyperTextView* self)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	const gchar* _tmp2_;
	gboolean _tmp3_;
	gboolean result = FALSE;
#line 24 "../src/Widgets/HyperTextView.vala"
	_tmp0_ = widgets_hyper_text_view_buffer_get_text (self);
#line 24 "../src/Widgets/HyperTextView.vala"
	_tmp1_ = _tmp0_;
#line 24 "../src/Widgets/HyperTextView.vala"
	_tmp2_ = self->priv->_placeholder_text;
#line 24 "../src/Widgets/HyperTextView.vala"
	_tmp3_ = g_strcmp0 (_tmp1_, _tmp2_) == 0;
#line 24 "../src/Widgets/HyperTextView.vala"
	_g_free0 (_tmp1_);
#line 24 "../src/Widgets/HyperTextView.vala"
	if (_tmp3_) {
#line 446 "HyperTextView.c"
		GtkTextBuffer* _tmp4_;
		GtkTextBuffer* _tmp5_;
#line 25 "../src/Widgets/HyperTextView.vala"
		_tmp4_ = gtk_text_view_get_buffer ((GtkTextView*) self);
#line 25 "../src/Widgets/HyperTextView.vala"
		_tmp5_ = _tmp4_;
#line 25 "../src/Widgets/HyperTextView.vala"
		g_object_set (_tmp5_, "text", "", NULL);
#line 26 "../src/Widgets/HyperTextView.vala"
		gtk_widget_set_opacity ((GtkWidget*) self, (gdouble) 1);
#line 457 "HyperTextView.c"
	}
#line 28 "../src/Widgets/HyperTextView.vala"
	result = FALSE;
#line 28 "../src/Widgets/HyperTextView.vala"
	return result;
#line 463 "HyperTextView.c"
}

static gboolean
__widgets_hyper_text_view___lambda55__gtk_widget_focus_in_event (GtkWidget* _sender,
                                                                 GdkEventFocus* event,
                                                                 gpointer self)
{
	gboolean result;
	result = _widgets_hyper_text_view___lambda55_ ((WidgetsHyperTextView*) self);
#line 23 "../src/Widgets/HyperTextView.vala"
	return result;
#line 475 "HyperTextView.c"
}

static gboolean
_widgets_hyper_text_view___lambda56_ (WidgetsHyperTextView* self)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gboolean _tmp2_;
	gboolean result = FALSE;
#line 32 "../src/Widgets/HyperTextView.vala"
	_tmp0_ = widgets_hyper_text_view_buffer_get_text (self);
#line 32 "../src/Widgets/HyperTextView.vala"
	_tmp1_ = _tmp0_;
#line 32 "../src/Widgets/HyperTextView.vala"
	_tmp2_ = g_strcmp0 (_tmp1_, "") == 0;
#line 32 "../src/Widgets/HyperTextView.vala"
	_g_free0 (_tmp1_);
#line 32 "../src/Widgets/HyperTextView.vala"
	if (_tmp2_) {
#line 495 "HyperTextView.c"
		GtkTextBuffer* _tmp3_;
		GtkTextBuffer* _tmp4_;
		const gchar* _tmp5_;
#line 33 "../src/Widgets/HyperTextView.vala"
		_tmp3_ = gtk_text_view_get_buffer ((GtkTextView*) self);
#line 33 "../src/Widgets/HyperTextView.vala"
		_tmp4_ = _tmp3_;
#line 33 "../src/Widgets/HyperTextView.vala"
		_tmp5_ = self->priv->_placeholder_text;
#line 33 "../src/Widgets/HyperTextView.vala"
		g_object_set (_tmp4_, "text", _tmp5_, NULL);
#line 34 "../src/Widgets/HyperTextView.vala"
		gtk_widget_set_opacity ((GtkWidget*) self, 0.7);
#line 509 "HyperTextView.c"
	}
#line 36 "../src/Widgets/HyperTextView.vala"
	result = FALSE;
#line 36 "../src/Widgets/HyperTextView.vala"
	return result;
#line 515 "HyperTextView.c"
}

static gboolean
__widgets_hyper_text_view___lambda56__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                                  GdkEventFocus* event,
                                                                  gpointer self)
{
	gboolean result;
	result = _widgets_hyper_text_view___lambda56_ ((WidgetsHyperTextView*) self);
#line 31 "../src/Widgets/HyperTextView.vala"
	return result;
#line 527 "HyperTextView.c"
}

static GObject *
widgets_hyper_text_view_constructor (GType type,
                                     guint n_construct_properties,
                                     GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsHyperTextView * self;
	GtkTextBuffer* _tmp0_;
	GtkTextBuffer* _tmp1_;
#line 20 "../src/Widgets/HyperTextView.vala"
	parent_class = G_OBJECT_CLASS (widgets_hyper_text_view_parent_class);
#line 20 "../src/Widgets/HyperTextView.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 20 "../src/Widgets/HyperTextView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_HYPER_TEXT_VIEW, WidgetsHyperTextView);
#line 21 "../src/Widgets/HyperTextView.vala"
	_tmp0_ = gtk_text_view_get_buffer ((GtkTextView*) self);
#line 21 "../src/Widgets/HyperTextView.vala"
	_tmp1_ = _tmp0_;
#line 21 "../src/Widgets/HyperTextView.vala"
	g_signal_connect_object (_tmp1_, "changed", (GCallback) _widgets_hyper_text_view_changed_timeout_gtk_text_buffer_changed, self, 0);
#line 23 "../src/Widgets/HyperTextView.vala"
	g_signal_connect_object ((GtkWidget*) self, "focus-in-event", (GCallback) __widgets_hyper_text_view___lambda55__gtk_widget_focus_in_event, self, 0);
#line 31 "../src/Widgets/HyperTextView.vala"
	g_signal_connect_object ((GtkWidget*) self, "focus-out-event", (GCallback) __widgets_hyper_text_view___lambda56__gtk_widget_focus_out_event, self, 0);
#line 20 "../src/Widgets/HyperTextView.vala"
	return obj;
#line 558 "HyperTextView.c"
}

static void
widgets_hyper_text_view_class_init (WidgetsHyperTextViewClass * klass,
                                    gpointer klass_data)
{
#line 1 "../src/Widgets/HyperTextView.vala"
	widgets_hyper_text_view_parent_class = g_type_class_peek_parent (klass);
#line 1 "../src/Widgets/HyperTextView.vala"
	g_type_class_adjust_private_offset (klass, &WidgetsHyperTextView_private_offset);
#line 1 "../src/Widgets/HyperTextView.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_widgets_hyper_text_view_get_property;
#line 1 "../src/Widgets/HyperTextView.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_widgets_hyper_text_view_set_property;
#line 1 "../src/Widgets/HyperTextView.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_hyper_text_view_constructor;
#line 1 "../src/Widgets/HyperTextView.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_hyper_text_view_finalize;
#line 1 "../src/Widgets/HyperTextView.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_HYPER_TEXT_VIEW_PLACEHOLDER_TEXT_PROPERTY, widgets_hyper_text_view_properties[WIDGETS_HYPER_TEXT_VIEW_PLACEHOLDER_TEXT_PROPERTY] = g_param_spec_string ("placeholder-text", "placeholder-text", "placeholder-text", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1 "../src/Widgets/HyperTextView.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_HYPER_TEXT_VIEW_IS_VALID_PROPERTY, widgets_hyper_text_view_properties[WIDGETS_HYPER_TEXT_VIEW_IS_VALID_PROPERTY] = g_param_spec_boolean ("is-valid", "is-valid", "is-valid", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 1 "../src/Widgets/HyperTextView.vala"
	widgets_hyper_text_view_signals[WIDGETS_HYPER_TEXT_VIEW_UPDATED_SIGNAL] = g_signal_new ("updated", WIDGETS_TYPE_HYPER_TEXT_VIEW, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 583 "HyperTextView.c"
}

static void
widgets_hyper_text_view_instance_init (WidgetsHyperTextView * self,
                                       gpointer klass)
{
#line 1 "../src/Widgets/HyperTextView.vala"
	self->priv = widgets_hyper_text_view_get_instance_private (self);
#line 4 "../src/Widgets/HyperTextView.vala"
	self->priv->_changed_timeout_id = (guint) 0;
#line 594 "HyperTextView.c"
}

static void
widgets_hyper_text_view_finalize (GObject * obj)
{
	WidgetsHyperTextView * self;
#line 1 "../src/Widgets/HyperTextView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_HYPER_TEXT_VIEW, WidgetsHyperTextView);
#line 2 "../src/Widgets/HyperTextView.vala"
	_g_free0 (self->priv->_placeholder_text);
#line 1 "../src/Widgets/HyperTextView.vala"
	G_OBJECT_CLASS (widgets_hyper_text_view_parent_class)->finalize (obj);
#line 607 "HyperTextView.c"
}

static GType
widgets_hyper_text_view_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (WidgetsHyperTextViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_hyper_text_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsHyperTextView), 0, (GInstanceInitFunc) widgets_hyper_text_view_instance_init, NULL };
	GType widgets_hyper_text_view_type_id;
	widgets_hyper_text_view_type_id = g_type_register_static (GRANITE_TYPE_HYPER_TEXT_VIEW, "WidgetsHyperTextView", &g_define_type_info, 0);
	WidgetsHyperTextView_private_offset = g_type_add_instance_private (widgets_hyper_text_view_type_id, sizeof (WidgetsHyperTextViewPrivate));
	return widgets_hyper_text_view_type_id;
}

GType
widgets_hyper_text_view_get_type (void)
{
	static volatile gsize widgets_hyper_text_view_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_hyper_text_view_type_id__volatile)) {
		GType widgets_hyper_text_view_type_id;
		widgets_hyper_text_view_type_id = widgets_hyper_text_view_get_type_once ();
		g_once_init_leave (&widgets_hyper_text_view_type_id__volatile, widgets_hyper_text_view_type_id);
	}
	return widgets_hyper_text_view_type_id__volatile;
}

static void
_vala_widgets_hyper_text_view_get_property (GObject * object,
                                            guint property_id,
                                            GValue * value,
                                            GParamSpec * pspec)
{
	WidgetsHyperTextView * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_HYPER_TEXT_VIEW, WidgetsHyperTextView);
#line 1 "../src/Widgets/HyperTextView.vala"
	switch (property_id) {
#line 1 "../src/Widgets/HyperTextView.vala"
		case WIDGETS_HYPER_TEXT_VIEW_PLACEHOLDER_TEXT_PROPERTY:
#line 1 "../src/Widgets/HyperTextView.vala"
		g_value_set_string (value, widgets_hyper_text_view_get_placeholder_text (self));
#line 1 "../src/Widgets/HyperTextView.vala"
		break;
#line 1 "../src/Widgets/HyperTextView.vala"
		case WIDGETS_HYPER_TEXT_VIEW_IS_VALID_PROPERTY:
#line 1 "../src/Widgets/HyperTextView.vala"
		g_value_set_boolean (value, widgets_hyper_text_view_get_is_valid (self));
#line 1 "../src/Widgets/HyperTextView.vala"
		break;
#line 654 "HyperTextView.c"
		default:
#line 1 "../src/Widgets/HyperTextView.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Widgets/HyperTextView.vala"
		break;
#line 660 "HyperTextView.c"
	}
}

static void
_vala_widgets_hyper_text_view_set_property (GObject * object,
                                            guint property_id,
                                            const GValue * value,
                                            GParamSpec * pspec)
{
	WidgetsHyperTextView * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_HYPER_TEXT_VIEW, WidgetsHyperTextView);
#line 1 "../src/Widgets/HyperTextView.vala"
	switch (property_id) {
#line 1 "../src/Widgets/HyperTextView.vala"
		case WIDGETS_HYPER_TEXT_VIEW_PLACEHOLDER_TEXT_PROPERTY:
#line 1 "../src/Widgets/HyperTextView.vala"
		widgets_hyper_text_view_set_placeholder_text (self, g_value_get_string (value));
#line 1 "../src/Widgets/HyperTextView.vala"
		break;
#line 680 "HyperTextView.c"
		default:
#line 1 "../src/Widgets/HyperTextView.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 1 "../src/Widgets/HyperTextView.vala"
		break;
#line 686 "HyperTextView.c"
	}
}

